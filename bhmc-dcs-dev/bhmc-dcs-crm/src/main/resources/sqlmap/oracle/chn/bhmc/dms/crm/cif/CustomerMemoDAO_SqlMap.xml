<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--
    SQL File Name : CustomerMemoDAO_SqlMap.xml
    Description : 메모 관련 데이터처리
    author Kyo Jin Lee
    since 2015. 12. 30.
    version 1.0
    Modification Information
       since          author              description
    ===========    =============    ===========================
    2016. 01. 05.     Kyo Jin Lee     최초 생성
-->

<mapper namespace="chn.bhmc.dms.crm.cif.service.dao.CustomerMemoDAO">

    <!-- 검색조건 -->
    <sql id="searchWhere">
        AND T1.DLR_CD = #{sDlrCd}
        AND T1.CUST_NO = #{sCustNo}
    </sql>

    <!-- 메모 목록 카운트를 조회한다. -->
    <select id="selectCustomerMemoByConditionCnt" parameterType="CustomerMemoSearchVO" resultType="int">
        /* [chn.bhmc.dms.crm.cif.service.dao.CustomerMemoDAO.selectCustomerMemoByConditionCnt] */
        SELECT COUNT(*) AS VALUE
        FROM (
            SELECT
                T2.USR_NM AS USR_NM
                ,T1.*
            FROM    CR_0103T T1
            LEFT OUTER JOIN CM_0801T T2 ON T1.REG_USR_ID = T2.USR_ID
            WHERE 1=1
            <include refid="searchWhere" />
            AND T1.REG_USR_ID = #{sMngScId} OR T1.REG_USR_ID = #{sRegUsrId}
            UNION
            SELECT
                T2.USR_NM AS USR_NM
                ,T1.*
            FROM    CR_0103T T1
            LEFT OUTER JOIN CM_0801T T2 ON T1.REG_USR_ID = T2.USR_ID
            WHERE 1=1
            <include refid="searchWhere" />
            AND T1.SHARE_YN = 'Y'
        ) T1
        WHERE 1=1
        <include refid="searchWhere" />
    </select>

    <!-- 메모 목록을 조회한다. -->
    <select id="selectCustomerMemoByCondition" parameterType="CustomerMemoSearchVO" resultType="CustomerMemoVO">
        /* [chn.bhmc.dms.crm.cif.service.dao.CustomerMemoDAO.selectCustomerMemoByCondition] */
        SELECT * FROM (
            SELECT ROWNUM AS RNUM, T1.* FROM (
                SELECT * FROM (
                    SELECT
                        T2.USR_NM AS USR_NM
                        ,T1.*
                    FROM    CR_0103T T1
                    LEFT OUTER JOIN CM_0801T T2 ON T1.REG_USR_ID = T2.USR_ID
                    WHERE 1=1
                    <include refid="searchWhere" />
                    AND T1.REG_USR_ID = #{sMngScId} OR T1.REG_USR_ID = #{sRegUsrId}
                    UNION
                    SELECT
                        T2.USR_NM AS USR_NM
                        ,T1.*
                    FROM    CR_0103T T1
                    LEFT OUTER JOIN CM_0801T T2 ON T1.REG_USR_ID = T2.USR_ID
                    WHERE 1=1
                    <include refid="searchWhere" />
                    AND T1.SHARE_YN = 'Y'
                ) T0
                ORDER BY
                <choose>
                    <when test='sort != null'>
                        <foreach item="item" index="index" collection="sort" open="" separator="," close="">
                            <choose>
                                <when test='item.field == "sRegDt"'>            T0.REG_DT <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose>             </when>
                                <otherwise>
                                    T0.REG_DT DESC
                                </otherwise>
                            </choose>
                        </foreach>
                    </when>
                    <otherwise>
                        T0.REG_DT DESC
                    </otherwise>
                </choose>
            ) T1
            <where>
                <if test='firstIndex != -1 and lastIndex != -1'>
                    ROWNUM <![CDATA[<=]]> #{lastIndex}
                </if>
            </where>
        )
        <where>
            <if test='firstIndex != -1 and lastIndex != -1'>
                RNUM > #{firstIndex}
            </if>
        </where>
    </select>

    <!--  메모 정보를 등록한다. -->
    <insert id="insertCustomerMemo" parameterType="CustomerMemoVO">
        /* [chn.bhmc.dms.crm.cif.service.dao.CustomerMemoDAO.insertCustomerMemo] */
        INSERT INTO CR_0103T    --고객메모
        (
          SEQ
         ,DLR_CD             --DLR_CD
         ,CUST_NO            --고객번호
         ,MEMO_TP            --메모유형
         ,MEMO_CONT          --메모내용
         ,SHARE_YN           --공개여부
         ,REG_USR_ID         --등록자ID
         ,REG_DT             --등록일자
         ,UPDT_USR_ID
         ,UPDT_DT
        )
        VALUES
        (
         SEQ_CR_0103T.NEXTVAL
         ,#{dlrCd}             --DLR_CD
         ,#{custNo}            --고객번호
         ,#{memoTp}            --메모유형
         ,#{memoCont}          --메모내용
         ,#{shareYn}           --공개여부
         ,#{regUsrId}
         ,SYSDATE
         ,#{regUsrId}
         ,SYSDATE
        )
    </insert>

    <!-- 메모 정보를 업데이트 한다. -->
    <update id="updateCustomerMemo" parameterType="CustomerMemoVO">
        /* [chn.bhmc.dms.crm.cif.service.dao.CustomerMemoDAO.updateCustomerMemo] */
        UPDATE CR_0103T    --고객메모
          SET
               DLR_CD      = #{dlrCd}             --DLR_CD
              ,CUST_NO     = #{custNo}            --고객번호
              ,MEMO_TP     = #{memoTp}            --메모유형
              ,MEMO_CONT   = #{memoCont}          --메모내용
              ,SHARE_YN    = #{shareYn}           --공개여부
              ,UPDT_USR_ID = #{updtUsrId}         --수정자ID
              ,UPDT_DT     = SYSDATE
         WHERE 1 = 1
           AND DLR_CD      = #{dlrCd}             --DLR_CD
           AND SEQ     = #{seq}            --고유키
    </update>

    <!-- 메모 정보를 삭제 한다. -->
    <delete id="deleteCustomerMemo" parameterType="CustomerMemoVO">
        /* [chn.bhmc.dms.crm.cif.service.dao.CustomerMemoDAO.deleteCustomerMemo] */
        DELETE FROM CR_0103T    --메모
         WHERE 1 = 1
           AND DLR_CD      = #{dlrCd}             --DLR_CD
           AND SEQ     = #{seq}            --고객번호
    </delete>



</mapper>