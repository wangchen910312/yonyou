<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--
    SQL File Name : CustomerRelInfoDAO_SqlMap.xml
    Description : 고객 연계인 관련 데이터처리
    author Kyo Jin Lee
    since 2015. 12. 30.
    version 1.0
    Modification Information
       since          author              description
    ===========    =============    ===========================
    2016. 01. 05.     Kyo Jin Lee     최초 생성
-->

<mapper namespace="chn.bhmc.dms.crm.cif.service.dao.CustomerRelInfoDAO">

    <!--  연게인 정보를 등록한다. -->
    <insert id="insertCustomerRel" parameterType="CustomerRelInfoVO">
        /* [chn.bhmc.dms.crm.cif.service.dao.CustomerRelInfoDAO.insertCustomerRel] */
        INSERT INTO CR_0111T    --연계인
        (
         DLR_CD
         ,PCON_CUST_NO         --연계인고객번호
         ,UPPER_CUST_NO        --상위고객번호
         ,PCON_TP              --연계인유형
         ,REG_USR_ID           --등록자ID
         ,REG_DT               --등록일자
         ,UPDT_USR_ID          --수정자ID
         ,UPDT_DT              --수정일자
         ,BAT_YN
        )
        VALUES
        (
         #{dlrCd}
         ,#{pconCustNo}           --연계인고객번호
         ,#{upperCustNo}         --상위고객번호
         ,#{pconTp}              --연계인유형
         ,#{regUsrId}            --등록자ID
         ,SYSDATE                --등록일자
         ,#{updtUsrId}           --수정자ID
         ,SYSDATE                --수정일자
         ,'Y'
        )
    </insert>

    <!-- 연계인 정보를 업데이트 한다. -->
    <update id="updateCustomerRel" parameterType="CustomerRelInfoVO">
        /* [chn.bhmc.dms.crm.cif.service.dao.CustomerRelInfoDAO.updateCustomerRel] */
        UPDATE CR_0111T    --연계인
          SET
              PCON_CUST_NO  = #{pconCustNo}          --연계인고객번호
              ,UPPER_CUST_NO = #{upperCustNo}         --상위고객번호
              ,PCON_TP       = #{pconTp}              --연계인유형
              ,UPDT_USR_ID   = #{updtUsrId}           --수정자ID
              ,UPDT_DT       = SYSDATE                --수정일자
              ,BAT_YN = 'Y'
         WHERE 1 = 1
           AND SEQ           = #{seq}                 --일련번호 (SEQ_CR_0111T_T)
           AND DLR_CD        = #{dlrCd}
    </update>

    <!-- 연계인 정보를 삭제 한다. -->
    <delete id="deleteCustomerRel" parameterType="CustomerRelInfoVO">
        /* [chn.bhmc.dms.crm.cif.service.dao.CustomerRelInfoDAO.deleteCustomerRel] */
        DELETE FROM CR_0111T    --연계인
         WHERE 1 = 1
           AND SEQ           = #{seq}                 --일련번호 (SEQ_CR_0111T_T)
           AND DLR_CD        = #{dlrCd}
    </delete>

    <!-- 고객의 연계인 목록 카운트를 조회한다. 판매사원용-->
    <select id="selectCustomerRelInfoByConditionCnt" parameterType="CustomerRelInfoVO" resultType="int">
        /* [chn.bhmc.dms.crm.cif.service.dao.CustomerRelInfoDAO.selectCustomerRelInfoByConditionCnt] */
        SELECT COUNT(*) AS VALUE
        FROM    CR_0111T T1, CR_0101T T2
        WHERE   T1.DLR_CD        = #{dlrCd}
        AND     T1.UPPER_CUST_NO = #{upperCustNo}
        AND     T1.PCON_CUST_NO = T2.CUST_NO(+)
    </select>

    <!-- 고객의 연계인 목록을 조회한다. 판매사원용-->
    <select id="selectCustomerRelInfoByCondition" parameterType="CustomerRelInfoVO" resultType="CustomerRelInfoVO">
        /* [chn.bhmc.dms.crm.cif.service.dao.CustomerRelInfoDAO.selectCustomerRelInfoByCondition] */
        SELECT * FROM (
            SELECT ROWNUM AS RNUM, T1.* FROM (
                SELECT
                    T1.SEQ
                    , T1.PCON_TP
                    , T1.PCON_CUST_NO
                    , T1.UPPER_CUST_NO
                    , T2.SSN_CRN_NO AS CERTI_NUM
                    , T2.*
                FROM    CR_0111T T1, CR_0101T T2
                WHERE   T1.DLR_CD        = #{dlrCd}
                AND     T1.UPPER_CUST_NO = #{upperCustNo}
                AND     T1.PCON_CUST_NO = T2.CUST_NO(+)
                ORDER BY
                <choose>
                    <when test='sort != null'>
                        <foreach item="item" index="index" collection="sort" open="" separator="," close="">
                            <choose>
                                <when test='item.field == "custNm"'>T2.CUST_NO <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                                <when test='item.field == "certiNum"'>T2.SSN_CRN_NO <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                                <when test='item.field == "telNo"'>T2.TEL_NO <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                                <when test='item.field == "hpNo"'>T2.HP_NO <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                                <when test='item.field == "emailNm"'>T2.EMAIL_NM <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                                <when test='item.field == "prefCommNo"'>T2.PREF_COMM_NO <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                                <when test='item.field == "regDt"'>T1.REG_DT <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                                <otherwise>
                                    T1.REG_DT DESC
                                </otherwise>
                            </choose>
                        </foreach>
                    </when>
                    <otherwise>
                        T1.REG_DT DESC
                    </otherwise>
                </choose>
            ) T1
            <where>
                <if test='firstIndex != -1 and lastIndex != -1'>
                    ROWNUM <![CDATA[<=]]> #{lastIndex}
                </if>
            </where>
        )
        <where>
            <if test='firstIndex != -1 and lastIndex != -1'>
                RNUM > #{firstIndex}
            </if>
        </where>
    </select>

</mapper>