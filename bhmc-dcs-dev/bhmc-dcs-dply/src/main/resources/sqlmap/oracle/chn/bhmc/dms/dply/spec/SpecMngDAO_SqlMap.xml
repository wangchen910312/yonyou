<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--
    SQL File Name : SpecMngDAO_SqlMap.xml
    Description : SPEC 관리에 관한 데이터 처리
    author Cheol Man Oh
    since 2016. 3. 24.
    version 1.0
    Modification Information
       since          author              description
    ===========    =============    ===========================
    2016. 03. 24.     Cheol Man Oh     최초 생성
-->

<mapper namespace="chn.bhmc.dms.dply.spec.service.dao.SpecMngDAO">

    <!-- SPEC 기본정보 생성  -->
    <insert id="insertSpecBasic" parameterType="SpecBasicVO">
    /* [chn.bhmc.dms.dply.spec.service.dao.SpecMngDAO.insertSpecBasic] */
        <selectKey keyProperty="specCd" resultType="String" order="BEFORE">
            SELECT TO_CHAR(SYSDATE, 'YYYYMM') || LPAD(NVL(TO_NUMBER(MAX(SUBSTR(SPEC_CD, 7, 4))+1), 1), 4, '0')
              FROM CM_1401T
             WHERE 1 = 1
               AND SUBSTR(SPEC_CD, 1, 6) = TO_CHAR(SYSDATE, 'YYYYMM')
        </selectKey>
        INSERT
          INTO CM_1401T(
               SPEC_CD
             , SPEC_TP
             , SPEC_NM
             , SPEC_CONT
             , REG_USR_ID
             , REG_DT
             , UPDT_USR_ID
             , UPDT_DT
        )VALUES(
               #{specCd}
             , 'R'
             , #{specNm}
             , #{specCont}
             , #{regUsrId}
             , SYSDATE
             , ''
             , ''
        )
    </insert>

    <!-- SPEC 기본정보 수정  -->
    <update id="updateSpecBasic" parameterType="SpecBasicVO">
    /* [chn.bhmc.dms.dply.spec.service.dao.SpecMngDAO.updateSpecBasic] */
        UPDATE CM_1401T
                    SET SPEC_TP            = 'R'
                      , SPEC_NM            = #{specNm}
                      , SPEC_CONT          = #{specCont}
                      , UPDT_USR_ID        = #{updtUsrId}
                      , UPDT_DT            = SYSDATE
                  WHERE SPEC_CD            = #{specCd}

    </update>

    <!-- key값을 조건으로 SPEC 기본정보를 조회한다. -->
    <select id="selectSpecBasicByKey" parameterType="map" resultType="SpecBasicVO">
        /* [chn.bhmc.dms.dply.spec.service.dao.SpecMngDAO.selectSpecBasicByKey] */
        SELECT
               SPEC_CD
             , SPEC_NM
             , SPEC_CONT
             , REG_USR_ID
             , REG_DT
             , UPDT_USR_ID
             , UPDT_DT
         FROM CM_1401T
        WHERE SPEC_CD = #{specCd}
    </select>

    <!-- SPEC코드를 조건으로 SPEC REPOSITORY 정보를 조회한다. -->
    <!-- <select id="selectSpecRepositoryBySpecCd" parameterType="SpecMngSearchVO" resultType="SpecRepositoryVO">
        /* [chn.bhmc.dms.dply.spec.service.dao.SpecMngDAO.selectSpecRepositoryBySpecCd] */
        SELECT
               SPEC_CD
             , SPEC_TP_NM
             , SEQ
             , OPER_CMD_NM
             , OPER_TRY_CNT
             , REPO_URL_NM
             , FAIL_AFT_CTNU_PGSS_YN
             , FAIL_AFT_ROLLBACK_YN
             , ROLLBACK_OPER_CMD_NM
             , REG_USR_ID
             , REG_DT
             , UPDT_USR_ID
             , UPDT_DT
         FROM CM_1402T
        WHERE SPEC_CD = #{sSpecCd}
          AND SPEC_TP_NM = #{sSpecTpNm}
    </select> -->

    <!-- SPEC Repository 정보 생성  -->
    <insert id="insertSpecRepository" parameterType="SpecRepositoryVO">
    /* [chn.bhmc.dms.dply.spec.service.dao.SpecMngDAO.insertSpecRepository] */
        INSERT
          INTO CM_1402T(
               SPEC_CD
             , SPEC_TP_NM
             , SEQ
             , OPER_CMD_NM
             , OPER_TRY_CNT
             , REPO_URL_NM
             , FAIL_AFT_CTNU_PGSS_YN
             , FAIL_AFT_ROLLBACK_YN
             , ROLLBACK_OPER_CMD_NM
             , REG_USR_ID
             , REG_DT
             , UPDT_USR_ID
             , UPDT_DT
        )VALUES(
               #{specCd              }
             , #{specTpNm            }
             , (
                SELECT NVL(MAX(SEQ) + 1, 1)
                  FROM CM_1402T
                 WHERE SPEC_CD = #{specCd}
                   AND SPEC_TP_NM = #{specTpNm}
                )
             , #{operCmdNm           }
             , #{operTryCnt          }
             , #{repoUrlNm           }
             , #{failAftCtnuPgssYn   }
             , #{failAftRollbackYn   }
             , #{rollbackOperCmdNm   }
             , #{regUsrId            }
             , SYSDATE
             , ''
             , ''
        )
    </insert>

    <!-- SPEC Repository 정보 수정  -->
    <update id="updateSpecRepository" parameterType="SpecRepositoryVO">
    /* [chn.bhmc.dms.dply.spec.service.dao.SpecMngDAO.updateSpecRepository] */
        UPDATE CM_1402T
                    SET OPER_CMD_NM               = #{operCmdNm           }
                      , OPER_TRY_CNT              = #{operTryCnt          }
                      , REPO_URL_NM               = #{repoUrlNm           }
                      , FAIL_AFT_CTNU_PGSS_YN     = #{failAftCtnuPgssYn   }
                      , FAIL_AFT_ROLLBACK_YN      = #{failAftRollbackYn   }
                      , ROLLBACK_OPER_CMD_NM      = #{rollbackOperCmdNm   }
                      , UPDT_USR_ID               = #{updtUsrId           }
                      , UPDT_DT                   = SYSDATE
                  WHERE SPEC_CD     = #{specCd}
                    AND SPEC_TP_NM  = #{specTpNm}
                    AND SEQ         = #{seq}

    </update>


    <!-- SPEC Repository 정보 삭제  -->
    <delete id="deleteSpecRepository" parameterType="SpecRepositoryVO">
        DELETE
          FROM CM_1402T
         WHERE SPEC_CD     = #{specCd}
           AND SPEC_TP_NM  = #{specTpNm}
           AND SEQ         = #{seq}
    </delete>


    <!-- SPEC코드를 조건으로 SPEC Command 정보를 조회한다. -->
    <select id="selectSpecCommandBySpecCd" parameterType="SpecMngSearchVO" resultType="SpecCommandVO">
        /* [chn.bhmc.dms.dply.spec.service.dao.SpecMngDAO.selectSpecCommandBySpecCd] */
        SELECT
               SPEC_CD
             , SPEC_TP_NM
             , SEQ
             , OPER_CMD_NM
             , OPER_CMD_ENV_CONT
             , OPER_DIR_NM
             , SUCCESS_DECISION_STR
             , FAIL_DECISION_STR
             , FAIL_AFT_CTNU_PGSS_YN
             , FAIL_AFT_ROLLBACK_YN
             , ROLLBACK_OPER_CMD_NM
             , ROLLBACK_OPER_CMD_ENV_CONT
             , ROLLBACK_OPER_DIR_NM
             , REG_USR_ID
             , REG_DT
             , UPDT_USR_ID
             , UPDT_DT
             , DEPLOY_PROR_VAL
         FROM CM_1511T
        WHERE SPEC_CD = #{sSpecCd}
       ORDER BY DECODE(SPEC_TP_NM, 'ANTEJOB', 1, 2), DEPLOY_PROR_VAL
    </select>

    <!-- SPEC Command 정보 생성  -->
    <insert id="insertSpecCommand" parameterType="SpecCommandVO">
    /* [chn.bhmc.dms.dply.spec.service.dao.SpecMngDAO.insertSpecCommand] */
        INSERT
          INTO CM_1511T(
                SPEC_CD
              , SPEC_TP_NM
              , SEQ
              , OPER_CMD_NM
              , OPER_CMD_ENV_CONT
              , OPER_DIR_NM
              , SUCCESS_DECISION_STR
              , FAIL_DECISION_STR
              , FAIL_AFT_CTNU_PGSS_YN
              , FAIL_AFT_ROLLBACK_YN
              , ROLLBACK_OPER_CMD_NM
              , ROLLBACK_OPER_CMD_ENV_CONT
              , ROLLBACK_OPER_DIR_NM
              , REG_USR_ID
              , REG_DT
              , UPDT_USR_ID
              , UPDT_DT
              , DEPLOY_PROR_VAL
        )VALUES(
               #{specCd                 }
             , #{specTpNm               }
             , (
                SELECT NVL(MAX(SEQ) + 1, 1)
                  FROM CM_1511T
                 WHERE SPEC_CD = #{specCd}
                   AND SPEC_TP_NM = #{specTpNm}
                )
             , #{operCmdNm              }
             , #{operCmdEnvCont         }
             , #{operDirNm              }
             , #{successDecisionStr     }
             , #{failDecisionStr        }
             , #{failAftCtnuPgssYn      }
             , #{failAftRollbackYn      }
             , #{rollbackOperCmdNm      }
             , #{rollbackOperCmdEnvCont }
             , #{rollbackOperDirNm      }
             , #{regUsrId               }
             , SYSDATE
             , ''
             , ''
             , #{deployProrVal          }
        )
    </insert>

    <!-- SPEC Command 정보 수정  -->
    <update id="updateSpecCommand" parameterType="SpecCommandVO">
    /* [chn.bhmc.dms.dply.spec.service.dao.SpecMngDAO.updateSpecCommand] */
        UPDATE CM_1511T
                    SET OPER_CMD_NM                   = #{operCmdNm              }
                      , OPER_CMD_ENV_CONT             = #{operCmdEnvCont         }
                      , OPER_DIR_NM                   = #{operDirNm              }
                      , SUCCESS_DECISION_STR          = #{successDecisionStr     }
                      , FAIL_DECISION_STR             = #{failDecisionStr        }
                      , FAIL_AFT_CTNU_PGSS_YN         = #{failAftCtnuPgssYn      }
                      , FAIL_AFT_ROLLBACK_YN          = #{failAftRollbackYn      }
                      , ROLLBACK_OPER_CMD_NM          = #{rollbackOperCmdNm      }
                      , ROLLBACK_OPER_CMD_ENV_CONT    = #{rollbackOperCmdEnvCont }
                      , ROLLBACK_OPER_DIR_NM          = #{rollbackOperDirNm      }
                      , DEPLOY_PROR_VAL               = #{deployProrVal          }
                      , UPDT_USR_ID                   = #{updtUsrId              }
                      , UPDT_DT                       = SYSDATE
                  WHERE SPEC_CD     = #{specCd}
                    AND SPEC_TP_NM  = #{specTpNm}
                    AND SEQ         = #{seq}

    </update>


    <!-- SPEC Command 정보 삭제  -->
    <delete id="deleteSpecCommand" parameterType="SpecCommandVO">
        DELETE
          FROM CM_1511T
         WHERE SPEC_CD     = #{specCd}
           AND SPEC_TP_NM  = #{specTpNm}
           AND SEQ         = #{seq}
    </delete>


    <!-- SPEC코드를 조건으로 SPEC BUNDLE 정보를 조회한다. -->
    <select id="selectSpecBundleBySpecCd" parameterType="SpecMngSearchVO" resultType="SpecBundleVO">
        /* [chn.bhmc.dms.dply.spec.service.dao.SpecMngDAO.selectSpecBundleBySpecCd] */
        SELECT
               SPEC_CD
             , SPEC_TP_NM
             , SEQ
             , OPER_CMD_NM
             , OPER_TRY_CNT
             , BUNDLE_GRP_ID
             , BUNDLE_ATFT_ID
             , BUNDLE_VER_NO
             , FAIL_AFT_CTNU_PGSS_YN
             , FAIL_AFT_ROLLBACK_YN
             , ROLLBACK_OPER_CMD_NM
             , ROLLBACK_PROR_VAL
             , REG_USR_ID
             , REG_DT
             , UPDT_USR_ID
             , UPDT_DT
             , SYMBOLIC_NM
             , BUNDLE_NM
             , DEPLOY_PROR_VAL
             , SRC_FILE_PATH_NM
             , TARG_FILE_PATH_NM
         FROM CM_1403T
        WHERE SPEC_CD = #{sSpecCd}
          AND SPEC_TP_NM = #{sSpecTpNm}
       ORDER BY DEPLOY_PROR_VAL
    </select>

    <!-- SPEC Bundle 정보 생성  -->
    <insert id="insertSpecBundle" parameterType="SpecBundleVO">
    /* [chn.bhmc.dms.dply.spec.service.dao.SpecMngDAO.insertSpecBundle] */
        INSERT
          INTO CM_1403T(
               SPEC_CD
             , SPEC_TP_NM
             , SEQ
             , OPER_CMD_NM
             , OPER_TRY_CNT
             , BUNDLE_GRP_ID
             , BUNDLE_ATFT_ID
             , BUNDLE_VER_NO
             , FAIL_AFT_CTNU_PGSS_YN
             , FAIL_AFT_ROLLBACK_YN
             , ROLLBACK_OPER_CMD_NM
             , ROLLBACK_PROR_VAL
             , REG_USR_ID
             , REG_DT
             , UPDT_USR_ID
             , UPDT_DT
             , SYMBOLIC_NM
             , BUNDLE_NM
             , DEPLOY_PROR_VAL
             , SRC_FILE_PATH_NM
             , TARG_FILE_PATH_NM
        )VALUES(
               #{specCd              }
             , #{specTpNm            }
             , (
                SELECT NVL(MAX(SEQ) + 1, 1)
                  FROM CM_1403T
                 WHERE SPEC_CD = #{specCd}
                   AND SPEC_TP_NM = #{specTpNm}
                )
             , #{operCmdNm           }
             , #{operTryCnt          }
             , #{bundleGrpId         }
             , #{bundleAtftId        }
             , #{bundleVerNo         }
             , #{failAftCtnuPgssYn   }
             , #{failAftRollbackYn   }
             , #{rollbackOperCmdNm   }
             , #{rollbackProrVal     }
             , #{regUsrId            }
             , SYSDATE
             , ''
             , ''
             , #{symbolicNm          }
             , #{bundleNm            }
             , #{deployProrVal       }
             , #{srcFilePathNm       }
             , #{targFilePathNm      }
        )
    </insert>

    <!-- SPEC Bundle 정보 수정  -->
    <update id="updateSpecBundle" parameterType="SpecBundleVO">
    /* [chn.bhmc.dms.dply.spec.service.dao.SpecMngDAO.updateSpecBundle] */
        UPDATE CM_1403T
                    SET OPER_CMD_NM               = #{operCmdNm           }
                      , OPER_TRY_CNT              = #{operTryCnt          }
                      , BUNDLE_GRP_ID             = #{bundleGrpId         }
                      , BUNDLE_ATFT_ID            = #{bundleAtftId        }
                      , BUNDLE_VER_NO             = #{bundleVerNo         }
                      , FAIL_AFT_CTNU_PGSS_YN     = #{failAftCtnuPgssYn   }
                      , FAIL_AFT_ROLLBACK_YN      = #{failAftRollbackYn   }
                      , ROLLBACK_OPER_CMD_NM      = #{rollbackOperCmdNm   }
                      , ROLLBACK_PROR_VAL         = #{rollbackProrVal     }
                      , UPDT_USR_ID               = #{updtUsrId           }
                      , UPDT_DT                   = SYSDATE
                      , SYMBOLIC_NM               = #{symbolicNm          }
                      , BUNDLE_NM                 = #{bundleNm            }
                      , DEPLOY_PROR_VAL           = #{deployProrVal       }
                      , SRC_FILE_PATH_NM		  = #{srcFilePathNm       }
            		  , TARG_FILE_PATH_NM		  = #{targFilePathNm      }
                  WHERE SPEC_CD     = #{specCd}
                    AND SPEC_TP_NM  = #{specTpNm}
                    AND SEQ         = #{seq}

    </update>


    <!-- SPEC Bundle 정보 삭제  -->
    <delete id="deleteSpecBundle" parameterType="SpecBundleVO">
        DELETE
          FROM CM_1403T
         WHERE SPEC_CD     = #{specCd}
           AND SPEC_TP_NM  = #{specTpNm}
           AND SEQ         = #{seq}
    </delete>



    <!-- SPEC코드를 조건으로 SPEC SQL 정보를 조회한다. -->
    <select id="selectSpecSqlBySpecCd" parameterType="SpecMngSearchVO" resultType="SpecSqlVO">
        /* [chn.bhmc.dms.dply.spec.service.dao.SpecMngDAO.selectSpecSqlBySpecCd] */
        SELECT
               SPEC_CD
             , SPEC_TP_NM
             , SEQ
             , SQL_TEXT_CONT
             , OPER_TRY_CNT
             , FAIL_AFT_CTNU_PGSS_YN
             , FAIL_AFT_ROLLBACK_YN
             , ROLLBACK_SQL_TEXT_CONT
             , ROLLBACK_PROR_VAL
             , REG_USR_ID
             , REG_DT
             , UPDT_USR_ID
             , UPDT_DT
             , DEPLOY_PROR_VAL
         FROM CM_1404T
        WHERE SPEC_CD = #{sSpecCd}
          AND SPEC_TP_NM = #{sSpecTpNm}
       ORDER BY DEPLOY_PROR_VAL
    </select>


    <!-- SPEC SQL 정보 생성  -->
    <insert id="insertSpecSql" parameterType="SpecSqlVO">
    /* [chn.bhmc.dms.dply.spec.service.dao.SpecMngDAO.insertSpecSql] */
        INSERT
          INTO CM_1404T(
               SPEC_CD
             , SPEC_TP_NM
             , SEQ
             , SQL_TEXT_CONT
             , OPER_TRY_CNT
             , FAIL_AFT_CTNU_PGSS_YN
             , FAIL_AFT_ROLLBACK_YN
             , ROLLBACK_SQL_TEXT_CONT
             , ROLLBACK_PROR_VAL
             , REG_USR_ID
             , REG_DT
             , UPDT_USR_ID
             , UPDT_DT
             , DEPLOY_PROR_VAL
        )VALUES(
               #{specCd}
             , #{specTpNm}
             , (
                SELECT NVL(MAX(SEQ) + 1, 1)
                  FROM CM_1404T
                 WHERE SPEC_CD = #{specCd}
                   AND SPEC_TP_NM = #{specTpNm}
                )
             , #{sqlTextCont}
             , #{operTryCnt}
             , #{failAftCtnuPgssYn}
             , #{failAftRollbackYn}
             , #{rollbackSqlTextCont}
             , #{rollbackProrVal}
             , #{regUsrId}
             , SYSDATE
             , ''
             , ''
             , #{deployProrVal}
        )
    </insert>


    <!-- SPEC SQL 정보 수정  -->
    <update id="updateSpecSql" parameterType="SpecSqlVO">
    /* [chn.bhmc.dms.dply.spec.service.dao.SpecMngDAO.updateSpecSql] */
        UPDATE CM_1404T
                    SET SQL_TEXT_CONT               = #{sqlTextCont}
                      , OPER_TRY_CNT                = #{operTryCnt}
                      , FAIL_AFT_CTNU_PGSS_YN       = #{failAftCtnuPgssYn}
                      , FAIL_AFT_ROLLBACK_YN        = #{failAftRollbackYn}
                      , ROLLBACK_SQL_TEXT_CONT      = #{rollbackSqlTextCont}
                      , ROLLBACK_PROR_VAL           = #{rollbackProrVal}
                      , DEPLOY_PROR_VAL             = #{deployProrVal}
                      , UPDT_USR_ID                 = #{updtUsrId}
                      , UPDT_DT                     = SYSDATE
                  WHERE SPEC_CD     = #{specCd}
                    AND SPEC_TP_NM  = #{specTpNm}
                    AND SEQ         = #{seq}

    </update>


    <!-- SPEC SQL 정보 삭제  -->
    <delete id="deleteSpecSql" parameterType="SpecSqlVO">
        DELETE
          FROM CM_1404T
         WHERE SPEC_CD     = #{specCd}
           AND SPEC_TP_NM  = #{specTpNm}
           AND SEQ         = #{seq}
    </delete>


    <!-- SPEC코드를 조건으로 SPEC PROPERTY 정보를 조회한다. -->
    <select id="selectSpecPrtyBySpecCd" parameterType="SpecMngSearchVO" resultType="SpecPrtyVO">
        /* [chn.bhmc.dms.dply.spec.service.dao.SpecMngDAO.selectSpecPrtyBySpecCd] */
        SELECT
               SPEC_CD
             , SPEC_TP_NM
             , SEQ
             , OPER_TRY_CNT
             , PRTY_FILE_NM
             , PRTY_KEY_NM
             , PRTY_KEY_VAL
             , FAIL_AFT_CTNU_PGSS_YN
             , FAIL_AFT_ROLLBACK_YN
             , PRTY_FILE_TP_NM
             , REG_USR_ID
             , REG_DT
             , UPDT_USR_ID
             , UPDT_DT
         FROM CM_1405T
        WHERE SPEC_CD = #{sSpecCd}
          AND SPEC_TP_NM = #{sSpecTpNm}
    </select>


    <!-- SPEC PROPERTY 정보 생성  -->
    <insert id="insertSpecPrty" parameterType="SpecPrtyVO">
    /* [chn.bhmc.dms.dply.spec.service.dao.SpecMngDAO.insertSpecPrty] */
        INSERT
          INTO CM_1405T(
               SPEC_CD
             , SPEC_TP_NM
             , SEQ
             , OPER_TRY_CNT
             , PRTY_FILE_NM
             , PRTY_KEY_NM
             , PRTY_KEY_VAL
             , FAIL_AFT_CTNU_PGSS_YN
             , FAIL_AFT_ROLLBACK_YN
             , PRTY_FILE_TP_NM
             , REG_USR_ID
             , REG_DT
             , UPDT_USR_ID
             , UPDT_DT
        )VALUES(
               #{specCd}
             , #{specTpNm}
             , (
                SELECT NVL(MAX(SEQ) + 1, 1)
                  FROM CM_1405T
                 WHERE SPEC_CD = #{specCd}
                   AND SPEC_TP_NM = #{specTpNm}
                )
             , #{operTryCnt}
             , #{prtyFileNm}
             , #{prtyKeyNm}
             , #{prtyKeyVal}
             , #{failAftCtnuPgssYn}
             , #{failAftRollbackYn}
             , #{prtyFileTpNm}
             , #{regUsrId}
             , SYSDATE
             , ''
             , ''
        )
    </insert>


    <!-- SPEC PROPERTY 정보 수정  -->
    <update id="updateSpecPrty" parameterType="SpecPrtyVO">
    /* [chn.bhmc.dms.dply.spec.service.dao.SpecMngDAO.updateSpecPrty] */
        UPDATE CM_1405T
                    SET OPER_TRY_CNT              = #{operTryCnt}
                      , PRTY_FILE_NM              = #{prtyFileNm}
                      , PRTY_KEY_NM               = #{prtyKeyNm}
                      , PRTY_KEY_VAL              = #{prtyKeyVal}
                      , FAIL_AFT_CTNU_PGSS_YN     = #{failAftCtnuPgssYn}
                      , FAIL_AFT_ROLLBACK_YN      = #{failAftRollbackYn}
                      , PRTY_FILE_TP_NM           = #{prtyFileTpNm}
                      , UPDT_USR_ID               = #{updtUsrId}
                      , UPDT_DT                   = SYSDATE
                  WHERE SPEC_CD     = #{specCd}
                    AND SPEC_TP_NM  = #{specTpNm}
                    AND SEQ         = #{seq}

    </update>


    <!-- SPEC PROPERTY 정보 삭제  -->
    <delete id="deleteSpecPrty" parameterType="SpecPrtyVO">
        DELETE
          FROM CM_1405T
         WHERE SPEC_CD     = #{specCd}
           AND SPEC_TP_NM  = #{specTpNm}
           AND SEQ         = #{seq}
    </delete>


    <!-- SPEC코드를 조건으로 SPEC FILE 정보를 조회한다. -->
    <select id="selectSpecFileBySpecCd" parameterType="SpecMngSearchVO" resultType="SpecFileVO">
        /* [chn.bhmc.dms.dply.spec.service.dao.SpecMngDAO.selectSpecFileBySpecCd] */
        SELECT
               SPEC_CD
             , SPEC_TP_NM
             , SEQ
             , OPER_TRY_CNT
             , SRC_FILE_PATH_NM
             , TARG_FILE_PATH_NM
             , DLR_CD_AUTO_ADD_YN
             , FAIL_AFT_CTNU_PGSS_YN
             , FAIL_AFT_ROLLBACK_YN
             , BAK_TARG_FILE_PATH_NM
             , REG_USR_ID
             , REG_DT
             , UPDT_USR_ID
             , UPDT_DT
         FROM CM_1501T
        WHERE SPEC_CD = #{sSpecCd}
          AND SPEC_TP_NM = #{sSpecTpNm}
    </select>


    <!-- SPEC FILE 정보 생성  -->
    <insert id="insertSpecFile" parameterType="SpecFileVO">
    /* [chn.bhmc.dms.dply.spec.service.dao.SpecMngDAO.insertSpecFile] */
        INSERT
          INTO CM_1501T(
               SPEC_CD
             , SPEC_TP_NM
             , SEQ
             , OPER_TRY_CNT
             , SRC_FILE_PATH_NM
             , TARG_FILE_PATH_NM
             , DLR_CD_AUTO_ADD_YN
             , FAIL_AFT_CTNU_PGSS_YN
             , FAIL_AFT_ROLLBACK_YN
             , BAK_TARG_FILE_PATH_NM
             , REG_USR_ID
             , REG_DT
             , UPDT_USR_ID
             , UPDT_DT
        )VALUES(
               #{specCd}
             , #{specTpNm}
             , (
                SELECT NVL(MAX(SEQ) + 1, 1)
                  FROM CM_1501T
                 WHERE SPEC_CD = #{specCd}
                   AND SPEC_TP_NM = #{specTpNm}
                )
             , #{operTryCnt}
             , #{srcFilePathNm}
             , REPLACE(#{targFilePathNm},'/','\\')
             , #{dlrCdAutoAddYn}
             , #{failAftCtnuPgssYn}
             , #{failAftRollbackYn}
             , #{bakTargFilePathNm}
             , #{regUsrId}
             , SYSDATE
             , ''
             , ''
        )
    </insert>


    <!-- SPEC FILE 정보 수정  -->
    <update id="updateSpecFile" parameterType="SpecFileVO">
    /* [chn.bhmc.dms.dply.spec.service.dao.SpecMngDAO.updateSpecFile] */
        UPDATE CM_1501T
                    SET OPER_TRY_CNT              = #{operTryCnt}
                      , SRC_FILE_PATH_NM          = #{srcFilePathNm}
                      , TARG_FILE_PATH_NM         = #{targFilePathNm}
                      , DLR_CD_AUTO_ADD_YN        = #{dlrCdAutoAddYn}
                      , FAIL_AFT_CTNU_PGSS_YN     = #{failAftCtnuPgssYn}
                      , FAIL_AFT_ROLLBACK_YN      = #{failAftRollbackYn}
                      , BAK_TARG_FILE_PATH_NM     = #{bakTargFilePathNm}
                      , UPDT_USR_ID               = #{updtUsrId}
                      , UPDT_DT                   = SYSDATE
                  WHERE SPEC_CD     = #{specCd}
                    AND SPEC_TP_NM  = #{specTpNm}
                    AND SEQ         = #{seq}

    </update>


    <!-- SPEC FILE 정보 삭제  -->
    <delete id="deleteSpecFile" parameterType="SpecFileVO">
        DELETE
          FROM CM_1501T
         WHERE SPEC_CD     = #{specCd}
           AND SPEC_TP_NM  = #{specTpNm}
           AND SEQ         = #{seq}
    </delete>


    <!-- SPEC코드를 조건으로 Deploy Master 정보를 조회한다. -->
    <select id="selectDplyMastByKey" parameterType="SpecMngSearchVO" resultType="DplyMastVO">
        /* [chn.bhmc.dms.dply.spec.service.dao.SpecMngDAO.selectDplyMastByKey] */
        SELECT
               SPEC_CD
             , DEPLOY_VER_NO
             , SCHEDULE_TP_CD
             , DEPLOY_START_DT
             , DEPLOY_END_DT
             , DEPLOY_STAT_CD
             , DEPLOY_RETRY_CNT
             , DEPLOY_RETRY_IVAL_VAL
             , RSLT_RECEIVE_TMOUT_HM
             , ACHK_FAIL_ALW_YN
             , ACHK_FAIL_ALW_CNT
             , ALW_FAIL_DMS_CNT
             , DMS_GRP_CNT
             , PROC_RSLT_NOTI_YN
             , REG_USR_ID
             , REG_DT
             , UPDT_USR_ID
             , UPDT_DT
             , DEPLOY_TP_CD
             , PROC_RSLT_NOTI_END_YN
             , PROC_RSLT_NOTI_END_DT
         FROM CM_1502T
        WHERE SPEC_CD = #{sSpecCd}
        <if test='sDeployVerNo != null and sDeployVerNo != ""'>
          AND DEPLOY_VER_NO = #{sDeployVerNo}
        </if>
    </select>

    <!-- DEPLOY MASTER 정보 생성  -->
    <insert id="insertDplyMast" parameterType="DplyMastVO">
    /* [chn.bhmc.dms.dply.spec.service.dao.SpecMngDAO.insertDplyMast] */
        <selectKey keyProperty="deployVerNo" resultType="String" order="BEFORE">
            SELECT LPAD(NVL(TO_NUMBER(MAX(DEPLOY_VER_NO))+1, 1), 3, 0)
              FROM CM_1502T
             WHERE 1 = 1
               AND SPEC_CD = #{specCd}
        </selectKey>
        INSERT
          INTO CM_1502T(
               SPEC_CD
             , DEPLOY_VER_NO
             , SCHEDULE_TP_CD
             , DEPLOY_START_DT
             , DEPLOY_END_DT
             , DEPLOY_STAT_CD
             , DEPLOY_RETRY_CNT
             , DEPLOY_RETRY_IVAL_VAL
             , RSLT_RECEIVE_TMOUT_HM
             , ACHK_FAIL_ALW_YN
             , ACHK_FAIL_ALW_CNT
             , ALW_FAIL_DMS_CNT
             , DMS_GRP_CNT
             , PROC_RSLT_NOTI_YN
             , REG_USR_ID
             , REG_DT
             , UPDT_USR_ID
             , UPDT_DT
             , DEPLOY_TP_CD
             , PROC_RSLT_NOTI_END_YN
             , PROC_RSLT_NOTI_END_DT
        )VALUES(
               #{specCd}
             , #{deployVerNo}
             , #{scheduleTpCd}
             , #{deployStartDt}
             , #{deployEndDt}
             , #{deployStatCd}
             , #{deployRetryCnt}
             , #{deployRetryIvalVal}
             , #{rsltReceiveTmoutHm}
             , #{achkFailAlwYn}
             , #{achkFailAlwCnt}
             , #{alwFailDmsCnt}
             , #{dmsGrpCnt}
             , #{procRsltNotiYn}
             , #{regUsrId}
             , SYSDATE
             , ''
             , ''
             , #{deployTpCd}
             , #{procRsltNotiEndYn}
             , #{procRsltNotiEndDt}

        )
    </insert>

    <!-- DEPLOY MASTER FOR REDEPLOY 정보 생성  -->
    <insert id="insertDplyMastForRedeploy" parameterType="DplyMastVO">
    /* [chn.bhmc.dms.dply.spec.service.dao.SpecMngDAO.insertDplyMast] */
        <selectKey keyProperty="deployVerNo" resultType="String" order="BEFORE">
            SELECT LPAD(NVL(TO_NUMBER(MAX(DEPLOY_VER_NO))+1, 1), 3, 0)
              FROM CM_1502T
             WHERE 1 = 1
               AND SPEC_CD = #{specCd}
        </selectKey>
        INSERT
          INTO CM_1502T(
               SPEC_CD
             , DEPLOY_VER_NO
             , SCHEDULE_TP_CD
             , DEPLOY_START_DT
             , DEPLOY_END_DT
             , DEPLOY_STAT_CD
             , DEPLOY_RETRY_CNT
             , DEPLOY_RETRY_IVAL_VAL
             , RSLT_RECEIVE_TMOUT_HM
             , ACHK_FAIL_ALW_YN
             , ACHK_FAIL_ALW_CNT
             , ALW_FAIL_DMS_CNT
             , DMS_GRP_CNT
             , PROC_RSLT_NOTI_YN
             , REG_USR_ID
             , REG_DT
             , DEPLOY_TP_CD
             , PROC_RSLT_NOTI_END_YN
        )
        SELECT
               SPEC_CD
             , #{deployVerNo}
             , SCHEDULE_TP_CD
             , #{deployStartDt}
             , #{deployEndDt}
             , #{deployStatCd}
             , DEPLOY_RETRY_CNT
             , DEPLOY_RETRY_IVAL_VAL
             , RSLT_RECEIVE_TMOUT_HM
             , ACHK_FAIL_ALW_YN
             , ACHK_FAIL_ALW_CNT
             , ALW_FAIL_DMS_CNT
             , DMS_GRP_CNT
             , PROC_RSLT_NOTI_YN
             , #{regUsrId}
             , SYSDATE
             , DEPLOY_TP_CD
             , PROC_RSLT_NOTI_END_YN
          FROM CM_1502T
         WHERE SPEC_CD = #{specCd}
           AND DEPLOY_VER_NO = #{deployVerNoOrg}

    </insert>

    <!-- DEPLOY MASTER 정보 수정  -->
    <update id="updateDplyMast" parameterType="DplyMastVO">
    /* [chn.bhmc.dms.dply.spec.service.dao.SpecMngDAO.updateDplyMast] */
        UPDATE CM_1502T
                    SET SCHEDULE_TP_CD            = #{scheduleTpCd        }
                      , DEPLOY_START_DT           = #{deployStartDt       }
                      , DEPLOY_END_DT             = #{deployEndDt         }
                      , DEPLOY_STAT_CD            = #{deployStatCd        }
                      , DEPLOY_RETRY_CNT          = #{deployRetryCnt      }
                      , DEPLOY_RETRY_IVAL_VAL     = #{deployRetryIvalVal  }
                      , RSLT_RECEIVE_TMOUT_HM     = #{rsltReceiveTmoutHm  }
                      , ACHK_FAIL_ALW_YN          = #{achkFailAlwYn       }
                      , ACHK_FAIL_ALW_CNT         = #{achkFailAlwCnt      }
                      , ALW_FAIL_DMS_CNT          = #{alwFailDmsCnt       }
                      , DMS_GRP_CNT               = #{dmsGrpCnt           }
                      , PROC_RSLT_NOTI_YN         = #{procRsltNotiYn      }
                      , UPDT_USR_ID               = #{updtUsrId}
                      , UPDT_DT                   = SYSDATE
                      , DEPLOY_TP_CD              = #{deployTpCd          }
                      , PROC_RSLT_NOTI_END_YN     = #{procRsltNotiEndYn   }
                      , PROC_RSLT_NOTI_END_DT     = #{procRsltNotiEndDt   }
                  WHERE SPEC_CD        = #{specCd}
                    AND DEPLOY_VER_NO  = #{deployVerNo}

    </update>

    <!-- DEPLOY MASTER 상태 update  -->
    <update id="updateDplyMastState" parameterType="DplyMastVO">
    /* [chn.bhmc.dms.dply.spec.service.dao.SpecMngDAO.updateDplyMastState] */
        UPDATE CM_1502T
                    SET DEPLOY_STAT_CD            = #{deployStatCd        }
                      , UPDT_USR_ID               = #{updtUsrId}
                      , UPDT_DT                   = SYSDATE
                  WHERE SPEC_CD        = #{specCd}
                    AND DEPLOY_VER_NO  = #{deployVerNo}
    </update>


    <!-- DEPLOY MASTER 상태 update  -->
    <update id="updateDplyMastStateToReg" parameterType="DplyMastVO">
    /* [chn.bhmc.dms.dply.spec.service.dao.SpecMngDAO.updateDplyMastStateToReg] */
        UPDATE CM_1502T
                    SET DEPLOY_STAT_CD            = 'N'
                      , UPDT_USR_ID               = #{updtUsrId}
                      , UPDT_DT                   = SYSDATE
                  WHERE SPEC_CD        = #{specCd}
                    AND DEPLOY_VER_NO  = #{deployVerNo}
                    AND DEPLOY_STAT_CD = 'W'
                    AND EXISTS
                      ( SELECT 1
                          FROM CM_1504T
                         WHERE SPEC_CD        = #{specCd}
                           AND DEPLOY_VER_NO  = #{deployVerNo}
                      )
    </update>

    <!-- SPEC_CD, DEPLOY_VER_NO를 조건으로 Deploy Dealer의 갯수를 조회한다. -->
    <select id="selectDeployDealerCount" parameterType="HashMap" resultType="Integer">
        /* [chn.bhmc.dms.dply.spec.service.dao.SpecMngDAO.selectDeployDealerCount] */
        SELECT COUNT(*) CNT
          FROM CM_1504T
         WHERE SPEC_CD        = #{specCd}
           AND DEPLOY_VER_NO  = #{deployVerNo}

    </select>

    <!-- DEPLOY MASTER 상태를 Running으로 update, DEPLOY시작일자를 SYSDATE로 update  -->
    <update id="updateDplyMastStateToRun" parameterType="DplyMastVO">
    /* [chn.bhmc.dms.dply.spec.service.dao.SpecMngDAO.updateDplyMastStateToRun] */
        UPDATE CM_1502T
                    SET DEPLOY_STAT_CD            = 'R'
                      , DEPLOY_START_DT           = SYSDATE
                      , UPDT_USR_ID               = #{updtUsrId}
                      , UPDT_DT                   = SYSDATE
                  WHERE SPEC_CD        = #{specCd}
                    AND DEPLOY_VER_NO  = #{deployVerNo}
                    AND DEPLOY_STAT_CD = 'N'
    </update>



    <!-- DEPLOY MASTER 정보 삭제  -->
    <delete id="deleteDplyMast" parameterType="DplyMastVO">
        DELETE
          FROM CM_1502T
         WHERE SPEC_CD        = #{specCd}
           AND DEPLOY_VER_NO  = #{deployVerNo}
    </delete>


    <!-- DEPLOY DEALER 정보 삭제 (SPEC_CD, DEPLOY_VER_NO 조건으로)  -->
    <delete id="deleteDplyDlrBySpecCdDeployVerNo" parameterType="HashMap">
        DELETE
          FROM CM_1504T
         WHERE SPEC_CD        = #{specCd}
           AND DEPLOY_VER_NO  = #{deployVerNo}
    </delete>

    <!-- DEPLOY GROUP 정보 삭제 (SPEC_CD, DEPLOY_VER_NO 조건으로)  -->
    <delete id="deleteDplyGrpBySpecCdDeployVerNo" parameterType="HashMap">
        DELETE
          FROM CM_1503T
         WHERE SPEC_CD        = #{specCd}
           AND DEPLOY_VER_NO  = #{deployVerNo}
    </delete>

    <!-- Virtual DMS Profile (For Simulation) 목록을 조회한다. -->
    <select id="selectDmsPopupListForSimulation" parameterType="DmsSearchVO" resultType="DmsVO">
        /* [chn.bhmc.dms.dply.spec.service.dao.SpecMngDAO.selectDmsPopupListForSimulation] */
        SELECT A.DLR_CD
             , NULL AS DEPLOY_TARG_YN
             , NULL AS LAST_ACHK_REQ_DT
             , NULL AS LAST_ACHK_RES_DT
             , NULL AS LAST_ACHK_RES_CD
             , NULL AS LAST_ACHK_RES_MSG_CONT
             , A.DLR_NM
             , A.TEL_NO
             , A.FAX_NO
             , A.DMS_IP_NM AS IP
             , A.DMS_PORT_NM AS PORT
             , A.DMS_TEST_URL_NM AS HOMEPAGE_URL
             , NULL AS FAIL_YN
          FROM CM_1610T A

    </select>

    <!-- DMS Profile 목록을 조회한다. -->
    <select id="selectDmsPopupList" parameterType="DmsSearchVO" resultType="DmsVO">
        /* [chn.bhmc.dms.dply.spec.service.dao.SpecMngDAO.selectDmsPopupList] */
        SELECT A.DLR_CD
--             , A.DEPLOY_TARG_YN
             , A.LAST_ACHK_REQ_DT
--             , A.LAST_ACHK_RES_DT
             , A.LAST_ACHK_RES_CD
--             , A.LAST_ACHK_RES_MSG_CONT
             , A.DLR_NM
             , A.OPEN_DT
--             , B.TEL_NO
--             , B.FAX_NO
--             , B.DMS_IP_NM AS IP
--             , B.DMS_PORT_NM AS PORT
--             , B.DMS_TEST_URL_NM AS HOMEPAGE_URL
             , (SELECT CASE WHEN COUNT(*) > 0 THEN 'Y' ELSE NULL END
                  FROM CM_1504T C
                 WHERE C.SPEC_CD = #{sSpecCd}
                   AND C.DLR_CD = A.DLR_CD
                   AND C.DEPLOY_RSLT_CD <![CDATA[ <> ]]> '00') AS FAIL_YN
          FROM VW_COM_DLR_INFO A
         WHERE 1 = 1
           AND A.DEPLOY_TARG_YN = 'Y'
           AND A.DEPLOY_TP_CD = 'N'
           AND A.DMS_IP_NM IS NOT NULL
           AND NOT EXISTS
               (
               SELECT 1
                 FROM CM_1504T C
                WHERE C.SPEC_CD = #{sSpecCd}
                  AND C.DEPLOY_VER_NO = #{sDeployVerNo}
                  AND C.DLR_CD = A.DLR_CD
               )
           AND NOT EXISTS
               (
               SELECT 1
                 FROM CM_1504T C
                WHERE C.SPEC_CD = #{sSpecCd}
                  AND C.DLR_CD = A.DLR_CD
                  AND C.DEPLOY_RSLT_CD IS NULL
               )
           AND NOT EXISTS
               (
               SELECT 1
                 FROM CM_1504T C
                WHERE C.SPEC_CD = #{sSpecCd}
                  AND C.DLR_CD = A.DLR_CD
                  AND C.DEPLOY_RSLT_CD = '00'
               )
         <if test='sDlrCd != null and sDlrCd != ""'>
            <choose>
                <when test='@org.apache.commons.lang3.StringUtils@contains(sDlrCd,"*")'>
                    <bind name='sDlrCd' value='@org.apache.commons.lang3.StringUtils@replace(sDlrCd, "*", "%")' />
                     AND A.DLR_CD LIKE #{sDlrCd}
                </when>
                <otherwise>
                     AND A.DLR_CD = #{sDlrCd}
                </otherwise>
            </choose>
        </if>

         <if test='sDlrNm != null and sDlrNm != ""'>
            <choose>
                <when test='@org.apache.commons.lang3.StringUtils@contains(sDlrNm,"*")'>
                    <bind name='sDlrNm' value='@org.apache.commons.lang3.StringUtils@replace(sDlrNm, "*", "%")' />
                     AND A.DLR_NM LIKE #{sDlrNm}
                </when>
                <otherwise>
                     AND A.DLR_NM = #{sDlrNm}
                </otherwise>
            </choose>
        </if>

        <if test='sOpenFromDt != null and sOpenFromDt != ""'>
             AND A.OPEN_DT >= TO_CHAR(TO_DATE(#{sOpenFromDt}, 'YYYY-MM-DD'), 'YYYYMMDD')
        </if>

        <if test='sOpenToDt != null and sOpenToDt != ""'>
             AND A.OPEN_DT <![CDATA[<=]]> TO_CHAR(TO_DATE(#{sOpenToDt}, 'YYYY-MM-DD'), 'YYYYMMDD')
        </if>

        ORDER BY
        <choose>
            <when test='sort != null'>
                <foreach item="item" index="index" collection="sort" open="" separator="," close="">
                    <choose>
                        <when test='item.field == "dlrNm"'>A.DLR_NM <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                        <when test='item.field == "dlrCd"'>A.DLR_CD <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                        <otherwise>
                            A.DLR_CD ASC
                        </otherwise>
                    </choose>
                </foreach>
            </when>
            <otherwise>
                A.DLR_CD ASC
            </otherwise>
        </choose>
    </select>



    <!-- Redeploy DMS Profile 대상 목록을 조회한다. -->
    <select id="selectDmsPopupListForRedeploy" parameterType="DmsSearchVO" resultType="DmsVO">
        /* [chn.bhmc.dms.dply.spec.service.dao.SpecMngDAO.selectDmsPopupListForRedeploy] */
        SELECT A.DLR_CD
             , A.DEPLOY_TARG_YN
             , A.LAST_ACHK_REQ_DT
             , A.LAST_ACHK_RES_DT
             , A.LAST_ACHK_RES_CD
             , A.LAST_ACHK_RES_MSG_CONT
             , A.DLR_NM
             , A.TEL_NO
             , A.FAX_NO
             , A.DMS_IP_NM AS IP
             , A.DMS_PORT_NM AS PORT
             , A.DMS_TEST_URL_NM AS HOMEPAGE_URL
             , (SELECT CASE WHEN COUNT(*) > 0 THEN 'Y' ELSE NULL END
                  FROM CM_1504T C
                 WHERE C.SPEC_CD = #{sSpecCd}
                   AND C.DLR_CD = A.DLR_CD
                   AND C.DEPLOY_RSLT_CD <![CDATA[ <> ]]> '00') AS FAIL_YN
             , DECODE(SUBSTRB(LAST_ACHK_RES_MSG_CONT, INSTRB(LAST_ACHK_RES_MSG_CONT,<![CDATA['<dbms>']]>)+6, LENGTHB(SUBSTRB(LAST_ACHK_RES_MSG_CONT, INSTRB(LAST_ACHK_RES_MSG_CONT,<![CDATA['<dbms>']]>)+6)) - LENGTHB(SUBSTRB(LAST_ACHK_RES_MSG_CONT, INSTRB(LAST_ACHK_RES_MSG_CONT,<![CDATA['</dbms>']]>)))),'OK','OK','NOK') AS SQL_DEPLOY
             , DECODE(SUBSTRB(LAST_ACHK_RES_MSG_CONT, INSTRB(LAST_ACHK_RES_MSG_CONT,<![CDATA['<repository>']]>)+12, LENGTHB(SUBSTRB(LAST_ACHK_RES_MSG_CONT, INSTRB(LAST_ACHK_RES_MSG_CONT,<![CDATA['<repository>']]>)+12)) - LENGTHB(SUBSTRB(LAST_ACHK_RES_MSG_CONT, INSTRB(LAST_ACHK_RES_MSG_CONT,<![CDATA['</repository>']]>)))),'OK','OK','NOK') AS REPO_DEPLOY
             , DECODE(SUBSTRB(LAST_ACHK_RES_MSG_CONT, INSTRB(LAST_ACHK_RES_MSG_CONT,<![CDATA['<http>']]>)+6, LENGTHB(SUBSTRB(LAST_ACHK_RES_MSG_CONT, INSTRB(LAST_ACHK_RES_MSG_CONT,<![CDATA['<http>']]>)+6)) - LENGTHB(SUBSTRB(LAST_ACHK_RES_MSG_CONT, INSTRB(LAST_ACHK_RES_MSG_CONT,<![CDATA['</http>']]>)))),'OK','OK','NOK') AS FILE_DEPLOY
             , DECODE(SUBSTRB(LAST_ACHK_RES_MSG_CONT, INSTRB(LAST_ACHK_RES_MSG_CONT,<![CDATA['<process>']]>)+9, LENGTHB(SUBSTRB(LAST_ACHK_RES_MSG_CONT, INSTRB(LAST_ACHK_RES_MSG_CONT,<![CDATA['<process>']]>)+9)) - LENGTHB(SUBSTRB(LAST_ACHK_RES_MSG_CONT, INSTRB(LAST_ACHK_RES_MSG_CONT,<![CDATA['</process>']]>)))),'OK','OK','NOK') AS DEPLOY_PROCESS
             , DECODE(SUBSTRB(LAST_ACHK_RES_MSG_CONT, INSTRB(LAST_ACHK_RES_MSG_CONT,<![CDATA['<result>']]>)+8, LENGTHB(SUBSTRB(LAST_ACHK_RES_MSG_CONT, INSTRB(LAST_ACHK_RES_MSG_CONT,<![CDATA['<result>']]>)+8)) - LENGTHB(SUBSTRB(LAST_ACHK_RES_MSG_CONT, INSTRB(LAST_ACHK_RES_MSG_CONT,<![CDATA['</result>']]>)))),'OK','OK','NOK') AS RESULT
             , SUBSTRB(LAST_ACHK_RES_MSG_CONT, INSTRB(LAST_ACHK_RES_MSG_CONT,<![CDATA['<result_msg>']]>)+12, LENGTHB(SUBSTRB(LAST_ACHK_RES_MSG_CONT, INSTRB(LAST_ACHK_RES_MSG_CONT,<![CDATA['<result_msg>']]>)+12)) - LENGTHB(SUBSTRB(LAST_ACHK_RES_MSG_CONT, INSTRB(LAST_ACHK_RES_MSG_CONT,<![CDATA['</result_msg>']]>)))) AS RESULT_MSG
          FROM CM_1504T C, VW_COM_DLR_INFO A
         WHERE C.SPEC_CD = #{sSpecCd}
           AND C.DEPLOY_VER_NO = #{sDeployVerNo}
           AND NVL(C.DEPLOY_RSLT_CD,'XXXX') <![CDATA[<>]]> '00'
           AND C.DLR_CD = A.DLR_CD
           AND A.DMS_IP_NM IS NOT NULL
        --   AND A.DEPLOY_TARG_YN = 'Y'
           AND 0 = (SELECT COUNT(*) FROM CM_1504T D
                    WHERE D.SPEC_CD = C.SPEC_CD
                    AND   D.DEPLOY_VER_NO <![CDATA[<>]]> C.DEPLOY_VER_NO
                    AND   D.DLR_CD = C.DLR_CD
                    AND   D.DEPLOY_RSLT_CD = '00')
        ORDER BY
        <choose>
            <when test='sort != null'>
                <foreach item="item" index="index" collection="sort" open="" separator="," close="">
                    <choose>
                        <when test='item.field == "dlrNm"'>A.DLR_NM <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                        <when test='item.field == "dlrCd"'>A.DLR_CD <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                        <otherwise>
                            A.DLR_CD ASC
                        </otherwise>
                    </choose>
                </foreach>
            </when>
            <otherwise>
                A.DLR_CD ASC
            </otherwise>
        </choose>
    </select>


    <!-- DEPLOY DEALER 정보 생성  -->
    <insert id="insertDplyDlr" parameterType="DplyDlrVO">
    /* [chn.bhmc.dms.dply.spec.service.dao.SpecMngDAO.insertDplyDlr] */
        INSERT
          INTO CM_1504T(
               SPEC_CD
             , DEPLOY_VER_NO
             , DEPLOY_GRP_ID
             , DLR_CD
             , DEPLOY_EXCP_YN
             , DEPLOY_EXCP_REASON_CONT
             , REG_USR_ID
             , REG_DT
             , UPDT_USR_ID
             , UPDT_DT
             , DEPLOY_PROC_CNT
             , LAST_DEPLOY_PROC_DT
             , DEPLOY_REQ_END_YN
        ) VALUES(
               #{specCd}
             , #{deployVerNo}
             , #{deployGrpId}
             , #{dlrCd}
             , #{deployExcpYn}
             , #{deployExcpReasonCont}
             , #{regUsrId}
             , SYSDATE
             , ''
             , ''
             , #{deployProcCnt}
             , #{lastDeployProcDt}
             , #{deployReqEndYn}
        )
    </insert>


    <!-- DEPLOY DEALER 정보 삭제  -->
    <delete id="deleteDplyDlr" parameterType="DplyDlrVO">
        /* [chn.bhmc.dms.dply.spec.service.dao.SpecMngDAO.deleteDplyDlr] */
        DELETE
          FROM CM_1504T
         WHERE SPEC_CD        = #{specCd}
           AND DEPLOY_VER_NO  = #{deployVerNo}
           AND DEPLOY_GRP_ID  = #{deployGrpId}
           AND DLR_CD         = #{dlrCd}
    </delete>

    <!-- DEALER DEPLOY 제외여부 update -->
    <update id="updateDplyDlrExcp" parameterType="DplyDlrVO">
    /* [chn.bhmc.dms.dply.spec.service.dao.SpecMngDAO.updateSpecBasic] */
        UPDATE CM_1504T
                    SET DEPLOY_EXCP_YN   = #{deployExcpYn}
                      , UPDT_USR_ID      = #{updtUsrId}
                      , UPDT_DT          = SYSDATE
                  WHERE SPEC_CD          = #{specCd}
                    AND DEPLOY_VER_NO    = #{deployVerNo}
                    AND DEPLOY_GRP_ID    = #{deployGrpId}
                    AND DLR_CD           = #{dlrCd}
    </update>


    <!-- DEPLOY GROUP 정보 생성  -->
    <insert id="insertDplyGrp" parameterType="DplyGrpVO">
    /* [chn.bhmc.dms.dply.spec.service.dao.SpecMngDAO.insertDplyGrp] */
        <selectKey keyProperty="deployGrpId" resultType="String" order="BEFORE">
            SELECT 'GROUP' || LPAD(NVL(TO_NUMBER(MAX(SUBSTR(DEPLOY_GRP_ID, 6)))+1, 1), 3, 0)
              FROM CM_1503T
             WHERE 1 = 1
               AND SPEC_CD = #{specCd}
               AND DEPLOY_VER_NO = #{deployVerNo}
        </selectKey>
        INSERT
          INTO CM_1503T(
               SPEC_CD
             , DEPLOY_VER_NO
             , DEPLOY_GRP_ID
             , DEPLOY_PROR_VAL
             , REG_USR_ID
             , REG_DT
             , UPDT_USR_ID
             , UPDT_DT
             , DEPLOY_TARG_DLR_CNT
             , DEPLOY_END_DLR_CNT
             , DEPLOY_START_DT
             , DEPLOY_END_DT
        )VALUES(
               #{specCd            }
             , #{deployVerNo       }
             , #{deployGrpId       }
             , #{deployProrVal     }
             , #{regUsrId}
             , SYSDATE
             , #{updtUsrId         }
             , #{updtDt            }
             , #{deployTargDlrCnt  }
             , #{deployEndDlrCnt  }
             , #{deployStartDt     }
             , #{deployEndDt       }
        )
    </insert>



    <!-- DEPLOY대상딜러건수 UPDATE  -->
    <update id="updateDplyGrpForTargDlrCnt" parameterType="DplyMastVO">
    /* [chn.bhmc.dms.dply.spec.service.dao.SpecMngDAO.updateDplyGrpForTargDlrCnt] */
        UPDATE CM_1503T P
                    SET
                        DEPLOY_TARG_DLR_CNT = (SELECT COUNT(*) FROM CM_1504T C WHERE C.SPEC_CD = P.SPEC_CD AND C.DEPLOY_VER_NO = P.DEPLOY_VER_NO AND C.DEPLOY_GRP_ID = P.DEPLOY_GRP_ID)
                  WHERE SPEC_CD        = #{specCd}
                    AND DEPLOY_VER_NO  = #{deployVerNo}
    </update>




    <!-- SPEC코드를 조건으로 Deploy Master 정보를 조회한다. -->
    <select id="selectDplyGrpByKey" parameterType="SpecMngSearchVO" resultType="DplyGrpVO">
        /* [chn.bhmc.dms.dply.spec.service.dao.SpecMngDAO.selectDplyGrpByKey] */
        SELECT
               SPEC_CD
             , DEPLOY_VER_NO
             , DEPLOY_GRP_ID
             , DEPLOY_PROR_VAL
             , REG_USR_ID
             , REG_DT
             , UPDT_USR_ID
             , UPDT_DT
             , DEPLOY_TARG_DLR_CNT
             , DEPLOY_END_DLR_CNT
             , DEPLOY_START_DT
             , DEPLOY_END_DT
         FROM CM_1503T
        WHERE SPEC_CD = #{sSpecCd}
        <if test='sDeployVerNo != null and sDeployVerNo != ""'>
          AND DEPLOY_VER_NO = #{sDeployVerNo}
        </if>
       ORDER BY DEPLOY_GRP_ID
    </select>


    <!-- SPEC코드를 조건으로 Deploy Dealer 정보를 조회한다. -->
    <select id="selectDplyDlrByKey" parameterType="SpecMngSearchVO" resultType="DplyDlrVO">
        /* [chn.bhmc.dms.dply.spec.service.dao.SpecMngDAO.selectDplyDlrByKey] */
        SELECT
               SPEC_CD
             , DEPLOY_VER_NO
             , DEPLOY_GRP_ID
             , DLR_CD
             , (SELECT DLR_NM FROM VW_COM_DLR_INFO WHERE T.DLR_CD = DLR_CD) DLR_NM
             , DEPLOY_EXCP_YN
             , DEPLOY_EXCP_REASON_CONT
             , REG_USR_ID
             , REG_DT
             , UPDT_USR_ID
             , UPDT_DT
             , DEPLOY_PROC_CNT
             , LAST_DEPLOY_PROC_DT
             , DEPLOY_REQ_END_YN
             , DEPLOY_RSLT_CD
         FROM CM_1504T T
        WHERE SPEC_CD = #{sSpecCd}
        <if test='sDeployVerNo != null and sDeployVerNo != ""'>
          AND DEPLOY_VER_NO = #{sDeployVerNo}
        </if>
        <if test='sDeployGrpId != null and sDeployGrpId != ""'>
          AND DEPLOY_GRP_ID = #{sDeployGrpId}
        </if>
       ORDER BY DLR_CD
    </select>



    <!-- 특정 조건에 해당하는 SPEC MASTER 정보 삭제  -->
    <delete id="deleteSpecMastByCondition" parameterType="HashMap">
        DELETE
          FROM CM_1401T
         WHERE SPEC_CD     = #{specCd}
    </delete>

    <!-- 특정 조건에 해당하는 SPEC SERVICE 정보 삭제  -->
    <delete id="deleteSpecServiceByCondition" parameterType="HashMap">
        DELETE
          FROM CM_1403T
         WHERE SPEC_CD     = #{specCd}
           AND SPEC_TP_NM  = #{specTpNm}
        <if test='seq != null and seq != ""'>
           AND SEQ         = #{seq}
        </if>
    </delete>

    <!-- 특정 조건에 해당하는 SPEC SQL 정보 삭제  -->
    <delete id="deleteSpecSqlByCondition" parameterType="HashMap">
        DELETE
          FROM CM_1404T
         WHERE SPEC_CD     = #{specCd}
           AND SPEC_TP_NM  = #{specTpNm}
        <if test='seq != null and seq != ""'>
           AND SEQ         = #{seq}
        </if>
    </delete>

    <!-- 특정 조건에 해당하는 SPEC PROPERTY 정보 삭제  -->
    <delete id="deleteSpecPrtyByCondition" parameterType="HashMap">
        DELETE
          FROM CM_1405T
         WHERE SPEC_CD     = #{specCd}
           AND SPEC_TP_NM  = #{specTpNm}
        <if test='seq != null and seq != ""'>
           AND SEQ         = #{seq}
        </if>
    </delete>

    <!-- 특정 조건에 해당하는 SPEC FILE 정보 삭제  -->
    <delete id="deleteSpecFileByCondition" parameterType="HashMap">
        DELETE
          FROM CM_1501T
         WHERE SPEC_CD     = #{specCd}
           AND SPEC_TP_NM  = #{specTpNm}
        <if test='seq != null and seq != ""'>
           AND SEQ         = #{seq}
        </if>
    </delete>


    <!-- 특정 조건에 해당하는 SPEC Repository 정보 삭제  -->
    <delete id="deleteSpecRepositoryByCondition" parameterType="HashMap">
        DELETE
          FROM CM_1402T
         WHERE SPEC_CD     = #{specCd}
           AND SPEC_TP_NM  = #{specTpNm}
        <if test='seq != null and seq != ""'>
           AND SEQ         = #{seq}
        </if>
    </delete>


    <!-- 특정 조건에 해당하는 SPEC Command 정보 삭제  -->
    <delete id="deleteSpecCommandByCondition" parameterType="HashMap">
        DELETE
          FROM CM_1511T
         WHERE SPEC_CD     = #{specCd}
        <if test='specTpNm != null and specTpNm != ""'>
           AND SPEC_TP_NM  = #{specTpNm}
        </if>
        <if test='seq != null and seq != ""'>
           AND SEQ         = #{seq}
        </if>
    </delete>


    <!-- 특정 조건에 해당하는 DEPLOY MASTER 정보 삭제  -->
    <delete id="deleteDplyMastByCondition" parameterType="HashMap">
        DELETE
          FROM CM_1502T
         WHERE SPEC_CD        = #{specCd}
        <if test='deployVerNo != null and deployVerNo != ""'>
           AND DEPLOY_VER_NO  = #{deployVerNo}
        </if>
    </delete>

    <!-- 특정 조건에 해당하는 DEPLOY GROUP 정보 삭제 -->
    <delete id="deleteDplyGrpByCondition" parameterType="HashMap">
        DELETE
          FROM CM_1503T
         WHERE SPEC_CD        = #{specCd}
        <if test='deployVerNo != null and deployVerNo != ""'>
           AND DEPLOY_VER_NO  = #{deployVerNo}
        </if>
        <if test='deployGrpId != null and deployGrpId != ""'>
           AND DEPLOY_GRP_ID  = #{deployGrpId}
        </if>
    </delete>

    <!-- 특정 조건에 해당하는 DEPLOY DEALER 정보 삭제  -->
    <delete id="deleteDplyDlrByCondition" parameterType="HashMap">
        DELETE
          FROM CM_1504T
         WHERE SPEC_CD        = #{specCd}
        <if test='deployVerNo != null and deployVerNo != ""'>
           AND DEPLOY_VER_NO  = #{deployVerNo}
        </if>
        <if test='deployGrpId != null and deployGrpId != ""'>
           AND DEPLOY_GRP_ID  = #{deployGrpId}
        </if>
        <if test='dlrCd != null and dlrCd != ""'>
           AND DLR_CD         = #{dlrCd}
        </if>
    </delete>


    <!-- SPEC코드를 조건으로 작성중 상태가 아닌 Deploy Master 의 갯수를 조회한다. -->
    <select id="selectNotNewDplyMastCnt" parameterType="HashMap" resultType="Integer">
        /* [chn.bhmc.dms.dply.spec.service.dao.SpecMngDAO.selectNotNewDplyMastCnt] */
        SELECT COUNT(DEPLOY_STAT_CD) CNT
          FROM CM_1502T
         WHERE SPEC_CD = #{specCd}
           AND DEPLOY_STAT_CD NOT IN ('W')

    </select>


    <!-- SPEC_CD, DEPLOY_VER_NO, DEPLOY_GRP_ID 조건으로 Deploy Current State 정보를 조회한다. -->
    <select id="selectDplyCurrentState" parameterType="SpecMngSearchVO" resultType="DplyCurrentStateVO">
        /* [chn.bhmc.dms.dply.spec.service.dao.SpecMngDAO.selectDplyCurrentState] */
        SELECT
               CASE WHEN A.DEPLOY_RSLT_CD = '00' THEN 'Success'
                    WHEN A.DEPLOY_RSLT_CD IS NOT NULL AND A.DEPLOY_RSLT_CD <![CDATA[<>]]> '00' AND A.DEPLOY_RSLT_CD <![CDATA[<>]]> '12'  THEN 'Deploying Fail'
                    WHEN A.DEPLOY_RSLT_CD IS NOT NULL AND A.DEPLOY_RSLT_CD = '12' THEN 'Connection Fail'
                    WHEN A.DEPLOY_RSLT_CD IS NULL AND A.DEPLOY_RES_TMOUT_YN = 'Y' THEN 'Response Timeout'
                    WHEN A.DEPLOY_RSLT_CD IS NULL AND A.DEPLOY_RES_TMOUT_YN = 'N' AND CNT > 0 THEN 'Running'
                    WHEN A.DEPLOY_RSLT_CD IS NULL AND CNT = 0 THEN 'Ready'
               END AS STATUS
             , CASE WHEN A.DEPLOY_RSLT_CD = '10' THEN 'Completed'
                    WHEN A.DEPLOY_RSLT_CD = '11' THEN 'Failed'
               END AS ROLLBACK_STATUS
             , A.*
         FROM (
                SELECT
                       D.SPEC_CD
                     , D.DEPLOY_VER_NO
                     , D.DEPLOY_GRP_ID
                     , D.DLR_CD
                     , (SELECT DLR_NM FROM VW_COM_DLR_INFO WHERE DLR_CD = D.DLR_CD) AS DLR_NM
                --     , COUNT(*) CNT
                     , SUM(CASE WHEN T.SPEC_CD IS NOT NULL THEN 1
                           ELSE 0 END) AS CNT
                     , SUM(CASE WHEN T.DEPLOY_REQ_TP_CD = 'R' THEN 1
                           ELSE 0 END) AS RETRY_CNT
                     , MIN(T.DEPLOY_RSLT_CD) KEEP (DENSE_RANK LAST ORDER BY (T.DEPLOY_REQ_SEQ) NULLS FIRST) AS DEPLOY_RSLT_CD
                     , MIN(T.DEPLOY_RES_TMOUT_YN) KEEP (DENSE_RANK LAST ORDER BY (T.DEPLOY_REQ_SEQ) NULLS FIRST) AS DEPLOY_RES_TMOUT_YN
                     , MIN(T.DEPLOY_REQ_END_DT) AS START_DT
                     , MAX(T.DEPLOY_RES_RECEIVE_DT) AS END_DT
                     , TRUNC((NVL(MAX(T.DEPLOY_RES_RECEIVE_DT), SYSDATE) -  MIN(T.DEPLOY_REQ_END_DT))*86400,0) AS DURATION
                  FROM CM_1505T T, CM_1504T D
                 WHERE D.SPEC_CD = #{sSpecCd}
                   AND D.DEPLOY_VER_NO = #{sDeployVerNo}
                   AND D.DEPLOY_GRP_ID = #{sDeployGrpId}
                   AND T.SPEC_CD(+) = D.SPEC_CD
                   AND T.DEPLOY_VER_NO(+) = D.DEPLOY_VER_NO
                   AND T.DEPLOY_GRP_ID(+) = D.DEPLOY_GRP_ID
                   AND T.DLR_CD(+) = D.DLR_CD
                GROUP BY D.SPEC_CD, D.DEPLOY_VER_NO, D.DEPLOY_GRP_ID, D.DLR_CD
              ) A

    </select>



    <!-- 특정 조건으로 Deploy History 정보를 조회한다. -->
    <select id="selectDeployHistory" parameterType="DeployHistorySearchVO" resultType="DeployHistoryVO">
        /* [chn.bhmc.dms.dply.spec.service.dao.SpecMngDAO.selectDeployHistory] */
        SELECT A.SPEC_CD AS SPEC_CD,
               A.DEPLOY_VER_NO AS DEPLOY_VER_NO,
               A.SCHEDULE_TP_CD,
               A.DEPLOY_STAT_CD,
               A.DEPLOY_TP_CD,
               A.DEPLOY_START_DT,
               A.DEPLOY_END_DT,
               A.ACHK_FAIL_ALW_CNT,
               A.ALW_FAIL_DMS_CNT,
               (SELECT SPEC_NM FROM CM_1401T B WHERE B.SPEC_CD = A.SPEC_CD) AS SPEC_NM,
               (SELECT SPEC_CONT FROM CM_1401T B WHERE B.SPEC_CD = A.SPEC_CD) AS SPEC_CONT,
               (SELECT MIN(B.DEPLOY_REQ_END_DT)
                  FROM CM_1505T B
                 WHERE B.SPEC_CD = A.SPEC_CD
                   AND B.DEPLOY_VER_NO = A.DEPLOY_VER_NO) AS START_DT,
               (SELECT CASE WHEN MAX(B.DEPLOY_REQ_END_DT) IS NULL THEN NULL ELSE MAX(B.DEPLOY_REQ_END_DT) END
                  FROM CM_1505T B
                 WHERE B.SPEC_CD = A.SPEC_CD
                   AND B.DEPLOY_VER_NO = A.DEPLOY_VER_NO) AS END_DT,
               DECODE(DEPLOY_STAT_CD,'W','Working','N','Ready','R','Running','Y','Completed','Z','Failure','C','Cancel','S','Stopped','') AS STATUS,
               (SELECT COUNT(*) FROM CM_1504T B WHERE B.SPEC_CD = A.SPEC_CD AND B.DEPLOY_VER_NO= A.DEPLOY_VER_NO AND B.DEPLOY_EXCP_YN =  'N') AS DMS_CNT,
               (SELECT COUNT(*) FROM CM_1504T B WHERE B.SPEC_CD = A.SPEC_CD AND B.DEPLOY_VER_NO= A.DEPLOY_VER_NO AND B.DEPLOY_RSLT_CD =  '00') AS SUCESS_CNT,
               (SELECT COUNT(*) FROM CM_1504T B WHERE B.SPEC_CD = A.SPEC_CD AND B.DEPLOY_VER_NO= A.DEPLOY_VER_NO AND NVL(B.DEPLOY_RSLT_CD,'00')  <![CDATA[<>]]>  '00') AS FAIL_CNT,
               (SELECT CASE WHEN MIN(B.DEPLOY_REQ_END_DT) IS NULL THEN '' ELSE TO_CHAR(TRUNC((MAX(B.DEPLOY_REQ_END_DT)-MIN(B.DEPLOY_REQ_END_DT))*86400/3600,0),'09') || ':' || TO_CHAR(TRUNC(MOD((MAX(B.DEPLOY_REQ_END_DT)-MIN(B.DEPLOY_REQ_END_DT))*86400,3600)/60,0),'09') END
                  FROM CM_1505T B
                 WHERE B.SPEC_CD = A.SPEC_CD
                   AND B.DEPLOY_VER_NO = A.DEPLOY_VER_NO) AS DURATION,
               (SELECT CASE WHEN COUNT(*) <![CDATA[>]]> 0 THEN 'Y' ELSE '' END
                  FROM  CM_1504T B
                 WHERE B.SPEC_CD = A.SPEC_CD
                   AND B.DEPLOY_VER_NO = A.DEPLOY_VER_NO
                   AND A.DEPLOY_STAT_CD <![CDATA[<>]]> 'R'
                   AND 0 = (SELECT  COUNT(*) FROM CM_1502T C
                            WHERE   C.SPEC_CD = A.SPEC_CD
                            AND     C.DEPLOY_VER_NO  <![CDATA[>]]>  A.DEPLOY_VER_NO
                            AND     C.DEPLOY_TP_CD = A.DEPLOY_TP_CD)
                   AND NVL(B.DEPLOY_RSLT_CD,'00') <![CDATA[<>]]>  '00') AS REDEPLOY
          FROM CM_1502T A
        <where>
             <if test='sSpecCd != null and sSpecCd != ""'>
                <choose>
                    <when test='@org.apache.commons.lang3.StringUtils@contains(sSpecCd,"*")'>
                        <bind name='sSpecCd' value='@org.apache.commons.lang3.StringUtils@replace(sSpecCd, "*", "%")' />
                         AND A.SPEC_CD LIKE #{sSpecCd}
                    </when>
                    <otherwise>
                         AND A.SPEC_CD = #{sSpecCd}
                    </otherwise>
                </choose>
            </if>

            <if test='sDeployTpCd != null and sDeployTpCd != ""'>
                         AND A.DEPLOY_TP_CD  = #{sDeployTpCd}
            </if>

            <if test='sScheduleTpCd != null and sScheduleTpCd != ""'>
                         AND A.SCHEDULE_TP_CD  = #{sScheduleTpCd}
            </if>

            <if test='sStartDt != null'>
                         AND A.DEPLOY_START_DT <![CDATA[ >= ]]> #{sStartDt}
            </if>
            <if test='sEndDt != null'>
                         AND A.DEPLOY_START_DT <![CDATA[ < ]]> #{sEndDt} + 1
            </if>
        </where>
        ORDER BY SPEC_CD DESC, DEPLOY_VER_NO DESC
    </select>

    <!-- 특정 조건으로 Deploy Report Master 정보를 조회한다. -->
    <select id="selectDeployReportMasterByCondition" parameterType="DeployHistorySearchVO" resultType="DeployReportMasterVO">
        /* [chn.bhmc.dms.dply.spec.service.dao.SpecMngDAO.selectDeployReportMasterByCondition] */
        SELECT
               A.DEPLOY_REQ_SEQ
             , A.DEPLOY_REQ_TP_CD
             , A.SPEC_CD
             , A.DEPLOY_VER_NO
             , A.DEPLOY_GRP_ID
             , A.DLR_CD
             , A.DEPLOY_SEQ
             , A.DEPLOY_REQ_END_DT
             , A.DEPLOY_RES_TMOUT_YN
             , A.DEPLOY_RES_TMOUT_PROC_DT
             , A.DEPLOY_RES_RECEIVE_YN
             , A.DEPLOY_RES_RECEIVE_DT
             , CASE WHEN A.DEPLOY_RSLT_CD = '00' THEN 'Success'
                    WHEN A.DEPLOY_RSLT_CD = '10' THEN 'Fail(Rollback)'
                    WHEN A.DEPLOY_RSLT_CD = '11' THEN 'Fail'
                    WHEN A.DEPLOY_RSLT_CD = '12' THEN 'Connection Fail'
                    WHEN A.DEPLOY_RES_RECEIVE_YN = 'Y' THEN 'Timeout'
               ELSE '' END AS DEPLOY_RSLT_CD
             , B.DEPLOY_RES_SEND_RECEIVE_DT
             , B.DB_FLASHBACK_YN
             , B.FLASHBACK_DT
          FROM CM_1505T A, CM_1506T B
         WHERE A.DEPLOY_REQ_SEQ = B.DEPLOY_REQ_SEQ(+)
           AND A.SPEC_CD = #{sSpecCd}
           AND A.DEPLOY_VER_NO = #{sDeployVerNo}
           AND A.DEPLOY_GRP_ID = #{sDeployGrpId}
           AND A.DLR_CD = #{sDlrCd}
        ORDER BY A.DEPLOY_REQ_END_DT DESC
    </select>

    <!-- 특정 조건으로 Deploy Request History 정보를 조회한다. -->
    <select id="selectDeployReqHistByDlrCd" parameterType="DeployHistorySearchVO" resultType="DeployReportMasterVO">
        /* [chn.bhmc.dms.dply.spec.service.dao.SpecMngDAO.selectDeployReqHistByDlrCd] */
        SELECT
               A.DEPLOY_REQ_SEQ
             , A.DEPLOY_REQ_TP_CD
             , A.SPEC_CD
             , A.DEPLOY_VER_NO
             , A.DEPLOY_GRP_ID
             , A.DLR_CD
             , A.DEPLOY_SEQ
             , A.DEPLOY_REQ_END_DT
             , A.DEPLOY_RES_TMOUT_YN
             , A.DEPLOY_RES_TMOUT_PROC_DT
             , A.DEPLOY_RES_RECEIVE_YN
             , A.DEPLOY_RES_RECEIVE_DT
             , A.DEPLOY_RSLT_CD
             , CASE WHEN A.DEPLOY_RSLT_CD = '00' THEN 'Success'
                    WHEN A.DEPLOY_RSLT_CD = '10' THEN 'Fail(Rollback)'
                    WHEN A.DEPLOY_RSLT_CD = '11' THEN 'Fail'
                    WHEN A.DEPLOY_RSLT_CD = '12' THEN 'Connection Fail'
                    WHEN A.DEPLOY_RES_RECEIVE_YN = 'Y' THEN 'Timeout'
              ELSE '' END AS DEPLOY_RSLT_DISP
          FROM CM_1505T A
         WHERE A.DLR_CD = #{sDlrCd}
        ORDER BY A.DEPLOY_REQ_END_DT DESC
    </select>


    <!-- 특정 조건으로 Deploy Report Detail 정보를 조회한다. -->
    <select id="selectDeployReportDetailByCondition" parameterType="DeployHistorySearchVO" resultType="DeployReportDetailVO">
        /* [chn.bhmc.dms.dply.spec.service.dao.SpecMngDAO.selectDeployReportDetailByCondition] */
        SELECT A.SPEC_TP_NM AS SPEC_TP_NM,
                  A.SEQ AS SEQ,
                  A.DEPLOY_PROC_YN AS DEPLOY_PROC_YN,
                  A.DEPLOY_PROC_DT AS DEPLOY_PROC_DT,
                  A.DEPLOY_RSLT_CD,
                  A.DEPLOY_RSLT_MESG_CONT,
                  B.OPER_CMD_NM AS OPER_CMD_NM,
                  B.DEPLOY_ITEM AS DEPLOY_ITEM,
                  A.ROLLBACK_RSLT_CD,
                  A.ROLLBACK_RSLT_MESG_CONT
        FROM  CM_1507T A,
              (SELECT 2 AS PRIORITY,
                          SPEC_TP_NM,
                          SEQ,
                          OPER_CMD_NM,
                          REPO_URL_NM AS DEPLOY_ITEM
               FROM   CM_1402T
               WHERE SPEC_CD = #{sSpecCd}
               UNION ALL
               SELECT  6 AS PRIORITY,
                          SPEC_TP_NM,
                          DEPLOY_PROR_VAL AS SEQ,
                          OPER_CMD_NM,
                          SYMBOLIC_NM || '/' || BUNDLE_VER_NO  AS DEPLOY_ITEM
               FROM   CM_1403T
               WHERE SPEC_CD = #{sSpecCd}
               UNION ALL
               SELECT 3 AS PRIORITY,
                          SPEC_TP_NM,
                          DEPLOY_PROR_VAL AS SEQ,
                          DECODE(UPPER(TRIM(DBMS_LOB.SUBSTR(SQL_TEXT_CONT,6))),
                                     'INSERT','DML',
                                     'UPDATE','DML',
                                     'DELETE','DML',
                                     'DDL') AS OPER_CMD_NM,
                          DBMS_LOB.SUBSTR(SQL_TEXT_CONT,3400,1) || '...' AS DEPLOY_ITEM
               FROM CM_1404T
               WHERE SPEC_CD = #{sSpecCd}
               UNION ALL
               SELECT 4 AS PRIORITY,
                          SPEC_TP_NM,
                          SEQ,
                         'Add/Change' OPER_CMD_NM,
                         PRTY_FILE_NM || ' : Key=' || PRTY_KEY_NM || ',Value=' || PRTY_KEY_VAL AS DEPLOY_ITEM
               FROM CM_1405T
               WHERE SPEC_CD = #{sSpecCd}
               UNION ALL
               SELECT DECODE(SPEC_TP_NM,'ANTEJOB',1,7) AS PRIORITY,
                         SPEC_TP_NM,
                         DEPLOY_PROR_VAL AS SEQ,
                         'Execution' AS OPER_CMD_NM,
                         OPER_CMD_NM AS DEPLOY_ITEM
               FROM CM_1511T
               WHERE SPEC_CD = #{sSpecCd}
               UNION ALL
               SELECT 5 AS PRIORITY,
                          SPEC_TP_NM,
                         SEQ,
                         'Download' AS OPER_CMD_NM,
                          SRC_FILE_PATH_NM || '--->' || TARG_FILE_PATH_NM AS DEPLOY_ITEM
               FROM CM_1501T
               WHERE SPEC_CD = #{sSpecCd}) B
        WHERE  A.SPEC_CD = #{sSpecCd}
        AND    A.DEPLOY_REQ_SEQ = #{sDeployReqSeq}
        AND    A.SPEC_TP_NM = B.SPEC_TP_NM
        AND    A.SEQ = B.SEQ
        ORDER  BY B.PRIORITY,SEQ
    </select>


    <!-- REPOSITORY 정보를 조회한다. -->
    <select id="selectRepository" parameterType="SpecMngSearchVO" resultType="RepositoryVO">
        /* [chn.bhmc.dms.dply.spec.service.dao.SpecMngDAO.selectRepository] */
        SELECT
               SEQ
             , REPO_URL_NM
             , REPO_URL_CONT
             , REG_USR_ID
             , REG_DT
             , UPDT_USR_ID
             , UPDT_DT
          FROM CM_1614T
        ORDER BY SEQ
    </select>

    <!-- REPOSITORY 정보 생성  -->
    <insert id="insertRepository" parameterType="RepositoryVO">
    /* [chn.bhmc.dms.dply.spec.service.dao.DplyCmmDAO.insertRepository] */
        <selectKey keyProperty="seq" resultType="Integer" order="BEFORE">
            SELECT MAX(SEQ) + 1
              FROM CM_1614T
             WHERE 1 = 1
        </selectKey>
        INSERT
          INTO CM_1614T(
               SEQ
             , REPO_URL_NM
             , REPO_URL_CONT
             , REG_USR_ID
             , REG_DT
             , UPDT_USR_ID
             , UPDT_DT
        )VALUES(
               #{seq         }
             , #{repoUrlNm   }
             , #{repoUrlCont }
             , #{regUsrId    }
             , SYSDATE
             , ''
             , ''
        )
    </insert>

    <!-- REPOSITORY 정보 수정  -->
    <update id="updateRepository" parameterType="RepositoryVO">
    /* [chn.bhmc.dms.dply.spec.service.dao.DplyCmmDAO.updateRepository] */
        UPDATE CM_1614T
                    SET REPO_URL_NM    = #{repoUrlNm    }
                      , REPO_URL_CONT  = #{repoUrlCont  }
                      , UPDT_USR_ID    = #{updtUsrId    }
                      , UPDT_DT        = SYSDATE
                  WHERE SEQ            = #{seq          }
    </update>


    <!-- REPOSITORY 정보 삭제  -->
    <delete id="deleteRepository" parameterType="RepositoryVO">
    /* [chn.bhmc.dms.dply.spec.service.dao.DplyCmmDAO.deleteRepository] */
        DELETE
          FROM CM_1614T
         WHERE SEQ      = #{seq}
    </delete>

    <!-- APP 정보를 조회한다. -->
    <select id="selectAppInfo" parameterType="SpecMngSearchVO" resultType="SpecBundleVO">
        /* [chn.bhmc.dms.dply.spec.service.dao.SpecMngDAO.selectAppInfo] */
        SELECT SYMBOLIC_NM
             , BUNDLE_NM
             , BUNDLE_VER_NO
             , REG_DT
             , UPDT_USR_ID
             , UPDT_DT
          FROM CM_1615T
    </select>

    <!-- APP 정보 생성  -->
    <insert id="insertAppInfo" parameterType="SpecBundleVO">
    /* [chn.bhmc.dms.dply.spec.service.dao.SpecMngDAO.insertAppInfo] */
        INSERT
          INTO CM_1615T(
               SYMBOLIC_NM
             , BUNDLE_NM
             , BUNDLE_VER_NO
             , REG_USR_ID
             , REG_DT
             , UPDT_USR_ID
             , UPDT_DT
        )VALUES(
               #{symbolicNm  }
             , #{bundleNm    }
             , #{bundleVerNo }
             , #{regUsrId    }
             , SYSDATE
             , ''
             , ''
        )
    </insert>

    <!-- APP 정보 수정  -->
    <update id="updateAppInfo" parameterType="SpecBundleVO">
    /* [chn.bhmc.dms.dply.spec.service.dao.SpecMngDAO.updatetAppInfo] */
        UPDATE CM_1615T
                    SET BUNDLE_NM      = #{bundleNm   }
                      , BUNDLE_VER_NO  = #{bundleVerNo}
                      , UPDT_USR_ID    = #{updtUsrId  }
                      , UPDT_DT        = SYSDATE
                  WHERE SYMBOLIC_NM    = #{symbolicNm }
    </update>


    <!-- APP 정보 삭제  -->
    <delete id="deleteAppInfo" parameterType="SpecBundleVO">
    /* [chn.bhmc.dms.dply.spec.service.dao.SpecMngDAO.deletetAppInfo] */
        DELETE
          FROM CM_1615T
         WHERE SYMBOLIC_NM   = #{symbolicNm}
    </delete>

    <!-- 특정 대사일자를 조건으로 대사요약 정보를 조회한다. -->
    <select id="selectCompareBundleSummaryList" parameterType="CompareBundleSearchVO" resultType="CompareBundleSummaryVO">
        /* [chn.bhmc.dms.dply.spec.service.dao.SpecMngDAO.selectCompareBundleSummaryList] */
        SELECT * FROM (
            SELECT ROWNUM AS RNUM, T1.* FROM (
            SELECT * FROM (
                SELECT DLR_CD
                     , DLR_NM
                     , STD_DT
                     , COMPARE_TRGT_CNT
                     , DEPLOY_EXIST
                     , ACCORD
                     , NOT_ACCORD
                     , ACCORD_NOT_ACTIVE
                     , MISS
                     , COMPARE_DT
                     , CASE WHEN COMPARE_TRGT_CNT = ACCORD THEN 'ACCORD'
                               WHEN ACCORD+NOT_ACCORD+ACCORD_NOT_ACTIVE+MISS = 0 THEN 'COMP_MISS'
                               WHEN NOT_ACCORD+ACCORD_NOT_ACTIVE+MISS > 0 THEN 'DISACCORD' END AS COMPARE_RESULT
                     , CASE WHEN DEPLOY_EXIST > 0 THEN 'Y' ELSE 'N' END AS DEPLOY_HIST
                FROM (SELECT * FROM
                      (
                      SELECT C.DLR_CD
                           , C.DLR_NM
                           , #{sStdDt} AS STD_DT
                           , B.COMPARE_DT
                           , (SELECT COUNT(*) FROM CM_1611T B WHERE B.STD_DT = #{sStdDt}) AS COMPARE_TRGT_CNT
                           , (SELECT COUNT(*) FROM CM_1506T E WHERE E.DLR_CD = C.DLR_CD AND ROWNUM = 1) AS DEPLOY_EXIST
                           , SUM(DECODE(COMPARE_RSLT_CD, 'SS', 1, 0)) AS ACCORD
                           , SUM(DECODE(COMPARE_RSLT_CD, 'FF', 1, 0)) AS NOT_ACCORD
                           , SUM(DECODE(COMPARE_RSLT_CD, 'SF', 1, 0)) AS ACCORD_NOT_ACTIVE
                           , SUM(DECODE(COMPARE_RSLT_CD, 'NN', 1, 0)) AS MISS
                        FROM CM_1611T A, CM_1613T B, VW_COM_DLR_INFO C
                       WHERE A.STD_DT(+) = #{sStdDt}
                         AND B.SYMBOLIC_NM = A.SYMBOLIC_NM(+)
                         AND B.STD_DT = A.STD_DT(+)
                         AND C.DLR_CD = B.DLR_CD(+)
                         AND C.DEPLOY_TARG_YN = 'Y'
                         AND B.COMPARE_DT(+) = #{sCompareDt}
                      GROUP BY C.DLR_CD, C.DLR_NM, B.COMPARE_DT
                      )
         <if test='sDlrCd != null and sDlrCd != ""'>
            <choose>
                <when test='@org.apache.commons.lang3.StringUtils@contains(sDlrCd,"*")'>
                    <bind name='sDlrCd' value='@org.apache.commons.lang3.StringUtils@replace(sDlrCd, "*", "%")' />
                         WHERE DLR_CD LIKE #{sDlrCd}
                </when>
                <otherwise>
                         WHERE DLR_CD = #{sDlrCd}
                </otherwise>
            </choose>
        </if>
                     )
               ORDER BY DLR_CD
             )
            <where>
                <if test='sCompareResult != null and sCompareResult != ""'>
                    COMPARE_RESULT = #{sCompareResult}
                </if>
            </where>
            ) T1
            <where>
                <if test='firstIndex != -1 and lastIndex != -1'>
                    ROWNUM <![CDATA[<=]]> #{lastIndex}
                </if>
            </where>
        )
        <where>
            <if test='firstIndex != -1 and lastIndex != -1'>
                RNUM > #{firstIndex}
            </if>
        </where>

    </select>

    <!-- 특정 대사일자를 조건으로 대사요약 정보를 조회한다. -->
    <select id="selectCompareBundleSummaryListCnt" parameterType="CompareBundleSearchVO" resultType="int">
        /* [chn.bhmc.dms.dply.spec.service.dao.SpecMngDAO.selectCompareBundleSummaryListCnt] */
        SELECT COUNT(*) AS VALUE FROM (
            SELECT CASE WHEN COMPARE_TRGT_CNT = ACCORD THEN 'ACCORD'
                        WHEN ACCORD+NOT_ACCORD+ACCORD_NOT_ACTIVE+MISS = 0 THEN 'COMP_MISS'
                        WHEN NOT_ACCORD+ACCORD_NOT_ACTIVE+MISS > 0 THEN 'DISACCORD' END AS COMPARE_RESULT
              FROM (SELECT * FROM
                      (
                      SELECT C.DLR_CD
                           , C.DLR_NM
                           , #{sStdDt} AS STD_DT
                           , B.COMPARE_DT
                           , (SELECT COUNT(*) FROM CM_1611T B WHERE B.STD_DT = #{sStdDt}) AS COMPARE_TRGT_CNT
                           , (SELECT COUNT(*) FROM CM_1506T E WHERE E.DLR_CD = C.DLR_CD AND ROWNUM = 1) AS DEPLOY_EXIST
                           , SUM(DECODE(COMPARE_RSLT_CD, 'SS', 1, 0)) AS ACCORD
                           , SUM(DECODE(COMPARE_RSLT_CD, 'FF', 1, 0)) AS NOT_ACCORD
                           , SUM(DECODE(COMPARE_RSLT_CD, 'SF', 1, 0)) AS ACCORD_NOT_ACTIVE
                           , SUM(DECODE(COMPARE_RSLT_CD, 'NN', 1, 0)) AS MISS
                        FROM CM_1611T A, CM_1613T B, VW_COM_DLR_INFO C
                       WHERE A.STD_DT(+) = #{sStdDt}
                         AND B.SYMBOLIC_NM = A.SYMBOLIC_NM(+)
                         AND B.STD_DT = A.STD_DT(+)
                         AND C.DLR_CD = B.DLR_CD(+)
                         AND C.DEPLOY_TARG_YN = 'Y'
                         AND B.COMPARE_DT(+) = #{sCompareDt}
                      GROUP BY C.DLR_CD, C.DLR_NM, B.COMPARE_DT
                      )
         <if test='sDlrCd != null and sDlrCd != ""'>
            <choose>
                <when test='@org.apache.commons.lang3.StringUtils@contains(sDlrCd,"*")'>
                    <bind name='sDlrCd' value='@org.apache.commons.lang3.StringUtils@replace(sDlrCd, "*", "%")' />
                         WHERE DLR_CD LIKE #{sDlrCd}
                </when>
                <otherwise>
                         WHERE DLR_CD = #{sDlrCd}
                </otherwise>
            </choose>
        </if>
                     )
                 )
            <where>
                <if test='sCompareResult != null and sCompareResult != ""'>
                    COMPARE_RESULT = #{sCompareResult}
                </if>
            </where>

    </select>

    <!-- 특정 대사일자를 조건으로 대사결과 요약 정보를 조회한다. -->
    <select id="selectCompareBundleSummaryByResult" parameterType="CompareBundleSearchVO" resultType="CompareBundleSummaryVO">
        /* [chn.bhmc.dms.dply.spec.service.dao.SpecMngDAO.selectCompareBundleSummaryByResult] */
        SELECT MAX(DECODE(TYPE,'TOT_DMS_CNT',CNT,0)) AS TOT_DMS_CNT,
               MAX(DECODE(TYPE,'COMPLETE_DMS_CNT',CNT,0)) AS COMPLETED_DMS_CNT,
               MAX(DECODE(TYPE,'TOT_DMS_CNT',CNT,0))-MAX(DECODE(TYPE,'COMPLETE_DMS_CNT',CNT,0))  AS UNCOMPLETED_DMS_CNT,
               MAX(DECODE(TYPE,'ACCORD_DMS_CNT',CNT,0)) AS ACCORD_DMS_CNT,
               MAX(DECODE(TYPE,'COMPLETE_DMS_CNT',CNT,0))-MAX(DECODE(TYPE,'ACCORD_DMS_CNT',CNT,0)) AS DISACCORED_DMS_CNT
        FROM
        (
        SELECT 'TOT_DMS_CNT' AS TYPE, COUNT(*) AS CNT
        FROM   VW_COM_DLR_INFO
        WHERE DEPLOY_TARG_YN = 'Y'
        UNION ALL
        SELECT 'COMPLETE_DMS_CNT' AS TYPE, COUNT(DISTINCT DLR_CD) AS CNT
        FROM   CM_1613T
        WHERE STD_DT= #{sStdDt}
        AND     COMPARE_DT = #{sCompareDt}
        UNION ALL
        SELECT 'ACCORD_DMS_CNT' AS TYPE, COUNT(DISTINCT DLR_CD) AS CNT
        FROM   CM_1613T A
        WHERE 0 = (SELECT COUNT(*) FROM CM_1613T B WHERE COMPARE_RSLT_CD IN ('NN','SF','FF') AND B.DLR_CD = A.DLR_CD AND B.STD_DT= #{sStdDt} AND B.COMPARE_DT = #{sCompareDt})
        AND     A.STD_DT= #{sStdDt}
        AND     A.COMPARE_DT = #{sCompareDt}
        )
    </select>


    <!-- 특정 대사일자를 조건으로 대사대상목록을 조회한다. -->
    <select id="selectCompareTargetBundleList" parameterType="CompareBundleSearchVO" resultType="CompareTargetBundleVO">
        /* [chn.bhmc.dms.dply.spec.service.dao.SpecMngDAO.selectCompareTargetBundleList] */
        SELECT ROWNUM AS RNUM
             , T.*
          FROM (
                SELECT STD_DT
                     , SYMBOLIC_NM
                     , BUNDLE_VER_NO
                     , BUNDLE_CONT
                  FROM CM_1611T
                 WHERE STD_DT = #{sStdDt}
                ORDER BY SYMBOLIC_NM, BUNDLE_VER_NO
        ) T
    </select>

    <!-- 특정 대사일자, Dealer Code를 조건으로 대사 결과를 조회한다. -->
    <select id="selectCompareRsltList" parameterType="CompareBundleSearchVO" resultType="CompareResultVO">
        /* [chn.bhmc.dms.dply.spec.service.dao.SpecMngDAO.selectCompareRsltList] */
        SELECT ROWNUM AS RNUM
             , T.*
          FROM (
                SELECT STD_DT
                     , COMPARE_DT
                     , DLR_CD
                     , SYMBOLIC_NM
                     , BUNDLE_VER_NO
                --     , DECODE(COMPARE_RSLT_CD, 'SS', 'Success', 'SF', 'Status Error', 'FF', 'Version Discord', 'NN', 'Not Exist', '') AS COMPARE_RSLT_CD
                     , COMPARE_RSLT_CD
                     , DECODE(DMS_BUNDLE_VER_NO, 'None', '', DMS_BUNDLE_VER_NO) AS DMS_BUNDLE_VER_NO
                     , (
                       SELECT DMS_BUNDLE_STAT_CONT
                         FROM CM_1612T S
                        WHERE S.STD_DT              = T.STD_DT
                          AND S.COMPARE_DT          = T.COMPARE_DT
                          AND S.DLR_CD              = T.DLR_CD
                          AND S.SYMBOLIC_NM         = T.SYMBOLIC_NM
                          AND S.BUNDLE_VER_NO       = T.BUNDLE_VER_NO
                          AND S.DMS_BUNDLE_VER_NO   = T.DMS_BUNDLE_VER_NO
                       ) AS DMS_BUNDLE_STAT_CONT
                  FROM CM_1613T T
                 WHERE STD_DT = #{sStdDt}
                   AND DLR_CD = #{sDlrCd}
                   AND COMPARE_DT = #{sCompareDt}
                ORDER BY SYMBOLIC_NM, DMS_BUNDLE_VER_NO
        ) T
    </select>

    <!-- 특정 대사일자를 조건으로 OBR 번들 목록을 조회한다. -->
    <select id="selectOBRBundleForCompList" parameterType="CompareBundleSearchVO" resultType="OBRBundleForCompVO">
        /* [chn.bhmc.dms.dply.spec.service.dao.SpecMngDAO.selectOBRBundleForCompList] */
        SELECT ROWNUM AS RNUM
             , T.*
          FROM (
                SELECT STD_DT
                     , SYMBOLIC_NM
                     , BUNDLE_VER_NO
                     , BUNDLE_CONT
                     , REG_USR_ID
                     , REG_DT
                     , UPDT_USR_ID
                     , UPDT_DT
                  FROM CM_1611T
                 WHERE STD_DT = #{sStdDt}
                ORDER BY SYMBOLIC_NM, BUNDLE_VER_NO
               ) T
    </select>

    <!-- 대사대상 테이블에서 가장 최근의 대사일자를 조회한다. -->
    <select id="selectMaxCompareTargetStdDt" parameterType="CompareBundleSearchVO" resultType="CompareBundleSummaryVO">
        /* [chn.bhmc.dms.dply.spec.service.dao.SpecMngDAO.selectMaxCompareTargetStdDt] */
        SELECT
               MAX(DECODE(TYPE, 'COMPARE_DT', TARGET_DT)) AS COMPARE_DT
             , MAX(DECODE(TYPE, 'STD_DT', TARGET_DT)) AS STD_DT
          FROM (
                SELECT 'COMPARE_DT' AS TYPE
                     , MAX(R.COMPARE_DT) AS TARGET_DT
                  FROM CM_1613T R
                 WHERE R.STD_DT =
                       (
                        SELECT MAX(S.STD_DT) AS STD_DT
                          FROM CM_1611T S
                         WHERE S.STD_DT <![CDATA[<=]]> #{sStdDt}
                      )
                UNION ALL
                SELECT 'STD_DT' AS TYPE
                     , MAX(S.STD_DT) AS TARGET_DT
                  FROM CM_1611T S
                 WHERE S.STD_DT <![CDATA[<=]]> #{sStdDt}
              )
    </select>

    <!--  대사대상 정보 생성  -->
    <insert id="insertOBRBundleForComp" parameterType="OBRBundleForCompVO">
    /* [chn.bhmc.dms.dply.spec.service.dao.SpecMngDAO.insertOBRBundleForComp] */
        INSERT
          INTO CM_1611T(
               STD_DT
             , SYMBOLIC_NM
             , BUNDLE_VER_NO
             , BUNDLE_CONT
             , REG_USR_ID
             , REG_DT
             , UPDT_USR_ID
             , UPDT_DT
        )VALUES(
               #{stdDt        }
             , #{symbolicNm   }
             , #{bundleVerNo  }
             , #{bundleCont   }
             , #{regUsrId     }
             , SYSDATE
             , ''
             , ''
        )
    </insert>

    <!-- 대사대상 정보 수정  -->
    <update id="updateOBRBundleForComp" parameterType="OBRBundleForCompVO">
    /* [chn.bhmc.dms.dply.spec.service.dao.SpecMngDAO.updateOBRBundleForComp] */
        UPDATE CM_1611T
                    SET BUNDLE_CONT       = #{bundleCont }
                      , UPDT_USR_ID       = #{updtUsrId  }
                      , UPDT_DT           = SYSDATE
                  WHERE STD_DT            = #{stdDt      }
                    AND SYMBOLIC_NM       = #{symbolicNm }
                    AND BUNDLE_VER_NO     = #{bundleVerNo}
    </update>


    <!--  대사대상 정보 삭제  -->
    <delete id="deleteOBRBundleForComp" parameterType="OBRBundleForCompVO">
        /* [chn.bhmc.dms.dply.spec.service.dao.SpecMngDAO.updateOBRBundleForComp] */
        DELETE
          FROM CM_1611T
         WHERE STD_DT            = #{stdDt      }
           AND SYMBOLIC_NM       = #{symbolicNm }
           AND BUNDLE_VER_NO     = #{bundleVerNo}
    </delete>


    <!-- Duplication SPEC Bundle 정보 생성  -->
    <insert id="insertSpecBundleForDup" parameterType="SpecBasicVO">
    /* [chn.bhmc.dms.dply.spec.service.dao.SpecMngDAO.insertSpecBundleForDup] */
        INSERT
          INTO CM_1403T(
               SPEC_CD
             , SPEC_TP_NM
             , SEQ
             , OPER_CMD_NM
             , OPER_TRY_CNT
             , BUNDLE_GRP_ID
             , BUNDLE_ATFT_ID
             , BUNDLE_VER_NO
             , FAIL_AFT_CTNU_PGSS_YN
             , FAIL_AFT_ROLLBACK_YN
             , ROLLBACK_OPER_CMD_NM
             , ROLLBACK_PROR_VAL
             , REG_USR_ID
             , REG_DT
             , UPDT_USR_ID
             , UPDT_DT
             , SYMBOLIC_NM
             , BUNDLE_NM
             , DEPLOY_PROR_VAL
             , SRC_FILE_PATH_NM
             , TARG_FILE_PATH_NM
        )
        SELECT
               #{specCd}
             , SPEC_TP_NM
             , SEQ
             , OPER_CMD_NM
             , OPER_TRY_CNT
             , BUNDLE_GRP_ID
             , BUNDLE_ATFT_ID
             , BUNDLE_VER_NO
             , FAIL_AFT_CTNU_PGSS_YN
             , FAIL_AFT_ROLLBACK_YN
             , ROLLBACK_OPER_CMD_NM
             , ROLLBACK_PROR_VAL
             , #{regUsrId            }
             , SYSDATE
             , ''
             , ''
             , SYMBOLIC_NM
             , BUNDLE_NM
             , DEPLOY_PROR_VAL
             , SRC_FILE_PATH_NM
             , TARG_FILE_PATH_NM
        FROM CM_1403T
       WHERE SPEC_CD = #{srcSpecCd}
    </insert>

    <!-- Duplication SPEC Repository 정보 생성  -->
   <!--<insert id="insertSpecRepositoryForDup" parameterType="SpecBasicVO">
    /* [chn.bhmc.dms.dply.spec.service.dao.SpecMngDAO.insertSpecRepositoryForDup] */
        INSERT
          INTO CM_1402T(
               SPEC_CD
             , SPEC_TP_NM
             , SEQ
             , OPER_CMD_NM
             , OPER_TRY_CNT
             , REPO_URL_NM
             , FAIL_AFT_CTNU_PGSS_YN
             , FAIL_AFT_ROLLBACK_YN
             , ROLLBACK_OPER_CMD_NM
             , REG_USR_ID
             , REG_DT
             , UPDT_USR_ID
             , UPDT_DT
        )
        SELECT
               #{specCd}
             , SPEC_TP_NM
             , SEQ
             , OPER_CMD_NM
             , OPER_TRY_CNT
             , REPO_URL_NM
             , FAIL_AFT_CTNU_PGSS_YN
             , FAIL_AFT_ROLLBACK_YN
             , ROLLBACK_OPER_CMD_NM
             , #{regUsrId            }
             , SYSDATE
             , ''
             , ''
        FROM CM_1402T
       WHERE SPEC_CD = #{srcSpecCd}
    </insert> -->

    <!-- Duplication SPEC Command 정보 생성  -->
    <insert id="insertSpecCommandForDup" parameterType="SpecBasicVO">
    /* [chn.bhmc.dms.dply.spec.service.dao.SpecMngDAO.insertSpecCommandForDup] */
        INSERT
          INTO CM_1511T(
               SPEC_CD
             , SPEC_TP_NM
             , SEQ
             , OPER_CMD_NM
             , OPER_CMD_ENV_CONT
             , OPER_DIR_NM
             , SUCCESS_DECISION_STR
             , FAIL_DECISION_STR
             , FAIL_AFT_CTNU_PGSS_YN
             , FAIL_AFT_ROLLBACK_YN
             , ROLLBACK_OPER_CMD_NM
             , ROLLBACK_OPER_CMD_ENV_CONT
             , ROLLBACK_OPER_DIR_NM
             , REG_USR_ID
             , REG_DT
             , UPDT_USR_ID
             , UPDT_DT
             , DEPLOY_PROR_VAL
        )
        SELECT
              #{specCd}
             , SPEC_TP_NM
             , SEQ
             , OPER_CMD_NM
             , OPER_CMD_ENV_CONT
             , OPER_DIR_NM
             , SUCCESS_DECISION_STR
             , FAIL_DECISION_STR
             , FAIL_AFT_CTNU_PGSS_YN
             , FAIL_AFT_ROLLBACK_YN
             , ROLLBACK_OPER_CMD_NM
             , ROLLBACK_OPER_CMD_ENV_CONT
             , ROLLBACK_OPER_DIR_NM
             , #{regUsrId            }
             , SYSDATE
             , ''
             , ''
             , DEPLOY_PROR_VAL
        FROM CM_1511T
       WHERE SPEC_CD = #{srcSpecCd}
    </insert>


    <!-- Duplication SPEC SQL 정보 생성  -->
    <insert id="insertSpecSqlForDup" parameterType="SpecBasicVO">
    /* [chn.bhmc.dms.dply.spec.service.dao.SpecMngDAO.insertSpecSqlForDup] */
        INSERT
          INTO CM_1404T(
               SPEC_CD
             , SPEC_TP_NM
             , SEQ
             , SQL_TEXT_CONT
             , OPER_TRY_CNT
             , FAIL_AFT_CTNU_PGSS_YN
             , FAIL_AFT_ROLLBACK_YN
             , ROLLBACK_SQL_TEXT_CONT
             , ROLLBACK_PROR_VAL
             , REG_USR_ID
             , REG_DT
             , UPDT_USR_ID
             , UPDT_DT
             , DEPLOY_PROR_VAL
        )
        SELECT
               #{specCd}
             , SPEC_TP_NM
             , SEQ
             , SQL_TEXT_CONT
             , OPER_TRY_CNT
             , FAIL_AFT_CTNU_PGSS_YN
             , FAIL_AFT_ROLLBACK_YN
             , ROLLBACK_SQL_TEXT_CONT
             , ROLLBACK_PROR_VAL
             , #{regUsrId}
             , SYSDATE
             , ''
             , ''
             , DEPLOY_PROR_VAL
        FROM CM_1404T
       WHERE SPEC_CD = #{srcSpecCd}
    </insert>


    <!-- Duplication SPEC PROPERTY 정보 생성  -->
    <insert id="insertSpecPrtyForDup" parameterType="SpecBasicVO">
    /* [chn.bhmc.dms.dply.spec.service.dao.SpecMngDAO.insertSpecPrtyForDup] */
        INSERT
          INTO CM_1405T(
               SPEC_CD
             , SPEC_TP_NM
             , SEQ
             , OPER_TRY_CNT
             , PRTY_FILE_NM
             , PRTY_KEY_NM
             , PRTY_KEY_VAL
             , FAIL_AFT_CTNU_PGSS_YN
             , FAIL_AFT_ROLLBACK_YN
             , PRTY_FILE_TP_NM
             , REG_USR_ID
             , REG_DT
             , UPDT_USR_ID
             , UPDT_DT
        )
        SELECT
               #{specCd}
             , SPEC_TP_NM
             , SEQ
             , OPER_TRY_CNT
             , PRTY_FILE_NM
             , PRTY_KEY_NM
             , PRTY_KEY_VAL
             , FAIL_AFT_CTNU_PGSS_YN
             , FAIL_AFT_ROLLBACK_YN
             , PRTY_FILE_TP_NM
             , #{regUsrId}
             , SYSDATE
             , ''
             , ''
        FROM CM_1405T
       WHERE SPEC_CD = #{srcSpecCd}
    </insert>

    <!-- Duplication SPEC FILE 정보 생성  -->
    <insert id="insertSpecFileForDup" parameterType="SpecBasicVO">
    /* [chn.bhmc.dms.dply.spec.service.dao.SpecMngDAO.insertSpecFileForDup] */
        INSERT
          INTO CM_1501T(
               SPEC_CD
             , SPEC_TP_NM
             , SEQ
             , OPER_TRY_CNT
             , SRC_FILE_PATH_NM
             , TARG_FILE_PATH_NM
             , DLR_CD_AUTO_ADD_YN
             , FAIL_AFT_CTNU_PGSS_YN
             , FAIL_AFT_ROLLBACK_YN
             , BAK_TARG_FILE_PATH_NM
             , REG_USR_ID
             , REG_DT
             , UPDT_USR_ID
             , UPDT_DT
        )
        SELECT
               #{specCd}
             , SPEC_TP_NM
             , SEQ
             , OPER_TRY_CNT
             , SRC_FILE_PATH_NM
             , TARG_FILE_PATH_NM
             , DLR_CD_AUTO_ADD_YN
             , FAIL_AFT_CTNU_PGSS_YN
             , FAIL_AFT_ROLLBACK_YN
             , BAK_TARG_FILE_PATH_NM
             , #{regUsrId}
             , SYSDATE
             , ''
             , ''
        FROM CM_1501T
       WHERE SPEC_CD = #{srcSpecCd}
    </insert>


</mapper>