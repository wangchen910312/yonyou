<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="chn.bhmc.dms.sal.fin.service.dao.PayInfoOutBoundDAO">
    
    <!-- 목록 갯수  -->
    <select id="selectPayInfosByConditionCnt" parameterType="PayInfoOutBoundSearchVO" resultType="int">
    /* [chn.bhmc.dms.sal.fin.service.dao.PayInfoOutBoundDAO.selectPayInfosByConditionCnt] */
        SELECT COUNT(*)
          FROM SA_0451T A
         LEFT OUTER JOIN (
                           SELECT DLR_CD, FIN_DOC_NO, MAX(RCT_DT) AS RCT_DT
                             FROM SA_0452T
                            WHERE 1=1
                            <if test='sRctFromDt != null'>
                              AND RCT_DT <![CDATA[ >= ]]> #{sRctFromDt}
                            </if>
                            <if test='sRctToDt != null'>
                              AND RCT_DT-1 <![CDATA[ <= ]]> #{sRctToDt}
                            </if>
                            GROUP BY DLR_CD, FIN_DOC_NO
                           ) B
            ON A.DLR_CD = B.DLR_CD
           AND A.FIN_DOC_NO = B.FIN_DOC_NO
         WHERE 1 = 1
         <if test='sDlrCd != null and sDlrCd != ""'>
           AND A.DLR_CD = #{sDlrCd}
         </if>
         <if test='sFinDocNo != null and sFinDocNo != ""'>
           AND A.FIN_DOC_NO = #{sFinDocNo}
         </if>
         <if test='sRctFromDt != null'>
           AND B.RCT_DT <![CDATA[ >= ]]> #{sRctFromDt}
         </if>
         <if test='sRctToDt != null'>
           AND B.RCT_DT-1 <![CDATA[ <= ]]> #{sRctToDt}
         </if>
         <if test='sVinNo != null and sVinNo != ""'>
           AND A.VIN_NO LIKE '%'||UPPER(#{sVinNo})||'%'
         </if>
         <if test='sJobContractNo != null and sJobContractNo != ""'>
             <choose>
               <when test='@org.apache.commons.lang3.StringUtils@contains(sJobContractNo,"*")'>
                 <bind name='sJobContractNo' value='@org.apache.commons.lang3.StringUtils@replace(sJobContractNo, "*", "%")' />
                   AND A.JOB_CONTRACT_NO = LIKE #{sJobContractNo}
               </when>
               <otherwise>
                   AND A.JOB_CONTRACT_NO = #{sJobContractNo}
               </otherwise>
             </choose>
         </if>
         <if test='sCustNm != null and sCustNm != ""'>
           AND A.CUST_NM LIKE '%'||#{sCustNm}||'%'
         </if>
         <if test='sPaymentTp != null and sPaymentTp != ""'>
           AND A.PAYMENT_TP = #{sPaymentTp}
         </if>
         <if test='sPayEmpNo != null and sPayEmpNo != ""'>
           AND B.PAY_EMP_NO = #{sPayEmpNo}
         </if>
         <if test='sJobTp != null and sJobTp != ""'>
           AND A.JOB_TP = #{sJobTp}
         </if>
    </select>
    <!-- 목록조회 -->
    <select id="selectPayInfosByCondition" parameterType="PayInfoOutBoundSearchVO" resultType="PayInfoOutBoundVO">
    /* [chn.bhmc.dms.sal.fin.service.dao.PayInfoOutBoundDAO.selectPayInfosByCondition] */
        SELECT * FROM (
            SELECT ROWNUM AS RNUM, T1.*
              FROM (
                SELECT A.DLR_CD
                     , A.FIN_DOC_NO
                     , A.JOB_CONTRACT_NO
                     , A.VIN_NO
                     , A.JOB_TP
                     , ( SELECT Z2.CMM_CD_NM
                           FROM (SELECT A.CMM_CD
                                      , NVL(B.CMM_CD_TXT, A.CMM_CD_NM) AS CMM_CD_NM
                                  FROM CM_0303T A
                                  LEFT OUTER JOIN CM_0304T B
                                        ON A.CMM_GRP_CD = B.CMM_GRP_CD
                                       AND A.CMM_CD = B.CMM_CD
                                       AND B.LANG_CD = #{sLangCd}
                                 WHERE A.CMM_GRP_CD = 'SAL174'   /*관련업무*/
                                   AND A.USE_YN = 'Y'
                                 ) Z2
                         WHERE A.JOB_TP = Z2.CMM_CD
                       ) AS JOB_TP_NM
                     , A.CUST_NO
                     , A.CUST_NM
                     , A.REAL_PAY_AMT   --발생금액
                     , A.TOT_PAY_AMT    --기결산금액
                     , A.TOT_DC_AMT     --할인금액
                     , A.RECV_AMT       --미수금액
                     , A.OVER_AMT       --초과금액
                     , A.RECP_YN        --영수증필요여부
                     , ( SELECT Z2.CMM_CD_NM
                           FROM (SELECT A.CMM_CD
                                      , NVL(B.CMM_CD_TXT, A.CMM_CD_NM) AS CMM_CD_NM
                                  FROM CM_0303T A
                                  LEFT OUTER JOIN CM_0304T B
                                        ON A.CMM_GRP_CD = B.CMM_GRP_CD
                                       AND A.CMM_CD = B.CMM_CD
                                       AND B.LANG_CD = #{sLangCd}
                                 WHERE A.CMM_GRP_CD = 'COM020'
                                   AND A.USE_YN = 'Y'
                                 ) Z2
                         WHERE A.RECP_YN = Z2.CMM_CD
                       ) AS RECP_YN_NM
                     , A.RECP_DT        --영수증발행일시
                     , A.PAYMENT_TP
                     , ( SELECT Z2.CMM_CD_NM
                           FROM (SELECT A.CMM_CD
                                      , NVL(B.CMM_CD_TXT, A.CMM_CD_NM) AS CMM_CD_NM
                                  FROM CM_0303T A
                                  LEFT OUTER JOIN CM_0304T B
                                        ON A.CMM_GRP_CD = B.CMM_GRP_CD
                                       AND A.CMM_CD = B.CMM_CD
                                       AND B.LANG_CD = #{sLangCd}
                                 WHERE A.CMM_GRP_CD = 'SAL173'
                                   AND A.USE_YN = 'Y'
                                 ) Z2
                         WHERE A.PAYMENT_TP = Z2.CMM_CD
                       ) AS PAYMENT_TP_NM
                     , A.COMP_DT        --완료일시
                     , A.REAL_CAR_AMT
                     , A.GOODS_AMT
                     , A.INC_AMT
                     , A.FINC_AMT
                     , A.SBST_AMT
                     , A.DC_AMT
                     , A.POINT_AMT
                     , A.AAP_AMT
                     , A.RESERV_CONT_AMT
                  FROM SA_0451T A
                 LEFT OUTER JOIN (
                                   SELECT DLR_CD, FIN_DOC_NO, MAX(RCT_DT) AS RCT_DT
                                     FROM SA_0452T
                                    WHERE 1=1
                                    <if test='sRctFromDt != null'>
                                      AND RCT_DT <![CDATA[ >= ]]> #{sRctFromDt}
                                    </if>
                                    <if test='sRctToDt != null'>
                                      AND RCT_DT-1 <![CDATA[ <= ]]> #{sRctToDt}
                                    </if>
                                    GROUP BY DLR_CD, FIN_DOC_NO
                                   ) B
                    ON A.DLR_CD = B.DLR_CD
                   AND A.FIN_DOC_NO = B.FIN_DOC_NO
                 WHERE 1 = 1
                 <if test='sDlrCd != null and sDlrCd != ""'>
                   AND A.DLR_CD = #{sDlrCd}
                 </if>
                 <if test='sFinDocNo != null and sFinDocNo != ""'>
                   AND A.FIN_DOC_NO = #{sFinDocNo}
                 </if>
                 <if test='sRctFromDt != null'>
                   AND B.RCT_DT <![CDATA[ >= ]]> #{sRctFromDt}
                 </if>
                 <if test='sRctToDt != null'>
                   AND B.RCT_DT-1 <![CDATA[ <= ]]> #{sRctToDt}
                 </if>
                 <if test='sVinNo != null and sVinNo != ""'>
                   AND A.VIN_NO LIKE '%'||UPPER(#{sVinNo})||'%'
                 </if>
                 <if test='sJobContractNo != null and sJobContractNo != ""'>
                     <choose>
                       <when test='@org.apache.commons.lang3.StringUtils@contains(sJobContractNo,"*")'>
                         <bind name='sJobContractNo' value='@org.apache.commons.lang3.StringUtils@replace(sJobContractNo, "*", "%")' />
                           AND A.JOB_CONTRACT_NO = LIKE #{sJobContractNo}
                       </when>
                       <otherwise>
                           AND A.JOB_CONTRACT_NO = #{sJobContractNo}
                       </otherwise>
                     </choose>
                 </if>
                 <if test='sCustNm != null and sCustNm != ""'>
                   AND A.CUST_NM LIKE '%'||#{sCustNm}||'%'
                 </if>
                 <if test='sPaymentTp != null and sPaymentTp != ""'>
                   AND A.PAYMENT_TP = #{sPaymentTp}
                 </if>
                 <if test='sPayEmpNo != null and sPayEmpNo != ""'>
                   AND B.PAY_EMP_NO = #{sPayEmpNo}
                 </if>
                 <if test='sJobTp != null and sJobTp != ""'>
                   AND A.JOB_TP = #{sJobTp}
                 </if>
             ORDER BY
                <choose>
                    <when test='sort != null'>
                        <foreach item="item" index="index" collection="sort" open="" separator="," close="">
                            <choose>
                                <when test='item.field == "finDocNo"'>A.FIN_DOC_NO <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                                <when test='item.field == "jobContractNo"'>A.JOB_CONTRACT_NO <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                                <when test='item.field == "vinNo"'>A.VIN_NO <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                                <when test='item.field == "jobTp"'>A.JOB_TP <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                                <when test='item.field == "jobTpNm"'>JOB_TP_NM <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                                <when test='item.field == "custNo"'>A.CUST_NO <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                                <when test='item.field == "custNm"'>A.CUST_NM <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                                <when test='item.field == "realPayAmt"'>A.REAL_PAY_AMT <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                                <when test='item.field == "totPayAmt"'>A.TOT_PAY_AMT <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                                <when test='item.field == "totDcAmt"'>A.TOT_DC_AMT <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                                <when test='item.field == "recvAmt"'>A.RECV_AMT <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                                <when test='item.field == "overAmt"'>A.OVER_AMT <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                                <when test='item.field == "recpYn"'>A.RECP_YN <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                                <when test='item.field == "recpYnNm"'>RECP_YN_NM <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                                <when test='item.field == "recpDt"'>A.RECP_DT <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                                <when test='item.field == "compYn"'>A.COMP_YN <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                                <when test='item.field == "compYnNm"'>COMP_YN_NM <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                                <when test='item.field == "custTp"'>A.CUST_TP <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                                <otherwise>
                                    A.FIN_DOC_NO DESC
                                </otherwise>
                            </choose>
                        </foreach>
                    </when>
                    <otherwise>
                        A.FIN_DOC_NO DESC
                    </otherwise>
                </choose>
            ) T1
            <where>
                <if test='firstIndex != -1 and lastIndex != -1'>
                    ROWNUM <![CDATA[<=]]> #{lastIndex}
                </if>
            </where>
        )
        <where>
            <if test='firstIndex != -1 and lastIndex != -1'>
                RNUM > #{firstIndex}
            </if>
        </where>
    </select>
    
    <!-- 수납헤더 정보를 생성한다. -->
    <insert id="insertPayInfoHeader" parameterType="PayInfoOutBoundVO">
        INSERT INTO SA_0451T    --수납헤더
        (
          DLR_CD                 --딜러코드
         ,FIN_DOC_NO             --수납문서번호
         ,JOB_TP                 --관련업무
         ,JOB_CONTRACT_NO        --관련업무계약번호
         ,VIN_NO                 --VIN번호
         ,COMP_YN                --정산여부(완성여부)
         ,COMP_DT                --정산완료일
         ,CUST_TP                --고객유형
         ,CUST_NO                --고객번호
         ,CUST_NM                --고객이름
         ,MANAGE_EMP_NO          --판매인번호
         ,PAYMENT_TP             --지불상태
         ,REAL_PAY_AMT           --발생금액
         ,TOT_PAY_AMT            --최종정산금액
         ,TOT_DC_AMT             --할인금액
         ,PRO_AMT                --처리금액(에누리)
         ,RECV_AMT               --미수금액
         ,OVER_AMT               --초과금액
         ,RECP_YN                --영수증 필요여부
         ,RECP_DT                --영수증 출력일자
         ,REAL_CAR_AMT           --(계약)실제차량금액
         ,GOODS_AMT              --(계약)용품가격
         ,INC_AMT                --(계약)보험료
         ,FINC_AMT               --(계약)금융가격
         ,SBST_AMT               --(계약)중고차치환
         ,AAP_AMT                --(계약)대행료
         ,DC_AMT                 --(계약)할인가격
         ,POINT_AMT              --(계약)포인트금액
         ,RESERV_CONT_AMT        --(계약)예판가
         ,REG_USR_ID             --등록자ID
         ,REG_DT                 --등록일자
         ,UPDT_USR_ID            --수정자ID
         ,UPDT_DT                --수정일자
        )
        VALUES
        (
          #{dlrCd}                 --딜러코드
         , (SELECT 'F' || TO_CHAR(SYSDATE, 'YYYYMM') || LPAD(TO_CHAR(NVL(SUBSTR(MAX(FIN_DOC_NO),8,14), 0)+1), 7, '0' ) FROM SA_0451T WHERE DLR_CD = #{dlrCd} AND SUBSTR(FIN_DOC_NO, 2, 6) = TO_CHAR(SYSDATE, 'YYYYMM') )
         ,#{jobTp}                 --관련업무
         ,#{jobContractNo}         --관련업무계약번호
         ,#{vinNo}                 --VIN번호
         ,'N'                      --정산여부(완성여부)
         ,#{compDt}                --정산완료일
         ,#{custTp}                --고객유형
         ,#{custNo}                --고객번호
         ,#{custNm}                --고객이름
         ,#{manageEmpNo}           --판매인번호
         ,#{paymentTp}             --지불상태         
         ,#{realPayAmt}            --발생금액
         ,#{totPayAmt}             --최종정산금액
         ,#{totDcAmt}              --할인금액
         ,#{proAmt}                --처리금액(에누리)
         ,#{recvAmt}               --미수금액
         ,#{overAmt}               --초과금액
         ,#{recpYn}                --영수증 필요여부
         ,#{recpDt}                --영수증 출력일자
         ,#{realCarAmt}            --(계약)실제차량금액
         ,#{goodsAmt}              --(계약)용품가격
         ,#{incAmt}                --(계약)보험료
         ,#{fincAmt}               --(계약)금융가격
         ,#{sbstAmt}               --(계약)중고차치환
         ,#{aapAmt}                --(계약)대행료
         ,#{dcAmt}                 --(계약)할인가격
         ,#{pointAmt}              --(계약)포인트금액
         ,#{reservContAmt}         --(계약)예판가
         ,#{regUsrId}              --등록자ID
         ,SYSDATE
         ,#{updtUsrId}             --수정자ID
         ,SYSDATE
        )
    </insert>
    
    <!-- 수납헤더 정보를 저장한다. -->    
    <update id="updatePayInfoHeader" parameterType="PayInfoOutBoundVO">
        UPDATE SA_0451T    --수납헤더
           SET VIN_NO          = #{vinNo}                 --VIN번호
           <if test='compYn != null and compYn != ""'>
             , COMP_YN         = #{compYn}                --정산여부(완성여부)
           </if>
           <if test='compDt != null'>
             , COMP_DT         = #{compDt}                --정산완료일
           </if>
             , CUST_TP         = #{custTp}                --고객유형
             , CUST_NO         = #{custNo}                --고객번호
             , CUST_NM         = #{custNm}                --고객이름
             , MANAGE_EMP_NO   = #{manageEmpNo}           --판매인번호
             , PAYMENT_TP      = #{paymentTp}             --지불상태
             , TOT_PAY_AMT     = (SELECT NVL(MAX(SUM(CASE WHEN COL_TP = '01' THEN PAY_AMT
                                                 ELSE PAY_AMT * -1
                                             END
                                           )),0) AS TOT_PAY_AMT
                                   FROM SA_0452T
                                  WHERE DLR_CD = #{dlrCd}
                                    AND FIN_DOC_NO = #{finDocNo}
                                  GROUP BY DLR_CD, FIN_DOC_NO
                                 )        
             , TOT_DC_AMT      = (SELECT NVL(MAX(SUM(DC_AMT)), 0) AS TOT_DC_AMT
                                   FROM SA_0452T
                                  WHERE DLR_CD = #{dlrCd}
                                    AND FIN_DOC_NO = #{finDocNo}
                                  GROUP BY DLR_CD, FIN_DOC_NO
                                 )
             
             , RECV_AMT        = (SELECT CASE WHEN NVL(A.REAL_PAY_AMT,0) - NVL(B.TOT_AMT,0) > 0 THEN NVL(A.REAL_PAY_AMT,0) - NVL(B.TOT_AMT,0)
                                              ELSE 0
                                         END  AS RECV_AMT
                                    FROM SA_0451T A
                                     , (
                                        SELECT DLR_CD
                                             , FIN_DOC_NO
                                             , SUM(CASE WHEN COL_TP = '01' THEN PAY_AMT
                                                        ELSE PAY_AMT * -1
                                                    END ) AS TOT_AMT
                                          FROM SA_0452T
                                         GROUP BY DLR_CD, FIN_DOC_NO
                                         ) B
                                   WHERE A.DLR_CD = B.DLR_CD(+)
                                     AND A.FIN_DOC_NO = B.FIN_DOC_NO(+)
                                     AND A.DLR_CD = #{dlrCd}
                                     AND A.FIN_DOC_NO = #{finDocNo}
                                 )
             , OVER_AMT        = (SELECT CASE WHEN NVL(A.REAL_PAY_AMT,0) - NVL(B.TOT_AMT,0) <![CDATA[<]]> 0 THEN NVL(A.REAL_PAY_AMT,0) - NVL(B.TOT_AMT,0)
                                            ELSE 0
                                         END AS OVER_AMT
                                  FROM SA_0451T A
                                     , (
                                        SELECT DLR_CD
                                             , FIN_DOC_NO
                                             , SUM(CASE WHEN COL_TP = '01' THEN PAY_AMT
                                                        ELSE PAY_AMT * -1
                                                    END ) AS TOT_AMT
                                          FROM SA_0452T
                                         GROUP BY DLR_CD, FIN_DOC_NO
                                         ) B
                                   WHERE A.DLR_CD = B.DLR_CD(+)
                                     AND A.FIN_DOC_NO = B.FIN_DOC_NO(+)
                                     AND A.DLR_CD = #{dlrCd}
                                     AND A.FIN_DOC_NO = #{finDocNo}
                                 )
           <if test='realPayAmt != null and realPayAmt != ""'>
             , REAL_PAY_AMT    = #{realPayAmt}            --발생금액
           </if>
           <if test='proAmt != null and proAmt != ""'>
             , PRO_AMT         = #{proAmt}                --처리금액(에누리)
           </if>
           <if test='recpYn != null and recpYn != ""'>
             , RECP_YN         = #{recpYn}                --영수증 필요여부
           </if>
           <if test='recpDt != null'>
             , RECP_DT         = #{recpDt}                --영수증 출력일자
           </if>
           
             , REAL_CAR_AMT    = #{realCarAmt}            --(계약)실제차량금액
           
             , GOODS_AMT       = #{goodsAmt}              --(계약)용품가격
           
             , INC_AMT         = #{incAmt}                --(계약)보험료
           
             , FINC_AMT         = #{fincAmt}              --(계약)금융가격
           
             , SBST_AMT         = #{sbstAmt}              --(계약)중고차치환
           
             , AAP_AMT         = #{aapAmt}                --(계약)대행료
           
             , DC_AMT         = #{dcAmt}                  --(계약)할인가격
           
             , POINT_AMT         = #{pointAmt}             --(계약)포인트금액
           
             , RESERV_CONT_AMT = #{reservContAmt}         --(계약)예판가
           
             , UPDT_USR_ID     = #{updtUsrId}             --수정자ID
             , UPDT_DT         = SYSDATE
          WHERE 1 = 1
            AND DLR_CD          = #{dlrCd}                 --딜러코드
            AND FIN_DOC_NO      = #{finDocNo}
            AND JOB_TP          = #{jobTp}                 --관련업무
            AND JOB_CONTRACT_NO = #{jobContractNo}         --관련업무계약번호
    </update>
    
    
    <!-- 수납여부를 UPDATE -->
    <update id="updatePayInfoTotHeader" parameterType="PayInfoOutBoundDetailVO">
         UPDATE SA_0451T    --수납헤더
            SET UPDT_USR_ID     = #{updtUsrId}             --수정자ID
              , UPDT_DT         = SYSDATE
           <if test='compYn != null and compYn != ""'>
             , COMP_YN         = #{compYn}                --정산여부(완성여부)
           </if>
           <if test='compYn != null and compYn == "Y"'>
             , COMP_DT         = SYSDATE
           </if>
           <if test='compYn != null and compYn == "N"'>
             , COMP_DT         = NULL
           </if>
           <if test='paymentTp != null and paymentTp != ""'>
             , PAYMENT_TP      = #{paymentTp}
           </if>
             , TOT_PAY_AMT     = (SELECT NVL(MAX(SUM(CASE WHEN COL_TP = '01' THEN PAY_AMT
                                                 ELSE PAY_AMT * -1
                                             END
                                           )),0) AS TOT_PAY_AMT
                                   FROM SA_0452T
                                  WHERE DLR_CD = #{dlrCd}
                                    AND FIN_DOC_NO = #{finDocNo}
                                  GROUP BY DLR_CD, FIN_DOC_NO
                                 )
             , TOT_DC_AMT      = (SELECT NVL(MAX(SUM(DC_AMT)), 0) AS TOT_DC_AMT
                                   FROM SA_0452T
                                  WHERE DLR_CD = #{dlrCd}
                                    AND FIN_DOC_NO = #{finDocNo}
                                  GROUP BY DLR_CD, FIN_DOC_NO
                                 )
            <if test='proAmt != null and proAmt != ""'>
             , PRO_AMT = #{proAmt}
            </if>
             , RECV_AMT        = (SELECT CASE WHEN NVL(A.REAL_PAY_AMT,0) - NVL(B.TOT_AMT,0) > 0 THEN NVL(A.REAL_PAY_AMT,0) - NVL(B.TOT_AMT,0)
                                              ELSE 0
                                         END  AS RECV_AMT
                                    FROM SA_0451T A
                                     , (
                                        SELECT DLR_CD
                                             , FIN_DOC_NO
                                             , SUM(CASE WHEN COL_TP = '01' THEN PAY_AMT
                                                        ELSE PAY_AMT * -1
                                                    END ) AS TOT_AMT
                                          FROM SA_0452T
                                         GROUP BY DLR_CD, FIN_DOC_NO
                                         ) B
                                   WHERE A.DLR_CD = B.DLR_CD(+)
                                     AND A.FIN_DOC_NO = B.FIN_DOC_NO(+)
                                     AND A.DLR_CD = #{dlrCd}
                                     AND A.FIN_DOC_NO = #{finDocNo}
                                 )
             , OVER_AMT        = (SELECT CASE WHEN NVL(A.REAL_PAY_AMT,0) - NVL(B.TOT_AMT,0) <![CDATA[<]]> 0 THEN NVL(A.REAL_PAY_AMT,0) - NVL(B.TOT_AMT,0)
                                            ELSE 0
                                         END AS OVER_AMT
                                  FROM SA_0451T A
                                     , (
                                        SELECT DLR_CD
                                             , FIN_DOC_NO
                                             , SUM(CASE WHEN COL_TP = '01' THEN PAY_AMT
                                                        ELSE PAY_AMT * -1
                                                    END ) AS TOT_AMT
                                          FROM SA_0452T
                                         GROUP BY DLR_CD, FIN_DOC_NO
                                         ) B
                                   WHERE A.DLR_CD = B.DLR_CD(+)
                                     AND A.FIN_DOC_NO = B.FIN_DOC_NO(+)
                                     AND A.DLR_CD = #{dlrCd}
                                     AND A.FIN_DOC_NO = #{finDocNo}
                                 )
           <if test='recpYn != null and recpYn != ""'>
             , RECP_YN         = #{recpYn}
           </if>
           <if test='recpDt != null'>
             , RECP_DT         = SYSDATE
           </if>
          WHERE DLR_CD          = #{dlrCd}                 --딜러코드
          <if test='finDocNo != null and finDocNo != ""'>
            AND FIN_DOC_NO = #{finDocNo}
          </if>
    </update>
    
</mapper>