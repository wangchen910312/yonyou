<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--
    SQL File Name : MvtDoctDAO_SqlMap.xml
    Description : 수불문서정보관리.
    author Ju Won Lee
    since 2016. 1. 19.
    version 1.0
    Modification Information
       since          author              description
    ===========    =============    ===========================
    2016. 01. 19.     Ju Won Lee     최초 생성
-->

<mapper namespace="chn.bhmc.dms.par.pmm.service.dao.MvtDocDAO">

    <!-- 수불문서 정보를 추가한다. -->
    <insert id="insertMvtDoc" parameterType="MvtDocVO">
    /* [chn.bhmc.dms.par.pmm.service.dao.MvtDocDAO.insertMvtDoc] */
    INSERT INTO PT_0311T (
        DLR_CD
        ,MVT_DOC_YY_MM
        ,MVT_DOC_NO
        ,STMT_PROC_DT
        ,SYS_PROC_DT
        ,MVT_TP
        ,BIZ_AREA_CD
        ,BP_CD
        ,CUST_NO
        ,STMT_TXT
        ,REG_USR_ID
        ,REG_DT
    ) VALUES (
        #{dlrCd}
        ,#{mvtDocYyMm}
        ,#{mvtDocNo}
        ,sysdate
        ,sysdate
        ,#{mvtTp}
        ,#{bizAreaCd}
        ,#{bpCd}
        ,#{custNo}
        ,#{stmtTxt}
        ,#{regUsrId}
        ,sysdate
    )
    </insert>

    <!-- 수불문서품목 정보를 추가한다. -->
    <insert id="insertMvtDocItem" parameterType="MvtDocVO">
    /* [chn.bhmc.dms.par.pmm.service.dao.MvtDocDAO.insertMvtDocItem] */
    INSERT INTO PT_0312T (
        DLR_CD
        ,MVT_DOC_YY_MM
        ,MVT_DOC_NO
        ,MVT_DOC_LINE_NO
        ,CANC_STMT_YN
        ,AUTO_CRE_YN
        ,PLT_CD
        ,STRGE_CD
        ,LOC_CD
        ,DEBIT_CREDIT_DSTIN_CD
        ,ITEM_CD
        ,ITEM_QTY
        ,ITEM_UNIT_CD
        ,REF_DOC_TP
        ,REF_DOC_NO
        ,REF_DOC_LINE_NO
        ,CANC_MVT_DOC_NO
        ,CANC_MVT_DOC_YY_MM
        ,CANC_MVT_DOC_LINE_NO
        ,CURR_CD
        ,STD_PRC
        ,STD_AMT
        ,SALE_PRC
        ,SALE_TAX_DDCT_PRC
        ,SALE_AMT
        ,SALE_TAX_DDCT_AMT
        ,MOVING_AVG_PRC
        ,MOVING_AVG_TAX_DDCT_PRC
        ,MOVING_AVG_AMT
        ,MOVING_AVG_TAX_DDCT_AMT
        ,PURC_PRC
        ,PURC_TAX_DDCT_PRC
        ,PURC_AMT
        ,PURC_TAX_DDCT_AMT
        ,DDLN_YN
        ,MVT_REASON_CONT
        ,STMT_TXT
        ,REG_USR_ID
        ,REG_DT
    ) VALUES (
        #{dlrCd}
        ,#{mvtDocYyMm}
        ,#{mvtDocNo}
        ,#{mvtDocLineNo}
        ,#{cancStmtYn}
        ,#{autoCreYn}
        ,#{pltCd}
        ,#{strgeCd}
        ,#{locCd}
        ,#{debitCreditDstinCd}
        ,#{itemCd}
        ,#{itemQty}
        ,NVL(#{itemUnitCd},'EA')
        ,#{refDocTp}
        ,#{refDocNo}
        ,#{refDocLineNo}
        ,#{cancMvtDocNo}
        ,#{cancMvtDocYyMm}
        ,#{cancMvtDocLineNo}
        ,NVL(#{currCd},'CNY')
        ,round(NVL(#{stdPrc},0),2)
        ,round(NVL(#{stdAmt},0),2)
        ,round(NVL(#{salePrc},0),2)
        ,round(NVL(#{saleTaxDdctPrc},0),2)
        ,round(NVL(#{saleAmt},0),2)
        ,round(NVL(#{saleTaxDdctAmt},0),2)
        ,round(NVL(#{movingAvgPrc},0),2)
        ,round(NVL(#{movingAvgTaxDdctPrc},0),2)
        ,round(NVL(#{movingAvgAmt},0),2)
        ,round(NVL(#{movingAvgTaxDdctAmt},0),2)
        ,round(NVL(#{purcPrc},0),2)
        ,round(NVL(#{purcTaxDdctPrc},0),2)
        ,round(NVL(#{purcAmt},0),2)
        ,round(NVL(#{purcTaxDdctAmt},0),2)
        ,#{ddlnYn}
        ,#{mvtReasonCont}
        ,#{stmtTxt}
        ,#{regUsrId}
        ,sysdate
    )
    </insert>

    <!-- 수불유형 정보를 수정한다. -->
    <update id="update" parameterType="MvtDocVO">
    /* [chn.bhmc.dms.par.pmm.service.dao.MvtDocDAO.update] */
    UPDATE PT_0102T SET
        PREF_VAL = #{prefVal},
        MULTI_YN = #{multiYn}
    WHERE PREF_KEY = #{prefKey}
    </update>

    <!-- 취소 수불 정보를 원수불정보에 반영한다. -->
    <update id="updateMvtDocInfoByCancel" parameterType="MvtDocItemVO">
    /* [chn.bhmc.dms.par.pmm.service.dao.MvtDocDAO.updateMvtDocInfoByCancel] */
    UPDATE PT_0312T A
    SET
        A.CANC_MVT_DOC_NO = #{cancMvtDocNo}
        ,A.CANC_MVT_DOC_YY_MM = #{cancMvtDocYyMm}
        ,A.CANC_MVT_DOC_LINE_NO = #{cancMvtDocLineNo}
        ,A.UPDT_USR_ID = #{regUsrId}
        ,A.UPDT_DT = sysdate
    WHERE A.DLR_CD = #{dlrCd}
    AND A.MVT_DOC_YY_MM = #{mvtDocYyMm}
    AND A.MVT_DOC_NO = #{mvtDocNo}
    AND A.MVT_DOC_LINE_NO = #{mvtDocLineNo}
    </update>

    <!-- 수불헤더 정보 목록을 조회한다. -->
    <select id="selectMvtDocByKey" resultType="MvtDocVO">
    /* [chn.bhmc.dms.par.pmm.service.dao.MvtDocDAO.selectMvtDocByKey] */
    SELECT
        A.DLR_CD
        ,A.MVT_DOC_YY_MM
        ,A.MVT_DOC_NO
        ,A.STMT_PROC_DT
        ,A.SYS_PROC_DT
        ,A.MVT_TP
        ,A.BIZ_AREA_CD
        ,A.BP_CD
        ,A.CUST_NO
        ,A.STMT_TXT
        ,A.REG_USR_ID
        ,A.REG_DT
        ,A.UPDT_USR_ID
        ,A.UPDT_DT
    FROM PT_0311T A
    WHERE A.DLR_CD = #{dlrCd}
    AND A.MVT_DOC_YY_MM = #{mvtDoccYyMm}
    AND A.MVT_DOC_NO = #{mvtDocNo}

    </select>

    <!-- 수불품목 정보 목록을 조회한다. -->
    <select id="selectMvtDocItem" resultType="MvtDocItemVO">
    /* [chn.bhmc.dms.par.pmm.service.dao.MvtDocDAO.selectMvtDocItem] */
    SELECT
        A.DLR_CD
        ,A.MVT_DOC_YY_MM
        ,A.MVT_DOC_NO
        ,A.MVT_DOC_LINE_NO
        ,A.CANC_STMT_YN
        ,A.AUTO_CRE_YN
        ,A.PLT_CD
        ,A.STRGE_CD
        ,A.LOC_CD
        ,A.DEBIT_CREDIT_DSTIN_CD
        ,A.ITEM_CD
        ,A.ITEM_QTY
        ,A.ITEM_UNIT_CD
        ,A.REF_DOC_TP
        ,A.REF_DOC_NO
        ,A.REF_DOC_LINE_NO
        ,A.CANC_MVT_DOC_NO
        ,A.CANC_MVT_DOC_YY_MM
        ,A.CANC_MVT_DOC_LINE_NO
        ,A.CURR_CD
        ,A.STD_PRC
        ,A.STD_AMT
        ,A.SALE_PRC
        ,A.SALE_TAX_DDCT_PRC
        ,A.SALE_AMT
        ,A.SALE_TAX_DDCT_AMT
        ,A.MOVING_AVG_PRC
        ,A.MOVING_AVG_TAX_DDCT_PRC
        ,A.MOVING_AVG_AMT
        ,A.MOVING_AVG_TAX_DDCT_AMT
        ,A.PURC_PRC
        ,A.PURC_TAX_DDCT_PRC
        ,A.PURC_AMT
        ,A.PURC_TAX_DDCT_AMT
        ,A.DDLN_YN
        ,A.MVT_REASON_CONT
        ,A.STMT_TXT
        ,A.REG_USR_ID
        ,A.REG_DT
        ,A.UPDT_USR_ID
        ,A.UPDT_DT
    FROM PT_0312T A
    WHERE A.DLR_CD = #{dlrCd}
    AND A.MVT_DOC_YY_MM = #{mvtDocYyMm}
    AND A.MVT_DOC_NO = #{mvtDocNo}
    AND A.MVT_DOC_LINE_NO = #{mvtDocLineNo}
    </select>

    <!-- 수불품목 참조번호에 해당하는 정보를 조회한다. -->
    <select id="selectMvtDocItemByRefInfo" resultType="MvtDocItemVO">
    /* [chn.bhmc.dms.par.pmm.service.dao.MvtDocDAO.selectMvtDocItemByRefInfo] */
    SELECT
        A.DLR_CD
        ,A.MVT_DOC_YY_MM
        ,A.MVT_DOC_NO
        ,A.MVT_DOC_LINE_NO
        ,A.CANC_STMT_YN
        ,A.AUTO_CRE_YN
        ,A.PLT_CD
        ,A.STRGE_CD
        ,A.LOC_CD
        ,A.DEBIT_CREDIT_DSTIN_CD
        ,A.ITEM_CD
        ,A.ITEM_QTY
        ,A.ITEM_UNIT_CD
        ,A.REF_DOC_TP
        ,A.REF_DOC_NO
        ,A.REF_DOC_LINE_NO
        ,A.CANC_MVT_DOC_NO
        ,A.CANC_MVT_DOC_YY_MM
        ,A.CANC_MVT_DOC_LINE_NO
        ,A.CURR_CD
        ,A.STD_PRC
        ,A.STD_AMT
        ,A.SALE_PRC
        ,A.SALE_TAX_DDCT_PRC
        ,A.SALE_AMT
        ,A.SALE_TAX_DDCT_AMT
        ,A.MOVING_AVG_PRC
        ,A.MOVING_AVG_TAX_DDCT_PRC
        ,A.MOVING_AVG_AMT
        ,A.MOVING_AVG_TAX_DDCT_AMT
        ,A.PURC_PRC
        ,A.PURC_TAX_DDCT_PRC
        ,A.PURC_AMT
        ,A.PURC_TAX_DDCT_AMT
        ,A.DDLN_YN
        ,A.MVT_REASON_CONT
        ,A.STMT_TXT
        ,A.REG_USR_ID
        ,A.REG_DT
        ,A.UPDT_USR_ID
        ,A.UPDT_DT
    FROM PT_0312T A
    WHERE A.DLR_CD = #{dlrCd}
    AND A.MVT_DOC_NO = #{refDocNo}
    AND A.MVT_DOC_LINE_NO = #{refDocLineNo}

    </select>

    <!-- 수불품목 참조문서번호에 해당하는 정보를 조회한다.(판매 반품 시 사용) -->
    <select id="selectMvtDocItemByDocRefInfo" resultType="MvtDocItemVO">
    /* [chn.bhmc.dms.par.pmm.service.dao.MvtDocDAO.selectMvtDocItemByDocRefInfo] */
    SELECT
        A.DLR_CD
        ,A.MVT_DOC_YY_MM
        ,A.MVT_DOC_NO
        ,A.MVT_DOC_LINE_NO
        ,A.CANC_STMT_YN
        ,A.AUTO_CRE_YN
        ,A.PLT_CD
        ,A.STRGE_CD
        ,A.LOC_CD
        ,A.DEBIT_CREDIT_DSTIN_CD
        ,A.ITEM_CD
        ,A.ITEM_QTY
        ,A.ITEM_UNIT_CD
        ,A.REF_DOC_TP
        ,A.REF_DOC_NO
        ,A.REF_DOC_LINE_NO
        ,A.CANC_MVT_DOC_NO
        ,A.CANC_MVT_DOC_YY_MM
        ,A.CANC_MVT_DOC_LINE_NO
        ,A.CURR_CD
        ,A.STD_PRC
        ,A.STD_AMT
        ,A.SALE_PRC
        ,A.SALE_TAX_DDCT_PRC
        ,A.SALE_AMT
        ,A.SALE_TAX_DDCT_AMT
        ,A.MOVING_AVG_PRC
        ,A.MOVING_AVG_TAX_DDCT_PRC
        ,A.MOVING_AVG_AMT
        ,A.MOVING_AVG_TAX_DDCT_AMT
        ,A.PURC_PRC
        ,A.PURC_TAX_DDCT_PRC
        ,A.PURC_AMT
        ,A.PURC_TAX_DDCT_AMT
        ,A.DDLN_YN
        ,A.MVT_REASON_CONT
        ,A.STMT_TXT
        ,A.REG_USR_ID
        ,A.REG_DT
        ,A.UPDT_USR_ID
        ,A.UPDT_DT
    FROM PT_0312T A
    WHERE A.DLR_CD = #{dlrCd}
    AND A.REF_DOC_NO = #{refDocNo}
    AND A.REF_DOC_LINE_NO = #{refDocLineNo}
    <if test='mvtDocNo != null and mvtDocNo != ""'>
        AND A.MVT_DOC_NO = #{mvtDocNo}
    </if>
    <if test='debitCreditDstinCd != null and debitCreditDstinCd != ""'>
        AND A.DEBIT_CREDIT_DSTIN_CD = #{debitCreditDstinCd}
    </if>

    </select>

    <!-- 입출고현황 정보를 조회한다. -->
    <select id="selectGrGiList" resultType="MvtDocItemVO"  parameterType="MvtDocSearchVO">
    /* [chn.bhmc.dms.par.pmm.service.dao.MvtDocDAO.selectGrGiList] */
    SELECT
        A.DLR_CD
        ,A.MVT_DOC_YY_MM                        <!-- 수불문서년월일자  -->
        ,A.MVT_DOC_NO                           <!-- 수불문서번호 -->
        ,B.MVT_DOC_LINE_NO                      <!-- 수불문서라인번호 -->
        ,A.STMT_PROC_DT                         <!-- 전표처리일자 -->
        ,B.REF_DOC_TP                           <!-- 참조문서유형 -->
        ,B.REF_DOC_NO                           <!-- 참조문서번호 -->
        ,B.REF_DOC_LINE_NO                      <!-- 참조문서라인번호 -->
        ,A.STMT_PROC_DT                         <!-- 전표처리일자 -->
        ,A.MVT_TP                               <!-- 수불유형 -->
        ,B.CANC_STMT_YN                         <!-- 취소전표여부 -->
        ,B.STRGE_CD                             <!-- 창고코드 -->
        ,B.LOC_CD                               <!-- 위치코드 -->
        ,B.ITEM_CD                              <!-- 부품코드 -->
        ,D.ITEM_NM                              <!-- 부품명 -->
        ,D.ABC_IND                              <!-- 부품등급-->
        ,D.CARLINE_CD                           <!-- 차종-->
        ,B.ITEM_QTY                             <!-- 품목수량 -->
        ,B.ITEM_UNIT_CD                         <!-- 품목단위코드 -->
        ,B.CANC_MVT_DOC_NO                      <!-- 취소수불문서번호 -->
        ,B.CANC_MVT_DOC_YY_MM                   <!-- 취소수불문서년월일자 -->
        ,B.CANC_MVT_DOC_LINE_NO                 <!-- 취소수불문서라인번호 -->
        ,NVL(B.SALE_PRC, B.PURC_PRC) AS PRC     <!-- 판매단가 -->
        ,NVL(B.SALE_TAX_DDCT_PRC, B.PURC_TAX_DDCT_PRC) AS TAX_DDCT_PRC     <!-- 판매단가(세금미포함) -->
        ,NVL(B.SALE_AMT, B.PURC_AMT) AS AMT     <!-- 판매금액 -->
        ,NVL(B.SALE_TAX_DDCT_AMT, B.PURC_TAX_DDCT_AMT) AS TAX_DDCT_AMT     <!-- 판매금액(세금미포함) -->
        ,B.MOVING_AVG_AMT
        ,B.MOVING_AVG_TAX_DDCT_AMT
    FROM DMSDB.PT_0311T A
    INNER JOIN DMSDB.PT_0312T B ON A.DLR_CD = B.DLR_CD AND A.MVT_DOC_YY_MM = B.MVT_DOC_YY_MM AND A.MVT_DOC_NO = B.MVT_DOC_NO
    LEFT OUTER JOIN DMSDB.PT_0312T C ON B.DLR_CD = C.DLR_CD AND B.CANC_MVT_DOC_NO = C.MVT_DOC_NO AND B.CANC_MVT_DOC_YY_MM = C.MVT_DOC_YY_MM AND B.CANC_MVT_DOC_LINE_NO = C.MVT_DOC_LINE_NO
    LEFT OUTER JOIN DMSDB.PT_0201T D ON B.DLR_CD = D.DLR_CD AND B.ITEM_CD = D.ITEM_CD
    WHERE A.DLR_CD = #{sDlrCd}
    <if test='sMvtTp != null and sMvtTp != ""'> AND A.MVT_TP= #{sMvtTp} </if>
    <if test='sBpCd != null and sBpCd != ""'> AND (A.BP_CD = #{sBpCd} OR A.CUST_NO = #{sBpCd}) </if>
    <if test='sStrgeCd != null and sStrgeCd != ""'> AND B.STRGE_CD = #{sStrgeCd} </if>
    <if test='sRefDocNo != null and sRefDocNo != ""'> AND B.REF_DOC_NO = #{sRefDocNo} </if>
    <if test='sMvtDocYyMm != null and sMvtDocYyMm != ""'> AND A.MVT_DOC_YY_MM = #{sMvtDocYyMm} </if>
    <if test='sAbcInd != null and sAbcInd != ""'> AND D.ABC_IND = #{sAbcInd} </if>
    <if test='sCarlineCd != null and sCarlineCd != ""'> AND D.CARLINE_CD = #{sCarlineCd} </if>
    <if test='sItemCd != null and sItemCd != ""'>
        AND B.ITEM_CD LIKE '%'||#{sItemCd}||'%'
    </if>
    <if test='sItemNm != null and sItemNm != ""'>
        AND D.ITEM_NM LIKE '%'||#{sItemNm}||'%'
    </if>
    <if test='sStmtProcDtFr != null'>
      <choose>
          <otherwise>
               AND A.STMT_PROC_DT <![CDATA[>=]]> #{sStmtProcDtFr}
          </otherwise>
      </choose>
    </if>
    <if test='sStmtProcDtTo != null'>
      <choose>
          <otherwise>
               AND A.STMT_PROC_DT <![CDATA[<=]]> #{sStmtProcDtTo} + 1
          </otherwise>
      </choose>
    </if>
    ORDER BY
    <choose>
    <when test='sort != null'>
        <foreach item="item" index="index" collection="sort" open="" separator="," close="">
        <choose>
            <when test='item.field == "dlrCd"'> A.DLR_CD <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose> </when>
            <when test='item.field == "mvtTp"'> A.MVT_TP <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose> </when>
            <when test='item.field == "bizAreaCd"'> A.BIZ_AREA_CD <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose> </when>
            <when test='item.field == "bpCd"'> A.BP_CD <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose> </when>
            <when test='item.field == "itemCd"'> B.ITEM_CD <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose> </when>
            <when test='item.field == "itemQty"'> B.ITEM_QTY <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose> </when>
            <when test='item.field == "itemUnitCd"'> B.ITEM_UNIT_CD <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose> </when>
            <when test='item.field == "refDocTp"'> B.REF_DOC_TP <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose> </when>
            <when test='item.field == "refDocNo"'> B.REF_DOC_NO <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose> </when>
            <when test='item.field == "salePrc"'> B.SALE_PRC <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose> </when>
            <when test='item.field == "saleAmt"'> B.SALE_AMT <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose> </when>
            <otherwise>
                B.DLR_CD ASC ,B.MVT_DOC_YY_MM ASC ,B.MVT_DOC_NO ASC ,B.MVT_DOC_LINE_NO ASC
            </otherwise>
        </choose>
        </foreach>
    </when>
    <otherwise>
    B.DLR_CD ASC ,B.MVT_DOC_YY_MM ASC ,B.MVT_DOC_NO ASC ,B.MVT_DOC_LINE_NO ASC
    </otherwise>
    </choose>
    </select>

    <!-- 입출고현황 정보를 Count한다. -->
    <select id="selectGrGiListCnt" resultType="MvtDocItemVO"  parameterType="MvtDocSearchVO" >
    /* [chn.bhmc.dms.par.pmm.service.dao.MvtDocDAO.selectGrGiListCnt] */
    SELECT
        COUNT(*)
    FROM PT_0311T A
    INNER JOIN PT_0312T B ON A.DLR_CD = B.DLR_CD AND A.MVT_DOC_YY_MM = B.MVT_DOC_YY_MM AND A.MVT_DOC_NO = B.MVT_DOC_NO
    LEFT JOIN PT_0312T C ON B.DLR_CD = C.DLR_CD AND B.CANC_MVT_DOC_NO = C.MVT_DOC_NO AND B.CANC_MVT_DOC_YY_MM = C.MVT_DOC_YY_MM AND B.CANC_MVT_DOC_LINE_NO = C.MVT_DOC_LINE_NO
    LEFT JOIN PT_0201T D ON B.DLR_CD  = D.DLR_CD AND B.ITEM_CD = D.ITEM_CD
    WHERE A.DLR_CD = #{sDlrCd}
    <if test='sMvtTp != null and sMvtTp != ""'> AND A.MVT_TP = #{sMvtTp} </if>
    <if test='sBpCd != null and sBpCd != ""'> AND (A.BP_CD = #{sBpCd} OR A.CUST_NO = #{sBpCd}) </if>
    <if test='sStrgeCd != null and sStrgeCd != ""'> AND B.STRGE_CD = #{sStrgeCd} </if>
    <if test='sRefDocNo != null and sRefDocNo != ""'> AND B.REF_DOC_NO = #{sRefDocNo} </if>
    <if test='sMvtDocYyMm != null and sMvtDocYyMm != ""'> AND A.MVT_DOC_YY_MM = #{sMvtDocYyMm} </if>
    <if test='sAbcInd != null and sAbcInd != ""'> AND D.ABC_IND = #{sAbcInd}</if>
    <if test='sCarlineCd != null and sCarlineCd != ""'> AND D.CARLINE_CD = #{sCarlineCd} </if>
    <if test='sItemCd != null and sItemCd != ""'>
        AND B.ITEM_CD LIKE '%'||#{sItemCd}||'%'
    </if>

    <if test='sItemNm != null and sItemNm != ""'>
        AND D.ITEM_NM LIKE '%'||#{sItemNm}||'%'
    </if>
    <if test='sStmtProcDtFr != null'>
        AND A.STMT_PROC_DT <![CDATA[>=]]> #{sStmtProcDtFr}
    </if>
    <if test='sStmtProcDtTo != null'>
        AND A.STMT_PROC_DT <![CDATA[<=]]> #{sStmtProcDtTo} + 1
    </if> --전표일자
    </select>

    <!-- 부품번호에 해당하는 수불이 존재하는지 확인. -->
    <select id="selectGrGiListCntByItemCd" resultType="int">
    /* [chn.bhmc.dms.par.pmm.service.dao.MvtDocDAO.selectGrGiListCntByItemCd] */
    SELECT
        COUNT(*)
    FROM PT_0312T A
    WHERE A.DLR_CD = #{dlrCd}
    AND A.ITEM_CD  = #{itemCd}
    </select>

    <!-- 부품번호에 해당하는 수불내역 확인. -->
    <select id="selectGrGiSummaryByItemCd" resultType="MvtDocItemVO">
    /* [chn.bhmc.dms.par.pmm.service.dao.MvtDocDAO.selectGrGiSummaryByItemCd] */
    SELECT
        MAX(T1.DLR_CD) AS DLR_CD
        ,MAX(T1.ITEM_CD) AS ITEM_CD
        ,MAX(T1.ITEM_NM) AS ITEM_NM
        ,SUM(T1.MM_GR_ITEM_CNT) AS MM_GR_ITEM_CNT
        ,SUM(T1.MM_GR_ITEM_SUM) AS MM_GR_ITEM_SUM
        ,SUM(T1.MM_GI_ITEM_CNT) AS MM_GI_ITEM_CNT
        ,SUM(T1.MM_GI_ITEM_SUM) AS MM_GI_ITEM_SUM
        ,SUM(T1.MM3_GR_ITEM_CNT) AS MM3_GR_ITEM_CNT
        ,SUM(T1.MM3_GR_ITEM_SUM) AS MM3_GR_ITEM_SUM
        ,SUM(T1.MM3_GI_ITEM_CNT) AS MM3_GI_ITEM_CNT
        ,SUM(T1.MM3_GI_ITEM_SUM) AS MM3_GI_ITEM_SUM
        ,SUM(T1.MM6_GR_ITEM_CNT) AS MM6_GR_ITEM_CNT
        ,SUM(T1.MM6_GR_ITEM_SUM) AS MM6_GR_ITEM_SUM
        ,SUM(T1.MM6_GI_ITEM_CNT) AS MM6_GI_ITEM_CNT
        ,SUM(T1.MM6_GI_ITEM_SUM) AS MM6_GI_ITEM_SUM
    FROM
    (
        SELECT
            A.DLR_CD
            ,A.ITEM_CD
            ,A.ITEM_NM
            ,CASE B.RNUM WHEN 1 THEN
                CASE WHEN A.MVT_DOC_YY_MM = TO_CHAR(SYSDATE, 'YYYYMM') THEN
                    CASE WHEN A.MVT_GR_GI_TP = 'R' THEN 1
                    ELSE 0
                    END
                ELSE 0
                END
            ELSE 0
            END MM_GR_ITEM_CNT
            ,CASE B.RNUM WHEN 1 THEN
                CASE WHEN A.MVT_DOC_YY_MM  = TO_CHAR(SYSDATE, 'YYYYMM') THEN
                    CASE WHEN A.MVT_GR_GI_TP = 'I' THEN 1
                    ELSE 0
                    END
                ELSE 0
                END
            ELSE 0
            END MM_GI_ITEM_CNT
            ,CASE B.RNUM WHEN 1 THEN
                CASE WHEN A.MVT_DOC_YY_MM  = TO_CHAR(SYSDATE, 'YYYYMM') THEN
                    CASE WHEN A.MVT_GR_GI_TP = 'R' THEN
                        CASE A.STOCK_CALC_TP WHEN '-' THEN A.ITEM_QTY * -1
                        ELSE A.ITEM_QTY
                        END
                    ELSE 0
                    END
                ELSE 0
                END
            ELSE 0
            END MM_GR_ITEM_SUM
            ,CASE B.RNUM WHEN 1 THEN
                CASE WHEN A.MVT_DOC_YY_MM = TO_CHAR(SYSDATE, 'YYYYMM') THEN
                    CASE WHEN A.MVT_GR_GI_TP = 'I' THEN
                        CASE A.STOCK_CALC_TP WHEN '-' THEN A.ITEM_QTY
                        ELSE A.ITEM_QTY * -1
                        END
                    ELSE 0
                    END
                ELSE 0
                END
            ELSE 0
            END MM_GI_ITEM_SUM
            ,CASE B.RNUM WHEN 2 THEN
                CASE WHEN A.MVT_DOC_YY_MM  <![CDATA[>=]]> TO_CHAR(ADD_MONTHS(SYSDATE,-2),'YYYYMM') THEN
                    CASE WHEN A.MVT_GR_GI_TP = 'R' THEN 1
                    ELSE 0
                    END
                ELSE 0
                END
            ELSE 0
            END MM3_GR_ITEM_CNT
            ,CASE B.RNUM WHEN 2 THEN
                CASE WHEN A.MVT_DOC_YY_MM  <![CDATA[>=]]> TO_CHAR(ADD_MONTHS(SYSDATE,-2),'YYYYMM') THEN
                    CASE WHEN A.MVT_GR_GI_TP = 'I' THEN 1
                    ELSE 0
                    END
                ELSE 0
                END
            ELSE 0
            END MM3_GI_ITEM_CNT
            ,CASE B.RNUM WHEN 2 THEN
                CASE WHEN A.MVT_DOC_YY_MM  <![CDATA[>=]]> TO_CHAR(ADD_MONTHS(SYSDATE,-2),'YYYYMM') THEN
                    CASE WHEN A.MVT_GR_GI_TP = 'R' THEN
                        CASE A.STOCK_CALC_TP WHEN '-' THEN A.ITEM_QTY * -1
                        ELSE A.ITEM_QTY
                        END
                    ELSE 0
                    END
                ELSE 0
                END
            ELSE 0
            END MM3_GR_ITEM_SUM
            ,CASE B.RNUM WHEN 2 THEN
                CASE WHEN A.MVT_DOC_YY_MM  <![CDATA[>=]]> TO_CHAR(ADD_MONTHS(SYSDATE,-2),'YYYYMM') THEN
                    CASE WHEN A.MVT_GR_GI_TP = 'I' THEN
                        CASE  A.STOCK_CALC_TP WHEN '-' THEN A.ITEM_QTY
                        ELSE A.ITEM_QTY * -1
                        END
                    ELSE 0
                    END
                ELSE 0
                END
            ELSE 0
            END MM3_GI_ITEM_SUM
            ,CASE B.RNUM WHEN 3 THEN
                CASE WHEN A.MVT_DOC_YY_MM  <![CDATA[>=]]> TO_CHAR(ADD_MONTHS(SYSDATE,-5),'YYYYMM') THEN
                    CASE WHEN A.MVT_GR_GI_TP = 'R' THEN 1
                    ELSE 0
                    END
                ELSE 0
                END
            ELSE 0
            END MM6_GR_ITEM_CNT
            ,CASE B.RNUM WHEN 3 THEN
                CASE WHEN A.MVT_DOC_YY_MM <![CDATA[>=]]> TO_CHAR(ADD_MONTHS(SYSDATE,-5),'YYYYMM') THEN
                    CASE WHEN A.MVT_GR_GI_TP = 'I' THEN 1
                    ELSE 0
                    END
                ELSE 0
                END
            ELSE 0
            END MM6_GI_ITEM_CNT
            ,CASE B.RNUM WHEN 3 THEN
                CASE WHEN A.MVT_DOC_YY_MM  <![CDATA[>=]]> TO_CHAR(ADD_MONTHS(SYSDATE,-5),'YYYYMM') THEN
                    CASE WHEN A.MVT_GR_GI_TP = 'R' THEN
                        CASE A.STOCK_CALC_TP WHEN '-' THEN A.ITEM_QTY * -1
                        ELSE A.ITEM_QTY
                        END
                    ELSE 0
                    END
                ELSE 0
                END
            ELSE 0
            END MM6_GR_ITEM_SUM
            ,CASE B.RNUM WHEN 3 THEN
                CASE WHEN A.MVT_DOC_YY_MM  <![CDATA[>=]]> TO_CHAR(ADD_MONTHS(SYSDATE,-5),'YYYYMM') THEN
                    CASE WHEN A.MVT_GR_GI_TP = 'I' THEN
                        CASE A.STOCK_CALC_TP WHEN '-' THEN A.ITEM_QTY
                        ELSE A.ITEM_QTY * -1
                        END
                    ELSE 0
                    END
                ELSE 0
                END
            ELSE 0
            END MM6_GI_ITEM_SUM
        FROM
        (
            SELECT
                A.DLR_CD
                ,A.MVT_DOC_YY_MM
                ,B.ITEM_CD
                ,D.ITEM_NM
                ,C.STOCK_CALC_TP
                ,B.ITEM_QTY
                ,C.MVT_GR_GI_TP
            FROM PT_0311T A
            INNER JOIN PT_0312T B ON A.DLR_CD = B.DLR_CD AND A.MVT_DOC_YY_MM = B.MVT_DOC_YY_MM AND A.MVT_DOC_NO = B.MVT_DOC_NO
            INNER JOIN PT_0102T C ON A.DLR_CD = C.DLR_CD AND A.MVT_TP = C.MVT_TP
            INNER JOIN PT_0201T D ON B.DLR_CD = D.DLR_CD AND B.ITEM_CD = D.ITEM_CD
            WHERE A.DLR_CD = #{sDlrCd}
            AND B.ITEM_CD = #{sItemCd}
            AND C.USE_YN = 'Y'
            AND D.ITEM_DSTIN_CD != '20'<!-- 용품제외 -->
            AND A.MVT_TP NOT IN ('23','24')<!-- 부품예류제외 -->
        ) A
        ,(
            SELECT ROWNUM AS RNUM FROM PT_0102T WHERE ROWNUM <![CDATA[<=]]> 3
        ) B
    ) T1
    </select>

    <!-- 출고 수불 COUNT를 조회한다. -->
    <select id="selectGiListCnt" resultType="int" parameterType="MvtDocSearchVO" >
    /* [chn.bhmc.dms.par.pmm.service.dao.MvtDocDAO.selectGiListCnt] */
        SELECT    COUNT(*)
          FROM (
            SELECT
                A.DLR_CD
                ,A.MVT_DOC_YY_MM
                ,A.MVT_DOC_NO
                ,A.STRGE_CD
                ,A.LOC_CD
                ,A.ITEM_CD
                ,A.ITEM_NM
                ,A.ITEM_QTY
                ,A.ITEM_UNIT_CD
                ,A.MVT_TP
                ,A.MVT_TP_NM
                ,A.BIZ_AREA_CD
                ,NVL(A.BP_CD, A.CUST_NO) AS BP_CD
                ,NVL(A.BP_NM, NVL(A.CUST_NM,A.GUEST_CUST_NM)) AS BP_NM
                ,A.STMT_PROC_DT AS GI_DT
                ,TO_CHAR(A.STMT_PROC_DT,'YYYY-MM-DD') AS GI_DT_STRING
                ,CASE WHEN A.MVT_TP IN ('11','12','13') THEN A.SER_DOC_NO
                      ELSE A.REF_DOC_NO
                 END GI_DOC_NO
                ,CASE WHEN A.MVT_TP IN ('11','12','13') THEN A.SER_DOC_LINE_NO
                      ELSE A.REF_DOC_LINE_NO
                 END GI_DOC_LINE_NO
                ,A.CURR_CD
                ,NVL(A.SALE_PRC, A.MOVING_AVG_PRC) AS SALE_PRC
                ,NVL(A.SALE_AMT, A.MOVING_AVG_AMT) AS SALE_AMT
                ,A.AVLB_STOCK_QTY
                ,A.STOCK_QTY
                ,A.RESV_STOCK_QTY
                ,A.BORROW_QTY
                ,A.RENT_QTY
            FROM
            (
                SELECT
                    A.DLR_CD
                    ,A.MVT_DOC_YY_MM
                    ,A.MVT_DOC_NO
                    ,A.STRGE_CD
                    ,A.LOC_CD
                    ,A.ITEM_CD
                    ,D.ITEM_NM
                    ,CASE
                        WHEN B.MVT_TP = '21'
                          THEN
                            CASE WHEN A.DEBIT_CREDIT_DSTIN_CD = 'H'
                                   THEN NVL(A.ITEM_QTY,0)
                                 ELSE 0
                            END
                        WHEN B.MVT_TP = '22'
                          THEN
                            CASE WHEN A.DEBIT_CREDIT_DSTIN_CD = 'H'
                                   THEN NVL(A.ITEM_QTY,0)
                                 ELSE 0
                             END
                        ELSE
                          CASE
                            WHEN C.STOCK_CALC_TP = '+'
                              THEN A.ITEM_QTY * -1
                            ELSE A.ITEM_QTY
                          END
                      END ITEM_QTY
                    ,A.ITEM_UNIT_CD
                    ,B.MVT_TP
                    ,C.MVT_TP_NM
                    ,B.BIZ_AREA_CD
                    ,B.BP_CD
                    ,G.BP_NM
                    ,B.CUST_NO
                    ,E.CUST_NM AS GUEST_CUST_NM
                    ,F.CUST_NM
                    ,B.STMT_PROC_DT
                    ,CASE WHEN B.MVT_TP IN ('41','42') THEN I.GI_DOC_NO
                     ELSE
                        CASE WHEN C.CANC_MVT_YN = 'Y' THEN (SELECT MAX(REF_DOC_NO) FROM PT_0312T WHERE MVT_DOC_NO = A.REF_DOC_NO)
                        ELSE A.REF_DOC_NO
                        END
                     END REF_DOC_NO
                    ,A.REF_DOC_LINE_NO
                    ,A.CURR_CD
                    ,A.STD_PRC
                    ,A.STD_AMT
                    ,CASE
                        WHEN B.MVT_TP = '21'
                          THEN
                            CASE WHEN A.DEBIT_CREDIT_DSTIN_CD = 'H'
                                   THEN NVL(A.SALE_PRC,0)
                                 ELSE 0
                            END
                        WHEN B.MVT_TP = '22'
                          THEN
                            CASE WHEN A.DEBIT_CREDIT_DSTIN_CD = 'H'
                                   THEN CASE WHEN NVL(A.SALE_PRC, 0) = 0
                                               THEN NVL(A.PURC_PRC, 0)
                                             ELSE NVL(A.SALE_PRC, 0)
                                         END
                                 ELSE 0
                             END
                        ELSE A.SALE_PRC
                      END SALE_PRC
                    ,CASE
                        WHEN B.MVT_TP = '21'
                          THEN
                            CASE WHEN A.DEBIT_CREDIT_DSTIN_CD = 'H'
                                   THEN NVL(A.SALE_AMT,0)
                                 ELSE 0
                            END
                        WHEN B.MVT_TP = '22'
                          THEN
                            CASE WHEN A.DEBIT_CREDIT_DSTIN_CD = 'H'
                                   THEN CASE WHEN NVL(A.SALE_AMT, 0) = 0
                                               THEN NVL(A.PURC_AMT, 0)
                                             ELSE NVL(A.SALE_AMT, 0)
                                         END
                                 ELSE 0
                             END
                        ELSE
                          CASE
                            WHEN C.STOCK_CALC_TP = '+'
                              THEN A.SALE_AMT * -1
                            ELSE A.SALE_AMT
                          END
                      END SALE_AMT
                    ,A.MOVING_AVG_PRC
                    ,CASE
                        WHEN B.MVT_TP = '21'
                          THEN
                            CASE WHEN A.DEBIT_CREDIT_DSTIN_CD = 'H'
                                   THEN NVL(A.MOVING_AVG_AMT,0)
                                 ELSE 0
                            END
                        WHEN B.MVT_TP = '22'
                          THEN
                            CASE WHEN A.DEBIT_CREDIT_DSTIN_CD = 'H'
                                   THEN NVL(A.MOVING_AVG_AMT,0)
                                 ELSE 0
                             END
                        ELSE
                          CASE
                            WHEN C.STOCK_CALC_TP = '+'
                              THEN A.MOVING_AVG_AMT * -1
                            ELSE A.MOVING_AVG_AMT
                          END
                      END MOVING_AVG_AMT
                    ,A.PURC_PRC
                    ,A.PURC_AMT
                    ,NVL(H.AVLB_STOCK_QTY,0) + NVL(H.RESV_STOCK_QTY,0) - NVL(H.BORROW_QTY,0) + NVL(H.RENT_QTY,0) AS STOCK_QTY  --재고수량
                    ,NVL(H.AVLB_STOCK_QTY,0) AS AVLB_STOCK_QTY   --가용수량
                    ,NVL(H.RESV_STOCK_QTY,0) AS RESV_STOCK_QTY   --예류수량
                    ,NVL(H.BORROW_QTY,0) AS BORROW_QTY           --차입수량
                    ,NVL(H.RENT_QTY,0) AS RENT_QTY               --대여수량(차출)
                    ,I.GI_DOC_NO AS SER_DOC_NO
                    ,I.GI_DOC_LINE_NO AS SER_DOC_LINE_NO
                FROM PT_0312T A
                INNER JOIN PT_0311T B ON A.DLR_CD = B.DLR_CD AND A.MVT_DOC_YY_MM = B.MVT_DOC_YY_MM AND A.MVT_DOC_NO = B.MVT_DOC_NO
                INNER JOIN PT_0102T C ON B.DLR_CD = C.DLR_CD AND B.MVT_TP = C.MVT_TP
                LEFT JOIN PT_0201T D ON A.DLR_CD  = D.DLR_CD AND A.ITEM_CD = D.ITEM_CD
                LEFT JOIN PT_0521T E ON B.DLR_CD = E.DLR_CD AND A.REF_DOC_NO = E.PAR_SALE_ORD_NO
                LEFT JOIN CR_0101T F ON B.DLR_CD = F.DLR_CD AND B.CUST_NO = F.CUST_NO AND F.DEL_YN = 'N'
                LEFT JOIN PT_0211T G ON B.DLR_CD = G.DLR_CD AND B.BP_CD = G.BP_CD AND G.END_YN != 'Y'
                LEFT JOIN PT_0301T H ON B.DLR_CD = H.DLR_CD AND A.STRGE_CD = H.STRGE_CD AND A.ITEM_CD = H.ITEM_CD
                LEFT JOIN PT_0512T I ON B.DLR_CD = I.DLR_CD AND A.MVT_DOC_YY_MM = I.MVT_DOC_YY_MM AND A.MVT_DOC_NO = I.MVT_DOC_NO AND A.MVT_DOC_LINE_NO = I.MVT_DOC_LINE_NO
                WHERE A.DLR_CD = #{sDlrCd}
                AND (C.MVT_GR_GI_TP = 'I' or (C.MVT_GR_GI_TP = 'T' AND A.DEBIT_CREDIT_DSTIN_CD = 'H'))<!-- 출고 재고이동(T)시  차대변코드 H(마이너스만)-->
                <if test='sItemCd != null and sItemCd != ""'>
                    AND A.ITEM_CD LIKE '%'|| #{sItemCd} ||'%'
                </if>
                <if test='sItemNm != null and sItemNm != ""'>
                    AND D.ITEM_NM LIKE '%'|| #{sItemNm} ||'%'
                </if>
                <if test='sItemDstinCd != null and sItemDstinCd != ""'>
                    AND D.ITEM_DSTIN_CD = #{sItemDstinCd}
                </if>
                <if test='sStrgeCd != null and sStrgeCd != ""'>
                    AND A.STRGE_CD = #{sStrgeCd}
                </if>
                <if test='sMvtTpLst  != null and !sMvtTpLst.isEmpty'> AND B.MVT_TP IN
                    <foreach item="item" index="index" collection="sMvtTpLst" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </if>        --수불유형코드
                <if test='sGiDtFr != null'>
                    AND B.STMT_PROC_DT <![CDATA[>=]]> #{sGiDtFr}
                </if>
                <if test='sGiDtTo != null'>
                    AND B.STMT_PROC_DT <![CDATA[<=]]> #{sGiDtTo} + 1
                </if>
                AND D.ITEM_DSTIN_CD != '20'<!-- 용품제외 -->
                AND B.MVT_TP NOT IN ('23','24')<!-- 부품예류제외 -->
            ) A
            ORDER BY GI_DT DESC, GI_DOC_NO DESC
         ) T1
         WHERE 1 = 1
         <if test='sGiDocNo != null and sGiDocNo != ""'>
             AND T1.GI_DOC_NO LIKE '%'|| #{sGiDocNo} ||'%'
         </if>
    </select>

    <!-- 출고 수불 COUNT를 조회한다. -->
    <select id="selectGiListForDeleteCnt" resultType="int" parameterType="MvtDocSearchVO" >
    /* [chn.bhmc.dms.par.pmm.service.dao.MvtDocDAO.selectGiListForDeleteCnt] */
        SELECT    COUNT(*)
          FROM (
            SELECT
                A.DLR_CD
                ,A.MVT_DOC_YY_MM
                ,A.MVT_DOC_NO
                ,A.STRGE_CD
                ,A.LOC_CD
                ,A.ITEM_CD
                ,A.ITEM_NM
                ,A.ITEM_QTY
                ,A.ITEM_UNIT_CD
                ,A.MVT_TP
                ,A.MVT_TP_NM
                ,A.BIZ_AREA_CD
                ,NVL(A.BP_CD, A.CUST_NO) AS BP_CD
                ,NVL(A.BP_NM, NVL(A.CUST_NM,A.GUEST_CUST_NM)) AS BP_NM
                ,A.STMT_PROC_DT AS GI_DT
                ,TO_CHAR(A.STMT_PROC_DT,'YYYY-MM-DD') AS GI_DT_STRING
                ,CASE WHEN A.MVT_TP = '11' THEN A.SER_DOC_NO
                      WHEN A.MVT_TP = '12' THEN A.SER_DOC_NO
                      WHEN A.MVT_TP = '13' THEN A.SER_DOC_NO
                      ELSE A.REF_DOC_NO
                 END GI_DOC_NO
                ,CASE WHEN A.MVT_TP = '11' THEN A.SER_DOC_LINE_NO
                      WHEN A.MVT_TP = '12' THEN A.SER_DOC_LINE_NO
                      WHEN A.MVT_TP = '13' THEN A.SER_DOC_LINE_NO
                      ELSE A.REF_DOC_LINE_NO
                 END GI_DOC_LINE_NO
                ,A.CURR_CD
                ,NVL(A.SALE_PRC, A.MOVING_AVG_PRC) AS SALE_PRC
                ,NVL(A.SALE_AMT, A.MOVING_AVG_AMT) AS SALE_AMT
                ,A.AVLB_STOCK_QTY
                ,A.STOCK_QTY
                ,A.RESV_STOCK_QTY
                ,A.BORROW_QTY
                ,A.RENT_QTY
            FROM
            (
                SELECT
                    A.DLR_CD
                    ,A.MVT_DOC_YY_MM
                    ,A.MVT_DOC_NO
                    ,A.STRGE_CD
                    ,A.LOC_CD
                    ,A.ITEM_CD
                    ,D.ITEM_NM
                    ,CASE
                        WHEN B.MVT_TP = '21'
                          THEN
                            CASE WHEN A.DEBIT_CREDIT_DSTIN_CD = 'H'
                                   THEN NVL(A.ITEM_QTY,0)
                                 ELSE 0
                            END
                        WHEN B.MVT_TP = '22'
                          THEN
                            CASE WHEN A.DEBIT_CREDIT_DSTIN_CD = 'H'
                                   THEN NVL(A.ITEM_QTY,0)
                                 ELSE 0
                             END
                        ELSE
                          CASE
                            WHEN C.STOCK_CALC_TP = '+'
                              THEN A.ITEM_QTY * -1
                            ELSE A.ITEM_QTY
                          END
                      END ITEM_QTY
                    ,A.ITEM_UNIT_CD
                    ,B.MVT_TP
                    ,C.MVT_TP_NM
                    ,B.BIZ_AREA_CD
                    ,B.BP_CD
                    ,G.BP_NM
                    ,B.CUST_NO
                    ,E.CUST_NM AS GUEST_CUST_NM
                    ,F.CUST_NM
                    ,B.STMT_PROC_DT
                    ,A.REF_DOC_NO
                    ,A.REF_DOC_LINE_NO
                    ,A.CURR_CD
                    ,A.STD_PRC
                    ,A.STD_AMT
                    ,A.SALE_PRC
                    ,CASE
                        WHEN B.MVT_TP = '21'
                          THEN
                            CASE WHEN A.DEBIT_CREDIT_DSTIN_CD = 'H'
                                   THEN NVL(A.SALE_AMT,0)
                                 ELSE 0
                            END
                        WHEN B.MVT_TP = '22'
                          THEN
                            CASE WHEN A.DEBIT_CREDIT_DSTIN_CD = 'H'
                                   THEN CASE WHEN NVL(A.SALE_AMT, 0) = 0
                                               THEN NVL(A.PURC_AMT, 0)
                                             ELSE NVL(A.SALE_AMT, 0)
                                         END
                                 ELSE 0
                             END
                        ELSE
                          CASE
                            WHEN C.STOCK_CALC_TP = '+'
                              THEN A.SALE_AMT * -1
                            ELSE A.SALE_AMT
                          END
                      END SALE_AMT
                    ,A.MOVING_AVG_PRC
                    ,CASE
                            WHEN B.MVT_TP = '21'
                              THEN
                                CASE WHEN A.DEBIT_CREDIT_DSTIN_CD = 'H'
                                       THEN NVL(A.MOVING_AVG_AMT,0)
                                     ELSE 0
                                END
                            WHEN B.MVT_TP = '22'
                              THEN
                                CASE WHEN A.DEBIT_CREDIT_DSTIN_CD = 'H'
                                       THEN NVL(A.MOVING_AVG_AMT,0)
                                     ELSE 0
                                 END
                            ELSE
                              CASE
                                WHEN C.STOCK_CALC_TP = '+'
                                  THEN A.MOVING_AVG_AMT * -1
                                ELSE A.MOVING_AVG_AMT
                              END
                          END MOVING_AVG_AMT
                    ,A.PURC_PRC
                    ,A.PURC_AMT
                    ,NVL(H.AVLB_STOCK_QTY,0) + NVL(H.RESV_STOCK_QTY,0) - NVL(H.BORROW_QTY,0) + NVL(H.RENT_QTY,0) AS STOCK_QTY  --재고수량
                    ,NVL(H.AVLB_STOCK_QTY,0) AS AVLB_STOCK_QTY   --가용수량
                    ,NVL(H.RESV_STOCK_QTY,0) AS RESV_STOCK_QTY   --예류수량
                    ,NVL(H.BORROW_QTY,0) AS BORROW_QTY           --차입수량
                    ,NVL(H.RENT_QTY,0) AS RENT_QTY               --대여수량(차출)
                    ,I.GI_DOC_NO AS SER_DOC_NO
                    ,I.GI_DOC_LINE_NO AS SER_DOC_LINE_NO
                FROM PT_0312T A
                INNER JOIN PT_0311T B ON A.DLR_CD = B.DLR_CD AND A.MVT_DOC_YY_MM = B.MVT_DOC_YY_MM AND A.MVT_DOC_NO = B.MVT_DOC_NO
                INNER JOIN PT_0102T C ON B.DLR_CD = C.DLR_CD AND B.MVT_TP = C.MVT_TP
                LEFT JOIN PT_0201T D ON A.DLR_CD  = D.DLR_CD AND A.ITEM_CD = D.ITEM_CD
                LEFT JOIN PT_0521T E ON B.DLR_CD = E.DLR_CD AND A.REF_DOC_NO = E.PAR_SALE_ORD_NO
                LEFT JOIN CR_0101T F ON B.DLR_CD = F.DLR_CD AND B.CUST_NO = F.CUST_NO AND F.DEL_YN = 'N'
                LEFT JOIN PT_0211T G ON B.DLR_CD = G.DLR_CD AND B.BP_CD = G.BP_CD AND G.END_YN != 'Y'
                LEFT JOIN PT_0301T H ON B.DLR_CD = H.DLR_CD AND A.STRGE_CD = H.STRGE_CD AND A.ITEM_CD = H.ITEM_CD
                LEFT JOIN PT_0512T I ON B.DLR_CD = I.DLR_CD AND A.MVT_DOC_YY_MM = I.MVT_DOC_YY_MM AND A.MVT_DOC_NO = I.MVT_DOC_NO AND A.MVT_DOC_LINE_NO = I.MVT_DOC_LINE_NO
                WHERE A.DLR_CD = #{sDlrCd}
                AND (C.MVT_GR_GI_TP = 'I' or (C.MVT_GR_GI_TP = 'T' AND A.DEBIT_CREDIT_DSTIN_CD = 'H'))<!-- 출고 재고이동(T)시  차대변코드 H(마이너스만)-->
                AND A.ITEM_CD  = #{sItemCd}
                <if test='sItemNm != null and sItemNm != ""'>
                   AND D.ITEM_NM LIKE '%'|| #{sItemNm} ||'%'
                </if>
                <if test='sItemDstinCd != null and sItemDstinCd != ""'>
                   AND D.ITEM_DSTIN_CD = #{sItemDstinCd}
                 </if>
                 <if test='sMvtTpLst  != null and !sMvtTpLst.isEmpty'> AND B.MVT_TP IN
                    <foreach item="item" index="index" collection="sMvtTpLst" open="(" separator="," close=")">
                       #{item}
                    </foreach>
                 </if>        --수불유형코드
                 <if test='sGiDtFr != null'>
                     AND B.STMT_PROC_DT <![CDATA[>=]]> #{sGiDtFr}
                 </if>
                 <if test='sGiDtTo != null'>
                     AND B.STMT_PROC_DT <![CDATA[<=]]> #{sGiDtTo} + 1
                 </if>
                 AND D.ITEM_DSTIN_CD != '20'<!-- 용품제외 -->
                 AND B.MVT_TP NOT IN ('23','24')<!-- 부품예류제외 -->
            ) A
            ORDER BY GI_DT DESC, GI_DOC_NO DESC
         ) T1
         WHERE 1 = 1
         <if test='sGiDocNo != null and sGiDocNo != ""'>
             AND T1.GI_DOC_NO LIKE '%'|| #{sGiDocNo} ||'%'
         </if>
    </select>

    <!-- 출고 수불 정보를 조회한다.. -->
    <select id="selectGiList" resultType="MvtDocItemVO" parameterType="MvtDocSearchVO" >
    /* [chn.bhmc.dms.par.pmm.service.dao.MvtDocDAO.selectGiList] */
    SELECT
        T3.*
    FROM(
        SELECT
            ROWNUM AS RNUM
            ,T2.*
        FROM(
            SELECT
                T1.*
            FROM (
                SELECT
                    A.DLR_CD
                    ,A.MVT_DOC_YY_MM
                    ,A.MVT_DOC_NO
                    ,A.STRGE_CD
                    ,A.LOC_CD
                    ,A.ITEM_CD
                    ,A.ITEM_NM
                    ,A.ITEM_QTY
                    ,A.ITEM_UNIT_CD
                    ,A.MVT_TP
                    ,A.MVT_TP_NM
                    ,A.BIZ_AREA_CD
                    ,NVL(A.BP_CD, A.CUST_NO) AS BP_CD
                    ,NVL(A.BP_NM, NVL(A.CUST_NM,A.GUEST_CUST_NM)) AS BP_NM
                    ,A.STMT_PROC_DT AS GI_DT
                    ,TO_CHAR(A.STMT_PROC_DT,'YYYY-MM-DD') AS GI_DT_STRING
                    ,CASE WHEN A.MVT_TP IN ('11','12','13') THEN A.SER_DOC_NO
                          ELSE A.REF_DOC_NO
                     END GI_DOC_NO
                    ,CASE WHEN A.MVT_TP IN ('11','12','13') THEN A.SER_DOC_LINE_NO
                          ELSE A.REF_DOC_LINE_NO
                     END GI_DOC_LINE_NO
                    ,A.CURR_CD
                    ,NVL(A.SALE_PRC, A.MOVING_AVG_PRC) AS SALE_PRC
                    ,NVL(A.SALE_TAX_DDCT_PRC, A.MOVING_AVG_TAX_DDCT_PRC) AS SALE_TAX_DDCT_PRC
                    ,NVL(A.SALE_AMT, A.MOVING_AVG_AMT) AS SALE_AMT
                    ,NVL(A.SALE_TAX_DDCT_AMT, A.MOVING_AVG_TAX_DDCT_AMT) AS SALE_TAX_DDCT_AMT
                    ,A.AVLB_STOCK_QTY
                    ,A.STOCK_QTY
                    ,A.RESV_STOCK_QTY
                    ,A.BORROW_QTY
                    ,A.RENT_QTY
                    ,A.MOVING_AVG_AMT
                    ,A.MOVING_AVG_TAX_DDCT_AMT
                    ,A.MOVING_AVG_PRC
                    ,A.MOVING_AVG_TAX_DDCT_PRC
                FROM
                (
                    SELECT
                        A.DLR_CD
                        ,A.MVT_DOC_YY_MM
                        ,A.MVT_DOC_NO
                        ,A.STRGE_CD
                        ,A.LOC_CD
                        ,A.ITEM_CD
                        ,D.ITEM_NM
                        ,CASE
                            WHEN B.MVT_TP = '21'
                              THEN
                                CASE WHEN A.DEBIT_CREDIT_DSTIN_CD = 'H'
                                       THEN NVL(A.ITEM_QTY,0)
                                     ELSE 0
                                END
                            WHEN B.MVT_TP = '22'
                              THEN
                                CASE WHEN A.DEBIT_CREDIT_DSTIN_CD = 'H'
                                       THEN NVL(A.ITEM_QTY,0)
                                     ELSE 0
                                 END
                            ELSE
                              CASE
                                WHEN C.STOCK_CALC_TP = '+'
                                  THEN A.ITEM_QTY * -1
                                ELSE A.ITEM_QTY
                              END
                          END ITEM_QTY
                        ,A.ITEM_UNIT_CD
                        ,B.MVT_TP
                        ,C.MVT_TP_NM
                        ,B.BIZ_AREA_CD
                        ,B.BP_CD
                        ,G.BP_NM
                        ,B.CUST_NO
                        ,E.CUST_NM AS GUEST_CUST_NM
                        ,NVL(F.CUST_NM,J.CUST_NM) as CUST_NM
                        ,B.STMT_PROC_DT
                        ,CASE WHEN B.MVT_TP IN ('41','42') THEN I.GI_DOC_NO
                         ELSE
                            CASE WHEN C.CANC_MVT_YN = 'Y' THEN (SELECT MAX(REF_DOC_NO) FROM PT_0312T WHERE MVT_DOC_NO = A.REF_DOC_NO)
                            ELSE A.REF_DOC_NO
                            END
                         END REF_DOC_NO
                        ,A.REF_DOC_LINE_NO
                        ,A.CURR_CD
                        ,A.STD_PRC
                        ,A.STD_AMT
                        ,CASE WHEN B.MVT_TP = '22'
                                THEN CASE WHEN NVL(A.SALE_PRC, 0) = 0
                                            THEN NVL(A.PURC_PRC, 0)
                                          ELSE NVL(A.SALE_PRC, 0)
                                     END
                              ELSE A.SALE_PRC
                         END SALE_PRC
                        ,CASE WHEN B.MVT_TP = '22'
                                THEN CASE WHEN NVL(A.SALE_TAX_DDCT_PRC, 0) = 0
                                            THEN NVL(A.PURC_TAX_DDCT_PRC, 0)
                                          ELSE NVL(A.SALE_TAX_DDCT_PRC, 0)
                                     END
                              ELSE A.SALE_TAX_DDCT_PRC
                         END SALE_TAX_DDCT_PRC
                        ,CASE
                            WHEN B.MVT_TP = '21'
                              THEN
                                CASE WHEN A.DEBIT_CREDIT_DSTIN_CD = 'H'
                                       THEN NVL(A.SALE_AMT,0)
                                     ELSE 0
                                END
                            WHEN B.MVT_TP = '22'
                              THEN
                                CASE WHEN A.DEBIT_CREDIT_DSTIN_CD = 'H'
                                       THEN CASE WHEN NVL(A.SALE_AMT, 0) = 0
                                                   THEN NVL(A.PURC_AMT, 0)
                                                 ELSE NVL(A.SALE_AMT, 0)
                                             END
                                     ELSE 0
                                 END
                            ELSE
                              CASE
                                WHEN C.STOCK_CALC_TP = '+'
                                  THEN A.SALE_AMT * -1
                                ELSE A.SALE_AMT
                              END
                          END SALE_AMT
                        ,CASE
                            WHEN B.MVT_TP = '21'
                              THEN
                                CASE WHEN A.DEBIT_CREDIT_DSTIN_CD = 'H'
                                       THEN NVL(A.SALE_TAX_DDCT_AMT,0)
                                     ELSE 0
                                END
                            WHEN B.MVT_TP = '22'
                              THEN
                                CASE WHEN A.DEBIT_CREDIT_DSTIN_CD = 'H'
                                       THEN CASE WHEN NVL(A.SALE_TAX_DDCT_AMT, 0) = 0
                                                   THEN NVL(A.PURC_TAX_DDCT_AMT, 0)
                                                 ELSE NVL(A.SALE_TAX_DDCT_AMT, 0)
                                             END
                                     ELSE 0
                                 END
                            ELSE
                              CASE
                                WHEN C.STOCK_CALC_TP = '+'
                                  THEN A.SALE_TAX_DDCT_AMT * -1
                                ELSE A.SALE_TAX_DDCT_AMT
                              END
                          END SALE_TAX_DDCT_AMT
                        ,A.MOVING_AVG_PRC
                        ,A.MOVING_AVG_TAX_DDCT_PRC
                        ,CASE
                            WHEN B.MVT_TP = '21'
                              THEN
                                CASE WHEN A.DEBIT_CREDIT_DSTIN_CD = 'H'
                                       THEN NVL(A.MOVING_AVG_AMT,0)
                                     ELSE 0
                                END
                            WHEN B.MVT_TP = '22'
                              THEN
                                CASE WHEN A.DEBIT_CREDIT_DSTIN_CD = 'H'
                                       THEN NVL(A.MOVING_AVG_AMT,0)
                                     ELSE 0
                                 END
                            ELSE
                              CASE
                                WHEN C.STOCK_CALC_TP = '+'
                                  THEN A.MOVING_AVG_AMT * -1
                                ELSE A.MOVING_AVG_AMT
                              END
                          END MOVING_AVG_AMT
                        ,CASE
                            WHEN B.MVT_TP = '21'
                              THEN
                                CASE WHEN A.DEBIT_CREDIT_DSTIN_CD = 'H'
                                       THEN NVL(A.MOVING_AVG_TAX_DDCT_AMT,0)
                                     ELSE 0
                                END
                            WHEN B.MVT_TP = '22'
                              THEN
                                CASE WHEN A.DEBIT_CREDIT_DSTIN_CD = 'H'
                                       THEN NVL(A.MOVING_AVG_TAX_DDCT_AMT,0)
                                     ELSE 0
                                 END
                            ELSE
                              CASE
                                WHEN C.STOCK_CALC_TP = '+'
                                  THEN A.MOVING_AVG_TAX_DDCT_AMT * -1
                                ELSE A.MOVING_AVG_TAX_DDCT_AMT
                              END
                          END MOVING_AVG_TAX_DDCT_AMT
                        ,A.PURC_PRC
                        ,A.PURC_TAX_DDCT_PRC
                        ,A.PURC_AMT
                        ,A.PURC_TAX_DDCT_AMT
                        ,NVL(H.AVLB_STOCK_QTY,0) + NVL(H.RESV_STOCK_QTY,0) - NVL(H.BORROW_QTY,0) + NVL(H.RENT_QTY,0) AS STOCK_QTY  --재고수량
                        ,NVL(H.AVLB_STOCK_QTY,0) AS AVLB_STOCK_QTY   --가용수량
                        ,NVL(H.RESV_STOCK_QTY,0) AS RESV_STOCK_QTY   --예류수량
                        ,NVL(H.BORROW_QTY,0) AS BORROW_QTY           --차입수량
                        ,NVL(H.RENT_QTY,0) AS RENT_QTY               --대여수량(차출)
                        ,I.GI_DOC_NO AS SER_DOC_NO
                        ,I.GI_DOC_LINE_NO AS SER_DOC_LINE_NO
                    FROM PT_0312T A
                    INNER JOIN PT_0311T B ON A.DLR_CD = B.DLR_CD AND A.MVT_DOC_YY_MM = B.MVT_DOC_YY_MM AND A.MVT_DOC_NO = B.MVT_DOC_NO
                    INNER JOIN PT_0102T C ON B.DLR_CD = C.DLR_CD AND B.MVT_TP = C.MVT_TP
                    LEFT JOIN PT_0201T D ON A.DLR_CD  = D.DLR_CD AND A.ITEM_CD = D.ITEM_CD
                    LEFT JOIN PT_0521T E ON B.DLR_CD = E.DLR_CD AND A.REF_DOC_NO = E.PAR_SALE_ORD_NO
                    LEFT JOIN CR_0101T F ON B.DLR_CD = F.DLR_CD AND B.CUST_NO = F.CUST_NO AND F.DEL_YN = 'N'
                    LEFT JOIN PT_0211T G ON B.DLR_CD = G.DLR_CD AND B.BP_CD = G.BP_CD AND G.END_YN != 'Y'
                    LEFT JOIN PT_0301T H ON B.DLR_CD = H.DLR_CD AND A.STRGE_CD = H.STRGE_CD AND A.ITEM_CD = H.ITEM_CD
                    LEFT JOIN PT_0512T I ON B.DLR_CD = I.DLR_CD AND A.MVT_DOC_YY_MM = I.MVT_DOC_YY_MM AND A.MVT_DOC_NO = I.MVT_DOC_NO AND A.MVT_DOC_LINE_NO = I.MVT_DOC_LINE_NO
                    LEFT JOIN CR_0101T J ON B.DLR_CD = J.DLR_CD AND B.BP_CD = J.CUST_NO AND J.DEL_YN = 'N'
                    WHERE A.DLR_CD = #{sDlrCd}
                    AND (C.MVT_GR_GI_TP = 'I' or (C.MVT_GR_GI_TP = 'T' AND A.DEBIT_CREDIT_DSTIN_CD = 'H'))<!-- 출고 재고이동(T)시  차대변코드 H(마이너스만)-->
                    <if test='sItemCd != null and sItemCd != ""'>
                        AND A.ITEM_CD LIKE '%'|| #{sItemCd} ||'%'
                    </if>
                    <if test='sItemNm != null and sItemNm != ""'>
                        AND D.ITEM_NM LIKE '%'|| #{sItemNm} ||'%'
                    </if>
                    <if test='sItemDstinCd != null and sItemDstinCd != ""'>
                        AND D.ITEM_DSTIN_CD = #{sItemDstinCd}
                    </if>
                    <if test='sStrgeCd != null and sStrgeCd != ""'>
                        AND A.STRGE_CD = #{sStrgeCd}
                    </if>
                    <if test='sMvtTpLst  != null and !sMvtTpLst.isEmpty'> AND B.MVT_TP IN
                        <foreach item="item" index="index" collection="sMvtTpLst" open="(" separator="," close=")">
                            #{item}
                        </foreach>
                    </if>
                    <if test='sGiDtFr != null'>
                        AND B.STMT_PROC_DT <![CDATA[>=]]> #{sGiDtFr}
                    </if>
                    <if test='sGiDtTo != null'>
                        AND B.STMT_PROC_DT <![CDATA[<=]]> #{sGiDtTo} + 1
                    </if>
                    AND D.ITEM_DSTIN_CD != '20'<!-- 용품제외 -->
                    AND B.MVT_TP NOT IN ('23','24')<!-- 부품예류제외 -->
                ) A
                ORDER BY GI_DT DESC, GI_DOC_NO DESC
             ) T1
             WHERE 1 = 1
             <if test='sGiDocNo != null and sGiDocNo != ""'>
                AND T1.GI_DOC_NO LIKE '%'|| #{sGiDocNo} ||'%'
             </if>
         )T2
        <where>
            <if test='firstIndex != -1 and lastIndex != -1'>
                ROWNUM <![CDATA[<=]]> #{lastIndex}
            </if>
        </where>
    )T3
    <where>
        <if test='firstIndex != -1 and lastIndex != -1'>
            RNUM > #{firstIndex}
        </if>
    </where>

    </select>

    <!-- 출고 수불 정보를 조회한다.(Excel) -->
    <select id="selectGiExcelList" resultType="MvtDocItemVO" parameterType="MvtDocSearchVO" >
    /* [chn.bhmc.dms.par.pmm.service.dao.MvtDocDAO.selectGiExcelList] */
          SELECT T1.STRGE_CD
                ,T1.ITEM_CD
                ,T1.ITEM_NM
                ,T1.ITEM_QTY
                ,T1.MVT_TP_NM
                ,T1.BP_NM
                ,T1.GI_DT_STRING
                ,T1.GI_DOC_NO
                ,T1.SALE_PRC
                ,T1.SALE_TAX_DDCT_PRC
                ,T1.SALE_AMT
                ,T1.SALE_TAX_DDCT_AMT
                ,T1.AVLB_STOCK_QTY
                ,T1.STOCK_QTY
                ,T1.RESV_STOCK_QTY
                ,T1.BORROW_QTY
                ,T1.RENT_QTY
            FROM
              (
              SELECT A.STRGE_CD
                    ,A.ITEM_CD
                    ,A.ITEM_NM
                    ,A.ITEM_QTY
                    ,A.MVT_TP_NM
                    ,NVL(A.BP_NM, NVL(A.CUST_NM,A.GUEST_CUST_NM)) AS BP_NM
                    ,TO_CHAR(A.STMT_PROC_DT,'YYYY-MM-DD') AS GI_DT_STRING
                    ,CASE WHEN A.MVT_TP = '11' THEN A.SER_DOC_NO
                          WHEN A.MVT_TP = '12' THEN A.SER_DOC_NO
                          WHEN A.MVT_TP = '13' THEN A.SER_DOC_NO
                          ELSE A.REF_DOC_NO
                     END GI_DOC_NO
                    ,NVL(A.SALE_PRC, A.MOVING_AVG_PRC) AS SALE_PRC
                    ,NVL(A.SALE_TAX_DDCT_PRC, A.MOVING_AVG_TAX_DDCT_PRC) AS SALE_TAX_DDCT_PRC
                    ,NVL(A.SALE_AMT, A.MOVING_AVG_AMT) AS SALE_AMT
                    ,NVL(A.SALE_TAX_DDCT_AMT, A.MOVING_AVG_TAX_DDCT_AMT) AS SALE_TAX_DDCT_AMT
                    ,A.AVLB_STOCK_QTY
                    ,A.STOCK_QTY
                    ,A.RESV_STOCK_QTY
                    ,A.BORROW_QTY
                    ,A.RENT_QTY
                FROM
                (
                    SELECT
                        A.DLR_CD
                        ,A.MVT_DOC_YY_MM
                        ,A.MVT_DOC_NO
                        ,A.STRGE_CD
                        ,A.LOC_CD
                        ,A.ITEM_CD
                        ,D.ITEM_NM
                        ,CASE
                            WHEN B.MVT_TP = '21'
                              THEN
                                CASE WHEN A.DEBIT_CREDIT_DSTIN_CD = 'H'
                                       THEN NVL(A.ITEM_QTY,0)
                                     ELSE 0
                                END
                            WHEN B.MVT_TP = '22'
                              THEN
                                CASE WHEN A.DEBIT_CREDIT_DSTIN_CD = 'H'
                                       THEN NVL(A.ITEM_QTY,0)
                                     ELSE 0
                                 END
                            ELSE
                              CASE
                                WHEN C.STOCK_CALC_TP = '+'
                                  THEN A.ITEM_QTY * -1
                                ELSE A.ITEM_QTY
                              END
                          END ITEM_QTY
                        ,A.ITEM_UNIT_CD
                        ,B.MVT_TP
                        ,C.MVT_TP_NM
                        ,B.BIZ_AREA_CD
                        ,B.BP_CD
                        ,G.BP_NM
                        ,B.CUST_NO
                        ,E.CUST_NM AS GUEST_CUST_NM
                        ,F.CUST_NM
                        ,B.STMT_PROC_DT
                        ,A.REF_DOC_NO
                        ,A.REF_DOC_LINE_NO
                        ,A.CURR_CD
                        ,A.STD_PRC
                        ,A.STD_AMT
                        ,A.SALE_PRC
                        ,A.SALE_TAX_DDCT_PRC
                        ,CASE
                            WHEN B.MVT_TP = '21'
                              THEN
                                CASE WHEN A.DEBIT_CREDIT_DSTIN_CD = 'H'
                                       THEN NVL(A.SALE_AMT,0)
                                     ELSE 0
                                END
                            WHEN B.MVT_TP = '22'
                              THEN
                                CASE WHEN A.DEBIT_CREDIT_DSTIN_CD = 'H'
                                       THEN CASE WHEN NVL(A.SALE_AMT, 0) = 0
                                                   THEN NVL(A.PURC_AMT, 0)
                                                 ELSE NVL(A.SALE_AMT, 0)
                                             END
                                     ELSE 0
                                 END
                            ELSE
                              CASE
                                WHEN C.STOCK_CALC_TP = '+'
                                  THEN A.SALE_AMT * -1
                                ELSE A.SALE_AMT
                              END
                          END SALE_AMT
                        ,CASE
                            WHEN B.MVT_TP = '21'
                              THEN
                                CASE WHEN A.DEBIT_CREDIT_DSTIN_CD = 'H'
                                       THEN NVL(A.SALE_TAX_DDCT_AMT,0)
                                     ELSE 0
                                END
                            WHEN B.MVT_TP = '22'
                              THEN
                                CASE WHEN A.DEBIT_CREDIT_DSTIN_CD = 'H'
                                       THEN CASE WHEN NVL(A.SALE_TAX_DDCT_AMT, 0) = 0
                                                   THEN NVL(A.PURC_TAX_DDCT_AMT, 0)
                                                 ELSE NVL(A.SALE_TAX_DDCT_AMT, 0)
                                             END
                                     ELSE 0
                                 END
                            ELSE
                              CASE
                                WHEN C.STOCK_CALC_TP = '+'
                                  THEN A.SALE_TAX_DDCT_AMT * -1
                                ELSE A.SALE_TAX_DDCT_AMT
                              END
                          END SALE_TAX_DDCT_AMT
                        ,A.MOVING_AVG_PRC
                        ,A.MOVING_AVG_TAX_DDCT_PRC
                        ,CASE
                            WHEN B.MVT_TP = '21'
                              THEN
                                CASE WHEN A.DEBIT_CREDIT_DSTIN_CD = 'H'
                                       THEN NVL(A.MOVING_AVG_AMT,0)
                                     ELSE 0
                                END
                            WHEN B.MVT_TP = '22'
                              THEN
                                CASE WHEN A.DEBIT_CREDIT_DSTIN_CD = 'H'
                                       THEN NVL(A.MOVING_AVG_AMT,0)
                                     ELSE 0
                                 END
                            ELSE
                              CASE
                                WHEN C.STOCK_CALC_TP = '+'
                                  THEN A.MOVING_AVG_AMT * -1
                                ELSE A.MOVING_AVG_AMT
                              END
                          END MOVING_AVG_AMT
                        ,CASE
                            WHEN B.MVT_TP = '21'
                              THEN
                                CASE WHEN A.DEBIT_CREDIT_DSTIN_CD = 'H'
                                       THEN NVL(A.MOVING_AVG_TAX_DDCT_AMT,0)
                                     ELSE 0
                                END
                            WHEN B.MVT_TP = '22'
                              THEN
                                CASE WHEN A.DEBIT_CREDIT_DSTIN_CD = 'H'
                                       THEN NVL(A.MOVING_AVG_TAX_DDCT_AMT,0)
                                     ELSE 0
                                 END
                            ELSE
                              CASE
                                WHEN C.STOCK_CALC_TP = '+'
                                  THEN A.MOVING_AVG_TAX_DDCT_AMT * -1
                                ELSE A.MOVING_AVG_TAX_DDCT_AMT
                              END
                          END MOVING_AVG_TAX_DDCT_AMT
                        ,A.PURC_PRC
                        ,A.PURC_TAX_DDCT_PRC
                        ,A.PURC_AMT
                        ,A.PURC_TAX_DDCT_AMT
                        ,NVL(H.AVLB_STOCK_QTY,0) + NVL(H.RESV_STOCK_QTY,0) - NVL(H.BORROW_QTY,0) + NVL(H.RENT_QTY,0) AS STOCK_QTY  --재고수량
                        ,NVL(H.AVLB_STOCK_QTY,0) AS AVLB_STOCK_QTY   --가용수량
                        ,NVL(H.RESV_STOCK_QTY,0) AS RESV_STOCK_QTY   --예류수량
                        ,NVL(H.BORROW_QTY,0) AS BORROW_QTY           --차입수량
                        ,NVL(H.RENT_QTY,0) AS RENT_QTY               --대여수량(차출)
                        ,I.GI_DOC_NO AS SER_DOC_NO
                    FROM PT_0312T A
                    INNER JOIN PT_0311T B ON A.DLR_CD = B.DLR_CD AND A.MVT_DOC_YY_MM = B.MVT_DOC_YY_MM AND A.MVT_DOC_NO = B.MVT_DOC_NO
                    INNER JOIN PT_0102T C ON B.DLR_CD = C.DLR_CD AND B.MVT_TP = C.MVT_TP
                    LEFT JOIN PT_0201T D ON A.DLR_CD  = D.DLR_CD AND A.ITEM_CD = D.ITEM_CD
                    LEFT JOIN PT_0521T E ON B.DLR_CD = E.DLR_CD AND A.REF_DOC_NO = E.PAR_SALE_ORD_NO
                    LEFT JOIN CR_0101T F ON B.DLR_CD = F.DLR_CD AND B.CUST_NO = F.CUST_NO AND F.DEL_YN = 'N'
                    LEFT JOIN PT_0211T G ON B.DLR_CD = G.DLR_CD AND B.BP_CD = G.BP_CD AND G.END_YN != 'Y'
                    LEFT JOIN PT_0301T H ON B.DLR_CD = H.DLR_CD AND A.STRGE_CD = H.STRGE_CD AND A.ITEM_CD = H.ITEM_CD
                    LEFT JOIN PT_0512T I ON B.DLR_CD = I.DLR_CD AND A.MVT_DOC_YY_MM = I.MVT_DOC_YY_MM AND A.MVT_DOC_NO = I.MVT_DOC_NO AND A.MVT_DOC_LINE_NO = I.MVT_DOC_LINE_NO
                    WHERE A.DLR_CD = #{sDlrCd}
                    AND (C.MVT_GR_GI_TP = 'I' or (C.MVT_GR_GI_TP = 'T' AND A.DEBIT_CREDIT_DSTIN_CD = 'H'))
                    <if test='sItemCd != null and sItemCd != ""'>
                       AND A.ITEM_CD LIKE '%'|| #{sItemCd} ||'%'
                    </if>
                    <if test='sItemNm != null and sItemNm != ""'>
                       AND D.ITEM_NM LIKE '%'|| #{sItemNm} ||'%'
                    </if>
                    <if test='sItemDstinCd != null and sItemDstinCd != ""'>
                       AND D.ITEM_DSTIN_CD = #{sItemDstinCd}
                     </if>
                     <if test='sMvtTpLst  != null and !sMvtTpLst.isEmpty'> AND B.MVT_TP IN
                        <foreach item="item" index="index" collection="sMvtTpLst" open="(" separator="," close=")">
                           #{item}
                        </foreach>
                     </if>        --수불유형코드
                     <if test='sGiDtFr != null'>
                         AND B.STMT_PROC_DT <![CDATA[>=]]> #{sGiDtFr}
                     </if>
                     <if test='sGiDtTo != null'>
                         AND B.STMT_PROC_DT <![CDATA[<=]]> #{sGiDtTo} + 1
                     </if>
                     AND D.ITEM_DSTIN_CD != '20'<!-- 용품제외 -->
                     AND B.MVT_TP NOT IN ('23','24')<!-- 부품예류제외 -->
                ) A
          ) T1
          WHERE 1 = 1
          <if test='sGiDocNo != null and sGiDocNo != ""'>
               AND T1.GI_DOC_NO LIKE '%'|| #{sGiDocNo} ||'%'
          </if>
          ORDER BY GI_DT_STRING DESC, GI_DOC_NO DESC
    </select>

    <!-- 입고 수불 COUNT를 조회한다. -->
    <select id="selectGrListCnt" resultType="int" parameterType="MvtDocSearchVO" >
    /* [chn.bhmc.dms.par.pmm.service.dao.MvtDocDAO.selectGrListCnt] */
    SELECT
        COUNT(*)
    FROM
    (
        SELECT
            A.DLR_CD
            ,A.MVT_DOC_YY_MM
            ,A.MVT_DOC_NO
            ,A.STRGE_CD
            ,A.LOC_CD
            ,A.ITEM_CD
            ,D.ITEM_NM
            ,CASE
                WHEN B.MVT_TP = '21'
                  THEN
                    CASE WHEN A.DEBIT_CREDIT_DSTIN_CD = 'S'
                           THEN NVL(A.ITEM_QTY,0)
                         ELSE 0
                    END
                WHEN B.MVT_TP = '22'
                  THEN
                    CASE WHEN A.DEBIT_CREDIT_DSTIN_CD = 'S'
                           THEN NVL(A.ITEM_QTY,0)
                         ELSE 0
                     END
                ELSE
                  CASE
                    WHEN C.STOCK_CALC_TP = '-'
                      THEN A.ITEM_QTY * -1
                    ELSE A.ITEM_QTY
                  END
              END ITEM_QTY
            ,A.ITEM_UNIT_CD
            ,B.MVT_TP
            ,C.MVT_TP_NM
            ,B.BIZ_AREA_CD
            ,B.BP_CD
            ,F.BP_NM
            ,B.CUST_NO
            ,E.CUST_NM
            ,B.STMT_PROC_DT
            ,CASE WHEN C.CANC_MVT_YN = 'Y' THEN (SELECT MAX(REF_DOC_NO) FROM PT_0312T WHERE MVT_DOC_NO = A.REF_DOC_NO)
                  ELSE A.REF_DOC_NO
             END REF_DOC_NO
            ,A.REF_DOC_LINE_NO
            ,A.CURR_CD
            ,A.STD_PRC
            ,A.STD_AMT
            ,A.SALE_PRC
            ,A.SALE_AMT
            ,A.MOVING_AVG_PRC
            ,CASE
                WHEN B.MVT_TP = '21'
                  THEN
                    CASE WHEN A.DEBIT_CREDIT_DSTIN_CD = 'S'
                           THEN NVL(A.MOVING_AVG_AMT,0)
                         ELSE 0
                    END
                WHEN B.MVT_TP = '22'
                  THEN
                    CASE WHEN A.DEBIT_CREDIT_DSTIN_CD = 'S'
                           THEN NVL(A.MOVING_AVG_AMT,0)
                         ELSE 0
                     END
                ELSE
                  CASE
                    WHEN C.STOCK_CALC_TP = '-'
                      THEN A.MOVING_AVG_AMT * -1
                    ELSE A.MOVING_AVG_AMT
                  END
              END MOVING_AVG_AMT
            ,CASE WHEN B.MVT_TP = '22'
                    THEN CASE WHEN NVL(A.PURC_PRC, 0) = 0
                                THEN NVL(A.SALE_PRC, 0)
                              ELSE NVL(A.PURC_PRC, 0)
                          END
                  ELSE A.PURC_PRC
             END PURC_PRC
            ,CASE
                WHEN B.MVT_TP = '21'
                  THEN
                    CASE WHEN A.DEBIT_CREDIT_DSTIN_CD = 'S'
                           THEN NVL(A.PURC_AMT,0)
                         ELSE 0
                    END
                WHEN B.MVT_TP = '22'
                  THEN
                    CASE WHEN A.DEBIT_CREDIT_DSTIN_CD = 'S'
                           THEN CASE WHEN NVL(A.PURC_AMT, 0) = 0
                                       THEN NVL(A.SALE_AMT, 0)
                                     ELSE NVL(A.PURC_AMT, 0)
                                 END
                         ELSE 0
                     END
                ELSE
                  CASE
                    WHEN C.STOCK_CALC_TP = '-'
                      THEN A.MOVING_AVG_AMT * -1
                    ELSE A.PURC_AMT
                  END
              END PURC_AMT
        FROM PT_0312T A
        INNER JOIN PT_0311T B ON A.DLR_CD = B.DLR_CD AND A.MVT_DOC_YY_MM = B.MVT_DOC_YY_MM AND A.MVT_DOC_NO = B.MVT_DOC_NO
        INNER JOIN PT_0102T C ON B.DLR_CD = C.DLR_CD AND B.MVT_TP = C.MVT_TP
        LEFT JOIN PT_0201T D ON A.DLR_CD = D.DLR_CD AND A.ITEM_CD = D.ITEM_CD
        LEFT JOIN CR_0101T E ON B.DLR_CD = E.DLR_CD AND B.CUST_NO = E.CUST_NO AND E.DEL_YN = 'N'
        LEFT JOIN PT_0211T F ON B.DLR_CD = F.DLR_CD AND B.BP_CD = F.BP_CD AND F.END_YN != 'Y'
        WHERE A.DLR_CD = #{sDlrCd}
          AND (C.MVT_GR_GI_TP = 'R' or (C.MVT_GR_GI_TP = 'T' AND A.DEBIT_CREDIT_DSTIN_CD = 'S'))<!-- 입고 재고이동(T)시  차대변코드 S(플러스만)-->
        <if test='sItemCd != null and sItemCd != ""'>
            AND A.ITEM_CD LIKE '%'|| #{sItemCd} ||'%'
        </if>
        <if test='sItemNm != null and sItemNm != ""'>
            AND D.ITEM_NM LIKE '%'|| #{sItemNm} ||'%'
        </if>
        <if test='sItemDstinCd != null and sItemDstinCd != ""'>
            AND D.ITEM_DSTIN_CD = #{sItemDstinCd}
        </if>
        <if test='sStrgeCd != null and sStrgeCd != ""'>
          AND A.STRGE_CD = #{sStrgeCd}
        </if>
        <if test='sMvtTpLst  != null and !sMvtTpLst.isEmpty'> AND B.MVT_TP IN
            <foreach item="item" index="index" collection="sMvtTpLst" open="(" separator="," close=")">
               #{item}
            </foreach>
         </if>        --수불유형코드
        <if test='sGrDtFr != null'>
            AND B.STMT_PROC_DT <![CDATA[>=]]> #{sGrDtFr}
        </if>
        <if test='sGrDtTo != null'>
            AND B.STMT_PROC_DT <![CDATA[<=]]> #{sGrDtTo} + 1
        </if>
        AND D.ITEM_DSTIN_CD != '20'<!-- 용품제외 -->
        AND B.MVT_TP NOT IN ('23','24')<!-- 부품예류제외 -->
    ) A
    WHERE 1=1
    <if test='sGrDocNo != null and sGrDocNo != ""'>
        AND A.REF_DOC_NO LIKE '%'|| #{sGrDocNo} ||'%'
    </if>
    </select>

    <!-- 입고 수불 COUNT를 조회한다. -->
    <select id="selectGrListForDeleteCnt" resultType="int" parameterType="MvtDocSearchVO" >
    /* [chn.bhmc.dms.par.pmm.service.dao.MvtDocDAO.selectGrListForDeleteCnt] */
    SELECT
        COUNT(*)
    FROM
    (
        SELECT
            A.DLR_CD
            ,A.MVT_DOC_YY_MM
            ,A.MVT_DOC_NO
            ,A.STRGE_CD
            ,A.LOC_CD
            ,A.ITEM_CD
            ,D.ITEM_NM
            ,CASE
                WHEN B.MVT_TP = '21'
                  THEN
                    CASE WHEN A.DEBIT_CREDIT_DSTIN_CD = 'S'
                           THEN NVL(A.ITEM_QTY,0)
                         ELSE 0
                    END
                WHEN B.MVT_TP = '22'
                  THEN
                    CASE WHEN A.DEBIT_CREDIT_DSTIN_CD = 'S'
                           THEN NVL(A.ITEM_QTY,0)
                         ELSE 0
                     END
                ELSE
                  CASE
                    WHEN C.STOCK_CALC_TP = '-'
                      THEN A.ITEM_QTY * -1
                    ELSE A.ITEM_QTY
                  END
              END ITEM_QTY
            ,A.ITEM_UNIT_CD
            ,B.MVT_TP
            ,C.MVT_TP_NM
            ,B.BIZ_AREA_CD
            ,B.BP_CD
            ,F.BP_NM
            ,B.CUST_NO
            ,E.CUST_NM
            ,B.STMT_PROC_DT
            ,A.REF_DOC_NO
            ,A.REF_DOC_LINE_NO
            ,A.CURR_CD
            ,A.STD_PRC
            ,A.STD_AMT
            ,A.SALE_PRC
            ,A.SALE_AMT
            ,A.MOVING_AVG_PRC
            ,CASE
                WHEN B.MVT_TP = '21'
                  THEN
                    CASE WHEN A.DEBIT_CREDIT_DSTIN_CD = 'S'
                           THEN NVL(A.MOVING_AVG_AMT,0)
                         ELSE 0
                    END
                WHEN B.MVT_TP = '22'
                  THEN
                    CASE WHEN A.DEBIT_CREDIT_DSTIN_CD = 'S'
                           THEN NVL(A.MOVING_AVG_AMT,0)
                         ELSE 0
                     END
                ELSE
                  CASE
                    WHEN C.STOCK_CALC_TP = '-'
                      THEN A.MOVING_AVG_AMT * -1
                    ELSE A.MOVING_AVG_AMT
                  END
              END MOVING_AVG_AMT
            ,A.PURC_PRC
            ,CASE
                WHEN B.MVT_TP = '21'
                  THEN
                    CASE WHEN A.DEBIT_CREDIT_DSTIN_CD = 'S'
                           THEN NVL(A.PURC_AMT,0)
                         ELSE 0
                    END
                WHEN B.MVT_TP = '22'
                  THEN
                    CASE WHEN A.DEBIT_CREDIT_DSTIN_CD = 'S'
                           THEN CASE WHEN NVL(A.PURC_AMT, 0) = 0
                                       THEN NVL(A.SALE_AMT, 0)
                                     ELSE NVL(A.PURC_AMT, 0)
                                 END
                         ELSE 0
                     END
                ELSE
                  CASE
                    WHEN C.STOCK_CALC_TP = '-'
                      THEN A.MOVING_AVG_AMT * -1
                    ELSE A.PURC_AMT
                  END
              END PURC_AMT
        FROM PT_0312T A
        INNER JOIN PT_0311T B ON A.DLR_CD = B.DLR_CD AND A.MVT_DOC_YY_MM = B.MVT_DOC_YY_MM AND A.MVT_DOC_NO = B.MVT_DOC_NO
        INNER JOIN PT_0102T C ON B.DLR_CD = C.DLR_CD AND B.MVT_TP = C.MVT_TP
        LEFT JOIN PT_0201T D ON A.DLR_CD = D.DLR_CD AND A.ITEM_CD = D.ITEM_CD
        LEFT JOIN CR_0101T E ON B.DLR_CD = E.DLR_CD AND B.CUST_NO = E.CUST_NO AND E.DEL_YN = 'N'
        LEFT JOIN PT_0211T F ON B.DLR_CD = F.DLR_CD AND B.BP_CD = F.BP_CD AND F.END_YN != 'Y'
        WHERE A.DLR_CD = #{sDlrCd}
          AND (C.MVT_GR_GI_TP = 'R' or (C.MVT_GR_GI_TP = 'T' AND A.DEBIT_CREDIT_DSTIN_CD = 'S'))<!-- 입고 재고이동(T)시  차대변코드 S(플러스만)-->
        <if test='sGrDocNo != null and sGrDocNo != ""'>
            AND A.REF_DOC_NO LIKE '%'|| #{sGrDocNo} ||'%'
        </if>
        <if test='sItemCd != null and sItemCd != ""'>
            AND A.ITEM_CD = #{sItemCd}
        </if>
        <if test='sItemNm != null and sItemNm != ""'>
            AND D.ITEM_NM LIKE '%'|| #{sItemNm} ||'%'
        </if>
        <if test='sItemDstinCd != null and sItemDstinCd != ""'>
            AND D.ITEM_DSTIN_CD = #{sItemDstinCd}
        </if>
        <if test='sMvtTpLst  != null and !sMvtTpLst.isEmpty'> AND B.MVT_TP IN
            <foreach item="item" index="index" collection="sMvtTpLst" open="(" separator="," close=")">
               #{item}
            </foreach>
         </if>        --수불유형코드
        <if test='sGrDtFr != null'>
            AND B.STMT_PROC_DT <![CDATA[>=]]> #{sGrDtFr}
        </if>
        <if test='sGrDtTo != null'>
            AND B.STMT_PROC_DT <![CDATA[<=]]> #{sGrDtTo} + 1
        </if>
    ) A
    </select>

    <!-- 입고 수불 정보를 조회한다.. -->
    <select id="selectGrList" resultType="MvtDocItemVO" parameterType="MvtDocSearchVO" >
    /* [chn.bhmc.dms.par.pmm.service.dao.MvtDocDAO.selectGrList] */
        SELECT
            *
        FROM (
            SELECT
                ROWNUM AS RNUM
                ,A.DLR_CD
                ,A.MVT_DOC_YY_MM
                ,A.MVT_DOC_NO
                ,A.STRGE_CD
                ,A.LOC_CD
                ,A.ITEM_CD
                ,A.ITEM_NM
                ,A.ITEM_QTY
                ,A.ITEM_UNIT_CD
                ,A.MVT_TP
                ,A.MVT_TP_NM
                ,A.BIZ_AREA_CD
                ,NVL(A.BP_CD, A.CUST_NO) AS BP_CD
                ,NVL(A.BP_NM, A.CUST_NM) AS BP_NM
                ,A.STMT_PROC_DT AS GR_DT
                ,TO_CHAR(A.STMT_PROC_DT,'YYYY-MM-DD') AS GR_DT_STRING
                ,A.REF_DOC_NO AS GR_DOC_NO
                ,A.REF_DOC_LINE_NO AS GR_DOC_LINE_NO
                ,A.CURR_CD
                ,NVL(A.PURC_PRC, A.MOVING_AVG_PRC) AS PURC_PRC
                ,NVL(A.PURC_TAX_DDCT_PRC, A.MOVING_AVG_TAX_DDCT_PRC) AS PURC_TAX_DDCT_PRC
                ,NVL(A.MOVING_AVG_AMT, A.PURC_AMT) AS PURC_AMT
                ,NVL(A.MOVING_AVG_TAX_DDCT_AMT, A.PURC_TAX_DDCT_AMT) AS PURC_TAX_DDCT_AMT
                ,NVL(A.PURC_PRC, A.MOVING_AVG_PRC) * A.ITEM_QTY  AS MVT_PURC_AMT
                ,NVL(A.PURC_TAX_DDCT_PRC, A.MOVING_AVG_TAX_DDCT_PRC) * A.ITEM_QTY  AS MVT_PURC_TAX_DDCT_AMT
                ,A.AVLB_STOCK_QTY
                ,A.STOCK_QTY
                ,A.RESV_STOCK_QTY
                ,A.BORROW_QTY
                ,A.RENT_QTY
                ,A.MOVING_AVG_AMT
                ,A.MOVING_AVG_TAX_DDCT_AMT
                ,A.MOVING_AVG_PRC
                ,A.MOVING_AVG_TAX_DDCT_PRC
            FROM
            (
                SELECT
                    A.DLR_CD
                    ,A.MVT_DOC_YY_MM
                    ,A.MVT_DOC_NO
                    ,A.STRGE_CD
                    ,A.LOC_CD
                    ,A.ITEM_CD
                    ,D.ITEM_NM
                    ,CASE
                        WHEN B.MVT_TP = '21'
                          THEN
                            CASE WHEN A.DEBIT_CREDIT_DSTIN_CD = 'S'
                                   THEN NVL(A.ITEM_QTY,0)
                                 ELSE 0
                            END
                        WHEN B.MVT_TP = '22'
                          THEN
                            CASE WHEN A.DEBIT_CREDIT_DSTIN_CD = 'S'
                                   THEN NVL(A.ITEM_QTY,0)
                                 ELSE 0
                             END
                        ELSE
                          CASE
                            WHEN C.STOCK_CALC_TP = '-'
                              THEN A.ITEM_QTY * -1
                            ELSE A.ITEM_QTY
                          END
                      END ITEM_QTY
                    ,A.ITEM_UNIT_CD
                    ,B.MVT_TP
                    ,C.MVT_TP_NM
                    ,B.BIZ_AREA_CD
                    ,B.BP_CD
                    ,F.BP_NM
                    ,B.CUST_NO
                    ,E.CUST_NM
                    ,B.STMT_PROC_DT
                    ,CASE WHEN C.CANC_MVT_YN = 'Y' THEN (SELECT MAX(REF_DOC_NO) FROM PT_0312T WHERE MVT_DOC_NO = A.REF_DOC_NO)
                          ELSE A.REF_DOC_NO
                     END REF_DOC_NO
                    ,A.REF_DOC_LINE_NO
                    ,A.CURR_CD
                    ,A.STD_PRC
                    ,A.STD_AMT
                    ,A.SALE_PRC
                    ,A.SALE_TAX_DDCT_PRC
                    ,A.SALE_AMT
                    ,A.SALE_TAX_DDCT_AMT
                    ,A.MOVING_AVG_PRC
                    ,A.MOVING_AVG_TAX_DDCT_PRC
                    ,CASE WHEN B.MVT_TP = '22'
                            THEN CASE WHEN NVL(A.PURC_PRC, 0) = 0
                                        THEN NVL(A.SALE_PRC, 0)
                                      ELSE NVL(A.PURC_PRC, 0)
                                  END
                          ELSE A.PURC_PRC
                     END PURC_PRC
                    ,CASE WHEN B.MVT_TP = '22'
                            THEN CASE WHEN NVL(A.PURC_TAX_DDCT_PRC, 0) = 0
                                        THEN NVL(A.SALE_TAX_DDCT_PRC, 0)
                                      ELSE NVL(A.PURC_TAX_DDCT_PRC, 0)
                                  END
                          ELSE A.PURC_TAX_DDCT_PRC
                     END PURC_TAX_DDCT_PRC
                    ,CASE
                        WHEN B.MVT_TP = '22'
                          THEN
                            CASE WHEN A.DEBIT_CREDIT_DSTIN_CD = 'S'
                                   THEN CASE WHEN NVL(A.PURC_AMT, 0) = 0
                                               THEN NVL(A.SALE_AMT, 0)
                                             ELSE NVL(A.PURC_AMT, 0)
                                         END
                                 ELSE 0
                             END
                        ELSE
                          CASE
                            WHEN C.STOCK_CALC_TP = '-'
                              THEN A.MOVING_AVG_AMT * -1
                            ELSE A.PURC_AMT
                          END
                      END PURC_AMT
                    ,CASE
                        WHEN B.MVT_TP = '22'
                          THEN
                            CASE WHEN A.DEBIT_CREDIT_DSTIN_CD = 'S'
                                   THEN CASE WHEN NVL(A.PURC_TAX_DDCT_AMT, 0) = 0
                                               THEN NVL(A.SALE_TAX_DDCT_AMT, 0)
                                             ELSE NVL(A.PURC_TAX_DDCT_AMT, 0)
                                         END
                                 ELSE 0
                             END
                        ELSE
                          CASE
                            WHEN C.STOCK_CALC_TP = '-'
                              THEN A.MOVING_AVG_TAX_DDCT_AMT * -1
                            ELSE A.PURC_TAX_DDCT_AMT
                          END
                      END PURC_TAX_DDCT_AMT
                    ,CASE
                        WHEN B.MVT_TP = '21'
                          THEN
                            CASE WHEN A.DEBIT_CREDIT_DSTIN_CD = 'S'
                                   THEN NVL(A.MOVING_AVG_AMT,0)
                                 ELSE 0
                            END
                        WHEN B.MVT_TP = '22'
                          THEN
                            CASE WHEN A.DEBIT_CREDIT_DSTIN_CD = 'S'
                                   THEN NVL(A.MOVING_AVG_AMT,0)
                                 ELSE 0
                             END
                        ELSE
                          CASE
                            WHEN C.STOCK_CALC_TP = '-'
                              THEN A.MOVING_AVG_AMT * -1
                            ELSE A.MOVING_AVG_AMT
                          END
                      END MOVING_AVG_AMT
                    ,CASE
                        WHEN B.MVT_TP = '21'
                          THEN
                            CASE WHEN A.DEBIT_CREDIT_DSTIN_CD = 'S'
                                   THEN NVL(A.MOVING_AVG_TAX_DDCT_AMT,0)
                                 ELSE 0
                            END
                        WHEN B.MVT_TP = '22'
                          THEN
                            CASE WHEN A.DEBIT_CREDIT_DSTIN_CD = 'S'
                                   THEN NVL(A.MOVING_AVG_TAX_DDCT_AMT,0)
                                 ELSE 0
                             END
                        ELSE
                          CASE
                            WHEN C.STOCK_CALC_TP = '-'
                              THEN A.MOVING_AVG_TAX_DDCT_AMT * -1
                            ELSE A.MOVING_AVG_TAX_DDCT_AMT
                          END
                      END MOVING_AVG_TAX_DDCT_AMT
                    ,NVL(G.AVLB_STOCK_QTY,0) + NVL(G.RESV_STOCK_QTY,0) - NVL(G.BORROW_QTY,0) + NVL(G.RENT_QTY,0) AS STOCK_QTY  --재고수량
                    ,NVL(G.AVLB_STOCK_QTY,0) AS AVLB_STOCK_QTY   --가용수량
                    ,NVL(G.RESV_STOCK_QTY,0) AS RESV_STOCK_QTY   --예류수량
                    ,NVL(G.BORROW_QTY,0) AS BORROW_QTY           --차입수량
                    ,NVL(G.RENT_QTY,0) AS RENT_QTY               --대여수량(차출)
                FROM PT_0312T A
                INNER JOIN PT_0311T B ON A.DLR_CD = B.DLR_CD AND A.MVT_DOC_YY_MM = B.MVT_DOC_YY_MM AND A.MVT_DOC_NO = B.MVT_DOC_NO
                INNER JOIN PT_0102T C ON B.DLR_CD = C.DLR_CD AND B.MVT_TP = C.MVT_TP
                LEFT OUTER JOIN DMSDB.PT_0201T D ON A.DLR_CD = D.DLR_CD AND A.ITEM_CD = D.ITEM_CD
                LEFT OUTER JOIN CR_0101T E ON B.DLR_CD = E.DLR_CD AND B.CUST_NO = E.CUST_NO AND E.DEL_YN = 'N'
                LEFT OUTER JOIN PT_0211T F ON B.DLR_CD = F.DLR_CD AND B.BP_CD = F.BP_CD AND F.END_YN != 'Y'
                LEFT JOIN PT_0301T G ON B.DLR_CD = G.DLR_CD AND A.STRGE_CD = G.STRGE_CD AND A.ITEM_CD = G.ITEM_CD
                WHERE A.DLR_CD = '${sDlrCd}'
                AND (C.MVT_GR_GI_TP = 'R' or (C.MVT_GR_GI_TP = 'T' AND A.DEBIT_CREDIT_DSTIN_CD = 'S'))<!-- 입고 재고이동(T)시  차대변코드 S(플러스만)-->
                <if test='sItemCd != null and sItemCd != ""'>
                     AND A.ITEM_CD LIKE '%'|| #{sItemCd} ||'%'
                </if>
                <if test='sItemNm != null and sItemNm != ""'>
                     AND D.ITEM_NM LIKE '%'|| #{sItemNm} ||'%'
                </if>
                <if test='sItemDstinCd != null and sItemDstinCd != ""'>
                  AND D.ITEM_DSTIN_CD = #{sItemDstinCd}
                </if>
                <if test='sStrgeCd != null and sStrgeCd != ""'>
                  AND A.STRGE_CD = #{sStrgeCd}
                </if>
                <if test='sMvtTpLst  != null and !sMvtTpLst.isEmpty'> AND B.MVT_TP IN
                    <foreach item="item" index="index" collection="sMvtTpLst" open="(" separator="," close=")">
                       #{item}
                    </foreach>
                 </if>        --수불유형코드
                <if test='sGrDtFr != null'>
                    AND B.STMT_PROC_DT <![CDATA[>=]]> #{sGrDtFr}
                </if>
                <if test='sGrDtTo != null'>
                    AND B.STMT_PROC_DT <![CDATA[<=]]> #{sGrDtTo} + 1
                </if>
                AND D.ITEM_DSTIN_CD != '20'<!-- 용품제외 -->
                AND B.MVT_TP NOT IN ('23','24')<!-- 부품예류제외 -->
                ORDER BY B.STMT_PROC_DT DESC, A.REF_DOC_NO DESC
            ) A
            WHERE 1=1
            <if test='sGrDocNo != null and sGrDocNo != ""'>
                 AND A.REF_DOC_NO LIKE '%'|| #{sGrDocNo} ||'%'
            </if>
            <if test='firstIndex != -1 and lastIndex != -1'>
                AND ROWNUM <![CDATA[<=]]> #{lastIndex}
            </if>

        )
        <where>
            <if test='firstIndex != -1 and lastIndex != -1'>
                RNUM > #{firstIndex}
            </if>
        </where>
    </select>

    <!-- 입고 수불 정보를 조회한다.(Excel) -->
    <select id="selectGrExcelList" resultType="MvtDocItemVO" parameterType="MvtDocSearchVO" >
    /* [chn.bhmc.dms.par.pmm.service.dao.MvtDocDAO.selectGrExcelList] */
          SELECT A.STRGE_CD
                ,A.ITEM_CD
                ,A.ITEM_NM
                ,A.ITEM_QTY
                ,A.MVT_TP_NM
                ,NVL(A.BP_NM, A.CUST_NM) AS BP_NM
                ,TO_CHAR(A.STMT_PROC_DT,'YYYY-MM-DD') AS GR_DT_STRING
                ,A.REF_DOC_NO AS GR_DOC_NO
                ,NVL(A.PURC_PRC, A.MOVING_AVG_PRC) AS PURC_PRC
                ,NVL(A.PURC_TAX_DDCT_PRC, A.MOVING_AVG_TAX_DDCT_PRC) AS PURC_TAX_DDCT_PRC
                ,NVL(A.PURC_AMT, A.MOVING_AVG_AMT) AS PURC_AMT
                ,NVL(A.PURC_TAX_DDCT_AMT, A.MOVING_AVG_TAX_DDCT_AMT) AS PURC_TAX_DDCT_AMT
                ,A.AVLB_STOCK_QTY
                ,A.STOCK_QTY
                ,A.RESV_STOCK_QTY
                ,A.BORROW_QTY
                ,A.RENT_QTY
            FROM
            (
                SELECT
                    A.DLR_CD
                    ,A.MVT_DOC_YY_MM
                    ,A.MVT_DOC_NO
                    ,A.STRGE_CD
                    ,A.LOC_CD
                    ,A.ITEM_CD
                    ,D.ITEM_NM
                    ,CASE
                        WHEN B.MVT_TP = '21'
                          THEN
                            CASE WHEN A.DEBIT_CREDIT_DSTIN_CD = 'S'
                                   THEN NVL(A.ITEM_QTY,0)
                                 ELSE 0
                            END
                        WHEN B.MVT_TP = '22'
                          THEN
                            CASE WHEN A.DEBIT_CREDIT_DSTIN_CD = 'S'
                                   THEN NVL(A.ITEM_QTY,0)
                                 ELSE 0
                             END
                        ELSE
                          CASE
                            WHEN C.STOCK_CALC_TP = '-'
                              THEN A.ITEM_QTY * -1
                            ELSE A.ITEM_QTY
                          END
                      END ITEM_QTY
                    ,A.ITEM_UNIT_CD
                    ,B.MVT_TP
                    ,C.MVT_TP_NM
                    ,B.BIZ_AREA_CD
                    ,B.BP_CD
                    ,F.BP_NM
                    ,B.CUST_NO
                    ,E.CUST_NM
                    ,B.STMT_PROC_DT
                    ,A.REF_DOC_NO
                    ,A.REF_DOC_LINE_NO
                    ,A.CURR_CD
                    ,A.STD_PRC
                    ,A.STD_AMT
                    ,A.SALE_PRC
                    ,A.SALE_TAX_DDCT_PRC
                    ,A.SALE_AMT
                    ,A.SALE_TAX_DDCT_AMT
                    ,A.MOVING_AVG_PRC
                    ,A.MOVING_AVG_TAX_DDCT_PRC
                    ,CASE
                        WHEN B.MVT_TP = '21'
                          THEN
                            CASE WHEN A.DEBIT_CREDIT_DSTIN_CD = 'S'
                                   THEN NVL(A.MOVING_AVG_AMT,0)
                                 ELSE 0
                            END
                        WHEN B.MVT_TP = '22'
                          THEN
                            CASE WHEN A.DEBIT_CREDIT_DSTIN_CD = 'S'
                                   THEN NVL(A.MOVING_AVG_AMT,0)
                                 ELSE 0
                             END
                        ELSE
                          CASE
                            WHEN C.STOCK_CALC_TP = '-'
                              THEN A.MOVING_AVG_AMT * -1
                            ELSE A.MOVING_AVG_AMT
                          END
                      END MOVING_AVG_AMT
                    ,CASE
                        WHEN B.MVT_TP = '21'
                          THEN
                            CASE WHEN A.DEBIT_CREDIT_DSTIN_CD = 'S'
                                   THEN NVL(A.MOVING_AVG_TAX_DDCT_AMT,0)
                                 ELSE 0
                            END
                        WHEN B.MVT_TP = '22'
                          THEN
                            CASE WHEN A.DEBIT_CREDIT_DSTIN_CD = 'S'
                                   THEN NVL(A.MOVING_AVG_TAX_DDCT_AMT,0)
                                 ELSE 0
                             END
                        ELSE
                          CASE
                            WHEN C.STOCK_CALC_TP = '-'
                              THEN A.MOVING_AVG_TAX_DDCT_AMT * -1
                            ELSE A.MOVING_AVG_TAX_DDCT_AMT
                          END
                      END MOVING_AVG_TAX_DDCT_AMT
                    ,A.PURC_PRC
                    ,A.PURC_TAX_DDCT_PRC
                    ,CASE
                        WHEN B.MVT_TP = '21'
                          THEN
                            CASE WHEN A.DEBIT_CREDIT_DSTIN_CD = 'S'
                                   THEN NVL(A.PURC_AMT,0)
                                 ELSE 0
                            END
                        WHEN B.MVT_TP = '22'
                          THEN
                            CASE WHEN A.DEBIT_CREDIT_DSTIN_CD = 'S'
                                   THEN CASE WHEN NVL(A.PURC_AMT, 0) = 0
                                               THEN NVL(A.SALE_AMT, 0)
                                             ELSE NVL(A.PURC_AMT, 0)
                                         END
                                 ELSE 0
                             END
                        ELSE
                          CASE
                            WHEN C.STOCK_CALC_TP = '-'
                              THEN A.MOVING_AVG_AMT * -1
                            ELSE A.PURC_AMT
                          END
                      END PURC_AMT
                    ,CASE
                        WHEN B.MVT_TP = '21'
                          THEN
                            CASE WHEN A.DEBIT_CREDIT_DSTIN_CD = 'S'
                                   THEN NVL(A.PURC_TAX_DDCT_AMT,0)
                                 ELSE 0
                            END
                        WHEN B.MVT_TP = '22'
                          THEN
                            CASE WHEN A.DEBIT_CREDIT_DSTIN_CD = 'S'
                                   THEN CASE WHEN NVL(A.PURC_TAX_DDCT_AMT, 0) = 0
                                               THEN NVL(A.SALE_TAX_DDCT_AMT, 0)
                                             ELSE NVL(A.PURC_TAX_DDCT_AMT, 0)
                                         END
                                 ELSE 0
                             END
                        ELSE
                          CASE
                            WHEN C.STOCK_CALC_TP = '-'
                              THEN A.MOVING_AVG_TAX_DDCT_AMT * -1
                            ELSE A.PURC_TAX_DDCT_AMT
                          END
                      END PURC_TAX_DDCT_AMT
                    ,NVL(G.AVLB_STOCK_QTY,0) + NVL(G.RESV_STOCK_QTY,0) - NVL(G.BORROW_QTY,0) + NVL(G.RENT_QTY,0) AS STOCK_QTY  --재고수량
                    ,NVL(G.AVLB_STOCK_QTY,0) AS AVLB_STOCK_QTY   --가용수량
                    ,NVL(G.RESV_STOCK_QTY,0) AS RESV_STOCK_QTY   --예류수량
                    ,NVL(G.BORROW_QTY,0) AS BORROW_QTY           --차입수량
                    ,NVL(G.RENT_QTY,0) AS RENT_QTY               --대여수량(차출)
                FROM PT_0312T A
                INNER JOIN PT_0311T B ON A.DLR_CD = B.DLR_CD AND A.MVT_DOC_YY_MM = B.MVT_DOC_YY_MM AND A.MVT_DOC_NO = B.MVT_DOC_NO
                INNER JOIN PT_0102T C ON B.DLR_CD = C.DLR_CD AND B.MVT_TP = C.MVT_TP
                LEFT OUTER JOIN DMSDB.PT_0201T D ON A.DLR_CD = D.DLR_CD AND A.ITEM_CD = D.ITEM_CD
                LEFT OUTER JOIN CR_0101T E ON B.DLR_CD = E.DLR_CD AND B.CUST_NO = E.CUST_NO AND E.DEL_YN = 'N'
                LEFT OUTER JOIN PT_0211T F ON B.DLR_CD = F.DLR_CD AND B.BP_CD = F.BP_CD AND F.END_YN != 'Y'
                LEFT JOIN PT_0301T G ON B.DLR_CD = G.DLR_CD AND A.STRGE_CD = G.STRGE_CD AND A.ITEM_CD = G.ITEM_CD
                WHERE A.DLR_CD = #{sDlrCd}
                  AND (C.MVT_GR_GI_TP = 'R' or (C.MVT_GR_GI_TP = 'T' AND A.DEBIT_CREDIT_DSTIN_CD = 'S'))<!-- 입고 재고이동(T)시  차대변코드 S(플러스만)-->
                <if test='sGrDocNo != null and sGrDocNo != ""'>
                     AND A.REF_DOC_NO LIKE '%'|| #{sGrDocNo} ||'%'
                </if>
                <if test='sItemCd != null and sItemCd != ""'>
                     AND A.ITEM_CD LIKE '%'|| #{sItemCd} ||'%'
                </if>
                <if test='sItemNm != null and sItemNm != ""'>
                     AND D.ITEM_NM LIKE '%'|| #{sItemNm} ||'%'
               </if>
               <if test='sItemDstinCd != null and sItemDstinCd != ""'>
                  AND D.ITEM_DSTIN_CD = #{sItemDstinCd}
                </if>
                <if test='sMvtTpLst  != null and !sMvtTpLst.isEmpty'> AND B.MVT_TP IN
                    <foreach item="item" index="index" collection="sMvtTpLst" open="(" separator="," close=")">
                       #{item}
                    </foreach>
                 </if>        --수불유형코드
                <if test='sGrDtFr != null'>
                    AND B.STMT_PROC_DT <![CDATA[>=]]> #{sGrDtFr}
                </if>
                <if test='sGrDtTo != null'>
                    AND B.STMT_PROC_DT <![CDATA[<=]]> #{sGrDtTo} + 1
                </if>
                AND D.ITEM_DSTIN_CD != '20'<!-- 용품제외 -->
                AND B.MVT_TP NOT IN ('23','24')<!-- 부품예류제외 -->
            ) A
            ORDER BY GR_DT_STRING DESC, GR_DOC_NO DESC
    </select>

    <!-- 입출고 수불 정보를 조회한다.. -->
    <select id="selectGrGiSummary" resultType="MvtDocVO" parameterType="MvtDocSearchVO" >
    /* [chn.bhmc.dms.par.pmm.service.dao.MvtDocDAO.selectGrGiSummary] */
    SELECT
        COUNT(MVT_DOC_NO) AS DOC_NO_CNT
        ,SUM(NVL(ITEM_CNT,0)) AS ITEM_CNT
        ,SUM(NVL(ITEM_QTY,0)) AS ITEM_QTY
        ,SUM(NVL(TOT_AMT,0)) AS ITEM_AMT
        ,SUM(NVL(TOT_TAX_DDCT_AMT,0)) AS ITEM_TAX_DDCT_AMT
        ,SUM(NVL(MVT_TOT_AMT,0)) AS MVT_ITEM_AMT
        ,SUM(NVL(MVT_TOT_TAX_DDCT_AMT,0)) AS MVT_ITEM_TAX_DDCT_AMT
    FROM
    (
        SELECT
            A.DLR_CD
            ,A.MVT_DOC_YY_MM
            ,A.MVT_DOC_NO
            ,COUNT(A.ITEM_CD) AS ITEM_CNT
            ,SUM(NVL(A.ITEM_QTY,0)) AS ITEM_QTY
            ,SUM(NVL(A.PURC_AMT, A.MOVING_AVG_AMT)) AS TOT_AMT
            ,SUM(NVL(A.PURC_TAX_DDCT_AMT, A.MOVING_AVG_TAX_DDCT_AMT)) AS TOT_TAX_DDCT_AMT
            ,SUM(NVL(A.ITEM_QTY,0) * NVL(A.PURC_PRC,0)) AS MVT_TOT_AMT
            ,SUM(NVL(A.ITEM_QTY,0) * NVL(A.PURC_TAX_DDCT_PRC,0)) AS MVT_TOT_TAX_DDCT_AMT
        FROM
        (
            SELECT
                A.DLR_CD
                ,A.MVT_DOC_YY_MM
                ,A.MVT_DOC_NO
                ,A.STRGE_CD
                ,A.LOC_CD
                ,A.ITEM_CD
                ,D.ITEM_NM
                ,CASE
                    WHEN B.MVT_TP = '21'
                      THEN
                        CASE WHEN A.DEBIT_CREDIT_DSTIN_CD = 'S'
                               THEN NVL(A.ITEM_QTY,0)
                             ELSE 0
                        END
                    WHEN B.MVT_TP = '22'
                      THEN
                        CASE WHEN A.DEBIT_CREDIT_DSTIN_CD = 'S'
                               THEN NVL(A.ITEM_QTY,0)
                             ELSE 0
                         END
                    ELSE
                      CASE
                        WHEN C.STOCK_CALC_TP = '-'
                          THEN A.ITEM_QTY * -1
                        ELSE A.ITEM_QTY
                      END
                  END ITEM_QTY
                ,A.ITEM_UNIT_CD
                ,B.MVT_TP
                ,C.MVT_TP_NM
                ,C.MVT_GR_GI_TP
                ,B.BIZ_AREA_CD
                ,B.BP_CD
                ,F.BP_NM
                ,B.CUST_NO
                ,E.CUST_NM
                ,B.STMT_PROC_DT
                ,A.REF_DOC_NO
                ,A.REF_DOC_LINE_NO
                ,A.CURR_CD
                ,A.STD_PRC
                ,A.STD_AMT
                ,A.MOVING_AVG_PRC
                ,A.MOVING_AVG_TAX_DDCT_PRC
                ,CASE
                    WHEN B.MVT_TP = '21'
                      THEN
                        CASE WHEN A.DEBIT_CREDIT_DSTIN_CD = 'S'
                               THEN NVL(A.MOVING_AVG_AMT,0)
                             ELSE 0
                        END
                    WHEN B.MVT_TP = '22'
                      THEN
                        CASE WHEN A.DEBIT_CREDIT_DSTIN_CD = 'S'
                               THEN NVL(A.MOVING_AVG_AMT,0)
                             ELSE 0
                         END
                    ELSE
                      CASE
                        WHEN C.STOCK_CALC_TP = '-'
                          THEN A.MOVING_AVG_AMT * -1
                        ELSE A.MOVING_AVG_AMT
                      END
                  END MOVING_AVG_AMT
                ,CASE
                    WHEN B.MVT_TP = '21'
                      THEN
                        CASE WHEN A.DEBIT_CREDIT_DSTIN_CD = 'S'
                               THEN NVL(A.MOVING_AVG_TAX_DDCT_AMT,0)
                             ELSE 0
                        END
                    WHEN B.MVT_TP = '22'
                      THEN
                        CASE WHEN A.DEBIT_CREDIT_DSTIN_CD = 'S'
                               THEN NVL(A.MOVING_AVG_TAX_DDCT_AMT,0)
                             ELSE 0
                         END
                    ELSE
                      CASE
                        WHEN C.STOCK_CALC_TP = '-'
                          THEN A.MOVING_AVG_TAX_DDCT_AMT * -1
                        ELSE A.MOVING_AVG_TAX_DDCT_AMT
                      END
                  END MOVING_AVG_TAX_DDCT_AMT
                ,A.PURC_PRC
                ,A.PURC_TAX_DDCT_PRC
                ,CASE
                    WHEN B.MVT_TP = '21'
                      THEN
                        CASE WHEN A.DEBIT_CREDIT_DSTIN_CD = 'S'
                               THEN NVL(A.PURC_AMT,0)
                             ELSE 0
                        END
                    WHEN B.MVT_TP = '22'
                      THEN
                        CASE WHEN A.DEBIT_CREDIT_DSTIN_CD = 'S'
                               THEN CASE WHEN NVL(A.PURC_AMT, 0) = 0
                                           THEN NVL(A.SALE_AMT, 0)
                                         ELSE NVL(A.PURC_AMT, 0)
                                     END
                             ELSE 0
                         END
                    ELSE
                      CASE
                        WHEN C.STOCK_CALC_TP = '-'
                          THEN A.MOVING_AVG_AMT * -1
                        ELSE A.PURC_AMT
                      END
                  END PURC_AMT
                ,CASE
                    WHEN B.MVT_TP = '21'
                      THEN
                        CASE WHEN A.DEBIT_CREDIT_DSTIN_CD = 'S'
                               THEN NVL(A.PURC_TAX_DDCT_AMT,0)
                             ELSE 0
                        END
                    WHEN B.MVT_TP = '22'
                      THEN
                        CASE WHEN A.DEBIT_CREDIT_DSTIN_CD = 'S'
                               THEN CASE WHEN NVL(A.PURC_TAX_DDCT_AMT, 0) = 0
                                           THEN NVL(A.SALE_TAX_DDCT_AMT, 0)
                                         ELSE NVL(A.PURC_TAX_DDCT_AMT, 0)
                                     END
                             ELSE 0
                         END
                    ELSE
                      CASE
                        WHEN C.STOCK_CALC_TP = '-'
                          THEN A.MOVING_AVG_TAX_DDCT_AMT * -1
                        ELSE A.PURC_TAX_DDCT_AMT
                      END
                  END PURC_TAX_DDCT_AMT
                ,A.DEBIT_CREDIT_DSTIN_CD
                ,'R' AS MVT_GR_GI_SUM_TP
            FROM PT_0312T A
            INNER JOIN PT_0311T B ON A.DLR_CD = B.DLR_CD AND A.MVT_DOC_YY_MM = B.MVT_DOC_YY_MM AND A.MVT_DOC_NO = B.MVT_DOC_NO
            INNER JOIN PT_0102T C ON B.DLR_CD = C.DLR_CD AND B.MVT_TP = C.MVT_TP
            LEFT OUTER JOIN DMSDB.PT_0201T D ON A.DLR_CD = D.DLR_CD AND A.ITEM_CD = D.ITEM_CD
            LEFT OUTER JOIN CR_0101T E ON B.DLR_CD = E.DLR_CD AND B.CUST_NO = E.CUST_NO AND E.DEL_YN = 'N'
            LEFT OUTER JOIN PT_0211T F ON B.DLR_CD = F.DLR_CD AND B.BP_CD = F.BP_CD AND F.END_YN != 'Y'
            LEFT JOIN PT_0301T G ON B.DLR_CD = G.DLR_CD AND A.STRGE_CD = G.STRGE_CD AND A.ITEM_CD = G.ITEM_CD
            WHERE A.DLR_CD = #{sDlrCd}
            AND (C.MVT_GR_GI_TP = 'R' or (C.MVT_GR_GI_TP = 'T' AND A.DEBIT_CREDIT_DSTIN_CD = 'S'))<!-- 입고 재고이동(T)시  차대변코드 S(플러스만)-->
            <if test='sGrDocNo != null and sGrDocNo != ""'>
                AND A.REF_DOC_NO LIKE '%'|| #{sGrDocNo} ||'%'
            </if>
            <if test='sItemCd != null and sItemCd != ""'>
                AND A.ITEM_CD LIKE '%'|| #{sItemCd} ||'%'
            </if>
            <if test='sItemNm != null and sItemNm != ""'>
                AND D.ITEM_NM LIKE '%'|| #{sItemNm} ||'%'
            </if>
            <if test='sItemDstinCd != null and sItemDstinCd != ""'>
                AND D.ITEM_DSTIN_CD = #{sItemDstinCd}
            </if>
            <if test='sStrgeCd != null and sStrgeCd != ""'>
                AND A.STRGE_CD = #{sStrgeCd}
            </if>
            <if test='sMvtTpLst  != null and !sMvtTpLst.isEmpty'> AND B.MVT_TP IN
                <foreach item="item" index="index" collection="sMvtTpLst" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test='sGrDtFr != null'>
                AND B.STMT_PROC_DT <![CDATA[>=]]> #{sGrDtFr}
            </if>
            <if test='sGrDtTo != null'>
                AND B.STMT_PROC_DT <![CDATA[<=]]> #{sGrDtTo} + 1
            </if>
            AND D.ITEM_DSTIN_CD != '20'<!-- 용품제외 -->
            AND B.MVT_TP NOT IN ('23','24')<!-- 부품예류제외 -->
            UNION ALL
            SELECT
                A.DLR_CD
                ,A.MVT_DOC_YY_MM
                ,A.MVT_DOC_NO
                ,A.STRGE_CD
                ,A.LOC_CD
                ,A.ITEM_CD
                ,D.ITEM_NM
                ,CASE
                    WHEN B.MVT_TP = '21'
                      THEN
                        CASE WHEN A.DEBIT_CREDIT_DSTIN_CD = 'H'
                               THEN NVL(A.ITEM_QTY,0)
                             ELSE 0
                        END
                    WHEN B.MVT_TP = '22'
                      THEN
                        CASE WHEN A.DEBIT_CREDIT_DSTIN_CD = 'H'
                               THEN NVL(A.ITEM_QTY,0)
                             ELSE 0
                         END
                    ELSE
                      CASE
                        WHEN C.STOCK_CALC_TP = '+'
                          THEN A.ITEM_QTY * -1
                        ELSE A.ITEM_QTY
                      END
                  END ITEM_QTY
                ,A.ITEM_UNIT_CD
                ,B.MVT_TP
                ,C.MVT_TP_NM
                ,C.MVT_GR_GI_TP
                ,B.BIZ_AREA_CD
                ,B.BP_CD
                ,G.BP_NM
                ,B.CUST_NO
                ,F.CUST_NM
                ,B.STMT_PROC_DT
                ,CASE
                    WHEN B.MVT_TP = '41' THEN I.GI_DOC_NO
                    WHEN B.MVT_TP = '11' THEN I.GI_DOC_NO
                    WHEN B.MVT_TP = '12' THEN I.GI_DOC_NO
                    WHEN B.MVT_TP = '13' THEN I.GI_DOC_NO
                 ELSE A.REF_DOC_NO
                 END REF_DOC_NO
                ,A.REF_DOC_LINE_NO
                ,A.CURR_CD
                ,A.STD_PRC
                ,A.STD_AMT
                ,A.MOVING_AVG_PRC
                ,A.MOVING_AVG_TAX_DDCT_PRC
                ,CASE
                    WHEN B.MVT_TP = '21'
                      THEN
                        CASE WHEN A.DEBIT_CREDIT_DSTIN_CD = 'H'
                               THEN NVL(A.MOVING_AVG_AMT,0)
                             ELSE 0
                        END
                    WHEN B.MVT_TP = '22'
                      THEN
                        CASE WHEN A.DEBIT_CREDIT_DSTIN_CD = 'H'
                               THEN NVL(A.MOVING_AVG_AMT,0)
                             ELSE 0
                         END
                    ELSE
                      CASE
                        WHEN C.STOCK_CALC_TP = '+'
                          THEN A.MOVING_AVG_AMT * -1
                        ELSE A.MOVING_AVG_AMT
                      END
                  END MOVING_AVG_AMT
                ,CASE
                    WHEN B.MVT_TP = '21'
                      THEN
                        CASE WHEN A.DEBIT_CREDIT_DSTIN_CD = 'H'
                               THEN NVL(A.MOVING_AVG_TAX_DDCT_AMT,0)
                             ELSE 0
                        END
                    WHEN B.MVT_TP = '22'
                      THEN
                        CASE WHEN A.DEBIT_CREDIT_DSTIN_CD = 'H'
                               THEN NVL(A.MOVING_AVG_TAX_DDCT_AMT,0)
                             ELSE 0
                         END
                    ELSE
                      CASE
                        WHEN C.STOCK_CALC_TP = '+'
                          THEN A.MOVING_AVG_TAX_DDCT_AMT * -1
                        ELSE A.MOVING_AVG_TAX_DDCT_AMT
                      END
                  END MOVING_AVG_TAX_DDCT_AMT
                ,A.SALE_PRC AS PURC_PRC
                ,A.SALE_TAX_DDCT_PRC AS PURC_TAX_DDCT_PRC
                ,CASE
                    WHEN B.MVT_TP = '21'
                      THEN
                        CASE WHEN A.DEBIT_CREDIT_DSTIN_CD = 'H'
                               THEN NVL(A.SALE_AMT,0)
                             ELSE 0
                        END
                    WHEN B.MVT_TP = '22'
                      THEN
                        CASE WHEN A.DEBIT_CREDIT_DSTIN_CD = 'H'
                               THEN CASE WHEN NVL(A.SALE_AMT, 0) = 0
                                           THEN NVL(A.PURC_AMT, 0)
                                         ELSE NVL(A.SALE_AMT, 0)
                                     END
                             ELSE 0
                         END
                    ELSE
                      CASE
                        WHEN C.STOCK_CALC_TP = '+'
                          THEN A.SALE_AMT * -1
                        ELSE A.SALE_AMT
                      END
                  END PURC_AMT
                ,CASE
                    WHEN B.MVT_TP = '21'
                      THEN
                        CASE WHEN A.DEBIT_CREDIT_DSTIN_CD = 'H'
                               THEN NVL(A.SALE_TAX_DDCT_AMT,0)
                             ELSE 0
                        END
                    WHEN B.MVT_TP = '22'
                      THEN
                        CASE WHEN A.DEBIT_CREDIT_DSTIN_CD = 'H'
                               THEN CASE WHEN NVL(A.SALE_TAX_DDCT_AMT, 0) = 0
                                           THEN NVL(A.PURC_TAX_DDCT_AMT, 0)
                                         ELSE NVL(A.SALE_TAX_DDCT_AMT, 0)
                                     END
                             ELSE 0
                         END
                    ELSE
                      CASE
                        WHEN C.STOCK_CALC_TP = '+'
                          THEN A.SALE_TAX_DDCT_AMT * -1
                        ELSE A.SALE_TAX_DDCT_AMT
                      END
                  END PURC_TAX_DDCT_AMT
                ,A.DEBIT_CREDIT_DSTIN_CD
                ,'I' AS MVT_GR_GI_SUM_TP
            FROM PT_0312T A
            INNER JOIN PT_0311T B ON A.DLR_CD = B.DLR_CD AND A.MVT_DOC_YY_MM = B.MVT_DOC_YY_MM AND A.MVT_DOC_NO = B.MVT_DOC_NO
            INNER JOIN PT_0102T C ON B.DLR_CD = C.DLR_CD AND B.MVT_TP = C.MVT_TP
            LEFT OUTER JOIN DMSDB.PT_0201T D ON  A.DLR_CD  = D.DLR_CD AND A.ITEM_CD = D.ITEM_CD
            LEFT OUTER JOIN DMSDB.PT_0521T E ON B.DLR_CD = E.DLR_CD AND A.REF_DOC_NO = E.PAR_SALE_ORD_NO
            LEFT OUTER JOIN CR_0101T F ON B.DLR_CD = F.DLR_CD AND B.CUST_NO = F.CUST_NO AND F.DEL_YN = 'N'
            LEFT OUTER JOIN PT_0211T G ON B.DLR_CD = G.DLR_CD AND B.BP_CD = G.BP_CD AND G.END_YN != 'Y'
            LEFT JOIN PT_0512T I ON B.DLR_CD = I.DLR_CD AND A.MVT_DOC_YY_MM = I.MVT_DOC_YY_MM AND A.MVT_DOC_NO = I.MVT_DOC_NO AND A.MVT_DOC_LINE_NO = I.MVT_DOC_LINE_NO
            WHERE A.DLR_CD = #{sDlrCd}
            AND (C.MVT_GR_GI_TP = 'I' or (C.MVT_GR_GI_TP = 'T' AND A.DEBIT_CREDIT_DSTIN_CD = 'H'))
            <if test='sItemCd != null and sItemCd != ""'>
                AND A.ITEM_CD LIKE '%'|| #{sItemCd} ||'%'
            </if>
            <if test='sItemNm != null and sItemNm != ""'>
                AND D.ITEM_NM LIKE '%'|| #{sItemNm} ||'%'
            </if>
            <if test='sItemDstinCd != null and sItemDstinCd != ""'>
                AND D.ITEM_DSTIN_CD = #{sItemDstinCd}
            </if>
            <if test='sStrgeCd != null and sStrgeCd != ""'>
                AND A.STRGE_CD = #{sStrgeCd}
            </if>
            <if test='sMvtTpLst  != null and !sMvtTpLst.isEmpty'> AND B.MVT_TP IN
                <foreach item="item" index="index" collection="sMvtTpLst" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if> <!-- 수불유형코드 -->
            <if test='sGiDtFr != null'>
                AND B.STMT_PROC_DT <![CDATA[>=]]> #{sGiDtFr}
            </if>
            <if test='sGiDtTo != null'>
                AND B.STMT_PROC_DT <![CDATA[<=]]> #{sGiDtTo} + 1
            </if>
            AND D.ITEM_DSTIN_CD != '20'<!-- 용품제외 -->
            AND B.MVT_TP NOT IN ('23','24')<!-- 부품예류제외 -->
        ) A
        <where>1=1
            <if test='sMvtGrGiTp != null and sMvtGrGiTp != ""'>
                AND A.MVT_GR_GI_SUM_TP = #{sMvtGrGiTp}
            </if>
            <if test='sGiDocNo != null and sGiDocNo != ""'>
                AND A.REF_DOC_NO LIKE '%'|| #{sGiDocNo} ||'%'
            </if>
        </where>
        GROUP BY A.DLR_CD ,A.MVT_DOC_YY_MM ,A.MVT_DOC_NO
    )
    </select>

    <!-- 입고금액 소계정보를 조회한다. -->
    <select id="selectPartsGrCostSummary" resultType="MvtDocVO" parameterType="MvtDocSearchVO" >
    /* [chn.bhmc.dms.par.pmm.service.dao.MvtDocDAO.selectPartsGrCostSummary] */
    SELECT
        NVL(SUM(NVL(T1.PURC_AMT, T1.MOVING_AVG_AMT)), 0) AS ITEM_AMT
        NVL(SUM(NVL(T1.PURC_TAX_DDCT_AMT, T1.MOVING_AVG_TAX_DDCT_AMT)), 0) AS ITEM_TAX_DDCT_AMT
    FROM
    (
        SELECT
            CASE
                WHEN B.MVT_TP = '21'
                  THEN
                    CASE WHEN A.DEBIT_CREDIT_DSTIN_CD = 'S'
                           THEN NVL(A.MOVING_AVG_AMT,0)
                         ELSE 0
                    END
                WHEN B.MVT_TP = '22'
                  THEN
                    CASE WHEN A.DEBIT_CREDIT_DSTIN_CD = 'S'
                           THEN NVL(A.MOVING_AVG_AMT,0)
                         ELSE 0
                     END
                ELSE
                  CASE
                    WHEN C.STOCK_CALC_TP = '-'
                      THEN A.MOVING_AVG_AMT * -1
                    ELSE A.MOVING_AVG_AMT
                  END
              END MOVING_AVG_AMT
           ,CASE
                WHEN B.MVT_TP = '21'
                  THEN
                    CASE WHEN A.DEBIT_CREDIT_DSTIN_CD = 'S'
                           THEN NVL(A.MOVING_AVG_TAX_DDCT_AMT,0)
                         ELSE 0
                    END
                WHEN B.MVT_TP = '22'
                  THEN
                    CASE WHEN A.DEBIT_CREDIT_DSTIN_CD = 'S'
                           THEN NVL(A.MOVING_AVG_TAX_DDCT_AMT,0)
                         ELSE 0
                     END
                ELSE
                  CASE
                    WHEN C.STOCK_CALC_TP = '-'
                      THEN A.MOVING_AVG_TAX_DDCT_AMT * -1
                    ELSE A.MOVING_AVG_TAX_DDCT_AMT
                  END
              END MOVING_AVG_TAX_DDCT_AMT
            ,CASE
                WHEN B.MVT_TP = '21'
                  THEN
                    CASE WHEN A.DEBIT_CREDIT_DSTIN_CD = 'S'
                           THEN A.PURC_AMT
                         ELSE 0
                    END
                WHEN B.MVT_TP = '22'
                  THEN
                    CASE WHEN A.DEBIT_CREDIT_DSTIN_CD = 'S'
                           THEN CASE WHEN NVL(A.PURC_AMT, 0) = 0
                                       THEN NVL(A.SALE_AMT, 0)
                                     ELSE NVL(A.PURC_AMT, 0)
                                 END
                         ELSE 0
                     END
                ELSE
                  CASE
                    WHEN C.STOCK_CALC_TP = '-'
                      THEN A.MOVING_AVG_AMT * -1
                    ELSE   A.PURC_AMT
                  END
              END PURC_AMT
            ,CASE
                WHEN B.MVT_TP = '21'
                  THEN
                    CASE WHEN A.DEBIT_CREDIT_DSTIN_CD = 'S'
                           THEN A.PURC_TAX_DDCT_AMT
                         ELSE 0
                    END
                WHEN B.MVT_TP = '22'
                  THEN
                    CASE WHEN A.DEBIT_CREDIT_DSTIN_CD = 'S'
                           THEN CASE WHEN NVL(A.PURC_TAX_DDCT_AMT, 0) = 0
                                       THEN NVL(A.SALE_TAX_DDCT_AMT, 0)
                                     ELSE NVL(A.PURC_TAX_DDCT_AMT, 0)
                                 END
                         ELSE 0
                     END
                ELSE
                  CASE
                    WHEN C.STOCK_CALC_TP = '-'
                      THEN A.MOVING_AVG_TAX_DDCT_AMT * -1
                    ELSE   A.PURC_TAX_DDCT_AMT
                  END
              END PURC_TAX_DDCT_AMT
        FROM PT_0312T A
        INNER JOIN PT_0311T B ON A.DLR_CD = B.DLR_CD AND A.MVT_DOC_YY_MM = B.MVT_DOC_YY_MM AND A.MVT_DOC_NO = B.MVT_DOC_NO
        INNER JOIN PT_0102T C ON B.DLR_CD = C.DLR_CD AND B.MVT_TP = C.MVT_TP
        LEFT JOIN PT_0201T D ON A.DLR_CD = D.DLR_CD AND A.ITEM_CD = D.ITEM_CD
        WHERE A.DLR_CD = #{sDlrCd}
        AND (C.MVT_GR_GI_TP = 'R' or (C.MVT_GR_GI_TP = 'T' AND A.DEBIT_CREDIT_DSTIN_CD = 'S'))<!-- 입고 재고이동(T)시  차대변코드 S(플러스만)-->
        <if test='sGrDtFr != null'>
            AND B.STMT_PROC_DT <![CDATA[>=]]> #{sGrDtFr}
        </if>
        <if test='sGrDtTo != null'>
            AND B.STMT_PROC_DT <![CDATA[<=]]> #{sGrDtTo} + 1
        </if>
        AND D.ITEM_DSTIN_CD != '20'<!-- 용품제외 -->
        AND B.MVT_TP NOT IN ('23','24')<!-- 부품예류제외 -->
    )T1
    </select>

    <!-- 출고금액 소계정보를 조회한다. -->
    <select id="selectPartsGiCostSummary" resultType="MvtDocVO" parameterType="MvtDocSearchVO" >
    /* [chn.bhmc.dms.par.pmm.service.dao.MvtDocDAO.selectPartsGiCostSummary] */
    SELECT
        NVL(SUM(NVL(T1.PURC_AMT, T1.MOVING_AVG_AMT)), 0) AS ITEM_AMT
        NVL(SUM(NVL(T1.PURC_TAX_DDCT_AMT, T1.MOVING_AVG_TAX_DDCT_AMT)), 0) AS ITEM_TAX_DDCT_AMT
    FROM
    (
        SELECT
             CASE
                    WHEN B.MVT_TP = '21'
                      THEN
                        CASE WHEN A.DEBIT_CREDIT_DSTIN_CD = 'H'
                               THEN NVL(A.MOVING_AVG_AMT,0)
                             ELSE 0
                        END
                    WHEN B.MVT_TP = '22'
                      THEN
                        CASE WHEN A.DEBIT_CREDIT_DSTIN_CD = 'H'
                               THEN NVL(A.MOVING_AVG_AMT,0)
                             ELSE 0
                         END
                    ELSE
                      CASE
                        WHEN C.STOCK_CALC_TP = '+'
                          THEN A.MOVING_AVG_AMT * -1
                        ELSE A.MOVING_AVG_AMT
                      END
                  END MOVING_AVG_AMT
             ,CASE
                    WHEN B.MVT_TP = '21'
                      THEN
                        CASE WHEN A.DEBIT_CREDIT_DSTIN_CD = 'H'
                               THEN NVL(A.MOVING_AVG_TAX_DDCT_AMT,0)
                             ELSE 0
                        END
                    WHEN B.MVT_TP = '22'
                      THEN
                        CASE WHEN A.DEBIT_CREDIT_DSTIN_CD = 'H'
                               THEN NVL(A.MOVING_AVG_TAX_DDCT_AMT,0)
                             ELSE 0
                         END
                    ELSE
                      CASE
                        WHEN C.STOCK_CALC_TP = '+'
                          THEN A.MOVING_AVG_TAX_DDCT_AMT * -1
                        ELSE A.MOVING_AVG_TAX_DDCT_AMT
                      END
                  END MOVING_AVG_TAX_DDCT_AMT
            ,CASE
                WHEN B.MVT_TP = '21'
                  THEN
                    CASE WHEN A.DEBIT_CREDIT_DSTIN_CD = 'H'
                           THEN NVL(A.SALE_AMT,0)
                         ELSE 0
                    END
                WHEN B.MVT_TP = '22'
                  THEN
                    CASE WHEN A.DEBIT_CREDIT_DSTIN_CD = 'H'
                           THEN CASE WHEN NVL(A.SALE_AMT, 0) = 0
                                       THEN NVL(A.PURC_AMT, 0)
                                     ELSE NVL(A.SALE_AMT, 0)
                                 END
                         ELSE 0
                     END
                ELSE
                  CASE
                    WHEN C.STOCK_CALC_TP = '+'
                      THEN A.SALE_AMT * -1
                    ELSE A.SALE_AMT
                  END
              END PURC_AMT
            ,CASE
                WHEN B.MVT_TP = '21'
                  THEN
                    CASE WHEN A.DEBIT_CREDIT_DSTIN_CD = 'H'
                           THEN NVL(A.SALE_TAX_DDCT_AMT,0)
                         ELSE 0
                    END
                WHEN B.MVT_TP = '22'
                  THEN
                    CASE WHEN A.DEBIT_CREDIT_DSTIN_CD = 'H'
                           THEN CASE WHEN NVL(A.SALE_TAX_DDCT_AMT, 0) = 0
                                       THEN NVL(A.PURC_TAX_DDCT_AMT, 0)
                                     ELSE NVL(A.SALE_TAX_DDCT_AMT, 0)
                                 END
                         ELSE 0
                     END
                ELSE
                  CASE
                    WHEN C.STOCK_CALC_TP = '+'
                      THEN A.SALE_TAX_DDCT_AMT * -1
                    ELSE A.SALE_TAX_DDCT_AMT
                  END
              END PURC_TAX_DDCT_AMT
        FROM PT_0312T A
        INNER JOIN PT_0311T B ON A.DLR_CD = B.DLR_CD AND A.MVT_DOC_YY_MM = B.MVT_DOC_YY_MM AND A.MVT_DOC_NO = B.MVT_DOC_NO
        INNER JOIN PT_0102T C ON B.DLR_CD = C.DLR_CD AND B.MVT_TP = C.MVT_TP
        LEFT JOIN PT_0201T D ON A.DLR_CD = D.DLR_CD AND A.ITEM_CD = D.ITEM_CD
        WHERE A.DLR_CD = #{sDlrCd}
        AND (C.MVT_GR_GI_TP = 'I' or (C.MVT_GR_GI_TP = 'T' AND A.DEBIT_CREDIT_DSTIN_CD = 'H'))
        <if test='sGiDtFr != null'>
            AND B.STMT_PROC_DT <![CDATA[>=]]> #{sGiDtFr}
        </if>
        <if test='sGiDtTo != null'>
            AND B.STMT_PROC_DT <![CDATA[<=]]> #{sGiDtTo} + 1
        </if>
        <if test='sMvtTpLst  != null and !sMvtTpLst.isEmpty'> AND B.MVT_TP IN
            <foreach item="item" index="index" collection="sMvtTpLst" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        AND D.ITEM_DSTIN_CD != '20'<!-- 용품제외 -->
        AND B.MVT_TP NOT IN ('23','24')<!-- 부품예류제외 -->
    )T1
    </select>

    <!-- 부품판매금액 소계정보를 조회한다. -->
    <select id="selectPartsSaleCostSummary" resultType="MvtDocVO" parameterType="MvtDocSearchVO" >
    /* [chn.bhmc.dms.par.pmm.service.dao.MvtDocDAO.selectPartsSaleCostSummary] */
    SELECT
        NVL(SUM(NVL(T1.PURC_AMT, T1.MOVING_AVG_AMT)), 0) AS ITEM_AMT
        NVL(SUM(NVL(T1.PURC_TAX_DDCT_AMT, T1.MOVING_AVG_TAX_DDCT_AMT)), 0) AS ITEM_TAX_DDCT_AMT
    FROM
    (
        SELECT
             CASE
                    WHEN B.MVT_TP = '21'
                      THEN
                        CASE WHEN A.DEBIT_CREDIT_DSTIN_CD = 'H'
                               THEN NVL(A.MOVING_AVG_AMT,0)
                             ELSE 0
                        END
                    WHEN B.MVT_TP = '22'
                      THEN
                        CASE WHEN A.DEBIT_CREDIT_DSTIN_CD = 'H'
                               THEN NVL(A.MOVING_AVG_AMT,0)
                             ELSE 0
                         END
                    ELSE
                      CASE
                        WHEN C.STOCK_CALC_TP = '+'
                          THEN A.MOVING_AVG_AMT * -1
                        ELSE A.MOVING_AVG_AMT
                      END
                  END MOVING_AVG_AMT
            ,CASE
                    WHEN B.MVT_TP = '21'
                      THEN
                        CASE WHEN A.DEBIT_CREDIT_DSTIN_CD = 'H'
                               THEN NVL(A.MOVING_AVG_TAX_DDCT_AMT,0)
                             ELSE 0
                        END
                    WHEN B.MVT_TP = '22'
                      THEN
                        CASE WHEN A.DEBIT_CREDIT_DSTIN_CD = 'H'
                               THEN NVL(A.MOVING_AVG_TAX_DDCT_AMT,0)
                             ELSE 0
                         END
                    ELSE
                      CASE
                        WHEN C.STOCK_CALC_TP = '+'
                          THEN A.MOVING_AVG_TAX_DDCT_AMT * -1
                        ELSE A.MOVING_AVG_TAX_DDCT_AMT
                      END
                  END MOVING_AVG_TAX_DDCT_AMT
            ,CASE
                WHEN B.MVT_TP = '21'
                  THEN
                    CASE WHEN A.DEBIT_CREDIT_DSTIN_CD = 'H'
                           THEN NVL(A.SALE_AMT,0)
                         ELSE 0
                    END
                WHEN B.MVT_TP = '22'
                  THEN
                    CASE WHEN A.DEBIT_CREDIT_DSTIN_CD = 'H'
                           THEN CASE WHEN NVL(A.SALE_AMT, 0) = 0
                                       THEN NVL(A.PURC_AMT, 0)
                                     ELSE NVL(A.SALE_AMT, 0)
                                 END
                         ELSE 0
                     END
                ELSE
                  CASE
                    WHEN C.STOCK_CALC_TP = '+'
                      THEN A.SALE_AMT * -1
                    ELSE A.SALE_AMT
                  END
              END PURC_AMT
            ,CASE
                WHEN B.MVT_TP = '21'
                  THEN
                    CASE WHEN A.DEBIT_CREDIT_DSTIN_CD = 'H'
                           THEN NVL(A.SALE_TAX_DDCT_AMT,0)
                         ELSE 0
                    END
                WHEN B.MVT_TP = '22'
                  THEN
                    CASE WHEN A.DEBIT_CREDIT_DSTIN_CD = 'H'
                           THEN CASE WHEN NVL(A.SALE_TAX_DDCT_AMT, 0) = 0
                                       THEN NVL(A.PURC_TAX_DDCT_AMT, 0)
                                     ELSE NVL(A.SALE_TAX_DDCT_AMT, 0)
                                 END
                         ELSE 0
                     END
                ELSE
                  CASE
                    WHEN C.STOCK_CALC_TP = '+'
                      THEN A.SALE_TAX_DDCT_AMT * -1
                    ELSE A.SALE_TAX_DDCT_AMT
                  END
              END PURC_TAX_DDCT_AMT
        FROM PT_0312T A
        INNER JOIN PT_0311T B ON A.DLR_CD = B.DLR_CD AND A.MVT_DOC_YY_MM = B.MVT_DOC_YY_MM AND A.MVT_DOC_NO = B.MVT_DOC_NO
        INNER JOIN PT_0102T C ON B.DLR_CD = C.DLR_CD AND B.MVT_TP = C.MVT_TP
        LEFT JOIN PT_0201T D ON A.DLR_CD = D.DLR_CD AND A.ITEM_CD = D.ITEM_CD
        WHERE A.DLR_CD = #{sDlrCd}
        AND (C.MVT_GR_GI_TP = 'I' or (C.MVT_GR_GI_TP = 'T' AND A.DEBIT_CREDIT_DSTIN_CD = 'H'))
        <if test='sGiDtFr != null'>
            AND B.STMT_PROC_DT <![CDATA[>=]]> #{sGiDtFr}
        </if>
        <if test='sGiDtTo != null'>
            AND B.STMT_PROC_DT <![CDATA[<=]]> #{sGiDtTo} + 1
        </if>
        AND B.MVT_TP IN ('71', '73')<!-- 수불유형 : 판매출고, 판매출고반품 -->
        AND D.ITEM_DSTIN_CD != '20'<!-- 용품제외 -->
        AND B.MVT_TP NOT IN ('23','24') <!-- 부품예류제외 -->
    )T1
    </select>


</mapper>