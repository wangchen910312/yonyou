<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--
    SQL File Name : MembershipPointHisSupportDAO_SqlMap.xml
    Description : 멤버십
    author Lee In Moon
    since 2016.09.03.
    version 1.0
    Modification Information
       since          author              description
    ===========    =============    ===========================
    2016. 03. 22.    Hyun Ho Kim    최초 생성
-->

<mapper namespace="chn.bhmc.dms.crm.dmm.service.dao.MembershipPointHisSupportDAO">

    <!-- 포인트 이력 프로시저를 call한다. -->
    <select id="selectCallPoint" statementType="CALLABLE" parameterType="MembershipPointHisVO">
    /* [chn.bhmc.dms.crm.dmm.service.dao.MembershipPointHisSupportDAO.selectCallPoint] */
         {call SP_CRM_MEMBERSHIP_POINT_HIS2 (
            #{dlrCd, mode=IN, jdbcType=VARCHAR}
            , #{membershipNo, mode=IN, jdbcType=VARCHAR}
            , #{cardTpCd, mode=IN, jdbcType=VARCHAR}
            , #{cardNo, mode=IN, jdbcType=VARCHAR}
            , #{pointCd, mode=IN, jdbcType=VARCHAR}
            , #{pointTp, mode=IN, jdbcType=VARCHAR}
            , #{occrPointVal, mode=IN, jdbcType=VARCHAR}
            , #{occrPointCost, mode=IN, jdbcType=VARCHAR}
            , #{deptNm, mode=IN, jdbcType=VARCHAR}
            , #{prsnId, mode=IN, jdbcType=VARCHAR}
            , #{regUsrId, mode=IN, jdbcType=VARCHAR}
            , #{updtUsrId, mode=IN, jdbcType=VARCHAR}
            , #{extcTargYn, mode=IN, jdbcType=VARCHAR}
            , #{lastPointVal, mode=IN, jdbcType=VARCHAR}
            , #{realTotAmt, mode=IN, jdbcType=VARCHAR}
            , #{membershipPointPeriod, mode=IN, jdbcType=VARCHAR}
            , #{useTp, mode=IN, jdbcType=VARCHAR}
            , #{useNum, mode=IN, jdbcType=VARCHAR}
            , #{srcSub1, mode=IN, jdbcType=VARCHAR}
            , #{srcSub2, mode=IN, jdbcType=VARCHAR}
            , #{srcSub3, mode=IN, jdbcType=VARCHAR}
            , #{cancelHisSeq, mode=IN, jdbcType=VARCHAR}
            , #{result, mode=OUT, jdbcType=VARCHAR}
         )}
    </select>

    <!-- 예치금 이력 프로시저를 call한다. -->
    <select id="insertRechargeAmtProc" statementType="CALLABLE" parameterType="MembershipPointHisVO">
    /* [chn.bhmc.dms.crm.dmm.service.dao.MembershipPointHisSupportDAO.insertRechargeAmtProc] */
         {call SP_CRM_MEMBERSHIP_RECHARGE_HIS (
              #{dlrCd, mode=IN, jdbcType=VARCHAR}
            , #{membershipNo, mode=IN, jdbcType=VARCHAR}
            , #{cardNo, mode=IN, jdbcType=VARCHAR}
            , #{pointCd, mode=IN, jdbcType=VARCHAR}
            , #{pointTp, mode=IN, jdbcType=VARCHAR}
            , #{occrPointVal, mode=IN, jdbcType=VARCHAR}
            , #{realTotAmt, mode=IN, jdbcType=VARCHAR}
            , #{useTp, mode=IN, jdbcType=VARCHAR}
            , #{useNum, mode=IN, jdbcType=VARCHAR}
            , #{srcSub1, mode=IN, jdbcType=VARCHAR}
            , #{srcSub2, mode=IN, jdbcType=VARCHAR}
            , #{remark, mode=IN, jdbcType=VARCHAR}
            , #{deptNm, mode=IN, jdbcType=VARCHAR}
            , #{prsnId, mode=IN, jdbcType=VARCHAR}
            , #{regUsrId, mode=IN, jdbcType=VARCHAR}
            , #{result, mode=OUT, jdbcType=VARCHAR}
         )}
    </select>

    <!-- 멤버십 충전금액에 대한 잔액을 조회한다. (멤버십 양도/양수 에서 사용) -->
    <select id="selectRealTotAmtInfoByKey"  parameterType="MembershipPointHisSearchVO" resultType="MembershipPointHisVO">
    /* [chn.bhmc.dms.crm.dmm.service.dao.MembershipPointHisSupportDAO.selectRealTotAmtInfoByKey] */
        SELECT DLR_CD
                ,MEMBERSHIP_NO
                ,POINT_HIS_SEQ
                ,CARD_TP_CD
                ,CARD_NO
                ,POINT_CD
                ,POINT_TP
                ,OCCR_POINT_VAL
                ,OCCR_DT
                ,DEPT_NM
                ,PRSN_ID
                ,REG_USR_ID
                ,REG_DT
                ,UPDT_USR_ID
                ,UPDT_DT
                ,EXTC_DT
                ,EXTC_TARG_YN
                ,EXTC_TARG_POINT_VAL
                ,LAST_POINT_VAL
        FROM(
                SELECT  ROW_NUMBER() OVER (PARTITION BY DLR_CD, MEMBERSHIP_NO,CARD_TP_CD,CARD_NO ORDER BY POINT_HIS_SEQ DESC) NUMB
                        ,DLR_CD
                        ,MEMBERSHIP_NO
                        ,POINT_HIS_SEQ
                        ,CARD_TP_CD
                        ,CARD_NO
                        ,POINT_CD
                        ,POINT_TP
                        ,OCCR_POINT_VAL
                        ,OCCR_DT
                        ,DEPT_NM
                        ,PRSN_ID
                        ,REG_USR_ID
                        ,REG_DT
                        ,UPDT_USR_ID
                        ,UPDT_DT
                        ,EXTC_DT
                        ,EXTC_TARG_YN
                        ,EXTC_TARG_POINT_VAL
                        ,LAST_POINT_VAL
                FROM    CR_0803T
                WHERE   DLR_CD = #{sDlrCd}
                AND     MEMBERSHIP_NO = #{sMembershipNo}
                AND     CARD_TP_CD = #{sCardTpCd}
                AND     CARD_NO = #{sCardNo}
        )
        WHERE NUMB=1
    </select>

    <select id="selectRealTotAmtInfoCondition"  parameterType="MembershipPointHisSearchVO" resultType="MembershipPointHisVO">
    /* [chn.bhmc.dms.crm.dmm.service.dao.MembershipPointHisSupportDAO.selectRealTotAmtInfoCondition] */
        SELECT DLR_CD
                ,MEMBERSHIP_NO
                ,POINT_HIS_SEQ
                ,CARD_TP_CD
                ,CARD_NO
                ,POINT_CD
                ,POINT_TP
                ,OCCR_POINT_VAL
                ,OCCR_DT
                ,DEPT_NM
                ,PRSN_ID
                ,REG_USR_ID
                ,REG_DT
                ,UPDT_USR_ID
                ,UPDT_DT
                ,EXTC_DT
                ,EXTC_TARG_YN
                ,EXTC_TARG_POINT_VAL
                ,LAST_POINT_VAL
                ,REAL_TOT_AMT
        FROM(
                SELECT  ROW_NUMBER() OVER (PARTITION BY DLR_CD, MEMBERSHIP_NO,CARD_TP_CD,CARD_NO ORDER BY POINT_HIS_SEQ DESC) NUMB
                        ,DLR_CD
                        ,MEMBERSHIP_NO
                        ,POINT_HIS_SEQ
                        ,CARD_TP_CD
                        ,CARD_NO
                        ,POINT_CD
                        ,POINT_TP
                        ,OCCR_POINT_VAL
                        ,OCCR_DT
                        ,DEPT_NM
                        ,PRSN_ID
                        ,REG_USR_ID
                        ,REG_DT
                        ,UPDT_USR_ID
                        ,UPDT_DT
                        ,EXTC_DT
                        ,EXTC_TARG_YN
                        ,EXTC_TARG_POINT_VAL
                        ,LAST_POINT_VAL
                        ,REAL_TOT_AMT
                FROM    CR_0803T
                WHERE   DLR_CD = #{sDlrCd}
                AND     MEMBERSHIP_NO = #{sMembershipNo}
                AND     CARD_TP_CD = #{sCardTpCd}
                <if test='(sCardNo != null) and (sCardNo != "")'>
                AND     CARD_NO = #{sCardNo}
                </if>
        )
        WHERE NUMB=1
    </select>


    <sql id="searchPointHistorys">

        INNER JOIN CR_0803T B ON A.DLR_CD = B.DLR_CD
        AND A.MEMBERSHIP_NO = B.MEMBERSHIP_NO
        AND A.CARD_TP_CD = B.CARD_TP_CD

        <if test='sCardTpCd == "02"'>
            <!-- 포인트:01 / 카드:02 충전카드는 번호가 변경되기 때문에 -->
            AND A.CARD_NO = B.CARD_NO
        </if>

        AND A.USE_YN = 'Y'
        <if test='(sCardTpCd != null) and (sCardTpCd != "")'>
            AND A.CARD_TP_CD = #{sCardTpCd}
        </if>
        LEFT OUTER JOIN CR_0801T C ON A.MEMBERSHIP_NO = C.MEMBERSHIP_NO AND A.DLR_CD = C.DLR_CD
        LEFT OUTER JOIN CM_0801T D ON B.PRSN_ID = D.USR_ID AND A.DLR_CD = C.DLR_CD

        <where>
            AND A.DLR_CD = #{sDlrCd}
            AND A.MEMBERSHIP_NO = #{sMembershipNo}
        </where>

    </sql>

    <!-- 멤버십 포인트 이력 목록수를 조회한다. -->
    <select id="selectPointHistorysByConditionCnt" parameterType="MembershipPointHisSearchVO" resultType="int">
        /* [chn.bhmc.dms.crm.dmm.service.dao.MembershipPointHisSupportDAO.selectPointHistorysByConditionCnt] */
        SELECT  COUNT(*) AS VALUE
        FROM    CR_0813T A
        <include refid = "searchPointHistorys"/>


    </select>


    <!-- 멤버십 포인트 이력  정보 목록을 조회한다. -->
    <select id="selectPointHistorysByCondition" parameterType="MembershipPointHisSearchVO" resultType="MembershipPointHisVO">
        /* [chn.bhmc.dms.crm.dmm.service.dao.MembershipPointHisSupportDAO.selectPointHistorysByCondition] */
        SELECT * FROM (
            SELECT ROWNUM AS RNUM, T1.* FROM (
                    SELECT  A.DLR_CD
                            ,A.MEMBERSHIP_NO
                            ,B.POINT_HIS_SEQ
                            ,A.CARD_TP_CD
                            ,A.CARD_NO
                            ,B.POINT_CD
                            ,(SELECT
                                  NVL(CM0304T.CMM_CD_TXT, CM0303T.CMM_CD_NM)
                                FROM CM_0303T CM0303T, CM_0304T CM0304T
                                  WHERE CM0303T.CMM_GRP_CD = CM0304T.CMM_GRP_CD
                                  AND CM0303T.CMM_CD = CM0304T.CMM_CD
                                  AND CM0304T.LANG_CD = 'zh'
                                  AND CM0303T.CMM_GRP_CD = 'CRM802'
                                  AND CM0303T.CMM_CD = B.POINT_CD
                            ) AS POINT_CD_NM
                            ,B.POINT_TP
                            ,B.OCCR_POINT_VAL
                            ,'('||B.POINT_TP||') '||TO_CHAR(B.OCCR_POINT_VAL,'FM9,999,999,999') AS OCCR_POINT_VAL2
                            ,B.LAST_POINT_VAL
                            ,B.REAL_TOT_AMT     -- 20170602 REAL_TOT_AMT 컬럼 용도 변경 ( 수납금액 입력 ) 함에 따라 최종 금액은 LAST_POINT_VAL을 사용한다.
                            ,B.OCCR_DT
                            ,B.DEPT_NM
                            ,B.PRSN_ID
                            ,D.USR_NM AS PRSN_NM
                            ,B.EXTC_DT
                            ,B.EXTC_TARG_YN
                            ,B.EXTC_TARG_POINT_VAL
                            ,C.CUST_NO
                            ,C.REG_DT
                            ,B.REMARK
                            ,B.USE_TP
                            ,B.USE_NUM
                    FROM CR_0813T A
                    <include refid = "searchPointHistorys"/>
                    ORDER BY
                    <choose>
                        <when test='sort != null'>
                            <foreach item="item" index="index" collection="sort" open="" separator="," close="">
                                <choose>
                                    <when test='item.field == "pointHisSeq"'>B.POINT_HIS_SEQ <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                                    <when test='item.field == "cardNo"'>A.CARD_NO <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                                    <when test='item.field == "pointCd"'>B.POINT_CD <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                                    <when test='item.field == "pointTp"'>B.POINT_TP <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                                    <when test='item.field == "occrPointVal2"'>B.OCCR_POINT_VAL <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                                    <when test='item.field == "occrPointVal"'>B.OCCR_POINT_VAL <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                                    <when test='item.field == "lastPointVal"'>B.LAST_POINT_VAL <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                                    <when test='item.field == "realTotAmt"'>B.REAL_TOT_AMT <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                                    <when test='item.field == "occrDt"'>B.OCCR_DT <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                                    <when test='item.field == "deptNm"'>B.DEPT_NM <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                                    <when test='item.field == "prsnNm"'>PRSN_NM <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                                    <when test='item.field == "remark"'>B.REMARK <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                                    <otherwise>
                                        B.POINT_HIS_SEQ DESC
                                    </otherwise>
                                </choose>
                            </foreach>
                        </when>
                        <otherwise>
                            B.POINT_HIS_SEQ DESC
                        </otherwise>
                    </choose>
            ) T1
            <where>
                <if test='firstIndex != -1 and lastIndex != -1'>
                    ROWNUM <![CDATA[<=]]> #{lastIndex}
                </if>
            </where>
        )
        <where>
            <if test='firstIndex != -1 and lastIndex != -1'>
                RNUM > #{firstIndex}
            </if>
        </where>
    </select>

    <!-- 조회 조건에 멤버십 포인트 캔슬을 위한 정보를 조회한다. -->
    <select id="selectPointCancelHistorysByKey" parameterType="MembershipPointHisSearchVO" resultType="MembershipPointHisVO">
        /* [chn.bhmc.dms.crm.dmm.service.dao.MembershipPointHisSupportDAO.selectPointCancelHistorysByKey] */
            SELECT  A.DLR_CD
                    ,A.MEMBERSHIP_NO
                    ,B.POINT_HIS_SEQ
                    ,A.CARD_TP_CD
                    ,A.CARD_NO
                    ,B.POINT_CD
                    ,(SELECT
                          NVL(CM0304T.CMM_CD_TXT, CM0303T.CMM_CD_NM)
                        FROM CM_0303T CM0303T, CM_0304T CM0304T
                          WHERE CM0303T.CMM_GRP_CD = CM0304T.CMM_GRP_CD
                          AND CM0303T.CMM_CD = CM0304T.CMM_CD
                          AND CM0304T.LANG_CD = 'zh'
                          AND CM0303T.CMM_GRP_CD = 'CRM802'
                          AND CM0303T.CMM_CD = B.POINT_CD
                    ) AS POINT_CD_NM
                    ,B.POINT_TP
                    ,B.OCCR_POINT_VAL
                    ,'('||B.POINT_TP||') '||TO_CHAR(B.OCCR_POINT_VAL,'FM9,999,999,999') AS OCCR_POINT_VAL2
                    ,B.OCCR_POINT_COST
                    ,B.LAST_POINT_VAL
                    ,B.REAL_TOT_AMT
                    ,B.OCCR_DT
                    ,B.DEPT_NM
                    ,B.PRSN_ID
                    ,D.USR_NM AS PRSN_NM
                    ,B.EXTC_DT
                    ,B.EXTC_TARG_YN
                    ,B.EXTC_TARG_POINT_VAL
                    ,B.USE_TP
                    ,B.USE_NUM
                    ,B.SRC_SUB1
                    ,B.SRC_SUB2
                    ,B.SRC_SUB3
                    ,C.CUST_NO
                    ,C.REG_DT
            FROM CR_0813T A
            INNER JOIN CR_0803T B ON A.DLR_CD = B.DLR_CD
                AND A.MEMBERSHIP_NO = B.MEMBERSHIP_NO
                AND A.CARD_TP_CD = B.CARD_TP_CD
                AND A.CARD_NO = B.CARD_NO
                AND A.USE_YN = 'Y'
            LEFT OUTER JOIN CR_0801T C ON A.MEMBERSHIP_NO = C.MEMBERSHIP_NO AND A.DLR_CD = C.DLR_CD
            LEFT OUTER JOIN CM_0801T D ON B.PRSN_ID = D.USR_ID AND A.DLR_CD = C.DLR_CD
            WHERE   A.DLR_CD = #{sDlrCd}
            AND     NVL(B.CANCEL_HIS_SEQ,0) = 0
            AND     B.USE_TP = #{sUseTp}
            AND     B.USE_NUM = #{sUseNum}
            AND     B.SRC_SUB1 = #{sSrcSub1}
        <if test='sSrcSub2 != null and sSrcSub2 != ""'>
            AND     B.SRC_SUB2 = #{sSrcSub2}
        </if>
        <if test='sSrcSub3 != null and sSrcSub3 != ""'>
            AND     B.SRC_SUB3 = #{sSrcSub3}
        </if>
            ORDER BY POINT_HIS_SEQ DESC
    </select>

</mapper>