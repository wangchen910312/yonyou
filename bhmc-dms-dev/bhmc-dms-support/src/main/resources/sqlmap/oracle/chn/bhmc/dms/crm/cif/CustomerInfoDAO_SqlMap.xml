<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--
    SQL File Name : CustomerInfoDAO_SqlMap.xml
    Description : 고객그룹 관한 데이터처리
    author Kyo Jin Lee
    since 2015. 12. 30.
    version 1.0
    Modification Information
       since          author              description
    ===========    =============    ===========================
    2016. 01. 05.     Kyo Jin Lee     최초 생성
    2017. 08. 10.     kyo jin lee   id="searchCustomerListWhere"  rank() ==> row_number() 수정
-->

<mapper namespace="chn.bhmc.dms.crm.cif.service.dao.CustomerInfoDAO">

    <!-- 고객 조회 검색조건 -->
    <sql id="searchCustomerInfoWhere">

        LEFT OUTER JOIN CR_0211T LEADOPPT ON T1.CUST_NO = LEADOPPT.CUST_NO
        LEFT OUTER JOIN CM_0801T SCT ON T1.MNG_SC_ID = SCT.USR_ID
        LEFT OUTER JOIN CM_0801T TEC ON T1.MNG_TEC_ID = TEC.USR_ID
        LEFT OUTER JOIN CM_0801T USRT ON T1.REG_USR_ID = USRT.USR_ID
        LEFT OUTER JOIN (
            SELECT
                 ROW_NUMBER() OVER(PARTITION BY  DLR_CD, REF_TABLE_NM, REF_KEY_NM  ORDER BY NVL(UPDT_DT, REG_DT) DESC ) AS ADDR_NUM
                ,DLR_CD
                ,SEQ
                ,REF_TABLE_NM
                ,REF_KEY_NM
                ,ADDR_TP
                ,SUNG_CD
                ,CITY_CD
                ,DIST_CD
                ,ZIP_CD
                ,SUNG_NM
                ,CITY_NM
                ,DIST_NM
                ,ADDR_DETL_CONT
            FROM CR_0116T
            WHERE DLR_CD = #{sDlrCd}
            AND USE_YN = 'Y'
            AND REF_TABLE_NM = 'CR_0101T'
        <choose>
            <when test='sAddrTp == "02"'>
                AND ADDR_TP = '02'
            </when>
            <otherwise>
                AND FLAG_YN = 'Y'
                <if test='sAddrTp != null and sAddrTp != ""'>
                    AND ADDR_TP = #{sAddrTp}
                </if>
            </otherwise>
        </choose>
        ) ADDR ON T1.DLR_CD = ADDR.DLR_CD AND T1.CUST_NO = ADDR.REF_KEY_NM AND ADDR_NUM = 1

        <if test='sCommand != null and sCommand == "TAGSEARCH"'>
        INNER JOIN CR_0115T TAG ON T1.CUST_NO = TAG.CUST_NO AND TAG.GRP_TP = '002'
            AND TAG.GRP_SEQ IN
            <foreach collection="tagDS" item="tagItem" open="(" close=")" separator=",">
                #{tagItem}
            </foreach>
        </if>

        <where>
           T1.DEL_YN = 'N'
            <!-- 고객정보 like 검색 -->
            <if test='sCust != null and sCust != ""'>
                AND ( T1.CUST_NM LIKE '%'||#{sCust}||'%'
                    OR T1.HP_NO LIKE '%'||#{sCust}||'%'
                    OR T1.TEL_NO LIKE '%'||#{sCust}||'%'
                    )
            </if>
           <if test='sMergeYn != null and sMergeYn != ""'>
                AND T1.MERGE_YN = #{sMergeYn}
           </if>
           <if test='sDlrCd != null and sDlrCd != ""'>
                AND T1.DLR_CD = #{sDlrCd}
           </if>
           <if test='sCustNo != null and sCustNo != ""'>
                AND T1.CUST_NO LIKE '%'||#{sCustNo}||'%'
           </if>
           <if test='sSsnCrnNo != null and sSsnCrnNo != ""'>
                AND T1.SSN_CRN_NO LIKE '%'||UPPER(#{sSsnCrnNo})||'%'
           </if>
           <if test='sMngScId != null and sMngScId != ""'>
                AND T1.MNG_SC_ID = #{sMngScId}
           </if>
           <if test='sCustNm != null and sCustNm != ""'>
                AND T1.CUST_NM LIKE '%'||#{sCustNm}||'%'
           </if>
           <if test='sCustTp != null and sCustTp != ""'>
                AND T1.CUST_TP = #{sCustTp}
           </if>
           <if test='sCustCd != null and sCustCd != ""'>
                AND T1.CUST_CD = #{sCustCd}
           </if>
           <if test='sHpNo != null and sHpNo != ""'>
                AND T1.HP_NO LIKE '%'||#{sHpNo}||'%'
           </if>
           <if test='sSexCd != null and sSexCd != ""'>
                AND T1.SEX_CD = #{sSexCd}
           </if>
           <if test='sTelNo != null and sTelNo != ""'>
                AND T1.TEL_NO LIKE '%'||#{sTelNo}||'%'
           </if>
           <if test='sOfficeTelNo != null and sOfficeTelNo != ""'>
                AND T1.OFFICE_TEL_NO LIKE '%'||#{sOfficeTelNo}||'%'
           </if>
           <if test='sEmailNm != null and sEmailNm != ""'>
                AND T1.EMAIL_NM LIKE '%'||#{sEmailNm}||'%'
           </if>
           <if test='sBhmcYn != null and sBhmcYn != ""'>
                AND T1.BHMC_YN = #{sBhmcYn}
           </if>
            <if test='sRegDtFrom != null'>
                <![CDATA[
                    AND T1.REG_DT >= #{sRegDtFrom}   -- 등록일
                ]]>
            </if>
            <if test='sRegDtTo != null'>
                <![CDATA[
                    AND T1.REG_DT < #{sRegDtTo}       -- 등록일
                ]]>
            </if>

            <if test='sAssignYn != null and sAssignYn != ""'>
                <if test='sAssignYn == "Y"'>
                     AND T1.MNG_SC_ID IS NOT NULL           -- SC 배정
                </if >
                <if test='sAssignYn == "N"'>
                     AND T1.MNG_SC_ID IS NULL               -- SC 미배정
                </if>
            </if>
            <if test='sVinNo != null and sVinNo != ""'>
                AND T1.CUST_NO IN (
                    SELECT OWNER.BP_CD
                      FROM SA_0121T CAR, SA_0123T OWNER
                     WHERE CAR.CAR_ID = OWNER.CAR_ID
                       AND OWNER.DLR_CD = #{sDlrCd}
                       AND OWNER.USE_YN = 'Y'
                       AND CAR.VIN_NO LIKE '%'||#{sVinNo}||'%'
                )
            </if>
            <if test='sCarRegNo != null and sCarRegNo != ""'>
                AND T1.CUST_NO IN (
                    SELECT OWNER.BP_CD
                      FROM SA_0121T CAR, SA_0123T OWNER
                     WHERE CAR.CAR_ID = OWNER.CAR_ID
                       AND OWNER.DLR_CD = #{sDlrCd}
                       AND OWNER.USE_YN = 'Y'
                       AND CAR.CAR_REG_NO LIKE '%'||#{sCarRegNo}||'%'
                )
            </if>
        </where>
    </sql>

    <!-- 고객 이력 조회 검색조건 -->
    <sql id="searchCustomerHistInfoWhere">
        LEFT OUTER JOIN CM_0801T USRT ON T1.REG_USR_ID = USRT.USR_ID
        <where>
           T1.DEL_YN = 'N'
            <!-- 고객정보 like 검색 -->
           <if test='sDlrCd != null and sDlrCd != ""'>
                AND T1.DLR_CD = #{sDlrCd}
           </if>
           <if test='sCustNo != null and sCustNo != ""'>
                AND T1.CUST_NO = #{sCustNo}
           </if>
        </where>
    </sql>

    <!-- 고객 수를 조회한다. 판매사원용 -->
    <select id="selectCustomerInfoByConditionCnt" parameterType="CustomerInfoSearchVO" resultType="int">
        /* [chn.bhmc.dms.crm.cif.service.dao.CustomerInfoDAO.selectCustomerInfoByConditionCnt] */
        SELECT COUNT(T3.CUST_NO) AS VALUE
        FROM (
          SELECT T2.* FROM (
          SELECT
            T1.CUST_NO
            , (
                SELECT MAX(A.REAL_DL_DT)
                  FROM SA_0201T A
                 WHERE     CONTRACT_CUST_NO = T1.CUST_NO
                       AND CONTRACT_STAT_CD = '50'
                       AND REAL_DL_DT IS NOT NULL
            ) AS FIRST_SALE_DT
            , (SELECT CUST_NO FROM (SELECT CUST_NO FROM CR_0801T WHERE DLR_CD = #{sDlrCd} GROUP BY CUST_NO) WHERE CUST_NO = T1.CUST_NO) AS DLR_MBR_YN
          FROM CR_0101T T1
          <include refid="searchCustomerInfoWhere" />
          ) T2
            <where>
                <if test='sSaleDtFrom != null'>
                    AND T2.FIRST_SALE_DT <![CDATA[>=]]> trunc(#{sSaleDtFrom},'DD')
                </if>
                <if test='sSaleDtTo != null'>
                    AND T2.FIRST_SALE_DT <![CDATA[<]]> trunc(#{sSaleDtTo},'DD')+1
                </if>
                <if test='sDlrMbrYn != null and sDlrMbrYn != ""'>
                    AND T2.DLR_MBR_YN IS NULL
                </if>
            </where>
        ) T3
    </select>

    <!-- 고객를 조회한다. 판매사원용-->
    <select id="selectCustomerInfoByCondition" parameterType="CustomerInfoSearchVO" resultType="CustomerInfoVO">
        /* [chn.bhmc.dms.crm.cif.service.dao.CustomerInfoDAO.selectCustomerInfoByCondition] */
        SELECT * FROM (
            SELECT ROWNUM AS RNUM, T3.* FROM (
                SELECT T2.*
                FROM (
                    SELECT
                        T1.DLR_CD
                        , T1.CUST_NO
                        , T1.CUST_NM
                        , T1.CUST_CD
                        , ( SELECT Z1.CMM_CD_NM FROM (SELECT A.CMM_CD, NVL(B.CMM_CD_TXT, A.CMM_CD_NM) AS CMM_CD_NM FROM CM_0303T A LEFT OUTER JOIN CM_0304T B ON A.CMM_GRP_CD = B.CMM_GRP_CD AND A.CMM_CD = B.CMM_CD
                                                    AND B.LANG_CD = #{sLangCd}
                                                    WHERE A.CMM_GRP_CD = 'CRM023'
                                                    AND A.USE_YN = 'Y') Z1
                            WHERE T1.CUST_CD = Z1.CMM_CD
                          ) AS CUST_CD_NM
                        , NVL(T1.SSN_CRN_NO,' ') AS SSN_CRN_NO
                        , T1.CUST_TP
                        , ( SELECT Z1.CMM_CD_NM FROM (SELECT A.CMM_CD, NVL(B.CMM_CD_TXT, A.CMM_CD_NM) AS CMM_CD_NM FROM CM_0303T A LEFT OUTER JOIN CM_0304T B ON A.CMM_GRP_CD = B.CMM_GRP_CD AND A.CMM_CD = B.CMM_CD
                                                    AND B.LANG_CD = #{sLangCd}
                                                    WHERE A.CMM_GRP_CD = 'CRM001'
                                                    AND A.USE_YN = 'Y') Z1
                            WHERE T1.CUST_TP = Z1.CMM_CD
                          ) AS CUST_TP_NM
                        , T1.MNG_SC_ID
                        , T1.SALE_SC_ID
                        , T1.MNG_TEC_ID
                        , T1.EMAIL_NM
                        , T1.WECHAT_ID
                        , T1.QQ_ID
                        , T1.FACEBOOK_ID
                        , T1.TWITTER_ID
                        , T1.PREF_COMM_MTH_CD
                        , ( SELECT Z1.CMM_CD_NM FROM (SELECT A.CMM_CD, NVL(B.CMM_CD_TXT, A.CMM_CD_NM) AS CMM_CD_NM FROM CM_0303T A LEFT OUTER JOIN CM_0304T B ON A.CMM_GRP_CD = B.CMM_GRP_CD AND A.CMM_CD = B.CMM_CD
                                                    AND B.LANG_CD = #{sLangCd}
                                                    WHERE A.CMM_GRP_CD = 'CRM022'
                                                    AND A.USE_YN = 'Y') Z1
                            WHERE T1.PREF_COMM_MTH_CD = Z1.CMM_CD
                          ) AS PREF_COMM_MTH_CD_NM
                        , T1.PREF_COMM_NO
                        , T1.PREF_CONTACT_MTH_CD
                        , ( SELECT Z1.CMM_CD_NM FROM (SELECT A.CMM_CD, NVL(B.CMM_CD_TXT, A.CMM_CD_NM) AS CMM_CD_NM FROM CM_0303T A LEFT OUTER JOIN CM_0304T B ON A.CMM_GRP_CD = B.CMM_GRP_CD AND A.CMM_CD = B.CMM_CD
                                                    AND B.LANG_CD = #{sLangCd}
                                                    WHERE A.CMM_GRP_CD = 'CRM038'
                                                    AND A.USE_YN = 'Y') Z1
                            WHERE T1.PREF_CONTACT_MTH_CD = Z1.CMM_CD
                          ) AS PREF_CONTACT_MTH_CD_NM
                        , T1.PREF_CONTACT_TIME_CD
                        , ( SELECT Z1.CMM_CD_NM FROM (SELECT A.CMM_CD, NVL(B.CMM_CD_TXT, A.CMM_CD_NM) AS CMM_CD_NM FROM CM_0303T A LEFT OUTER JOIN CM_0304T B ON A.CMM_GRP_CD = B.CMM_GRP_CD AND A.CMM_CD = B.CMM_CD
                                                    AND B.LANG_CD = #{sLangCd}
                                                    WHERE A.CMM_GRP_CD = 'CRM027'
                                                    AND A.USE_YN = 'Y') Z1
                            WHERE T1.PREF_CONTACT_TIME_CD = Z1.CMM_CD
                          ) AS PREF_CONTACT_TIME_CD_NM
                        , T1.TEL_NO
                        , NVL(T1.HP_NO,' ') AS HP_NO
                        , T1.HP_NO_INVLD_YN
                        , T1.HP_NO_ADD_IMPOS_YN
                        , T1.JOB_CD
                        , ( SELECT Z1.CMM_CD_NM FROM (SELECT A.CMM_CD, NVL(B.CMM_CD_TXT, A.CMM_CD_NM) AS CMM_CD_NM FROM CM_0303T A LEFT OUTER JOIN CM_0304T B ON A.CMM_GRP_CD = B.CMM_GRP_CD AND A.CMM_CD = B.CMM_CD
                                                    AND B.LANG_CD = #{sLangCd}
                                                    WHERE A.CMM_GRP_CD = 'CRM002'
                                                    AND A.USE_YN = 'Y') Z1
                            WHERE T1.JOB_CD = Z1.CMM_CD
                          ) AS JOB_CD_NM
                        , T1.DUTY_CD
                        , ( SELECT Z1.CMM_CD_NM FROM (SELECT A.CMM_CD, NVL(B.CMM_CD_TXT, A.CMM_CD_NM) AS CMM_CD_NM FROM CM_0303T A LEFT OUTER JOIN CM_0304T B ON A.CMM_GRP_CD = B.CMM_GRP_CD AND A.CMM_CD = B.CMM_CD
                                                    AND B.LANG_CD = #{sLangCd}
                                                    WHERE A.CMM_GRP_CD = 'CRM037'
                                                    AND A.USE_YN = 'Y') Z1
                            WHERE T1.DUTY_CD = Z1.CMM_CD
                          ) AS DUTY_CD_NM
                        , T1.OFFICE_NM
                        , T1.DEPT_NM
                        , NVL(T1.OFFICE_TEL_NO,' ') AS OFFICE_TEL_NO
                        , T1.OFFICE_FAX_NO
                        , T1.OWN_RGST_NM
                        , T1.CMP_TP
                        , ( SELECT Z1.CMM_CD_NM FROM (SELECT A.CMM_CD, NVL(B.CMM_CD_TXT, A.CMM_CD_NM) AS CMM_CD_NM FROM CM_0303T A LEFT OUTER JOIN CM_0304T B ON A.CMM_GRP_CD = B.CMM_GRP_CD AND A.CMM_CD = B.CMM_CD
                                                    AND B.LANG_CD = #{sLangCd}
                                                    WHERE A.CMM_GRP_CD = 'CRM032'
                                                    AND A.USE_YN = 'Y') Z1
                            WHERE T1.CMP_TP = Z1.CMM_CD
                          ) AS CMP_TP_NM
                        , T1.CMP_SCALE_CONT
                        , NVL(T1.MATH_DOC_TP,' ') AS MATH_DOC_TP
                        , ( SELECT Z1.CMM_CD_NM FROM (SELECT A.CMM_CD, NVL(B.CMM_CD_TXT, A.CMM_CD_NM) AS CMM_CD_NM FROM CM_0303T A LEFT OUTER JOIN CM_0304T B ON A.CMM_GRP_CD = B.CMM_GRP_CD AND A.CMM_CD = B.CMM_CD
                                                    AND B.LANG_CD = #{sLangCd}
                                                    WHERE A.CMM_GRP_CD = 'CRM024'
                                                    AND A.USE_YN = 'Y') Z1
                            WHERE T1.MATH_DOC_TP = Z1.CMM_CD
                        ) AS MATH_DOC_TP_NM
                        , T1.OFFICE_NO
                        , T1.DM_PLACE_CD
                        , T1.DM_NM
                        , T1.SMS_RECEIVE_YN
                        , T1.TEL_RECEIVE_YN
                        , T1.DM_RECEIVE_YN
                        , T1.EMAIL_RECEIVE_YN
                        , T1.FAX_RECEIVE_YN
                        , T1.DM_RETURN_YN
                        , T1.EMAIL_RETURN_YN
                        , T1.DISUSE_YN
                        , T1.VIP_YN
                        , T1.CHG_BUY_YN
                        , T1.DISUSE_CD
                        , T1.BUY_CNT
                        , T1.CUST_HOLD_TP
                        , T1.CUST_HOLD_TP_DTL
                        , T1.SEX_CD
                        , ( SELECT Z1.CMM_CD_NM FROM (SELECT A.CMM_CD, NVL(B.CMM_CD_TXT, A.CMM_CD_NM) AS CMM_CD_NM FROM CM_0303T A LEFT OUTER JOIN CM_0304T B ON A.CMM_GRP_CD = B.CMM_GRP_CD AND A.CMM_CD = B.CMM_CD
                                                    AND B.LANG_CD = #{sLangCd}
                                                    WHERE A.CMM_GRP_CD = 'COM017'
                                                    AND A.USE_YN = 'Y') Z1
                            WHERE T1.SEX_CD = Z1.CMM_CD
                          ) AS SEX_CD_NM
                        , T1.BIRTH_DT
                        , T1.MARRY_DT
                        , T1.MARRY_CD
                        , ( SELECT Z1.CMM_CD_NM FROM (SELECT A.CMM_CD, NVL(B.CMM_CD_TXT, A.CMM_CD_NM) AS CMM_CD_NM FROM CM_0303T A LEFT OUTER JOIN CM_0304T B ON A.CMM_GRP_CD = B.CMM_GRP_CD AND A.CMM_CD = B.CMM_CD
                                                    AND B.LANG_CD = #{sLangCd}
                                                    WHERE A.CMM_GRP_CD = 'CRM028'
                                                    AND A.USE_YN = 'Y') Z1
                            WHERE T1.MARRY_CD = Z1.CMM_CD
                          ) AS MARRY_CD_NM
                        , T1.BEF_MNG_SC_ID
                        , T1.PER_INFO_AGREE_YN
                        , T1.PER_INFO_USE_YN
                        , T1.AC_CAREER_CD
                        , ( SELECT Z1.CMM_CD_NM FROM (SELECT A.CMM_CD, NVL(B.CMM_CD_TXT, A.CMM_CD_NM) AS CMM_CD_NM FROM CM_0303T A LEFT OUTER JOIN CM_0304T B ON A.CMM_GRP_CD = B.CMM_GRP_CD AND A.CMM_CD = B.CMM_CD
                                                    AND B.LANG_CD = #{sLangCd}
                                                    WHERE A.CMM_GRP_CD = 'CRM012'
                                                    AND A.USE_YN = 'Y') Z1
                            WHERE T1.AC_CAREER_CD = Z1.CMM_CD
                          ) AS AC_CAREER_CD_NM
                        , T1.INCOME_LVL_CD
                        , ( SELECT Z1.CMM_CD_NM FROM (SELECT A.CMM_CD, NVL(B.CMM_CD_TXT, A.CMM_CD_NM) AS CMM_CD_NM FROM CM_0303T A LEFT OUTER JOIN CM_0304T B ON A.CMM_GRP_CD = B.CMM_GRP_CD AND A.CMM_CD = B.CMM_CD
                                                    AND B.LANG_CD = #{sLangCd}
                                                    WHERE A.CMM_GRP_CD = 'CRM013'
                                                    AND A.USE_YN = 'Y') Z1
                            WHERE T1.INCOME_LVL_CD = Z1.CMM_CD
                          ) AS INCOME_LVL_CD_NM
                        , T1.AGE_DTL
                        , T1.CHINA_ZODIAC_SIGN_CD
                        , ( SELECT Z1.CMM_CD_NM FROM (SELECT A.CMM_CD, NVL(B.CMM_CD_TXT, A.CMM_CD_NM) AS CMM_CD_NM FROM CM_0303T A LEFT OUTER JOIN CM_0304T B ON A.CMM_GRP_CD = B.CMM_GRP_CD AND A.CMM_CD = B.CMM_CD
                                                    AND B.LANG_CD = #{sLangCd}
                                                    WHERE A.CMM_GRP_CD = 'CRM034'
                                                    AND A.USE_YN = 'Y') Z1
                            WHERE T1.CHINA_ZODIAC_SIGN_CD = Z1.CMM_CD
                          ) AS CHINA_ZODIAC_SIGN_CD_NM
                        , T1.ZODIAC_SIGN_CD
                        , ( SELECT Z1.CMM_CD_NM FROM (SELECT A.CMM_CD, NVL(B.CMM_CD_TXT, A.CMM_CD_NM) AS CMM_CD_NM FROM CM_0303T A LEFT OUTER JOIN CM_0304T B ON A.CMM_GRP_CD = B.CMM_GRP_CD AND A.CMM_CD = B.CMM_CD
                                                    AND B.LANG_CD = #{sLangCd}
                                                    WHERE A.CMM_GRP_CD = 'CRM035'
                                                    AND A.USE_YN = 'Y') Z1
                            WHERE T1.ZODIAC_SIGN_CD = Z1.CMM_CD
                          ) AS ZODIAC_SIGN_CD_NM
                        , T1.CHILDREN_CNT
                        , T1.BLOOD_TP
                        , T1.AGE_CD
                        , T1.PURC_CAR_BRAND_CD
                        , T1.PURC_CAR_MODEL_NM
                        , T1.MERGE_YN
                        , T1.DEL_YN
                        , T1.BHMC_YN
                        , T1.SIEBEL_ROW_ID
                        , T1.REG_USR_ID
                        , T1.REG_DT
                        , T1.UPDT_USR_ID
                        , T1.UPDT_DT
                        , T1.DOC_ID
                        , T1.BIZCOND_CD
                        , ( SELECT Z1.CMM_CD_NM FROM (SELECT A.CMM_CD, NVL(B.CMM_CD_TXT, A.CMM_CD_NM) AS CMM_CD_NM FROM CM_0303T A LEFT OUTER JOIN CM_0304T B ON A.CMM_GRP_CD = B.CMM_GRP_CD AND A.CMM_CD = B.CMM_CD
                                                    AND B.LANG_CD = #{sLangCd}
                                                    WHERE A.CMM_GRP_CD = 'CRM031'
                                                    AND A.USE_YN = 'Y') Z1
                            WHERE T1.BIZCOND_CD = Z1.CMM_CD
                          ) AS BIZCOND_CD_NM
                        , T1.BLUE_MEMBERSHIP_NO
                        , T1.BLUE_MEMBERSHIP_JOIN_DT
                        , T1.BLUE_MEMBERSHIP_JOIN_DLR_CD
                        , T1.BAT_YN
                        , T1.HP_NO_RECEIVE_YN
                        , T1.BLUE_GRADE_CHG_DT
                        , T1.BLUE_GRADE_NM
                        , T1.BLUE_AVLB_POINT_VAL
                        , T1.TAXPAYER_NO
                        , T1.CUST_COLL_SRC_CD
                        , ( SELECT Z1.CMM_CD_NM FROM (SELECT A.CMM_CD, NVL(B.CMM_CD_TXT, A.CMM_CD_NM) AS CMM_CD_NM FROM CM_0303T A LEFT OUTER JOIN CM_0304T B ON A.CMM_GRP_CD = B.CMM_GRP_CD AND A.CMM_CD = B.CMM_CD
                                                    AND B.LANG_CD = #{sLangCd}
                                                    WHERE A.CMM_GRP_CD = 'CRM042'
                                                    AND A.USE_YN = 'Y') Z1
                            WHERE T1.CUST_COLL_SRC_CD = Z1.CMM_CD
                          ) AS CUST_COLL_SRC_CD_NM
                        , SCT.USR_NM AS MNG_SC_NM                        --MNG_SC_NM
                        , TEC.USR_NM AS MNG_TEC_NM                        --MNG_TEC_NM
                        , USRT.USR_NM AS REG_USR_NM            --등록자이름
                        , (SELECT MAX(B.RESV_DT ) KEEP (DENSE_RANK FIRST ORDER BY B.RESV_DT DESC , B.RESV_DT DESC ) FROM CR_0206T B WHERE B.CUST_NO = T1.CUST_NO AND B.VSIT_STAT_CD != '02' ) AS PRE_VSIT_DT
                        , (SELECT MAX(B.RESV_DT ) KEEP (DENSE_RANK FIRST ORDER BY B.RESV_DT DESC , B.RESV_DT DESC ) FROM CR_0401T B WHERE B.CUST_NO = T1.CUST_NO AND B.TDRV_STAT_CD != '02' ) AS PRE_TDRV_DT
                        , (SELECT MAX(B.SALE_OPPT_STEP_CD ) KEEP (DENSE_RANK FIRST ORDER BY B.SALE_OPPT_NO DESC , B.SALE_OPPT_NO DESC ) FROM CR_0201T B WHERE B.CUST_NO = T1.CUST_NO ) AS SALE_OPPT_STEP_CD
                        , (SELECT SEQ FROM CR_0211T WHERE CUST_NO = T1.CUST_NO) AS SALES_OPPT_SEQ
                        , (
                            SELECT MAX(B.CUST_SALE_DT)
                              FROM SA_0123T A
                             INNER JOIN SA_0121T B
                                ON A.CAR_ID = B.CAR_ID
                             WHERE A.USE_YN = 'Y'
                               AND A.DLR_CD = #{sDlrCd}
                               AND A.BP_CD = T1.CUST_NO
                        ) AS SALE_DT
                        , (
                            SELECT MIN(A.REAL_DL_DT)
                              FROM SA_0201T A
                             WHERE     CONTRACT_CUST_NO = T1.CUST_NO
                                   AND CONTRACT_STAT_CD = '50'
                                   AND REAL_DL_DT IS NOT NULL
                        ) AS FIRST_SALE_DT
                        , ADDR.SEQ AS ADDR_SEQ
                        , ADDR.ZIP_CD
                        , ADDR.SUNG_CD
                        , ADDR.CITY_CD
                        , ADDR.DIST_CD
                        , ADDR.ADDR_DETL_CONT
                        , ADDR.SUNG_NM
                        , ADDR.CITY_NM
                        , ADDR.DIST_NM
                        , ADDR.SUNG_NM || ' ' || ADDR.CITY_NM || ' ' || ADDR.DIST_NM || ' ' || ADDR.ADDR_DETL_CONT AS ADDR_FULL
                        , ADDR.ADDR_TP
                        , T1.PURC_MNG_NM
                        , FN_CHK_ALBE_SSNCRNNO(T1.DLR_CD, T1.CUST_NO) AS ABLE_SSNCRNNO
                        , (SELECT
                            MEMBERSHIP_NO
                           FROM CR_0801T WHERE DLR_CD = #{sDlrCd}
                           AND CUST_NO = T1.CUST_NO
                <if test='sMembershipStan != null and sMembershipStan != ""'>
                    <choose>
                        <when test='sMembershipStan == "V"'>
                            AND VIN_NO = #{sVinNo}
                        </when>
                    </choose>
                </if>
                            AND ROWNUM = 1
                           ) AS DLR_MBR_YN
                        , T1.BLUE_LOGIN_ID
                    FROM CR_0101T T1
                    <include refid="searchCustomerInfoWhere" />
                ) T2
                <where>
                    <if test='sSaleDtFrom != null'>
                        AND T2.FIRST_SALE_DT <![CDATA[>=]]> trunc(#{sSaleDtFrom},'DD')
                    </if>
                    <if test='sSaleDtTo != null'>
                        AND T2.FIRST_SALE_DT <![CDATA[<]]> trunc(#{sSaleDtTo},'DD')+1
                    </if>
                    <if test='sDlrMbrYn != null and sDlrMbrYn != ""'>
                        AND T2.DLR_MBR_YN IS NULL
                    </if>
                </where>
                    ORDER BY
                    <choose>
                        <when test='sort != null'>
                            <foreach item="item" index="index" collection="sort" open="" separator="," close="">
                                <choose>
                                    <when test='item.field == "custNo"'>T2.CUST_NO <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                                    <when test='item.field == "custTp"'>T2.CUST_TP <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                                    <when test='item.field == "custNm"'>T2.CUST_NM <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                                    <when test='item.field == "custCd"'>T2.CUST_CD <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                                    <when test='item.field == "hpNo"'>T2.HP_NO <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                                    <when test='item.field == "emailNm"'>T2.EMAIL_NM <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                                    <when test='item.field == "regDt"'>T2.REG_DT <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                                    <when test='item.field == "mngScId"'>T2.MNG_SC_ID <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                                    <when test='item.field == "officeTelNo"'>T2.OFFICE_TEL_NO <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                                    <when test='item.field == "custCdNm"' > T2.CUST_CD_NM <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                                    <when test='item.field == "custTpNm"' > T2.CUST_TP_NM <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                                    <when test='item.field == "prefCommMthCdNm"' > T2.PREF_COMM_MTH_CD_NM <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                                    <when test='item.field == "prefContactMthCdNm"' > T2.PREF_CONTACT_MTH_CD_NM <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                                    <when test='item.field == "prefContactTimeCdNm"' > T2.PREF_CONTACT_TIME_CD_NM <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                                    <when test='item.field == "jobCdNm"' > T2.JOB_CD_NM <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                                    <when test='item.field == "dutyCdNm"' > T2.DUTY_CD_NM <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                                    <when test='item.field == "cmpTpNm"'> T2.CMP_TP_NM <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                                    <when test='item.field == "sexCdNm"' > T2.SEX_CD_NM <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                                    <when test='item.field == "marryCdNm"' > T2.MARRY_CD_NM <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                                    <when test='item.field == "acCareerCdNm"' > T2.AC_CAREER_CD_NM <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                                    <when test='item.field == "incomeLvlCdNm"' > T2.INCOME_LVL_CD_NM <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                                    <when test='item.field == "chinaZodiacSignCdNm"' > T2.CHINA_ZODIAC_SIGN_CD_NM <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                                    <when test='item.field == "zodiacSignCdNm"' > T2.ZODIAC_SIGN_CD_NM <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                                    <when test='item.field == "bizcondCdNm"' > T2.BIZCOND_CD_NM <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                                    <when test='item.field == "regDt"'>T2.REG_DT <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                                    <when test='item.field == "regDtFormat"'>T2.REG_DT <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                                    <when test='item.field == "regUsrId"'>T2.REG_USR_ID <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                                    <otherwise>
                                        T2.REG_DT DESC
                                    </otherwise>
                                </choose>
                            </foreach>
                        </when>
                        <otherwise>
                            T2.REG_DT DESC
                        </otherwise>
                    </choose>
            ) T3
            <where>
                <if test='firstIndex != -1 and lastIndex != -1'>
                    AND ROWNUM <![CDATA[<=]]> #{lastIndex}
                </if>
            </where>
        )
        <where>
            <if test='firstIndex != -1 and lastIndex != -1'>
                RNUM > #{firstIndex}
            </if>
        </where>
    </select>

    <sql id="searchCustomerListWhere">

         <!-- 20170707 수정 - 판매일자를 SA_0201T.REAL_DL_DT 에서 SA_0121T.CUST_SALE_DT 으로 변경. 판매일자 검색조건에  따라서 INNER JOIN / LEFT OUTER JOIN 처리 -->
         <choose>
           <when test='sSaleDtFrom != null or sSaleDtTo != null'>
             INNER JOIN
           </when>
           <otherwise>
             LEFT OUTER JOIN
           </otherwise>
         </choose>
                            (  SELECT *
                               FROM ( SELECT ROW_NUMBER() OVER (PARTITION BY CAR.BP_CD ORDER BY CMST.CUST_SALE_DT DESC, CMST.CAR_ID DESC ) RM,
                                             CAR.BP_CD,
                                             CMST.CAR_ID,
                                             CMST.CUST_SALE_DT,
                                             CMST.VIN_NO,
                                             CMST.CARLINE_CD,
                                             NVL(CMST.CAR_REG_NO, '-') AS CAR_REG_NO,
                                             NVL(CMST.CAR_RUN_DIST_VAL, 0) AS CAR_RUN_DIST_VAL
                                        FROM SA_0123T CAR
                                       INNER JOIN SA_0121T CMST ON CAR.CAR_ID = CMST.CAR_ID
                                       WHERE CAR.DLR_CD = #{sDlrCd}
                                         AND CAR.USE_YN = 'Y'
                                     <if test='sSaleDtFrom != null or sSaleDtTo != null'>
                                       <if test='sSaleDtFrom != null'>
                                         AND CMST.CUST_SALE_DT <![CDATA[>=]]> trunc(#{sSaleDtFrom},'DD')
                                       </if>
                                       <if test='sSaleDtTo != null'>
                                         AND CMST.CUST_SALE_DT <![CDATA[<]]> trunc(#{sSaleDtTo},'DD') + 1
                                           </if>
                                         </if>
                                             )
                                  WHERE RM = 1
                            ) CARINFO ON CARINFO.BP_CD = CUST.CUST_NO
         <choose>
           <when test='sRoDtFrom != null or sRoDtTo != null'>
             INNER JOIN
           </when>
           <otherwise>
             LEFT OUTER JOIN
           </otherwise>
         </choose>
                            (  SELECT *
                                FROM
                                (
                                    SELECT ROW_NUMBER() OVER (PARTITION BY RO.CAR_OWNER_ID ORDER BY RO.RO_DT DESC) RM
                                    , RO.CAR_OWNER_ID
                                    , RO.RO_DT
                                    FROM SE_0300T RO
                                    WHERE 1=1
                                    AND RO.DLR_CD = #{sDlrCd}
                                    AND RO.CAR_OWNER_ID IS NOT NULL
                                    AND RO.RO_STAT_CD IN ('00', '05')

                                ) WHERE RM = 1
                            ) SERINFO ON SERINFO.CAR_OWNER_ID = CUST.CUST_NO

         <if test='sMembershipStan != null and sMembershipStan != ""'>
            <choose>
                <when test='sMembershipStan == "C"'>
                LEFT OUTER JOIN CR_0801T DMB ON DMB.DLR_CD = #{sDlrCd} AND DMB.CUST_NO = CUST.CUST_NO
                </when>
                <otherwise>
                LEFT OUTER JOIN (SELECT *
                                   FROM ( SELECT BP_CD AS CUST_NO,
                                                 MB.MEMBERSHIP_NO,
                                                 MB.GRADE_CD,
                                                 LAST_POINT_VAL,
                                                 ROW_NUMBER( ) OVER (PARTITION BY CAR.BP_CD ORDER BY MB.REG_DT DESC ) AS RN
                                            FROM CR_0801T MB
                                           INNER JOIN SA_0123T CAR ON MB.DLR_CD = CAR.DLR_CD AND MB.VIN_NO = CAR.VIN_NO
                                           WHERE MB.DLR_CD = #{sDlrCd}
                                             AND CAR.USE_YN = 'Y' )
                                  WHERE RN = 1 ) DMB ON DMB.CUST_NO = CUST.CUST_NO
                </otherwise>
            </choose>
         </if>

         <if test='sCommand != null and sCommand == "TAGSEARCH"'>
         INNER JOIN ( SELECT DLR_CD,
                         CUST_NO
                    FROM CR_0115T
                   WHERE DLR_CD = #{sDlrCd}
                     AND GRP_TP = '002'
                     AND GRP_SEQ IN
            <foreach collection="tagDS" item="tagItem" open="(" close=")" separator=",">
                #{tagItem}
            </foreach>
                   GROUP BY DLR_CD, CUST_NO) TAG ON CUST.DLR_CD = TAG.DLR_CD AND CUST.CUST_NO = TAG.CUST_NO
         </if>
         WHERE CUST.DLR_CD = #{sDlrCd}
           <if test='sCustNo != null and sCustNo != ""'>
           AND CUST.CUST_NO LIKE '%'||#{sCustNo}||'%'
           </if>
           AND CUST.DEL_YN = 'N'
           <if test='sCust != null and sCust != ""'>
           AND ( CUST.CUST_NM LIKE '%'||#{sCust}||'%' OR CUST.HP_NO LIKE '%'||#{sCust}||'%')
           </if>
           <if test='sCustNm != null and sCustNm != ""'>
           AND CUST.CUST_NM LIKE '%'||#{sCustNm}||'%'
           </if>
           <if test='sCustTp != null and sCustTp != ""'>
           AND CUST.CUST_TP = #{sCustTp}
           </if>
           <if test='sCustCd != null and sCustCd != ""'>
           AND CUST.CUST_CD = #{sCustCd}
           </if>
           <if test='sHpNo != null and sHpNo != ""'>
           AND CUST.HP_NO LIKE '%'||#{sHpNo}||'%'
           </if>
           <if test='sTelNo != null and sTelNo != ""'>
           AND (CUST.TEL_NO LIKE '%'||#{sTelNo}||'%' OR OFFICE_NO LIKE '%'||#{sTelNo}||'%')
           </if>
           <if test='sSexCd != null and sSexCd != ""'>
           AND CUST.SEX_CD = #{sSexCd}
           </if>
           <if test='sSsnCrnNo != null and sSsnCrnNo != ""'>
           AND CUST.SSN_CRN_NO LIKE '%'||UPPER(#{sSsnCrnNo})||'%'
           </if>
           <if test='sMngScId != null and sMngScId != ""'>
           AND CUST.MNG_SC_ID = #{sMngScId}
           </if>
           <if test='sCustCollSrcCd != null and sCustCollSrcCd != ""'>
           AND CUST.CUST_COLL_SRC_CD = #{sCustCollSrcCd}
           </if>
           <if test='sRegDtFrom != null or sRegDtTo != null'>
               <if test='sRegDtFrom != null'>
                AND CUST.REG_DT <![CDATA[>=]]> #{sRegDtFrom}
               </if>
               <if test='sRegDtTo != null'>
               AND CUST.REG_DT <![CDATA[<]]> #{sRegDtTo} + 1
               </if>
           </if>
           <if test='sVinNo != null and sVinNo != ""'>
            AND CUST.CUST_NO IN (
                SELECT OWNER.BP_CD
                  FROM SA_0121T CAR, SA_0123T OWNER
                 WHERE CAR.CAR_ID = OWNER.CAR_ID
                   AND OWNER.DLR_CD = #{sDlrCd}
                   AND OWNER.USE_YN = 'Y'
                   AND CAR.VIN_NO LIKE '%'||#{sVinNo}||'%'
            )
            </if>
            <if test='sCarRegNo != null and sCarRegNo != ""'>
            AND CUST.CUST_NO IN (
                SELECT OWNER.BP_CD
                  FROM SA_0121T CAR, SA_0123T OWNER
                 WHERE CAR.CAR_ID = OWNER.CAR_ID
                   AND OWNER.DLR_CD = #{sDlrCd}
                   AND OWNER.USE_YN = 'Y'
                   AND CAR.CAR_REG_NO LIKE '%'||#{sCarRegNo}||'%'
            )
            </if>
            <if test='sBlueMembershipJoinYn == "Y" '>
            AND CUST.BLUE_MEMBERSHIP_NO IS NOT NULL
            </if>
            <if test='sDlrMbrYn != null and sDlrMbrYn != ""'>
                <if test='sDlrMbrYn == "Y"'>
                    AND DMB.MEMBERSHIP_NO IS NOT NULL
                </if>
                <if test='sDlrMbrYn == "N"'>
                    AND DMB.MEMBERSHIP_NO IS NULL
                </if>
            </if>

            <if test='sRoDtFrom != null or sRoDtFrom != null'>
                <if test='sRoDtFrom != null'>
                    AND RO_DT <![CDATA[>=]]> trunc(#{sRoDtFrom},'DD')
                </if>
                <if test='sRoDtTo != null'>
                    AND RO_DT <![CDATA[<]]> trunc(#{sRoDtTo},'DD') + 1
                </if>
            </if>

    </sql>
    <!-- 고객 수를 조회한다 (고객관리 page) -->
    <select id="selectCustomerListByConditionCnt" parameterType="CustomerInfoSearchVO" resultType="int">
        /* [chn.bhmc.dms.crm.cif.service.dao.CustomerInfoDAO.selectCustomerListByConditionCnt] */
          SELECT COUNT(CUST.CUST_NO) AS VALUE
           FROM CR_0101T CUST
          <include refid="searchCustomerListWhere" />
    </select>

    <!-- 고객 정보를 조회한다 (고객관리 page)  -->
    <select id="selectCustomerListByCondition" parameterType="CustomerInfoSearchVO" resultType="CustomerInfoVO">
        /* [chn.bhmc.dms.crm.cif.service.dao.CustomerInfoDAO.selectCustomerListByCondition] */
        SELECT T4.*
             , ADDR.ZIP_CD
             , ADDR.SUNG_NM
             , ADDR.CITY_NM
             , ADDR.DIST_NM
             , ADDR.ADDR_DETL_CONT
             , ADDR.SEQ AS ADDR_SEQ
             , ADDR.ADDR_TP
             , FN_GET_USER_NM(T4.MNG_SC_ID) AS MNG_SC_NM
             , LEADOPPT.LEAD_STAT_CD
             , FN_GET_TAG_NM(T4.DLR_CD, T4.CUST_NO, '002') AS TAG_TXT
          FROM (
            SELECT *
               FROM ( SELECT ROWNUM AS RNUM,
                             T3.*
                        FROM ( SELECT CUST.DLR_CD
                                     , CUST.CUST_NO
                                     , CUST.CUST_NM
                                     , CUST.CUST_TP
                                     , CUST.CUST_CD
                                     , CUST.SEX_CD
                                     , CUST.BIRTH_DT
                                     , CUST.HP_NO
                                     , DECODE(CUST.CUST_TP, '01', CUST.TEL_NO, CUST.OFFICE_TEL_NO) AS TEL_NO
                                     , CUST.MATH_DOC_TP
                                     , CUST.SSN_CRN_NO
                                     , CUST.HP_NO_INVLD_YN
                                     , CUST.HP_NO_ADD_IMPOS_YN
                                     , CUST.PURC_MNG_NM
                                     , CUST.MNG_SC_ID
                                     , CUST.BLUE_MEMBERSHIP_NO
                                     , CUST.AGE_DTL
                                     , CUST.CHINA_ZODIAC_SIGN_CD
                                     , DMB.CUST_NO AS DLR_MBR_YN
                                     , DMB.MEMBERSHIP_NO
                                     , CUST.TAXPAYER_NO
                                     , CUST.CUST_COLL_SRC_CD
                                     , CUST.REG_DT
                                     , CARINFO.CARLINE_CD
                                     , CARINFO.CAR_REG_NO
                                     , CARINFO.CAR_RUN_DIST_VAL
                                     , CARINFO.CUST_SALE_DT AS SALE_DT
                                     , CUST.BLUE_LOGIN_ID
                                     , SERINFO.RO_DT
                                  FROM CR_0101T CUST
                                  <include refid="searchCustomerListWhere" />
                            ORDER BY
                            <choose>
                                <when test='sort != null'>
                                    <foreach item="item" index="index" collection="sort" open="" separator="," close="">
                                        <choose>
                                            <when test='item.field == "custNo"'>CUST.CUST_NO <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                                            <when test='item.field == "custNm"'>CUST.CUST_NM <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                                            <when test='item.field == "sexCd"' > CUST.SEX_CD <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                                            <when test='item.field == "birthDt"' > CUST.BIRTH_DT <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                                            <when test='item.field == "hpNo"'>CUST.HP_NO <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                                            <when test='item.field == "sexCd"'>CUST.SEX_CD <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                                            <when test='item.field == "telNo"'>DECODE(CUST.CUST_TP,'01',CUST.TEL_NO, CUST.OFFICE_NO) <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                                            <when test='item.field == "mathDocTp"'>CUST.MATH_DOC_TP <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                                            <when test='item.field == "ssnCrnNo"'>CUST.SSN_CRN_NO <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                                            <when test='item.field == "hpNoInvldYn"'>CUST.HP_NO_INVLD_YN <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                                            <when test='item.field == "hpNoAddImposYn"'>CUST.HP_NO_ADD_IMPOS_YN <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                                            <when test='item.field == "mngScId"'>CUST.MNG_SC_ID <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                                            <when test='item.field == "blueMembershipNo"'>DECODE(CUST.BLUE_MEMBERSHIP_NO, null ,'N', 'Y') <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                                            <when test='item.field == "regDt"'>CUST.REG_DT <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                                            <otherwise>
                                                CUST.REG_DT DESC
                                            </otherwise>
                                        </choose>
                                    </foreach>
                                </when>
                                <otherwise>
                                    CUST.REG_DT DESC
                                </otherwise>
                            </choose> ) T3
                <where>
                    <if test='firstIndex != -1 and lastIndex != -1'>
                        AND ROWNUM <![CDATA[<=]]> #{lastIndex}
                    </if>
                </where>
                )
            <where>
                <if test='firstIndex != -1 and lastIndex != -1'>
                    RNUM > #{firstIndex}
                </if>
            </where>
             ) T4
             LEFT OUTER JOIN CR_0211T LEADOPPT ON T4.DLR_CD = LEADOPPT.DLR_CD AND T4.CUST_NO = LEADOPPT.CUST_NO
             LEFT OUTER JOIN (
                 SELECT
                      ROW_NUMBER() OVER(PARTITION BY  DLR_CD, REF_TABLE_NM, REF_KEY_NM  ORDER BY NVL(UPDT_DT, REG_DT) DESC ) AS ADDR_NUM
                     ,DLR_CD
                     ,SEQ
                     ,REF_TABLE_NM
                     ,REF_KEY_NM
                     ,ADDR_TP
                     ,SUNG_CD
                     ,CITY_CD
                     ,DIST_CD
                     ,ZIP_CD
                     ,SUNG_NM
                     ,CITY_NM
                     ,DIST_NM
                     ,ADDR_DETL_CONT
                 FROM CR_0116T
                 WHERE DLR_CD = #{sDlrCd}
                 AND USE_YN = 'Y'
                 AND REF_TABLE_NM = 'CR_0101T'
             <choose>
                 <when test='sAddrTp == "02"'>
                     AND ADDR_TP = '02'
                 </when>
                 <otherwise>
                     AND FLAG_YN = 'Y'
                     <if test='sAddrTp != null and sAddrTp != ""'>
                         AND ADDR_TP = #{sAddrTp}
                     </if>
                 </otherwise>
             </choose>
             ) ADDR ON T4.DLR_CD = ADDR.DLR_CD AND T4.CUST_NO = ADDR.REF_KEY_NM AND ADDR_NUM = 1
             ORDER BY RNUM
    </select>

    <!-- 고객정보상세 - excel export 쿼리(고객정보 상세 목록과 같이 사용하지 않는 이유는 공통코드 때문.)
         selectCustomerListByCondition 와 쿼리는 동일함. ( 공통코드 NM 추가 + 정렬 삭제 )
    -->
    <select id="selectCustomerListExcelExportByCondition" parameterType="CustomerInfoSearchVO" resultType="CustomerInfoVO">
        /* [chn.bhmc.dms.crm.cif.service.dao.CustomerInfoDAO.selectCustomerListExcelExportByCondition] */

        SELECT T4.*
             , ADDR.ZIP_CD
             , ADDR.SUNG_NM
             , ADDR.CITY_NM
             , ADDR.DIST_NM
             , ADDR.ADDR_DETL_CONT
             , ADDR.SEQ AS ADDR_SEQ
             , ADDR.ADDR_TP
             , FN_GET_USER_NM(T4.MNG_SC_ID) AS MNG_SC_NM
             , LEADOPPT.LEAD_STAT_CD
             , DECODE(LEADOPPT.LEAD_STAT_CD, '01', FN_CMM_CD_NM('CRM375', LEADOPPT.LEAD_STAT_CD, #{sLangCd}, 'N')
                                           , '02', FN_CMM_CD_NM('CRM375', LEADOPPT.LEAD_STAT_CD, #{sLangCd}, 'N')
                                           , '03', FN_CMM_CD_NM('CRM375', LEADOPPT.LEAD_STAT_CD, #{sLangCd}, 'N')
                                           , '04', FN_CMM_CD_NM('CRM375', LEADOPPT.LEAD_STAT_CD, #{sLangCd}, 'N')
                                           , '05', FN_CMM_CD_NM('CRM375', LEADOPPT.LEAD_STAT_CD, #{sLangCd}, 'N')
             ) AS LEAD_STAT_CD_NM
             , FN_GET_TAG_NM(T4.DLR_CD, T4.CUST_NO, '002') AS TAG_TXT
          FROM (
            SELECT *
               FROM ( SELECT ROWNUM AS RNUM,
                             T3.*
                        FROM ( SELECT CUST.DLR_CD
                                     , CUST.CUST_NO
                                     , CUST.CUST_NM
                                     , CUST.CUST_TP
                                     , CUST.CUST_CD
                                     , CUST.SEX_CD
                                     , CUST.BIRTH_DT
                                     , CUST.HP_NO
                                     , DECODE(CUST.CUST_TP, '01', CUST.TEL_NO, CUST.OFFICE_TEL_NO) AS TEL_NO
                                     , CUST.MATH_DOC_TP
                                     , CUST.SSN_CRN_NO
                                     --, CUST.HP_NO_INVLD_YN
                                     , DECODE(CUST.HP_NO_INVLD_YN, 'Y', '是', '') AS HP_NO_INVLD_YN
                                     --, CUST.HP_NO_ADD_IMPOS_YN
                                     , DECODE(CUST.HP_NO_ADD_IMPOS_YN, 'Y', '是', '') AS HP_NO_ADD_IMPOS_YN
                                     , CUST.PURC_MNG_NM
                                     , CUST.MNG_SC_ID
                                     --, CUST.BLUE_MEMBERSHIP_NO
                                     , NVL2(CUST.BLUE_MEMBERSHIP_NO,'是','否') as BLUE_MEMBERSHIP_NO
                                     , CUST.AGE_DTL
                                     , CUST.CHINA_ZODIAC_SIGN_CD
                                     --, DMB.CUST_NO AS DLR_MBR_YN
                                     , NVL2(DMB.CUST_NO,'是','否') AS DLR_MBR_YN
                                     , DMB.MEMBERSHIP_NO
                                     , CUST.TAXPAYER_NO
                                     , CUST.CUST_COLL_SRC_CD
                                     , CUST.REG_DT
                                     , CARINFO.CARLINE_CD
                                     , CARINFO.CAR_REG_NO
                                     , CARINFO.CAR_RUN_DIST_VAL
                                     , CARINFO.CUST_SALE_DT AS SALE_DT
                                     , FN_CMM_CD_NM('CRM001', CUST.CUST_TP, #{sLangCd}, 'N') AS CUST_TP_NM
                                     , FN_CMM_CD_NM('COM017', CUST.SEX_CD, #{sLangCd}, 'N') AS SEX_CD_NM
                                     , FN_CMM_CD_NM('CRM023', CUST.CUST_CD, #{sLangCd}, 'N') AS CUST_CD_NM
                                     , FN_CMM_CD_NM('CRM024', CUST.MATH_DOC_TP, #{sLangCd}, 'N') AS MATH_DOC_TP_NM
                                     , FN_CMM_CD_NM('CRM034', CUST.CHINA_ZODIAC_SIGN_CD, #{sLangCd}, 'N') AS CHINA_ZODIAC_SIGN_CD_NM
                                     , FN_CMM_CD_NM('CRM042', CUST.CUST_COLL_SRC_CD, #{sLangCd}, 'N') AS CUST_COLL_SRC_CD_NM
                                     , FN_GET_CARLINE_NM(CARINFO.CARLINE_CD) AS CARLINE_CD_NM
                                     , CUST.BLUE_LOGIN_ID
                                     , SERINFO.RO_DT
                                  FROM CR_0101T CUST
                                  <include refid="searchCustomerListWhere" />
                            ORDER BY CUST.REG_DT DESC ) T3
                <where>
                    <if test='firstIndex != -1 and lastIndex != -1'>
                        AND ROWNUM <![CDATA[<=]]> #{lastIndex}
                    </if>
                </where>
                )
            <where>
                <if test='firstIndex != -1 and lastIndex != -1'>
                    RNUM > #{firstIndex}
                </if>
            </where>
             ) T4
             LEFT OUTER JOIN CR_0211T LEADOPPT ON T4.DLR_CD = LEADOPPT.DLR_CD AND T4.CUST_NO = LEADOPPT.CUST_NO
             LEFT OUTER JOIN CR_0116T ADDR ON ADDR.DLR_CD = T4.DLR_CD AND ADDR.REF_KEY_NM = T4.CUST_NO AND ADDR.REF_TABLE_NM = 'CR_0101T' AND ADDR.FLAG_YN = 'Y' AND ADDR.USE_YN = 'Y'
            ORDER BY RNUM
    </select>

    <!-- 고객를 조회한다. 판매사원용-->
    <select id="selectCustomerInfoByKey" parameterType="CustomerInfoSearchVO" resultType="CustomerInfoVO">
        /* [chn.bhmc.dms.crm.cif.service.dao.CustomerInfoDAO.selectCustomerInfoByKey] */
        SELECT
            T1.DLR_CD
            , T1.CUST_NO
            , T1.CUST_NM
            , T1.CUST_CD
            , ( SELECT Z1.CMM_CD_NM FROM (SELECT A.CMM_CD, NVL(B.CMM_CD_TXT, A.CMM_CD_NM) AS CMM_CD_NM FROM CM_0303T A LEFT OUTER JOIN CM_0304T B ON A.CMM_GRP_CD = B.CMM_GRP_CD AND A.CMM_CD = B.CMM_CD
                                        AND B.LANG_CD = #{sLangCd}
                                        WHERE A.CMM_GRP_CD = 'CRM023'
                                        AND A.USE_YN = 'Y') Z1
                WHERE T1.CUST_CD = Z1.CMM_CD
              ) AS CUST_CD_NM
            , NVL(T1.SSN_CRN_NO,' ') AS SSN_CRN_NO
            , T1.CUST_TP
            , ( SELECT Z1.CMM_CD_NM FROM (SELECT A.CMM_CD, NVL(B.CMM_CD_TXT, A.CMM_CD_NM) AS CMM_CD_NM FROM CM_0303T A LEFT OUTER JOIN CM_0304T B ON A.CMM_GRP_CD = B.CMM_GRP_CD AND A.CMM_CD = B.CMM_CD
                                        AND B.LANG_CD = #{sLangCd}
                                        WHERE A.CMM_GRP_CD = 'CRM001'
                                        AND A.USE_YN = 'Y') Z1
                WHERE T1.CUST_TP = Z1.CMM_CD
              ) AS CUST_TP_NM
            , T1.MNG_SC_ID
            , T1.SALE_SC_ID
            , T1.MNG_TEC_ID
            , T1.EMAIL_NM
            , T1.WECHAT_ID
            , T1.QQ_ID
            , T1.FACEBOOK_ID
            , T1.TWITTER_ID
            , T1.PREF_COMM_MTH_CD
            , ( SELECT Z1.CMM_CD_NM FROM (SELECT A.CMM_CD, NVL(B.CMM_CD_TXT, A.CMM_CD_NM) AS CMM_CD_NM FROM CM_0303T A LEFT OUTER JOIN CM_0304T B ON A.CMM_GRP_CD = B.CMM_GRP_CD AND A.CMM_CD = B.CMM_CD
                                        AND B.LANG_CD = #{sLangCd}
                                        WHERE A.CMM_GRP_CD = 'CRM022'
                                        AND A.USE_YN = 'Y') Z1
                WHERE T1.PREF_COMM_MTH_CD = Z1.CMM_CD
              ) AS PREF_COMM_MTH_CD_NM
            , T1.PREF_COMM_NO
            , T1.PREF_CONTACT_MTH_CD
            , ( SELECT Z1.CMM_CD_NM FROM (SELECT A.CMM_CD, NVL(B.CMM_CD_TXT, A.CMM_CD_NM) AS CMM_CD_NM FROM CM_0303T A LEFT OUTER JOIN CM_0304T B ON A.CMM_GRP_CD = B.CMM_GRP_CD AND A.CMM_CD = B.CMM_CD
                                        AND B.LANG_CD = #{sLangCd}
                                        WHERE A.CMM_GRP_CD = 'CRM038'
                                        AND A.USE_YN = 'Y') Z1
                WHERE T1.PREF_CONTACT_MTH_CD = Z1.CMM_CD
              ) AS PREF_CONTACT_MTH_CD_NM
            , T1.PREF_CONTACT_TIME_CD
            , ( SELECT Z1.CMM_CD_NM FROM (SELECT A.CMM_CD, NVL(B.CMM_CD_TXT, A.CMM_CD_NM) AS CMM_CD_NM FROM CM_0303T A LEFT OUTER JOIN CM_0304T B ON A.CMM_GRP_CD = B.CMM_GRP_CD AND A.CMM_CD = B.CMM_CD
                                        AND B.LANG_CD = #{sLangCd}
                                        WHERE A.CMM_GRP_CD = 'CRM027'
                                        AND A.USE_YN = 'Y') Z1
                WHERE T1.PREF_CONTACT_TIME_CD = Z1.CMM_CD
              ) AS PREF_CONTACT_TIME_CD_NM
            , T1.TEL_NO
            , NVL(T1.HP_NO,' ') AS HP_NO
            , T1.HP_NO_INVLD_YN
            , T1.HP_NO_ADD_IMPOS_YN
            , T1.JOB_CD
            , ( SELECT Z1.CMM_CD_NM FROM (SELECT A.CMM_CD, NVL(B.CMM_CD_TXT, A.CMM_CD_NM) AS CMM_CD_NM FROM CM_0303T A LEFT OUTER JOIN CM_0304T B ON A.CMM_GRP_CD = B.CMM_GRP_CD AND A.CMM_CD = B.CMM_CD
                                        AND B.LANG_CD = #{sLangCd}
                                        WHERE A.CMM_GRP_CD = 'CRM002'
                                        AND A.USE_YN = 'Y') Z1
                WHERE T1.JOB_CD = Z1.CMM_CD
              ) AS JOB_CD_NM
            , T1.DUTY_CD
            , ( SELECT Z1.CMM_CD_NM FROM (SELECT A.CMM_CD, NVL(B.CMM_CD_TXT, A.CMM_CD_NM) AS CMM_CD_NM FROM CM_0303T A LEFT OUTER JOIN CM_0304T B ON A.CMM_GRP_CD = B.CMM_GRP_CD AND A.CMM_CD = B.CMM_CD
                                        AND B.LANG_CD = #{sLangCd}
                                        WHERE A.CMM_GRP_CD = 'CRM037'
                                        AND A.USE_YN = 'Y') Z1
                WHERE T1.DUTY_CD = Z1.CMM_CD
              ) AS DUTY_CD_NM
            , T1.OFFICE_NM
            , T1.DEPT_NM
            , NVL(T1.OFFICE_TEL_NO,' ') AS OFFICE_TEL_NO
            , T1.OFFICE_FAX_NO
            , T1.OWN_RGST_NM
            , T1.CMP_TP
            , ( SELECT Z1.CMM_CD_NM FROM (SELECT A.CMM_CD, NVL(B.CMM_CD_TXT, A.CMM_CD_NM) AS CMM_CD_NM FROM CM_0303T A LEFT OUTER JOIN CM_0304T B ON A.CMM_GRP_CD = B.CMM_GRP_CD AND A.CMM_CD = B.CMM_CD
                                        AND B.LANG_CD = #{sLangCd}
                                        WHERE A.CMM_GRP_CD = 'CRM032'
                                        AND A.USE_YN = 'Y') Z1
                WHERE T1.CMP_TP = Z1.CMM_CD
              ) AS CMP_TP_NM
            , T1.CMP_SCALE_CONT
            , NVL(T1.MATH_DOC_TP,' ') AS MATH_DOC_TP
            , ( SELECT Z1.CMM_CD_NM FROM (SELECT A.CMM_CD, NVL(B.CMM_CD_TXT, A.CMM_CD_NM) AS CMM_CD_NM FROM CM_0303T A LEFT OUTER JOIN CM_0304T B ON A.CMM_GRP_CD = B.CMM_GRP_CD AND A.CMM_CD = B.CMM_CD
                                        AND B.LANG_CD = #{sLangCd}
                                        WHERE A.CMM_GRP_CD = 'CRM024'
                                        AND A.USE_YN = 'Y') Z1
                WHERE T1.MATH_DOC_TP = Z1.CMM_CD
            ) AS MATH_DOC_TP_NM
            , T1.OFFICE_NO
            , T1.DM_PLACE_CD
            , T1.DM_NM
            , T1.SMS_RECEIVE_YN
            , T1.TEL_RECEIVE_YN
            , T1.DM_RECEIVE_YN
            , T1.EMAIL_RECEIVE_YN
            , T1.FAX_RECEIVE_YN
            , T1.DM_RETURN_YN
            , T1.EMAIL_RETURN_YN
            , T1.DISUSE_YN
            , T1.VIP_YN
            , T1.CHG_BUY_YN
            , T1.DISUSE_CD
            , T1.BUY_CNT
            , T1.CUST_HOLD_TP
            , T1.CUST_HOLD_TP_DTL
            , T1.SEX_CD
            , ( SELECT Z1.CMM_CD_NM FROM (SELECT A.CMM_CD, NVL(B.CMM_CD_TXT, A.CMM_CD_NM) AS CMM_CD_NM FROM CM_0303T A LEFT OUTER JOIN CM_0304T B ON A.CMM_GRP_CD = B.CMM_GRP_CD AND A.CMM_CD = B.CMM_CD
                                        AND B.LANG_CD = #{sLangCd}
                                        WHERE A.CMM_GRP_CD = 'COM017'
                                        AND A.USE_YN = 'Y') Z1
                WHERE T1.SEX_CD = Z1.CMM_CD
              ) AS SEX_CD_NM
            , T1.BIRTH_DT
            , T1.MARRY_DT
            , T1.MARRY_CD
            , ( SELECT Z1.CMM_CD_NM FROM (SELECT A.CMM_CD, NVL(B.CMM_CD_TXT, A.CMM_CD_NM) AS CMM_CD_NM FROM CM_0303T A LEFT OUTER JOIN CM_0304T B ON A.CMM_GRP_CD = B.CMM_GRP_CD AND A.CMM_CD = B.CMM_CD
                                        AND B.LANG_CD = #{sLangCd}
                                        WHERE A.CMM_GRP_CD = 'CRM028'
                                        AND A.USE_YN = 'Y') Z1
                WHERE T1.MARRY_CD = Z1.CMM_CD
              ) AS MARRY_CD_NM
            , T1.BEF_MNG_SC_ID
            , T1.PER_INFO_AGREE_YN
            , T1.PER_INFO_USE_YN
            , T1.AC_CAREER_CD
            , ( SELECT Z1.CMM_CD_NM FROM (SELECT A.CMM_CD, NVL(B.CMM_CD_TXT, A.CMM_CD_NM) AS CMM_CD_NM FROM CM_0303T A LEFT OUTER JOIN CM_0304T B ON A.CMM_GRP_CD = B.CMM_GRP_CD AND A.CMM_CD = B.CMM_CD
                                        AND B.LANG_CD = #{sLangCd}
                                        WHERE A.CMM_GRP_CD = 'CRM012'
                                        AND A.USE_YN = 'Y') Z1
                WHERE T1.AC_CAREER_CD = Z1.CMM_CD
              ) AS AC_CAREER_CD_NM
            , T1.INCOME_LVL_CD
            , ( SELECT Z1.CMM_CD_NM FROM (SELECT A.CMM_CD, NVL(B.CMM_CD_TXT, A.CMM_CD_NM) AS CMM_CD_NM FROM CM_0303T A LEFT OUTER JOIN CM_0304T B ON A.CMM_GRP_CD = B.CMM_GRP_CD AND A.CMM_CD = B.CMM_CD
                                        AND B.LANG_CD = #{sLangCd}
                                        WHERE A.CMM_GRP_CD = 'CRM013'
                                        AND A.USE_YN = 'Y') Z1
                WHERE T1.INCOME_LVL_CD = Z1.CMM_CD
              ) AS INCOME_LVL_CD_NM
            , T1.AGE_DTL
            , T1.CHINA_ZODIAC_SIGN_CD
            , ( SELECT Z1.CMM_CD_NM FROM (SELECT A.CMM_CD, NVL(B.CMM_CD_TXT, A.CMM_CD_NM) AS CMM_CD_NM FROM CM_0303T A LEFT OUTER JOIN CM_0304T B ON A.CMM_GRP_CD = B.CMM_GRP_CD AND A.CMM_CD = B.CMM_CD
                                        AND B.LANG_CD = #{sLangCd}
                                        WHERE A.CMM_GRP_CD = 'CRM034'
                                        AND A.USE_YN = 'Y') Z1
                WHERE T1.CHINA_ZODIAC_SIGN_CD = Z1.CMM_CD
              ) AS CHINA_ZODIAC_SIGN_CD_NM
            , T1.ZODIAC_SIGN_CD
            , ( SELECT Z1.CMM_CD_NM FROM (SELECT A.CMM_CD, NVL(B.CMM_CD_TXT, A.CMM_CD_NM) AS CMM_CD_NM FROM CM_0303T A LEFT OUTER JOIN CM_0304T B ON A.CMM_GRP_CD = B.CMM_GRP_CD AND A.CMM_CD = B.CMM_CD
                                        AND B.LANG_CD = #{sLangCd}
                                        WHERE A.CMM_GRP_CD = 'CRM035'
                                        AND A.USE_YN = 'Y') Z1
                WHERE T1.ZODIAC_SIGN_CD = Z1.CMM_CD
              ) AS ZODIAC_SIGN_CD_NM
            , T1.CHILDREN_CNT
            , T1.BLOOD_TP
            , T1.AGE_CD
            , T1.PURC_CAR_BRAND_CD
            , T1.PURC_CAR_MODEL_NM
            , T1.MERGE_YN
            , T1.DEL_YN
            , T1.BHMC_YN
            , T1.SIEBEL_ROW_ID
            , T1.REG_USR_ID
            , T1.REG_DT
            , T1.UPDT_USR_ID
            , T1.UPDT_DT
            , T1.DOC_ID
            , T1.BIZCOND_CD
            , ( SELECT Z1.CMM_CD_NM FROM (SELECT A.CMM_CD, NVL(B.CMM_CD_TXT, A.CMM_CD_NM) AS CMM_CD_NM FROM CM_0303T A LEFT OUTER JOIN CM_0304T B ON A.CMM_GRP_CD = B.CMM_GRP_CD AND A.CMM_CD = B.CMM_CD
                                        AND B.LANG_CD = #{sLangCd}
                                        WHERE A.CMM_GRP_CD = 'CRM031'
                                        AND A.USE_YN = 'Y') Z1
                WHERE T1.BIZCOND_CD = Z1.CMM_CD
              ) AS BIZCOND_CD_NM
            , T1.BLUE_MEMBERSHIP_NO
            , T1.BLUE_MEMBERSHIP_JOIN_DT
            , T1.BLUE_MEMBERSHIP_JOIN_DLR_CD
            , T1.BAT_YN
            , T1.HP_NO_RECEIVE_YN
            , T1.BLUE_GRADE_CHG_DT
            , T1.BLUE_GRADE_NM
            , T1.BLUE_AVLB_POINT_VAL
            , T1.CUST_COLL_SRC_CD
            , ( SELECT Z1.CMM_CD_NM FROM (SELECT A.CMM_CD, NVL(B.CMM_CD_TXT, A.CMM_CD_NM) AS CMM_CD_NM FROM CM_0303T A LEFT OUTER JOIN CM_0304T B ON A.CMM_GRP_CD = B.CMM_GRP_CD AND A.CMM_CD = B.CMM_CD
                                        AND B.LANG_CD = #{sLangCd}
                                        WHERE A.CMM_GRP_CD = 'CRM042'
                                        AND A.USE_YN = 'Y') Z1
                WHERE T1.CUST_COLL_SRC_CD = Z1.CMM_CD
              ) AS CUST_COLL_SRC_CD_NM
            , SCT.USR_NM AS MNG_SC_NM                        --MNG_SC_NM
            , TEC.USR_NM AS MNG_TEC_NM                        --MNG_TEC_NM
            , USRT.USR_NM AS REG_USR_NM            --등록자이름
            , (SELECT MAX(B.RESV_DT ) KEEP (DENSE_RANK FIRST ORDER BY B.RESV_DT DESC , B.RESV_DT DESC ) FROM CR_0206T B WHERE B.CUST_NO = T1.CUST_NO AND B.VSIT_STAT_CD != '02' ) AS PRE_VSIT_DT
            , (SELECT MAX(B.RESV_DT ) KEEP (DENSE_RANK FIRST ORDER BY B.RESV_DT DESC , B.RESV_DT DESC ) FROM CR_0401T B WHERE B.CUST_NO = T1.CUST_NO AND B.TDRV_STAT_CD != '02' ) AS PRE_TDRV_DT
            , (SELECT MAX(B.SALE_OPPT_STEP_CD ) KEEP (DENSE_RANK FIRST ORDER BY B.SALE_OPPT_NO DESC , B.SALE_OPPT_NO DESC ) FROM CR_0201T B WHERE B.CUST_NO = T1.CUST_NO ) AS SALE_OPPT_STEP_CD
            , (SELECT SEQ FROM CR_0211T WHERE CUST_NO = T1.CUST_NO) AS SALES_OPPT_SEQ
            , (
                SELECT MAX(A.REAL_DL_DT)
                  FROM SA_0201T A
                 WHERE     CONTRACT_CUST_NO = T1.CUST_NO
                       AND CONTRACT_STAT_CD = '50'
                       AND REAL_DL_DT IS NOT NULL
            ) AS SALE_DT
            , (
                SELECT MIN(A.REAL_DL_DT)
                  FROM SA_0201T A
                 WHERE     CONTRACT_CUST_NO = T1.CUST_NO
                       AND CONTRACT_STAT_CD = '50'
                       AND REAL_DL_DT IS NOT NULL
            ) AS FIRST_SALE_DT
            , ADDR.SEQ AS ADDR_SEQ
            , ADDR.ZIP_CD
            , ADDR.SUNG_CD
            , ADDR.CITY_CD
            , ADDR.DIST_CD
            , ADDR.ADDR_DETL_CONT
            , ADDR.SUNG_NM
            , ADDR.CITY_NM
            , ADDR.DIST_NM
            , ADDR.SUNG_NM || ' ' || ADDR.CITY_NM || ' ' || ADDR.DIST_NM || ' ' || ADDR.ADDR_DETL_CONT AS ADDR_FULL
            , T1.PURC_MNG_NM
            , FN_CHK_ALBE_SSNCRNNO(T1.DLR_CD, T1.CUST_NO) AS ABLE_SSNCRNNO
            , (SELECT
                MEMBERSHIP_NO
               FROM CR_0801T WHERE DLR_CD = #{sDlrCd}
               AND CUST_NO = T1.CUST_NO
                <if test='sMembershipStan != null and sMembershipStan != ""'>
                    <choose>
                        <when test='sMembershipStan == "V"'>
                            AND VIN_NO = #{sVinNo}
                        </when>
                    </choose>
                </if>
                AND ROWNUM = 1
               ) AS DLR_MBR_YN
            ,(SELECT count(B.VIN_NO) FROM SA_0123T A INNER JOIN SA_0121T B ON A.CAR_ID = B.CAR_ID WHERE A.USE_YN = 'Y' AND A.DLR_CD = #{sDlrCd} and A.BP_CD = T1.CUST_NO ) AS HAVE_CAR_CNT
            <if test='sSelCondi == "MARKCUSTIMP"'>
                ,(SELECT DISTINCT CUST_NO FROM CR_0801T MB WHERE MB.DLR_CD = #{sDlrCd} AND MB.CUST_NO = T1.CUST_NO) AS DLR_MBR_YN
                ,(
                    SELECT
                        MAX(SA_0121T.CAR_REG_NO) KEEP (DENSE_RANK FIRST ORDER BY SA_0121T.MANUFACT_YY_MM_DT DESC)
                    FROM SA_0121T SA_0121T
                    INNER JOIN SA_0123T SA_0123T
                    ON SA_0121T.DLR_CD = SA_0123T.DLR_CD AND SA_0121T.CAR_ID = SA_0123T.CAR_ID
                    WHERE SA_0121T.MANUFACT_YY_MM_DT IS NOT NULL
                    AND SA_0123T.USE_YN = 'Y'
                    AND SA_0123T.BP_CD = T1.CUST_NO
                  ) AS CAR_REG_NO
                ,(
                    SELECT
                        MAX(SA_0121T.CARLINE_CD) KEEP (DENSE_RANK FIRST ORDER BY SA_0121T.MANUFACT_YY_MM_DT DESC)
                    FROM SA_0121T SA_0121T
                    INNER JOIN SA_0123T SA_0123T
                    ON SA_0121T.DLR_CD = SA_0123T.DLR_CD AND SA_0121T.CAR_ID = SA_0123T.CAR_ID
                    WHERE SA_0121T.MANUFACT_YY_MM_DT IS NOT NULL
                    AND SA_0123T.USE_YN = 'Y'
                    AND SA_0123T.BP_CD = T1.CUST_NO
                  ) AS CARLINE_CD
                ,(
                    SELECT
                        MAX(SA_0121T.MODEL_CD) KEEP (DENSE_RANK FIRST ORDER BY SA_0121T.MANUFACT_YY_MM_DT DESC)
                    FROM SA_0121T SA_0121T
                    INNER JOIN SA_0123T SA_0123T
                    ON SA_0121T.DLR_CD = SA_0123T.DLR_CD AND SA_0121T.CAR_ID = SA_0123T.CAR_ID
                    WHERE SA_0121T.MANUFACT_YY_MM_DT IS NOT NULL
                    AND SA_0123T.USE_YN = 'Y'
                    AND SA_0123T.BP_CD = T1.CUST_NO
                  ) AS MODEL_CD
            </if>
            , T1.BLUE_LOGIN_ID
        FROM CR_0101T T1
            LEFT OUTER JOIN CR_0211T LEADOPPT ON T1.CUST_NO = LEADOPPT.CUST_NO
            LEFT OUTER JOIN CM_0801T SCT ON T1.MNG_SC_ID = SCT.USR_ID
            LEFT OUTER JOIN CM_0801T TEC ON T1.MNG_TEC_ID = TEC.USR_ID
            LEFT OUTER JOIN CM_0801T USRT ON T1.REG_USR_ID = USRT.USR_ID
            LEFT OUTER JOIN CR_0116T ADDR ON T1.CUST_NO = ADDR.REF_KEY_NM AND T1.DLR_CD = ADDR.DLR_CD AND ADDR.REF_TABLE_NM = 'CR_0101T' AND FLAG_YN = 'Y'
        WHERE T1.DLR_CD = #{sDlrCd}
        AND T1.CUST_NO = #{sCustNo}
    </select>

    <!-- 고객 수를 조회한다. 판매사원용 -->
    <select id="selectCustomerInfoHistoryByConditionCnt" parameterType="CustomerInfoSearchVO" resultType="int">
        /* [chn.bhmc.dms.crm.cif.service.dao.CustomerInfoDAO.selectCustomerInfoHistoryByConditionCnt] */
        SELECT COUNT(*) AS VALUE
          FROM CR_0101HT T1
          <include refid="searchCustomerHistInfoWhere" />
    </select>

    <!-- 고객를 조회한다. 판매사원용-->
    <select id="selectCustomerInfoHistoryByCondition" parameterType="CustomerInfoSearchVO" resultType="CustomerInfoVO">
        /* [chn.bhmc.dms.crm.cif.service.dao.CustomerInfoDAO.selectCustomerInfoHistoryByCondition] */
        SELECT * FROM (
            SELECT ROWNUM AS RNUM, T1.* FROM (
                SELECT
                    T1.DLR_CD
                    , T1.CUST_NO
                    , T1.BEF_VALUE
                    , T1.AFT_VALUE
                    , T1.BEF_CD
                    , T1.AFT_CD
                    , T1.CHG_CD
                    , ( SELECT Z1.CMM_CD_NM FROM (SELECT A.CMM_CD, NVL(B.CMM_CD_TXT, A.CMM_CD_NM) AS CMM_CD_NM FROM CM_0303T A LEFT OUTER JOIN CM_0304T B ON A.CMM_GRP_CD = B.CMM_GRP_CD AND A.CMM_CD = B.CMM_CD
                                                AND B.LANG_CD = #{sLangCd}
                                                WHERE A.CMM_GRP_CD = 'CRM100'
                                                AND A.USE_YN = 'Y') Z1
                        WHERE T1.CHG_CD = Z1.CMM_CD
                      ) AS CHG_CD_NM
                    , T1.LOG_DT
                    , USRT.USR_NM AS REG_USR_NM            --등록자이름
                FROM CR_0101HT T1
                <include refid="searchCustomerHistInfoWhere" />
                ORDER BY
                <choose>
                    <when test='sort != null'>
                        <foreach item="item" index="index" collection="sort" open="" separator="," close="">
                            <choose>
                                <when test='item.field == "custNo"'>T1.CUST_NO <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                                <when test='item.field == "custTp"'>T1.CUST_TP <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                                <when test='item.field == "custNm"'>T1.CUST_NM <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                                <when test='item.field == "custCd"'>T1.CUST_CD <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                                <when test='item.field == "hpNo"'>T1.HP_NO <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                                <when test='item.field == "emailNm"'>T1.EMAIL_NM <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                                <when test='item.field == "regDt"'>T1.REG_DT <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                                <otherwise>
                                    T1.LOG_DT DESC
                                </otherwise>
                            </choose>
                        </foreach>
                    </when>
                    <otherwise>
                        T1.LOG_DT DESC
                    </otherwise>
                </choose>
            ) T1
            <where>
                <if test='firstIndex != -1 and lastIndex != -1'>
                    AND ROWNUM <![CDATA[<=]]> #{lastIndex}
                </if>
            </where>
        )
        <where>
            <if test='firstIndex != -1 and lastIndex != -1'>
                RNUM > #{firstIndex}
            </if>
        </where>
    </select>

    <!-- 마스터 고객 수를 조회한다. 판매사원용 -->
    <select id="selectMasterCustomerInfoByConditionCnt" parameterType="CustomerInfoSearchVO" resultType="int">
        /* [chn.bhmc.dms.crm.cif.service.dao.CustomerInfoDAO.selectMasterCustomerInfoByConditionCnt] */
        SELECT COUNT(*) AS VALUE
          FROM CR_0117T
          <include refid="searchCustomerInfoWhere" />
    </select>

    <!-- 마스터고객를 조회한다. 판매사원용-->
    <select id="selectMasterCustomerInfoByCondition" parameterType="CustomerInfoSearchVO" resultType="CustomerInfoVO">
        /* [chn.bhmc.dms.crm.cif.service.dao.CustomerInfoDAO.selectMasterCustomerInfoByCondition] */
        SELECT * FROM (
            SELECT ROWNUM AS RNUM, T1.* FROM (
                SELECT
                    T1.*
                    , (SELECT MAX(B.RESV_DT ) KEEP (DENSE_RANK FIRST ORDER BY B.RESV_DT DESC , B.RESV_DT DESC ) FROM CR_0206T B WHERE B.CUST_NO = T1.CUST_NO AND B.VSIT_STAT_CD != '02' ) AS PRE_VSIT_DT
                    , (SELECT MAX(B.RESV_DT ) KEEP (DENSE_RANK FIRST ORDER BY B.RESV_DT DESC , B.RESV_DT DESC ) FROM CR_0401T B WHERE B.CUST_NO = T1.CUST_NO AND B.TDRV_STAT_CD != '02' ) AS PRE_TDRV_DT
                    , (SELECT MAX(B.SALE_OPPT_STEP_CD ) KEEP (DENSE_RANK FIRST ORDER BY B.SALE_OPPT_SEQ DESC , B.SALE_OPPT_SEQ DESC ) FROM CR_0201T B WHERE B.CUST_NO = T1.CUST_NO ) AS SALE_OPPT_STEP_CD
                FROM CR_0117T T1
                <include refid="searchCustomerInfoWhere" />

            ) T1
            <where>
                <if test='firstIndex != -1 and lastIndex != -1'>
                    AND ROWNUM <![CDATA[<=]]> #{lastIndex}
                </if>
            </where>
        )
        <where>
            <if test='firstIndex != -1 and lastIndex != -1'>
                RNUM > #{firstIndex}
            </if>
        </where>
    </select>

    <!--  고객정보를 등록한다. -->
    <insert id="insertCustomer" parameterType="CustomerInfoVO">
        /* [chn.bhmc.dms.crm.cif.service.dao.CustomerInfoDAO.insertCustomer] */
        INSERT INTO CR_0101T
        (
          DLR_CD                -- 딜러코드
         , CUST_NO              -- 고객번호
         , CUST_NM              -- 고객명
         , CUST_CD
         , SSN_CRN_NO
         , CUST_TP
         , MNG_SC_ID
         , SALE_SC_ID
         , MNG_TEC_ID
         , EMAIL_NM
         , WECHAT_ID
         , QQ_ID
         , FACEBOOK_ID
         , TWITTER_ID
         , PREF_COMM_MTH_CD
         , PREF_COMM_NO
         , PREF_CONTACT_MTH_CD
         , PREF_CONTACT_TIME_CD
         , TEL_NO
         , HP_NO
         , JOB_CD
         , OFFICE_NM
         , DEPT_NM
         , OFFICE_TEL_NO
         , OFFICE_FAX_NO
         , BIZCOND_CD
         , OWN_RGST_NM
         , CMP_TP
         , CMP_SCALE_CONT
         , MATH_DOC_TP
         , DM_PLACE_CD
         , DM_NM
         , SMS_RECEIVE_YN
         , TEL_RECEIVE_YN
         , DM_RECEIVE_YN
         , EMAIL_RECEIVE_YN
         , FAX_RECEIVE_YN
         , DM_RETURN_YN
         , EMAIL_RETURN_YN
         , DISUSE_YN
         , VIP_YN
         , DISUSE_CD
         , CUST_HOLD_TP
         , CUST_HOLD_TP_DTL
         , SEX_CD
         , BIRTH_DT
         , MARRY_DT
         , MARRY_CD
         , BEF_MNG_SC_ID
         , PER_INFO_AGREE_YN
         , PER_INFO_USE_YN
         , AC_CAREER_CD
         , INCOME_LVL_CD
         , AGE_CD
         , MERGE_YN
         , DEL_YN
         , BHMC_YN
         , SIEBEL_ROW_ID
         , HP_NO_INVLD_YN
         , HP_NO_ADD_IMPOS_YN
         , BUY_CNT
         , CHG_BUY_YN
         , PURC_CAR_BRAND_CD
         , PURC_CAR_MODEL_NM
         , AGE_DTL
         , CHINA_ZODIAC_SIGN_CD
         , ZODIAC_SIGN_CD
         , BLOOD_TP
         , CHILDREN_CNT
         , DUTY_CD
         , DOC_ID
         , BAT_YN
         , HP_NO_RECEIVE_YN
         , BLUE_GRADE_CHG_DT
         , BLUE_GRADE_NM
         , BLUE_AVLB_POINT_VAL
         , PURC_MNG_NM
         , TAXPAYER_NO
         , CUST_COLL_SRC_CD
         , REG_USR_ID
         , REG_DT
         , UPDT_USR_ID
         , UPDT_DT
        )VALUES(
         #{dlrCd}
         , #{custNo}
         , #{custNm}
         , #{custCd}
         , UPPER(#{ssnCrnNo})
         , #{custTp}
         , #{mngScId}
         , #{saleScId}
         , #{mngTecId}
         , #{emailNm}
         , #{wechatId}
         , #{qqId}
         , #{facebookId}
         , #{twitterId}
         , #{prefCommMthCd}
         , #{prefCommNo}
         , #{prefContactMthCd}
         , #{prefContactTimeCd}
         , #{telNo}
         , #{hpNo}
         , #{jobCd}
         , #{officeNm}
         , #{deptNm}
         , #{officeTelNo}
         , #{officeFaxNo}
         , #{bizcondCd}
         , #{ownRgstNm}
         , #{cmpTp}
         , #{cmpScaleCont}
         , #{mathDocTp}
         , #{dmPlaceCd}
         , #{dmNm}
         , #{smsReceiveYn}
         , #{telReceiveYn}
         , #{dmReceiveYn}
         , #{emailReceiveYn}
         , #{faxReceiveYn}
         , #{dmReturnYn}
         , #{emailReturnYn}
         , #{disuseYn}
         , #{vipYn}
         , #{disuseCd}
         , #{custHoldTp}
         , #{custHoldTpDtl}
         , #{sexCd}
         , #{birthDt}
         , #{marryDt}
         , #{marryCd}
         , #{befMngScId}
         , #{perInfoAgreeYn}
         , #{perInfoUseYn}
         , #{acCareerCd}
         , #{incomeLvlCd}
         , #{ageCd}
         , #{mergeYn}
         , #{delYn}
         , #{bhmcYn}
         , #{siebelRowId}
         , #{hpNoInvldYn}
         , #{hpNoAddImposYn}
         , #{buyCnt}
         , #{chgBuyYn}
         , #{purcCarBrandCd}
         , #{purcCarModelNm}
         , #{ageDtl}
         , #{chinaZodiacSignCd}
         , #{zodiacSignCd}
         , #{bloodTp}
         , #{childrenCnt}
         , #{dutyCd}
         , #{docId}
         , 'Y'
         , #{hpNoReceiveYn}
         , #{blueGradeChgDt}
         , #{blueGradeNm}
         , #{blueAvlbPointVal}
         , #{purcMngNm}
         , #{taxpayerNo}
         , #{custCollSrcCd}
         , #{regUsrId}
         , SYSDATE
         , #{regUsrId}
         , SYSDATE
        )
    </insert>

    <!-- 고객정보를 업데이트 한다. -->
    <update id="updateCustomer" parameterType="CustomerInfoVO">
        /* [chn.bhmc.dms.crm.cif.service.dao.CustomerInfoDAO.updateCustomer] */
        UPDATE CR_0101T    --고객마스터
          SET
                     UPDT_USR_ID            = #{updtUsrId}                    --수정자ID
                   , UPDT_DT                = SYSDATE
                   , BAT_YN = 'Y'
                    <if test='custNm != null '>
                         , CUST_NM                = #{custNm}                       --고객명
                    </if>
                    <if test='custCd != null'>
                         , CUST_CD                = FN_GET_CUST_CD(DLR_CD, CUST_NO)
                    </if>
                    <if test='ssnCrnNo != null'>
                         , SSN_CRN_NO             = UPPER(#{ssnCrnNo})                     --주민사업자등록번호
                    </if>
                    <if test='custTp != null'>
                         , CUST_TP                = #{custTp}                       --고객유형
                    </if>
                    <if test='mngScId != null'>
                        <choose>
                            <when test='mngScIdIsNull == "U"'>
                                , MNG_SC_ID = NVL(MNG_SC_ID,#{mngScId})
                            </when>
                            <otherwise>
                                , MNG_SC_ID              = #{mngScId}                      --관리SCID
                            </otherwise>
                        </choose>
                    </if>
                    <if test='saleScId != null'>
                         , SALE_SC_ID             = #{saleScId}                     --판매SCID
                    </if>
                    <if test='mngTecId != null'>
                         , MNG_TEC_ID             = #{mngTecId}                     --관리TechManID
                    </if>
                    <if test='emailNm != null'>
                         , EMAIL_NM               = #{emailNm}                      --이메일명
                    </if>
                    <if test='wechatId != null'>
                         , WECHAT_ID              = #{wechatId}                     --위쳇ID
                    </if>
                    <if test='qqId != null'>
                         , QQ_ID                  = #{qqId}                         --QQ ID
                    </if>
                    <if test='facebookId != null'>
                         , FACEBOOK_ID            = #{facebookId}                   --페이스북ID
                    </if>
                    <if test='twitterId != null'>
                         , TWITTER_ID             = #{twitterId}                    --트위터ID
                    </if>
                    <if test='prefCommMthCd != null'>
                         , PREF_COMM_MTH_CD       = #{prefCommMthCd}                --선호연락방법코드
                    </if>
                    <if test='prefCommNo != null'>
                         , PREF_COMM_NO           = #{prefCommNo}                   --선호연락번호
                    </if>
                    <if test='prefContactMthCd != null'>
                         , PREF_CONTACT_MTH_CD    = #{prefContactMthCd}             --우선연락방법
                    </if>
                    <if test='prefContactTimeCd != null'>
                         , PREF_CONTACT_TIME_CD   = #{prefContactTimeCd}            --우선연락시간
                    </if>
                    <if test='telNo != null'>
                         , TEL_NO                 = #{telNo}                        --전화번호
                    </if>
                    <if test='hpNo != null'>
                         , HP_NO                  = #{hpNo}                         --휴대폰번호
                    </if>
                    <if test='jobCd != null'>
                         , JOB_CD                 = #{jobCd}                        --직업코드
                    </if>
                    <if test='officeNm != null'>
                         , OFFICE_NM              = #{officeNm}                     --직장명
                    </if>
                    <if test='deptNm != null'>
                         , DEPT_NM                = #{deptNm}                       --부서명
                    </if>
                    <if test='officeTelNo != null'>
                         , OFFICE_TEL_NO          = #{officeTelNo}                  --직장전화번호
                    </if>
                    <if test='officeFaxNo != null'>
                         , OFFICE_FAX_NO          = #{officeFaxNo}                  --직장팩스번호
                    </if>
                    <if test='bizcondCd != null'>
                         , BIZCOND_CD             = #{bizcondCd}                    --업종코드
                    </if>
                    <if test='ownRgstNm != null'>
                         , OWN_RGST_NM            = #{ownRgstNm}                    --대표자명
                    </if>
                    <if test='cmpTp != null'>
                         , CMP_TP                 = #{cmpTp}                        --회사유형
                    </if>
                    <if test='cmpScaleCont != null'>
                         , CMP_SCALE_CONT         = #{cmpScaleCont}                 --회사규모내용
                    </if>
                    <if test='mathDocTp != null'>
                         , MATH_DOC_TP            = #{mathDocTp}                    --주요인증문서유형
                    </if>
                    <if test='dmPlaceCd != null'>
                         , DM_PLACE_CD            = #{dmPlaceCd}                    --DM장소코드
                    </if>
                    <if test='dmNm != null'>
                         , DM_NM                  = #{dmNm}                         --DM명
                    </if>
                    <if test='smsReceiveYn != null'>
                         , SMS_RECEIVE_YN         = #{smsReceiveYn}                 --SMS수신여부
                    </if>
                    <if test='telReceiveYn != null'>
                         , TEL_RECEIVE_YN         = #{telReceiveYn}                 --전화수신여부
                    </if>
                    <if test='dmReceiveYn != null'>
                         , DM_RECEIVE_YN          = #{dmReceiveYn}                  --DM수신여부
                    </if>
                    <if test='emailReceiveYn != null'>
                         , EMAIL_RECEIVE_YN       = #{emailReceiveYn}               --이메일수신여부
                    </if>
                    <if test='faxReceiveYn != null'>
                         , FAX_RECEIVE_YN         = #{faxReceiveYn}                 --FAX수신여부
                    </if>
                    <if test='dmReturnYn != null'>
                         , DM_RETURN_YN           = #{dmReturnYn}                   --DM반송여부
                    </if>
                    <if test='emailReturnYn != null'>
                         , EMAIL_RETURN_YN        = #{emailReturnYn}                --이메일반송여부
                    </if>
                    <if test='disuseYn != null'>
                         , DISUSE_YN              = #{disuseYn}                     --폐기여부
                    </if>
                    <if test='vipYn != null'>
                         , VIP_YN                 = #{vipYn}                        --VIP 여부
                    </if>
                    <if test='disuseCd != null'>
                         , DISUSE_CD              = #{disuseCd}                     --폐기코드
                    </if>
                    <if test='custHoldTp != null'>
                         , CUST_HOLD_TP           = #{custHoldTp}                   --고객확보유형
                    </if>
                    <if test='custHoldTpDtl != null'>
                         , CUST_HOLD_TP_DTL           = #{custHoldTpDtl}                   --고객확보유형
                    </if>
                    <if test='sexCd != null'>
                         , SEX_CD                 = #{sexCd}                        --성별코드
                    </if>
                    <if test='birthDt != null'>
                         , BIRTH_DT               = #{birthDt}                      --BIRTH_DT
                    </if>
                    <if test='marryDt != null'>
                         , MARRY_DT               = #{marryDt}                      --결혼일자
                    </if>
                    <if test='marryCd != null'>
                         , MARRY_CD               = #{marryCd}                      --결혼코드
                    </if>
                    <if test='befMngScId != null'>
                         , BEF_MNG_SC_ID          = #{befMngScId}                   --이전관리SCID
                    </if>
                    <if test='perInfoAgreeYn != null'>
                         , PER_INFO_AGREE_YN      = #{perInfoAgreeYn}               --개인정보동의여부
                    </if>
                    <if test='perInfoUseYn != null'>
                         , PER_INFO_USE_YN        = #{perInfoUseYn}                 --개인정보사용여부
                    </if>
                    <if test='acCareerCd != null'>
                         , AC_CAREER_CD           = #{acCareerCd}                   --학력코드
                    </if>
                    <if test='incomeLvlCd != null'>
                         , INCOME_LVL_CD          = #{incomeLvlCd}                  --소득레벨코드
                    </if>
                    <if test='ageCd != null'>
                         , AGE_CD                 = #{ageCd}                        --나이코드
                    </if>
                    <if test='mergeYn != null'>
                         , MERGE_YN               = #{mergeYn}                      --병합여부
                    </if>
                    <if test='delYn != null'>
                         , DEL_YN                 = #{delYn}                        --삭제여부
                    </if>
                    <if test='bhmcYn != null'>
                         , BHMC_YN                = #{bhmcYn}                       --BHMC여부
                    </if>
                    <if test='siebelRowId != null'>
                         , SIEBEL_ROW_ID          = #{siebelRowId}                  --SIEBEL ROW ID
                    </if>
                    <if test='hpNoInvldYn != null'>
                        , HP_NO_INVLD_YN = #{hpNoInvldYn}
                    </if>
                    <if test='hpNoAddImposYn != null'>
                        , HP_NO_ADD_IMPOS_YN = #{hpNoAddImposYn}
                    </if>
                    <if test='buyCnt != null'>
                        , BUY_CNT = #{buyCnt}
                    </if>
                    <if test='chgBuyYn != null'>
                        , CHG_BUY_YN = #{chgBuyYn}
                    </if>
                    <if test='purcCarBrandCd != null'>
                        , PURC_CAR_BRAND_CD = #{purcCarBrandCd}
                    </if>
                    <if test='purcCarModelNm != null'>
                        , PURC_CAR_MODEL_NM = #{purcCarModelNm}
                    </if>
                    <if test='ageDtl != null'>
                        , AGE_DTL = #{ageDtl}
                    </if>
                    <if test='chinaZodiacSignCd != null'>
                        , CHINA_ZODIAC_SIGN_CD = #{chinaZodiacSignCd}
                    </if>
                    <if test='zodiacSignCd != null'>
                        , ZODIAC_SIGN_CD = #{zodiacSignCd}
                    </if>
                    <if test='bloodTp != null'>
                        , BLOOD_TP = #{bloodTp}
                    </if>
                    <if test='childrenCnt != null'>
                        , CHILDREN_CNT = #{childrenCnt}
                    </if>
                    <if test='dutyCd != null'>
                        , DUTY_CD = #{dutyCd}
                    </if>
                    <if test='docId != null'>
                        , DOC_ID = #{docId}
                    </if>
                    <if test='blueMembershipJoinDlrCd != null'>
                        , BLUE_MEMBERSHIP_JOIN_DLR_CD = #{blueMembershipJoinDlrCd}
                    </if>
                    <if test='blueMembershipJoinDt != null'>
                        , BLUE_MEMBERSHIP_JOIN_DT = #{blueMembershipJoinDt}
                    </if>
                    <if test='blueGradeChgDt != null'>
                        , BLUE_GRADE_CHG_DT = #{blueGradeChgDt}
                    </if>
                    <if test='blueMembershipNo != null'>
                        , BLUE_MEMBERSHIP_NO = #{blueMembershipNo}
                    </if>
                    <if test='blueMembershipId != null'>
                        , BLUE_MEMBERSHIP_ID = #{blueMembershipId}
                    </if>
                    <if test='blueGradeNm != null'>
                        , BLUE_GRADE_NM = #{blueGradeNm}
                    </if>
                    <if test='blueAvlbPointVal != null'>
                        , BLUE_AVLB_POINT_VAL = #{blueAvlbPointVal}
                    </if>
                    <if test='hpNoReceiveYn != null'>
                        , HP_NO_RECEIVE_YN = #{hpNoReceiveYn}
                    </if>
                    <if test='purcMngNm != null'>
                        , PURC_MNG_NM = #{purcMngNm}
                    </if>
                    <if test='taxpayerNo != null'>
                        , TAXPAYER_NO = #{taxpayerNo}
                    </if>
                    <if test='blueLoginId != null and blueLoginId != ""'>
                        , BLUE_LOGIN_ID = #{blueLoginId}
                    </if>
         WHERE DLR_CD                 = #{dlrCd}                        --딜러코드
           AND CUST_NO                = #{custNo}                       --고객번호
    </update>

    <sql id="whereCustDupByKey">
        <where>
           T1.DEL_YN = 'N'
           AND  T1.DLR_CD   = #{sDlrCd}
           AND  T1.CUST_TP  = #{sCustTp}
           AND  T1.CUST_CD IN ('01','03')
            <choose>
                <when test='sCustTp == "01"'>
                    AND     T1.HP_NO    = #{sHpNo}
                </when>
                <otherwise>
                    AND     T1.HP_NO    = #{sHpNo}
                </otherwise>
            </choose>
            <if test='sCustNo != null and sCustNo != ""'>
                <![CDATA[
                    AND     T1.CUST_NO  <> #{sCustNo}
                ]]>
            </if>
        </where>
    </sql>

    <!-- 고객 정보를 조회 한다. (중복 확인) 개인은 전화번호, 법인은 회사번호
                  고객타입(custCd)가 잠재(01), 보유(02)에 따라 체크 로직 다름
                  잠재(01)인 경유 잠재고객 내에서만 중복을 체크 한다. (타사보유고객(03) 포함)
                  보유(02)인 경우 중복을 체크하지 않는다.
    -->
    <select id="selectCustDupByKeyCnt" parameterType="CustomerInfoSearchVO" resultType="int">
        /* [chn.bhmc.dms.crm.cif.service.dao.CustomerInfoDAO.selectCustDupByKeyCnt] */
        SELECT COUNT(T1.CUST_NO) AS VALUE
        FROM    CR_0101T T1
        <include refid="whereCustDupByKey" />
    </select>

    <!-- 고객 정보를 조회 한다. (중복 확인) 개인은 전화번호, 법인은 회사번호 -->
    <select id="selectCustDupByKey" parameterType="CustomerInfoSearchVO" resultType="CustomerInfoVO">
        /* [chn.bhmc.dms.crm.cif.service.dao.CustomerInfoDAO.selectCustDupByKey] */
        SELECT * FROM (
            SELECT ROWNUM, T1.CUST_NO, T1.CUST_NM, T1.HP_NO, T1.CUST_CD, T1.CUST_TP
                  , T1.OFFICE_TEL_NO, T1.DLR_CD, T1.BHMC_YN
            FROM    CR_0101T T1
            <include refid="whereCustDupByKey" />
        ) WHERE ROWNUM = 1
    </select>

    <!-- 고객 정보를 조회 한다. (중복 확인) 고객명 + 연락처번호 -->
    <select id="selectCustDupByKey2" parameterType="CustomerInfoSearchVO" resultType="CustomerInfoVO">
        /* [chn.bhmc.dms.crm.cif.service.dao.CustomerInfoDAO.selectCustDupByKey] */
        SELECT *
        FROM    CR_0101T T1
        WHERE   T1.DLR_CD   = #{sDlrCd}
        AND     T1.CUST_NM  = #{sCustNm}
        AND     T1.CUST_TP  = #{sCustTp}
        <choose>
            <when test='sCustTp == "01"'>
                AND     T1.HP_NO    = #{sHpNo}
            </when>
            <otherwise>
                AND     T1.OFFICE_TEL_NO    = #{sOfficeTelNo}
            </otherwise>
        </choose>
        AND     T1.DEL_YN = 'N'
    </select>

    <!-- (중복 확인) 신분증유형 + 신분증 번호 검색조건 -->
    <sql id="whereCustMathDocDupByKey">
        <where>
           T1.DEL_YN = 'N'
           AND  T1.DLR_CD   = #{sDlrCd}
           AND  T1.MATH_DOC_TP = #{sMathDocTp}
           AND  T1.SSN_CRN_NO = UPPER(#{sSsnCrnNo})
            <if test='sCustNo != null and sCustNo != ""'>
                <![CDATA[
                    AND     T1.CUST_NO  <> #{sCustNo}
                ]]>
            </if>
        </where>
    </sql>

    <!-- 고객 정보 건수를 조회 한다. (중복 확인) 신분증유형 + 신분증 번호-->
    <select id="selectCustMathDocDupByKeyCnt" parameterType="CustomerInfoSearchVO" resultType="int">
        /* [chn.bhmc.dms.crm.cif.service.dao.CustomerInfoDAO.selectCustMathDocDupByKeyCnt] */
        SELECT SELECT COUNT(T1.CUST_NO) AS VALUE
        FROM    CR_0101T T1
        <include refid="whereCustMathDocDupByKey" />
        UNION ALL
        SELECT T1.DLR_CD
                , T1.CUST_NO
                , T1.MATH_DOC_TP
                , T1.SSN_CRN_NO
                , '' AS DEL_YN
        FROM CR_0102T T1
        WHERE T1.STAT_CD = '01'
        AND     T1.DLR_CD   = #{sDlrCd}
        AND     T1.MATH_DOC_TP = #{sMathDocTp}
        AND     T1.SSN_CRN_NO = UPPER(#{sSsnCrnNo})
        <if test='sCustNo != null and sCustNo != ""'>
            <![CDATA[
                AND     T1.CUST_NO  <> #{sCustNo}
            ]]>
        </if>
    </select>

    <!-- 고객 정보를 조회 한다. (중복 확인) 신분증유형 + 신분증 번호-->
    <select id="selectCustMathDocDupByKey" parameterType="CustomerInfoSearchVO" resultType="CustomerInfoVO">
        /* [chn.bhmc.dms.crm.cif.service.dao.CustomerInfoDAO.selectCustMathDocDupByKey] */
        SELECT T2.DLR_CD
                , T2.CUST_NO
                , T2.MATH_DOC_TP
                , T2.SSN_CRN_NO
                , T2.DEL_YN
        FROM (
        SELECT T1.DLR_CD
                , T1.CUST_NO
                , T1.MATH_DOC_TP
                , T1.SSN_CRN_NO
                , T1.DEL_YN
        FROM    CR_0101T T1
        <include refid="whereCustMathDocDupByKey" />
        UNION ALL
        SELECT T1.DLR_CD
                , T1.CUST_NO
                , T1.MATH_DOC_TP
                , T1.SSN_CRN_NO
                , '' AS DEL_YN
        FROM CR_0102T T1
        WHERE STAT_CD = '01'
        AND     T1.DLR_CD   = #{sDlrCd}
        AND     T1.MATH_DOC_TP = #{sMathDocTp}
        AND     T1.SSN_CRN_NO = UPPER(#{sSsnCrnNo})
        <if test='sCustNo != null and sCustNo != ""'>
            <![CDATA[
                AND     T1.CUST_NO  <> #{sCustNo}
            ]]>
        </if>
        ) T2
        WHERE ROWNUM = 1
    </select>

    <!-- 고객 정보를 카운트를 조회 한다. 엑셀 업로드시 중복 확인용 -->
    <select id="selectCustDupCntByKey" parameterType="map" resultType="int">
        /* [chn.bhmc.dms.crm.cif.service.dao.CustomerInfoDAO.selectCustDupCntByKey] */
        SELECT  COUNT(*)
        FROM    CR_0101T T1
        WHERE   T1.DLR_CD   = #{dlrCd}
        AND     T1.CUST_NM  = #{custNm}
        AND     T1.HP_NO    = #{hpNo}
        AND     T1.DEL_YN = 'N'
    </select>

    <!-- 마스터 고객 정보를 조회 한다. (중복 확인) 판매사원용-->
    <select id="selectMasterCustDupByKey" parameterType="map" resultType="CustomerInfoVO">
        /* [chn.bhmc.dms.crm.cif.service.dao.CustomerInfoDAO.selectMasterCustDupByKey] */
        SELECT *
        FROM    CR_0117T T1
        WHERE   T1.DLR_CD   = #{dlrCd}
        AND     T1.CUST_NM  = #{custNm}
        AND     T1.HP_NO    = #{hpNo}
    </select>

    <!-- 고객조회 팝업 > 차량정보 기준 고객검색 조건 -->
    <sql id="searchCustomerAndCarInfo">
            INNER JOIN ( SELECT
                VO.DLR_CD,
                V.VIN_NO,
                VO.BP_CD,
                V.CAR_BRAND_CD,
                V.CARLINE_CD,
                V.MODEL_CD,
                V.OCN_CD,
                V.CAR_RUN_DIST_VAL,
                V.CAR_REG_NO,
                V.NCAR_DSTIN_CD,
                V.CUST_SALE_DT,
                V.EXT_COLOR_CD,
                V.INT_COLOR_CD
               FROM SA_0121T V,
                SA_0123T VO
              WHERE V.CAR_ID = VO.CAR_ID
                AND VO.DLR_CD = #{sDlrCd}
                AND VO.USE_YN = 'Y') VINFO ON CINFO.DLR_CD = VINFO.DLR_CD AND CINFO.CUST_NO = VINFO.BP_CD
    <if test='sMembershipStan != null and sMembershipStan != ""'>
        <choose>
        <when test='sMembershipStan == "C"'>
            LEFT OUTER JOIN CR_0801T MB ON MB.DLR_CD = CINFO.DLR_CD AND MB.CUST_NO = CINFO.CUST_NO -- 멤버십이 고객기준
        </when>
        <otherwise>
            LEFT OUTER JOIN CR_0801T MB ON MB.DLR_CD = CINFO.DLR_CD AND MB.VIN_NO = VINFO.VIN_NO -- 멤버십 차량기준
        </otherwise>
        </choose>
    </if>
            WHERE 1 = 1
            AND CINFO.DLR_CD =  #{sDlrCd}
            <if test='sCustNm != null and sCustNm != ""'>
                AND (CINFO.CUST_NM LIKE '%'||#{sCustNm}||'%'
                     OR CINFO.HP_NO LIKE '%'||#{sCustNm}||'%'
                    )
            </if>
            <if test='sTelNo != null and sTelNo != ""'>
                AND CINFO.TEL_NO LIKE '%'||#{sTelNo}||'%'
            </if>
            <if test='sHpNo != null and sHpNo != ""'>
                AND CINFO.HP_NO LIKE '%'||#{sHpNo}||'%'
            </if>
            <choose>
                <when test='sDlrMbrYn == "Y" '>
                    AND MB.MEMBERSHIP_NO IS NOT NULL
                </when>
                <when test='sDlrMbrYn == "N" '>
                    AND MB.MEMBERSHIP_NO IS NULL
                </when>
                <otherwise>
                </otherwise>
            </choose>
            <if test='sCustCd != null and sCustCd != ""'>
                AND CINFO.CUST_CD = #{sCustCd} -- 01: 잠재, 02:보유, 03:타사보유
            </if>
            <if test='sCustTp != null and sCustTp != ""'>
                AND CINFO.CUST_TP = #{sCustTp} -- 01: 개인, 02:법인
            </if>
            <choose>
                <when test='sBlueMembershipJoinYn == "Y" '>
                    AND CINFO.BLUE_MEMBERSHIP_NO IS NOT NULL
                </when>
                <when test='sBlueMembershipJoinYn == "N" '>
                    AND CINFO.BLUE_MEMBERSHIP_NO IS NULL
                </when>
                <otherwise>
                </otherwise>
            </choose>
            <if test='sVinNo != null and sVinNo != ""'>
                AND VINFO.VIN_NO LIKE '%'||#{sVinNo}||'%'
            </if>
            <if test='sCarRegNo != null and sCarRegNo != ""'>
                AND VINFO.CAR_REG_NO LIKE '%'||#{sCarRegNo}||'%'
            </if>
            <if test='sHyundaiYn != null and sHyundaiYn != ""'>
                <choose>
                <when test='sHyundaiYn == "Y" '>
                    AND VINFO.NCAR_DSTIN_CD != 'O' -- O:타사차량, N:신차
                </when>
                <otherwise>
                    AND VINFO.NCAR_DSTIN_CD = 'O' -- O:타사차량, N:신차
                </otherwise>
                </choose>
            </if>
            <if test='sMathDocTp != null and sMathDocTp != ""'>
                AND CINFO.MATH_DOC_TP = #{sMathDocTp}
            </if>
            <if test='sMngScId != null and sMngScId != ""'>
                AND CINFO.MNG_SC_ID = #{sMngScId}
            </if>
            <choose>
                <when test='(sSaleStartDt != null) and (sSaleEndDt != null)'>
                    AND (VINFO.CUST_SALE_DT <![CDATA[>=]]> trunc(#{sSaleStartDt},'DD') AND VINFO.CUST_SALE_DT <![CDATA[<]]> trunc(#{sSaleEndDt},'DD')+1)
                </when>
                <when test='(sSaleStartDt != null) and (sSaleEndDt == null)'>
                    AND VINFO.CUST_SALE_DT <![CDATA[>=]]> trunc(#{sSaleStartDt},'DD')
                </when>
                <when test='(sSaleStartDt == null) and (sSaleEndDt != null)'>
                    AND VINFO.CUST_SALE_DT <![CDATA[<]]> trunc(#{sSaleEndDt},'DD')+1
                </when>
                <otherwise>
                </otherwise>
            </choose>
    </sql>
    <!-- 고객조회 팝업 > 차량정보 기준 고객검색 -->
    <select id="selectCustomerAndCarInfoByConditionCnt" parameterType="CustomerInfoSearchVO" resultType="int">
        /* [chn.bhmc.dms.crm.cif.service.dao.CustomerInfoDAO.selectCustomerAndCarInfoByConditionCnt] */
             SELECT COUNT(*)
               FROM CR_0101T CINFO
               <include refid="searchCustomerAndCarInfo" />
    </select>
    <!-- 고객조회 팝업 > 차량정보 기준 고객검색 -->
    <select id="selectCustomerAndCarInfoByCondition" parameterType="CustomerInfoSearchVO" resultType="CustomerInfoVO">
        /* [chn.bhmc.dms.crm.cif.service.dao.CustomerInfoDAO.selectCustomerAndCarInfoByCondition] */
        SELECT * FROM (
            SELECT ROWNUM AS RNUM, T3.* FROM (
                SELECT T2.*
                FROM (
                     SELECT CINFO.CUST_NO
                          , CINFO.CUST_NM
                          , CINFO.CUST_TP  -- 개인/법인
                          , CINFO.HP_NO
                          , CINFO.TEL_NO
                          , CINFO.OFFICE_NO
                          , CINFO.MATH_DOC_TP
                          , CINFO.SSN_CRN_NO
                          , VINFO.VIN_NO
                          , VINFO.CAR_REG_NO
                          , VINFO.CARLINE_CD
                          , VINFO.MODEL_CD
                          , VINFO.CUST_SALE_DT AS SALE_DT
                          , VINFO.EXT_COLOR_CD
                          , VINFO.INT_COLOR_CD
                          , CASE WHEN VINFO.NCAR_DSTIN_CD = 'O' THEN '' ELSE FN_GET_CARLINE_NM(VINFO.CARLINE_CD) END AS CARLINE_NM
                          , CASE WHEN VINFO.NCAR_DSTIN_CD = 'O' THEN '' ELSE FN_GET_MODEL_NM(VINFO.MODEL_CD) END AS MODEL_NM
                          , MB.MEMBERSHIP_NO
                          , CINFO.BLUE_MEMBERSHIP_NO
                          , CINFO.REG_DT
                          , VINFO.OCN_CD
                          , FN_GET_OCN_NM(VINFO.MODEL_CD,VINFO.OCN_CD) AS OCN_NM
                          , VINFO.CAR_RUN_DIST_VAL
                          , CINFO.MNG_SC_ID
                          , CINFO.BLUE_LOGIN_ID
                       FROM CR_0101T CINFO
                       <include refid="searchCustomerAndCarInfo" />
                ) T2
                    ORDER BY
                    <choose>
                        <when test='sort != null'>
                            <foreach item="item" index="index" collection="sort" open="" separator="," close="">
                                <choose>
                                    <when test='item.field == "custNo"'>T2.CUST_NO <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                                    <when test='item.field == "custNm"'>T2.CUST_NM <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                                    <when test='item.field == "custTp"'>T2.CUST_TP <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                                    <when test='item.field == "hpNo"'>T2.HP_NO <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                                    <when test='item.field == "telNo"'>T2.TEL_NO <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                                    <when test='item.field == "officeNo"'>T2.OFFICE_NO <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                                    <when test='item.field == "ssnCrnNo"'>T2.SSN_CRN_NO <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                                    <when test='item.field == "vinNo"'>T2.VIN_NO <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                                    <when test='item.field == "carRegNo"'>T2.CAR_REG_NO <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                                    <when test='item.field == "carlineCd"'>T2.CARLINE_CD <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                                    <when test='item.field == "modelCd"'>T2.MODEL_CD <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                                    <when test='item.field == "saleDt"'>T2.SALE_DT <choose><when test='item.dir == "asc"'>ASC NULLS FIRST</when><otherwise>DESC NULLS LAST</otherwise></choose></when>
                                    <when test='item.field == "saleDtFormat"'>T2.SALE_DT <choose><when test='item.dir == "asc"'>ASC NULLS FIRST</when><otherwise>DESC NULLS LAST</otherwise></choose></when>
                                    <when test='item.field == "carlineNm"'>T2.CARLINE_NM <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                                    <when test='item.field == "modelNm"'>T2.MODEL_NM <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                                    <when test='item.field == "membershipNo"'>T2.MEMBERSHIP_NO <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                                    <when test='item.field == "blueMembershipNo"'>T2.BLUE_MEMBERSHIP_NO <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                                    <when test='item.field == "regDt"'>T2.REG_DT <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                                    <when test='item.field == "regDtFormat"'>T2.REG_DT <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                                    <otherwise>
                                        T2.REG_DT DESC
                                    </otherwise>
                                </choose>
                            </foreach>
                        </when>
                        <otherwise>
                            T2.REG_DT DESC
                        </otherwise>
                    </choose>
            ) T3
            <where>
                <if test='firstIndex != -1 and lastIndex != -1'>
                    AND ROWNUM <![CDATA[<=]]> #{lastIndex}
                </if>
            </where>
        )
        <where>
            <if test='firstIndex != -1 and lastIndex != -1'>
                RNUM > #{firstIndex}
            </if>
        </where>
    </select>

    <!-- 고객정보의 판매고문을 업데이트 한다. -->
    <update id="updateCustomerMngScAssign" parameterType="CustomerInfoVO">
        /* [chn.bhmc.dms.crm.cif.service.dao.CustomerInfoDAO.updateCustomerMngScAssign] */
        UPDATE CR_0101T    --고객마스터
          SET
                MNG_SC_ID                = #{mngScId}
                , UPDT_USR_ID            = #{updtUsrId}                    --수정자ID
                , UPDT_DT                = SYSDATE
                , BAT_YN = 'Y'
        WHERE DLR_CD        = #{dlrCd}
        AND CUST_NO         = #{custNo}
    </update>

    <!-- 고객 , 연계인 -->
    <select id="selectCustomerAndPconInfoByConditionCnt" parameterType="CustomerInfoSearchVO" resultType="int">
        /* [chn.bhmc.dms.crm.cif.service.dao.CustomerInfoDAO.selectCustomerAndPconInfoByConditionCnt] */
         SELECT COUNT(*)
           FROM ( SELECT 'C' AS AAAA,
                         C.CUST_NO,
                         C.CUST_NM,
                         C.HP_NO,
                         '' AS PCON_TP,
                         '' AS REL_NM,
                         '' AS REL_CUST_NO,
                         '' AS HP_NO,
                         '' AS FLAG_YN,
                         C.REG_DT
                    FROM CR_0101T C
                   WHERE C.DLR_CD = #{sDlrCd}
                    <if test='sCustNm != null and sCustNm != ""'>
                       AND C.CUST_NM LIKE '%'||#{sCustNm}||'%'
                    </if>
                    <if test='sHpNo != null and sHpNo != ""'>
                       AND C.HP_NO LIKE '%'||#{sHpNo}||'%'
                    </if>
                   UNION ALL
                  SELECT 'R',
                         C.CUST_NO,
                         C.CUST_NM,
                         C.HP_NO,
                         CR.PCON_TP,
                         CR.REL_NM,
                         CR.PCON_CUST_NO,
                         CR.HP_NO,
                         CR.FLAG_YN,
                         CR.REG_DT
                    FROM CR_0101T C , CR_0111T CR
                   WHERE C.DLR_CD = #{sDlrCd}
                     AND C.DLR_CD = CR.DLR_CD
                     AND C.CUST_NO = CR.UPPER_CUST_NO
                     AND CR.PCON_TP IN('02','03','04','05')
                    <if test='sCustNm != null and sCustNm != ""'>
                       AND CR.REL_NM LIKE '%'||#{sCustNm}||'%'
                    </if>
                    <if test='sHpNo != null and sHpNo != ""'>
                       AND CR.HP_NO LIKE '%'||#{sHpNo}||'%'
                    </if>
             )
    </select>

    <select id="selectCustomerAndPconInfoByCondition" parameterType="CustomerInfoSearchVO" resultType="CustomerInfoVO">
        /* [chn.bhmc.dms.crm.cif.service.dao.CustomerInfoDAO.selectCustomerAndPconInfoByCondition] */
                SELECT * FROM (
            SELECT ROWNUM AS RNUM, T3.* FROM (
                SELECT T2.*
                FROM ( SELECT 'C' AS CUST_PCON_TP,
                             C.CUST_NO,
                             C.CUST_NM,
                             C.HP_NO,
                             '' AS PCON_TP,
                             '' AS REL_NM,
                             '' AS REL_HP_NO,
                             '' AS REL_FLAG_YN,
                             C.REG_DT
                        FROM CR_0101T C
                       WHERE C.DLR_CD = #{sDlrCd}
                        <if test='sCustNm != null and sCustNm != ""'>
                           AND C.CUST_NM LIKE '%'||#{sCustNm}||'%'
                        </if>
                        <if test='sHpNo != null and sHpNo != ""'>
                           AND C.HP_NO LIKE '%'||#{sHpNo}||'%'
                        </if>
                       UNION ALL
                      SELECT 'R',
                             C.CUST_NO,
                             C.CUST_NM,
                             C.HP_NO,
                             CR.PCON_TP,
                             CR.REL_NM,
                             CR.HP_NO,
                             CR.FLAG_YN,
                             CR.REG_DT
                        FROM CR_0101T C , CR_0111T CR
                       WHERE C.DLR_CD = #{sDlrCd}
                         AND C.DLR_CD = CR.DLR_CD
                         AND C.CUST_NO = CR.UPPER_CUST_NO
                         AND CR.PCON_TP IN('02','03','04','05')
                        <if test='sCustNm != null and sCustNm != ""'>
                           AND CR.REL_NM LIKE '%'||#{sCustNm}||'%'
                        </if>
                        <if test='sHpNo != null and sHpNo != ""'>
                           AND CR.HP_NO LIKE '%'||#{sHpNo}||'%'
                        </if>
                 )T2
                    ORDER BY
                    <choose>
                        <when test='sort != null'>
                            <foreach item="item" index="index" collection="sort" open="" separator="," close="">
                                <choose>
                                    <when test='item.field == "custNo"'>T2.CUST_NO <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                                    <when test='item.field == "custNm"'>T2.CUST_NM <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                                    <when test='item.field == "hpNo"'>T2.HP_NO <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                                    <when test='item.field == "relNm"'>T2.REL_NM <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                                    <when test='item.field == "relHpNo"'>T2.REL_HP_NO <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                                    <otherwise>
                                        T2.REG_DT DESC
                                    </otherwise>
                                </choose>
                            </foreach>
                        </when>
                        <otherwise>
                            T2.REG_DT DESC
                        </otherwise>
                    </choose>
            ) T3
            <where>
                <if test='firstIndex != -1 and lastIndex != -1'>
                    AND ROWNUM <![CDATA[<=]]> #{lastIndex}
                </if>
            </where>
        )
        <where>
            <if test='firstIndex != -1 and lastIndex != -1'>
                RNUM > #{firstIndex}
            </if>
        </where>
    </select>

    <select id="selectAbleToEditSsnCrnNo" parameterType="map" resultType="string">
    /* [chn.bhmc.dms.crm.cif.service.dao.CustomerInfoDAO.selectAbleToEditSsnCrnNo] */
      SELECT FN_CHK_ALBE_SSNCRNNO(#{param1},#{param2}) AS RESULT
      FROM DUAL
    </select>

</mapper>