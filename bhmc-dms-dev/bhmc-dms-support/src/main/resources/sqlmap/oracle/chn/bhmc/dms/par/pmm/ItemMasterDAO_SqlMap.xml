<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--
    SQL File Name : ItemMasterDao_SqlMap.xml
    Description : 부품마스터 관리
    author Ju Won Lee
    since 2016. 1. 11.
    version 1.0
    Modification Information
       since          author              description
    ===========    =============    ===========================
    2016. 01. 11.     Ju Won Lee     최초 생성
-->

<mapper namespace="chn.bhmc.dms.par.pmm.service.dao.ItemMasterDAO">

    <!-- 시스템 설정 정보를 수정한다. -->
    <update id="update" parameterType="ItemMasterVO">
    <![CDATA[
        /* [chn.bhmc.dms.par.pmm.service.dao.ItemMasterDao.update] */
        UPDATE CM_SCI01T SET
            PREF_VAL = #{prefVal},
            MULTI_YN = #{multiYn}
        WHERE PREF_KEY = #{prefKey}
    ]]>
    </update>

    <!-- 부품마스터를 등록한다. -->
    <insert id="insertItemMaster" parameterType="ItemMasterVO">
        /* [chn.bhmc.dms.par.pmm.service.dao.ItemMasterDao.insertItemMaster] */
        INSERT INTO DMSDB.PT_0201T    --부품마스터
        (
          DLR_CD                      --딜러코드
         ,ITEM_CD                     --품목코드
         ,SPYR_CD                     --로컬여부
         ,ITEM_NM                     --품목명
         ,ITEM_EN_NM                  --품목영문명
         ,ITEM_DSTIN_CD               --품목구분코드
         ,ITEM_GRP_CD                 --품목그룹코드
         ,HS_CD                       --HS코드
         ,END_YN                      --종료여부
         ,START_DT                    --시작일자
         ,END_DT                      --종료일자
         ,PRE_ITEM_CD                 --기존품목코드
         ,OLD_RPLC_ITEM_CD            --구형대체품목코드
         ,NEW_RPLC_ITEM_CD            --신규대체품목코드
         ,OLD_RPLC_PAR_CMPT_YN        --구형대체부품호환여부
         ,NEW_RPLC_PAR_CMPT_YN        --신규대체부품호환여부
         ,SUC_CD                      --SUC코드
         ,LAST_CMPT_ITEM_CD           --최종호환품목코드
         ,CAR_USE_UNIT_CNT            --차량사용단위수
         ,MOBIS_IMP_LOCAL_YN_TP       --모비스수입위치유형
         ,PAR_SPEC_CD                 --부품특성코드
         ,PNC_CD                      --PNC코드
         ,STOCK_UNIT_CD               --재고단위코드
         ,ITEM_LGTH_VAL               --품목길이값
         ,ITEM_WIDTH_VAL              --품목폭값
         ,ITEM_HGTH_VAL               --품목높이값
         ,WEIGHT_UNIT_CD              --중량단위코드
         ,TOT_WEIGHT_VAL              --총중량값
         ,NET_WEIGHT_VAL              --순중량값
         ,FILE_DOC_NO                 --첨부문서번호
         ,PURC_LEAD_HM                --구매리드타임
         ,CQTY_RAISE_TP               --소요량올림유형
         ,MIN_PURC_QTY                --최소구매수량
         ,STDRD_STOCK_CALC_YN          --적정재고산출여부
         ,SFTY_STOCK_QTY              --안전재고수량
         ,PURC_CQTY_CALC_YN             --구매소요량산출여부
         ,STOCK_PRSN_ID                 --재고담당자ID
         ,PURC_PRSN_ID                  --구매담당자ID
         ,GR_STRGE_CD                 --입고창고코드
         ,GI_STRGE_CD                 --출고창고코드
         ,IMP_TEST_TP                 --수입검사유형
         ,ABC_IND                     --ABC CLASS
         ,MM3_AVG_DMND_QTY            --3개월평균수요
         ,MM6_AVG_DMND_QTY            --6개월평균수요
         ,MM12_AVG_DMND_QTY           --12개월평균수요
         ,PURC_REQ_CNT                  --구매요청횟수
         ,NON_MOVING_FLG              --NONMOVINGSTOCK여부
         ,BEF_LAST_GR_DT              --이전최종입고일자
         ,LAST_GR_DT                  --최종입고일자
         ,BEF_LAST_GI_DT              --이전최종출고일자
         ,LAST_GI_DT                  --최종출고일자
         ,RECOM_RTPRC_AMT             --권장소비자가격금액
         ,MOVING_AVG_PRC                --이동평균가격
         ,CARLINE_CD                    --차종코드
         ,CARLINE_CD2                   --차종코드2_적용차종
         ,BRAND_CD                    --브랜드
         ,STDRD_STOCK_QTY               --적정재고량
         ,STDRD_STOCK_APPLY_RATE        --적정재고적용율
         ,COM_CARLINE_NM                --공용차종명
         ,PRND_YN                       --단종여부
         ,DGR_ITEM_YN                   --위험품여부
         ,BP_CD                         --거래처코드
         ,MODEL_CD                      --모델코드
         ,LAST_GR_AMT                   --최종입고금액
         ,MAX_SFTY_STOCK_QTY            --최대안전재고수량
         ,DLR_SELF_ITEM_NM              --딜러자체품목명
         ,REMARK                        --비고
         ,MJR_USE_YN                    --주사용여부
         ,MJR_ERR_YN                    --주고장여부
         ,RENEW_DT                      --갱신일자
         ,LOC_CD                        --위치코드
         ,ETC_CD1
         ,ETC_CD2
         ,ETC1
         ,ETC2
         ,ETC3
         ,ETC4
         ,ITEM_DSTIN_AMOS_CD            --AMOS품목구분코드
         ,REG_USR_ID                    --등록자ID
         ,REG_DT                        --등록일자
         ,UPDT_USR_ID
         ,UPDT_DT
        )
        VALUES
        (
          #{dlrCd}                        --딜러코드
         ,#{itemCd}                       --품목코드
         ,#{spyrCd}                       --공급상코드
         ,#{itemNm}                       --품목명
         ,#{itemEnNm}                     --품목영문명
         ,#{itemDstinCd}                  --품목구분코드
         ,#{itemGrpCd}                    --품목그룹코드
         ,#{hsCd}                         --HS코드
         ,#{endYn}                        --종료여부(사용중지여부)
         ,#{startDt}                      --시작일자
         ,#{endDt}                        --종료일자
         ,#{preItemCd}                    --기존품목코드
         ,#{oldRplcItemCd}                --구형대체품목코드
         ,#{newRplcItemCd}                --신규대체품목코드
         ,#{oldRplcParCmptYn}             --구형대체부품호환여부
         ,#{newRplcParCmptYn}             --신규대체부품호환여부
         ,#{sucCd}                        --SUC코드
         ,#{lastCmptItemCd}               --최종호환품목코드
         ,#{carUseUnitCnt}                --차량사용단위수
         ,#{mobisImpLocalYnTp}            --모비스수입로컬여부유형
         ,#{parSpecCd}                    --부품특성코드
         ,#{pncCd}                        --PNC코드
         ,#{stockUnitCd}                  --재고단위코드
         ,#{itemLgthVal}                  --품목길이값
         ,#{itemWidthVal}                 --품목폭값
         ,#{itemHgthVal}                  --품목높이값
         ,#{weightUnitCd}                 --중량단위코드
         ,#{totWeightVal}                 --총중량값
         ,#{netWeightVal}                 --순중량값
         ,#{fileDocNo}                    --첨부문서번호
         ,#{purcLeadHm}                   --구매리드시간
         ,#{cqtyRaiseTp}                  --소요량올림유형
         ,#{minPurcQty}                   --최소구매수량
         ,#{stdrdStockCalcYn}             --적정재고산출여부
         ,#{sftyStockQty}                 --안전재고수량(최소)
         ,#{purcCqtyCalcYn}               --구매소요량산출여부
         ,#{stockPrsnId}                  --재고담당자ID
         ,#{purcPrsnId}                   --구매담당자ID
         ,#{grStrgeCd}                    --입고창고코드
         ,#{giStrgeCd}                    --출고창고코드
         ,'N'                             --수입검사유형
         ,#{abcInd}                       --ABC CLASS
         ,#{mm3AvgDmndQty}                --3개월평균수요량
         ,#{mm6AvgDmndQty}                --6개월평균수요량
         ,#{mm12AvgDmndQty}               --12개월평균수요량
         ,#{purcReqCnt}                   --구매요청횟수
         ,#{nonMovingFlg}                 --NONMOVINGSTOCK여부
         ,#{befLastGrDt}                  --이전최종입고일자
         ,#{lastGrDt}                     --최종입고일자
         ,#{befLastGiDt}                  --이전최종출고일자
         ,#{lastGiDt}                     --최종출고일자
         ,#{recomRtprcAmt}                --권장소비자가격금액
         ,#{movingAvgPrc}                 --이동평균가격
         ,#{carlineCd}                    --차종코드
         ,#{carlineCd2}                   --차종코드2_적용차종
         ,#{brandCd}                      --브랜드코드
         ,#{stdrdStockQty}                --적정재고량
         ,#{stdrdStockApplyRate}          --적정재고적용율
         ,#{comCarlineNm}                 --공용차종명
         ,#{prndYn}                       --단종여부
         ,#{dgrItemYn}                    --위험품여부
         ,#{bpCd}                         --거래처코드
         ,#{modelCd}                      --모델코드
         ,#{lastGrAmt}                    --최종입고금액
         ,#{maxSftyStockQty}              --최대안전재고수량
         ,#{dlrSelfItemNm}                --딜러자체품목명
         ,#{remark}                       --비고
         ,#{mjrUseYn}                     --주사용여부
         ,#{mjrErrYn}                     --주고장여부
         ,SYSDATE                         --갱신일자
         ,#{locCd}                        --위치코드
         ,#{etcCd1}
         ,#{etcCd2}
         ,#{etc1}
         ,#{etc2}
         ,#{etc3}
         ,#{etc4}
         ,#{itemDstinAmosCd}              --AMOS품목유형
         ,#{regUsrId}                     --등록자ID
         ,SYSDATE                         --등록일자
         ,#{regUsrId}                     --등록자ID
         ,SYSDATE                         --등록일자
        )
    </insert>

    <!-- 부품마스터를 수정한다. -->
    <update id="updateItemMaster" parameterType="ItemMasterVO">
        /* [chn.bhmc.dms.par.pmm.service.dao.ItemMasterDao.updateItemMaster] */
        UPDATE DMSDB.PT_0201T    --부품마스터
          SET
               ITEM_NM                = #{itemNm}                       --품목명
              ,ITEM_EN_NM             = #{itemEnNm}                     --품목영문명
              ,ITEM_DSTIN_CD          = #{itemDstinCd}                  --품목구분코드
              ,ITEM_GRP_CD            = #{itemGrpCd}                    --품목그룹코드
              ,END_YN                 = NVL(#{endYn},'N')               --종료여부(사용중지여부)
              ,START_DT               = #{startDt}                      --시작일자
              ,END_DT                 = #{endDt}                        --종료일자
              ,OLD_RPLC_ITEM_CD       = #{oldRplcItemCd}                --구형대체품목코드
              ,NEW_RPLC_ITEM_CD       = #{newRplcItemCd}                --신규대체품목코드
              ,OLD_RPLC_PAR_CMPT_YN   = NVL(#{oldRplcParCmptYn},'N')    --구형대체부품호환여부
              ,NEW_RPLC_PAR_CMPT_YN   = NVL(#{newRplcParCmptYn},'N')    --신규대체부품호환여부
              ,SUC_CD                 = #{sucCd}                        --SUC코드
              ,LAST_CMPT_ITEM_CD      = #{lastCmptItemCd}               --최종호환품목코드
              ,CAR_USE_UNIT_CNT       = #{carUseUnitCnt}                --차량사용단위수
              ,MOBIS_IMP_LOCAL_YN_TP  = #{mobisImpLocalYnTp}            --모비스수입로컬여부유형
              ,PAR_SPEC_CD            = #{parSpecCd}                    --부품특성코드
              ,PNC_CD                 = #{pncCd}                        --PNC코드
              ,STOCK_UNIT_CD          = #{stockUnitCd}                  --재고단위코드
              ,FILE_DOC_NO            = #{fileDocNo}                    --첨부문서번호
              ,PURC_LEAD_HM           = #{purcLeadHm}                   --구매리드시간
              ,MIN_PURC_QTY           = #{minPurcQty}                   --최소구매수량
              ,STDRD_STOCK_CALC_YN    = NVL(#{stdrdStockCalcYn},'N')    --적정재고산출여부
              ,SFTY_STOCK_QTY         = #{sftyStockQty}                 --안전재고수량(최소)
              ,PURC_CQTY_CALC_YN      = NVL(#{purcCqtyCalcYn},'N')      --구매소요량산출여부
              ,STOCK_PRSN_ID          = #{stockPrsnId}                  --재고담당자ID
              ,PURC_PRSN_ID           = #{purcPrsnId}                   --구매담당자ID
              ,GR_STRGE_CD            = #{grStrgeCd}                    --입고창고코드
              ,GI_STRGE_CD            = #{giStrgeCd}                    --출고창고코드
              ,ABC_IND                = #{abcInd}                       --ABC CLASS
              ,MM3_AVG_DMND_QTY       = #{mm3AvgDmndQty}                --3개월평균수요량
              ,MM6_AVG_DMND_QTY       = #{mm6AvgDmndQty}                --6개월평균수요량
              ,MM12_AVG_DMND_QTY      = #{mm12AvgDmndQty}               --12개월평균수요량
              ,NON_MOVING_FLG         = NVL(#{nonMovingFlg},'N')        --NONMOVINGSTOCK여부
              ,LAST_GR_DT             = #{lastGrDt}                     --최종입고일자
              ,LAST_GI_DT             = #{lastGiDt}                     --최종출고일자
              ,IMP_TEST_TP            = NVL(#{impTestTp},'N')           --수입검사유형
              ,CARLINE_CD             = #{carlineCd}                    --차종코드
              ,CARLINE_CD2            = #{carlineCd2}                   --차종코드2_적용차종
              ,BRAND_CD               = #{brandCd}                      --브랜드코드
              ,STDRD_STOCK_QTY        = #{stdrdStockQty}                --적정재고량
              ,STDRD_STOCK_APPLY_RATE = #{stdrdStockApplyRate}          --적정재고적용율
              ,COM_CARLINE_NM         = #{comCarlineNm}                 --공용차종명
              ,PRND_YN                = NVL(#{prndYn},'N')              --단종여부
              ,DGR_ITEM_YN            = NVL(#{dgrItemYn},'N')           --위험품여부
              ,BP_CD                  = #{bpCd}                         --거래처코드
              ,MAX_SFTY_STOCK_QTY     = #{maxSftyStockQty}              --최대안전재고수량
              ,REMARK                 = #{remark}                       --비고
              ,DLR_SELF_ITEM_NM       = #{dlrSelfItemNm}                --딜러자체품목명
              ,PAINT_YN               = NVL(#{paintYn},'N')             --도색여부
              ,MIN_PACK_QTY           = #{minPackQty}                   --최소포장수량
              ,MJR_USE_YN             = NVL(#{mjrUseYn},'N')            --주사용여부
              ,MJR_ERR_YN             = NVL(#{mjrErrYn},'N')            --주고장여부
              ,RENEW_DT = SYSDATE                                       --갱신일자
              ,LOC_CD  = #{locCd}                                       --위치코드
              ,ETC_CD1 = #{etcCd1}
              ,ETC_CD2 = #{etcCd2}
              ,ETC1    = #{etc1}
              ,ETC2    = #{etc2}
              ,ETC3    = #{etc3}
              ,ETC4    = #{etc4}
              ,ITEM_DSTIN_AMOS_CD = #{itemDstinAmosCd}                  --AMOS품목유형
              ,UPDT_USR_ID            = #{regUsrId}                     --수정자ID
              ,UPDT_DT                = SYSDATE                         --수정일자
         WHERE DLR_CD               = #{dlrCd}                          --딜러코드
           AND ITEM_CD              = #{itemCd}                         --품목코드
    </update>

    <!-- 부품마스터를 삭제한다. -->
    <update id="deleteItemMaster" parameterType="ItemMasterVO">
        /* [chn.bhmc.dms.par.pmm.service.dao.ItemMasterDao.deleteItemMaster] */
        UPDATE DMSDB.PT_0201T    --부품마스터
          SET  END_YN                 = 'Y'                             --종료여부(사용중지여부)
              ,END_DT                 = sysdate                         --종료일자
              ,UPDT_USR_ID            = #{regUsrId}                     --수정자ID
              ,UPDT_DT                = SYSDATE                         --수정일자
         WHERE DLR_CD               = #{dlrCd}                          --딜러코드
           AND ITEM_CD              = #{itemCd}                         --품목코드
    </update>

    <!-- 액셀 부품마스터를 추가한다. -->
    <insert id="insertItemMasterExcel" parameterType="ItemMasterExcelVO">
        /* [chn.bhmc.dms.par.pmm.service.dao.ItemMasterDao.insertItemMasterExcel] */
        INSERT INTO DMSDB.PT_0201T
        (
            DLR_CD
            ,ITEM_CD
            ,ITEM_NM
            ,BRAND_CD
            ,START_DT
            ,CARLINE_CD
            ,DGR_ITEM_YN
            ,SFTY_STOCK_QTY
            ,STOCK_UNIT_CD
            ,ITEM_DSTIN_CD
            ,GR_STRGE_CD
            ,GI_STRGE_CD
            ,OLD_RPLC_ITEM_CD
            ,NEW_RPLC_ITEM_CD
            ,OLD_RPLC_PAR_CMPT_YN
            ,NEW_RPLC_PAR_CMPT_YN
            ,SPYR_CD
            ,END_YN
            ,STDRD_STOCK_CALC_YN
            ,PURC_CQTY_CALC_YN
            ,IMP_TEST_TP
            ,NON_MOVING_FLG
            ,LOCAL_ITEM_IF_YN
            ,PAINT_YN
            ,MJR_USE_YN
            ,MJR_ERR_YN
            ,REG_USR_ID
            ,REG_DT
            ,UPDT_USR_ID
            ,UPDT_DT
        )
        VALUES
        (
            #{dlrCd}
            ,#{itemCd}
            ,#{itemNm}
            ,#{brandCd}
            ,TO_DATE(#{startDt}, 'YYYYMMDD')
            ,#{carlineCd}
            ,#{dgrItemYn}
            ,#{sftyStockQty}
            ,#{stockUnitCd}
            ,#{itemDstinCd}
            ,#{grStrgeCd}
            ,#{giStrgeCd}
            ,#{oldRplcItemCd}
            ,#{newRplcItemCd}
            ,#{oldRplcParCmptYn}
            ,#{newRplcParCmptYn}
            ,'02'--LOCAL
            ,'N'
            ,'N'
            ,'N'
            ,'N'
            ,'N'
            ,'N'
            ,'N'
            ,'N'
            ,'N'
            ,#{regUsrId}
            ,SYSDATE
            ,#{regUsrId}
            ,SYSDATE
        )
    </insert>

    <!-- 액셀 부품마스터를 수정한다. -->
    <update id="updateItemMasterExcel" parameterType="ItemMasterExcelVO">
        /* [chn.bhmc.dms.par.pmm.service.dao.ItemMasterDao.updateItemMasterExcel] */
        UPDATE DMSDB.PT_0201T    --부품마스터
          SET
              ITEM_NM = #{itemNm}                               --품목명
              ,BRAND_CD = #{brandCd}                            --브랜드코드
              ,CARLINE_CD = #{carlineCd}                        --차종코드
              ,START_DT = TO_DATE(#{startDt})                   --시작일자
              ,STOCK_UNIT_CD = #{stockUnitCd}                   --재고단위코드
              ,SFTY_STOCK_QTY = #{sftyStockQty}                 --안전재고수량(최소)
              ,OLD_RPLC_ITEM_CD = #{oldRplcItemCd}              --구형대체품목코드
              ,NEW_RPLC_ITEM_CD = #{newRplcItemCd}              --신규대체품목코드
              ,OLD_RPLC_PAR_CMPT_YN = #{oldRplcParCmptYn}       --구형대체부품호환여부
              ,NEW_RPLC_PAR_CMPT_YN = #{newRplcParCmptYn}       --신규대체부품호환여부
              ,UPDT_USR_ID = #{regUsrId}                        --수정자ID
              ,UPDT_DT = SYSDATE                                --수정일자
         WHERE DLR_CD = #{dlrCd}                                --딜러코드
         AND ITEM_CD = #{itemCd}                                --품목코드
    </update>

    <!-- 부품마스터 최근 입고일자를 수정한다. -->
    <update id="updateLastGrDt" parameterType="ItemMasterVO">
        /* [chn.bhmc.dms.par.pmm.service.dao.ItemMasterDao.updateLastGrDt] */
        UPDATE DMSDB.PT_0201T A   --부품마스터
          SET  A.BEF_LAST_GR_DT       = A.LAST_GR_DT                  --이전최종입고일자
              ,A.LAST_GR_DT           = SYSDATE                       --최종입고일자
              ,A.UPDT_USR_ID          = #{regUsrId}                   --수정자ID
              ,A.UPDT_DT              = SYSDATE                       --수정일자
         WHERE A.DLR_CD               = #{dlrCd}                      --딜러코드
           AND A.ITEM_CD              = #{itemCd}                     --품목코드
    </update>

    <!-- 부품마스터 최근 입고단가를 수정한다.(AMT지만 단가다.) -->
    <update id="updateLastGrAmt" parameterType="ItemMasterVO">
        /* [chn.bhmc.dms.par.pmm.service.dao.ItemMasterDao.updateLastGrAmt] */
        UPDATE DMSDB.PT_0201T A   --부품마스터
          SET  A.LAST_GR_AMT          = #{lastGrAmt}                  --최근입고단가
              ,A.UPDT_USR_ID          = #{regUsrId}                   --수정자ID
              ,A.UPDT_DT              = SYSDATE                       --수정일자
         WHERE A.DLR_CD               = #{dlrCd}                      --딜러코드
           AND A.ITEM_CD              = #{itemCd}                     --품목코드
    </update>

    <!-- 부품마스터 로케이션정보를 수정한다. -->
    <update id="updateItemLocCdMaster" parameterType="ItemMasterVO">
        /* [chn.bhmc.dms.par.pmm.service.dao.ItemMasterDao.updateLocCd] */
        UPDATE DMSDB.PT_0201T A   --부품마스터
          SET A.LOC_CD = #{locCd}
              ,A.UPDT_USR_ID = #{regUsrId}
              ,A.UPDT_DT = SYSDATE
         WHERE A.DLR_CD = #{dlrCd}
           AND A.ITEM_CD = #{itemCd}
    </update>

    <!-- 부품마스터 최근 입고일자를 취소한다. -->
    <update id="cancelLastGrDt" parameterType="ItemMasterVO">
        /* [chn.bhmc.dms.par.pmm.service.dao.ItemMasterDao.cancelLastGrDt] */
        UPDATE DMSDB.PT_0201T A   --부품마스터
          SET  A.LAST_GR_DT           = A.BEF_LAST_GR_DT              --최종입고일자
              ,A.UPDT_USR_ID          = #{regUsrId}                   --수정자ID
              ,A.UPDT_DT              = SYSDATE                       --수정일자
         WHERE A.DLR_CD               = #{dlrCd}                      --딜러코드
           AND A.ITEM_CD              = #{itemCd}                     --품목코드
    </update>

    <!-- 부품마스터 최근 출고일자를 수정한다. -->
    <update id="updateLastGiDt" parameterType="ItemMasterVO">
        /* [chn.bhmc.dms.par.pmm.service.dao.ItemMasterDao.updateLastGiDt] */
        UPDATE DMSDB.PT_0201T A   --부품마스터
          SET  A.BEF_LAST_GI_DT = A.LAST_GI_DT                  --이전최종출고일자
              ,A.LAST_GI_DT = SYSDATE                       --최종출고일자
              ,A.UPDT_USR_ID = #{regUsrId}                   --수정자ID
              ,A.UPDT_DT = SYSDATE                       --수정일자
         WHERE A.DLR_CD = #{dlrCd}                      --딜러코드
           AND A.ITEM_CD = #{itemCd}                     --품목코드
    </update>

    <!-- 부품마스터 최근 출고일자를 취소한다. -->
    <update id="cancelLastGiDt" parameterType="ItemMasterVO">
        /* [chn.bhmc.dms.par.pmm.service.dao.ItemMasterDao.cancelLastGiDt] */
        UPDATE DMSDB.PT_0201T A   --부품마스터
          SET  A.LAST_GI_DT = A.BEF_LAST_GI_DT              --최종출고일자
              ,A.UPDT_USR_ID = #{regUsrId}                   --수정자ID
              ,A.UPDT_DT = SYSDATE                       --수정일자
         WHERE A.DLR_CD = #{dlrCd}                      --딜러코드
           AND A.ITEM_CD = #{itemCd}                     --품목코드
    </update>

     <!-- 부품 패키지 헤더 변경에 따른 부품 마스터 정보를 수정한다.(브랜드 및 품목 명칭만) -->
    <update id="updateItemByPackage" parameterType="ItemMasterVO">
        /* [chn.bhmc.dms.par.pmm.service.dao.ItemMasterDao.updateItemByPackage] */
        UPDATE DMSDB.PT_0201T A   --부품마스터
          SET  A.ITEM_NM       = #{itemNm}    --이전최종입고일자
              ,A.BRAND_CD      = #{brandCd}   --최종입고일자
              ,A.UPDT_USR_ID   = #{regUsrId}  --수정자ID
              ,A.UPDT_DT       = SYSDATE      --수정일자
         WHERE A.DLR_CD        = #{dlrCd}     --딜러코드
           AND A.ITEM_CD       = #{itemCd}    --품목코드
    </update>

    <!-- 시스템 설정 정보를 조회한다. -->
    <select id="findByPk" parameterType="string" resultType="ItemMasterVO">
    <![CDATA[
        /* [chn.bhmc.dms.par.pmm.service.dao.ItemMasterDao.findByPk] */
        SELECT *
        FROM CM_SCI01T
        WHERE PREF_KEY = #{value}
    ]]>
    </select>

    <!-- 아이템 목록을 조회한다. -->
    <select id="selectItemHeader" resultType="ItemMasterVO">
        /* [chn.bhmc.dms.par.pmm.service.dao.ItemMasterDao.selectItemHeader] */
        SELECT
             DLR_CD
            ,ITEM_CD
            ,ITEM_NM
            ,TO_CHAR(NVL(UPDT_DT,REG_DT), 'YYYYMMDDHH24MISS') AS UPDT_DT_STR
        FROM PT_0201T
        WHERE DLR_CD = #{dlrCd}
        <if test='spyrCd != null and spyrCd != ""'>
            AND SPYR_CD = #{spyrCd}
        </if>

        <if test='itemCd != null and itemCd != ""'>
            AND ITEM_CD LIKE '%'||#{itemCd}||'%'
       </if>
       <if test='itemNm != null and itemNm != ""'>
            AND ITEM_NM LIKE '%'||#{itemNm}||'%'
       </if>
       <if test='itemKindCd != null and itemKindCd != ""'>
            AND ITEM_KIND_CD = #{itemKindCd}
       </if>

    </select>

    <!-- 부품정보관리 단일 키 조회. -->
    <select id="selectItemMasterByKey" resultType="ItemMasterVO">
        /* [chn.bhmc.dms.par.pmm.service.dao.ItemMasterDao.selectItemMasterByKey] */
        SELECT
                A.DLR_CD                        --딜러코드
               ,A.ITEM_CD                       --품목코드
               ,A.SPYR_CD                       --공급상코드
               ,A.ITEM_NM                       --품목명
               ,A.ITEM_EN_NM                    --품목영문명
               ,A.ITEM_DSTIN_CD                 --품목구분코드
               ,A.ITEM_GRP_CD                   --품목그룹코드
               ,A.HS_CD                         --HS코드
               ,A.END_YN                        --종료여부(사용중지여부)
               ,A.START_DT                      --시작일자
               ,A.END_DT                        --종료일자
               ,A.PRE_ITEM_CD                   --기존품목코드
               ,A.OLD_RPLC_ITEM_CD              --구형대체품목코드
               ,A.NEW_RPLC_ITEM_CD              --신규대체품목코드
               ,A.OLD_RPLC_PAR_CMPT_YN          --구형대체부품호환여부
               ,A.NEW_RPLC_PAR_CMPT_YN          --신규대체부품호환여부
               ,A.SUC_CD                        --SUC코드
               ,A.LAST_CMPT_ITEM_CD             --최종호환품목코드
               ,A.CAR_USE_UNIT_CNT              --차량사용단위수
               ,A.MOBIS_IMP_LOCAL_YN_TP         --모비스수입로컬여부유형
               ,A.PAR_SPEC_CD                   --부품특성코드
               ,A.PNC_CD                        --PNC코드
               ,A.STOCK_UNIT_CD                 --재고단위코드
               ,A.ITEM_LGTH_VAL                 --품목길이값
               ,A.ITEM_WIDTH_VAL                --품목폭값
               ,A.ITEM_HGTH_VAL                 --품목높이값
               ,A.WEIGHT_UNIT_CD                --중량단위코드
               ,A.TOT_WEIGHT_VAL                --총중량값
               ,A.NET_WEIGHT_VAL                --순중량값
               ,A.ITEM_BARS_CD                  --품목바코드
               ,A.ITEM_QR_CD                    --품목QR코드
               ,A.FILE_DOC_NO                   --첨부문서번호
               ,A.PURC_LEAD_HM                  --구매리드시간
               ,A.CQTY_RAISE_TP                 --소요량올림유형
               ,A.MIN_PURC_QTY                  --최소구매수량
               ,A.STDRD_STOCK_CALC_YN           --적정재고산출여부
               ,A.SFTY_STOCK_QTY                --안전재고수량(최소)
               ,A.PURC_CQTY_CALC_YN             --구매소요량산출여부
               ,A.STOCK_PRSN_ID                 --재고담당자ID
               ,A.PURC_PRSN_ID                  --구매담당자ID
               ,A.GR_STRGE_CD                   --입고창고코드
               ,A.GI_STRGE_CD                   --출고창고코드
               ,A.IMP_TEST_TP                   --수입검사유형
               ,A.ABC_IND                       --ABC CLASS
               ,A.MM3_AVG_DMND_QTY              --3개월평균수요량
               ,A.MM6_AVG_DMND_QTY              --6개월평균수요량
               ,A.MM12_AVG_DMND_QTY             --12개월평균수요량
               ,A.PURC_REQ_CNT                  --구매요청횟수
               ,A.NON_MOVING_FLG                --NONMOVINGSTOCK여부
               ,A.BEF_LAST_GR_DT                --이전최종입고일자
               ,A.LAST_GR_DT                    --최종입고일자
               ,A.BEF_LAST_GI_DT                --이전최종출고일자
               ,A.LAST_GI_DT                    --최종출고일자
               ,A.LOCAL_ITEM_IF_YN              --로컬품목연계여부
               ,A.RECOM_RTPRC_AMT               --권장소비자가격금액
               ,A.REG_USR_ID                    --등록자ID
               ,A.REG_DT                        --등록일자
               ,A.UPDT_USR_ID                   --수정자ID
               ,A.UPDT_DT                       --수정일자
               ,NVL(D.MOVING_AVG_PRC, A.MOVING_AVG_PRC) AS MOVING_AVG_PRC                --이동평균가격
               ,A.CARLINE_CD                    --차종코드
               ,A.CARLINE_CD2                   --차종코드2_적용차종
               ,A.BRAND_CD                      --브랜드코드
               ,A.STDRD_STOCK_QTY               --적정재고량
               ,A.STDRD_STOCK_APPLY_RATE        --적정재고적용율
               ,A.COM_CARLINE_NM                --공용차종명
               ,A.PRND_YN                       --단종여부
               ,A.DGR_ITEM_YN                   --위험품여부
               ,A.MODEL_CD                      --모델코드
               ,A.LAST_GR_AMT                   --최종입고금액
               ,A.MAX_SFTY_STOCK_QTY            --최대안전재고수량
               ,A.DLR_SELF_ITEM_NM              --딜러자체품목명
               ,A.REMARK                        --비고
               ,A.BP_CD                         --업체코드
               ,B.BP_NM                         --업체명
               ,B.BP_TP                         --업체명
               ,A.MJR_USE_YN                    --주사용여부
               ,A.MJR_ERR_YN                    --주고장여부
               ,A.RENEW_DT                      --갱신일자
               ,F.LOC_CD                        --위치코드
               ,NVL(C.AVLB_STOCK_QTY,0) + NVL(C.RESV_STOCK_QTY,0) AS TOT_STOCK_QTY  --총재고수량(총재고는 실재고 + 예류수량만임(민준차장))
               ,NVL(C.AVLB_STOCK_QTY,0) + NVL(C.RESV_STOCK_QTY,0) - NVL(C.BORROW_QTY,0) + NVL(C.RENT_QTY,0) AS STRGE_STOCK_QTY  --재고수량
               ,NVL(C.AVLB_STOCK_QTY,0) AS AVLB_STOCK_QTY   --가용수량
               ,NVL(C.RESV_STOCK_QTY,0) AS RESV_STOCK_QTY   --예류수량
               ,NVL(C.BORROW_QTY,0) AS BORROW_QTY           --차입수량
               ,NVL(C.RENT_QTY,0) AS RENT_QTY               --대여수량(차출)
               ,A.ETC_CD1
               ,A.ETC_CD2
               ,A.ETC1
               ,A.ETC2
               ,A.ETC3
               ,A.ETC4
               ,A.ITEM_DSTIN_AMOS_CD
               ,E.STRGE_CD_LIST
               ,TO_CHAR(NVL(A.UPDT_DT,A.REG_DT), 'YYYYMMDDHH24MISS') AS UPDT_DT_STR
          FROM  DMSDB.PT_0201T A
          LEFT OUTER JOIN PT_0211T B ON A.DLR_CD = B.DLR_CD AND A.BP_CD  = B.BP_CD
          LEFT JOIN PT_0301T C ON A.DLR_CD = C.DLR_CD AND C.PLT_CD = #{sPltCd} AND A.GR_STRGE_CD = C.STRGE_CD AND A.ITEM_CD = C.ITEM_CD
          LEFT OUTER JOIN PT_0208T D ON A.DLR_CD = D.DLR_CD AND A.GI_STRGE_CD = D.STRGE_CD AND A.ITEM_CD = D.ITEM_CD
          LEFT OUTER JOIN
              (
                    SELECT
                         A.DLR_CD
                        ,A.ITEM_CD
                        ,SUBSTR(xmlagg(xmlelement(a,','||B.STRGE_NM) ORDER BY A.ITEM_CD,A.STRGE_CD).extract('//text()'),2) AS STRGE_CD_LIST
                    FROM PT_0301T A
                            LEFT OUTER JOIN CM_0104T B
                                ON A.DLR_CD    = B.DLR_CD
                               AND A.STRGE_CD  = B.STRGE_CD
                   WHERE A.DLR_CD  = #{sDlrCd}
                    GROUP BY A.DLR_CD ,A.ITEM_CD
                ) E ON A.DLR_CD = E.DLR_CD AND A.ITEM_CD = E.ITEM_CD
           LEFT JOIN PT_0224T F ON A.DLR_CD = F.DLR_CD AND A.GI_STRGE_CD = F.STRGE_CD AND A.ITEM_CD = F.ITEM_CD  AND F.LOC_CD != ''
          WHERE A.DLR_CD = #{sDlrCd}
          AND A.ITEM_CD = #{sItemCd}
    </select>

    <!--부품정보관리 모바일 단일 정보 조회. -->
    <select id="selectMobileItemMasterByKey" resultType="ItemMasterVO">
        /* [chn.bhmc.dms.par.pmm.service.dao.ItemMasterDao.selectMobileItemMasterByKey] */
        SELECT
            A.DLR_CD                      --딜러코드
            ,A.ITEM_CD                     --품목코드
            ,(SELECT CMM_CD_NM FROM CM_0303T WHERE CMM_GRP_CD = 'PAR102' AND CMM_CD = A.SPYR_CD  ) AS SPYR_CD                     --공급상
            ,A.ITEM_NM                     --품목명
            ,A.ITEM_EN_NM                  --품목영문명
            ,(SELECT CMM_CD_NM FROM CM_0303T WHERE CMM_GRP_CD = 'PAR101' AND CMM_CD = A.ITEM_DSTIN_CD  ) AS ITEM_DSTIN_CD               --품목구분코드
            ,B.ITEM_GRP_NM AS ITEM_GRP_CD                 --품목그룹코드
            ,A.HS_CD                       --HS코드
            ,A.END_YN                      --종료여부
            ,A.START_DT                    --시작일자
            ,A.END_DT                      --종료일자
            ,A.PRE_ITEM_CD                 --기존품목코드
            ,A.OLD_RPLC_ITEM_CD            --구형대체품목코드
            ,A.NEW_RPLC_ITEM_CD            --신규대체품목코드
            ,A.OLD_RPLC_PAR_CMPT_YN        --구형대체부품호환여부
            ,A.NEW_RPLC_PAR_CMPT_YN        --신규대체부품호환여부
            ,(SELECT CMM_CD_NM FROM CM_0303T WHERE CMM_GRP_CD = 'PAR105' AND CMM_CD = A.SUC_CD  ) AS SUC_CD                      --SUC코드
            ,A.LAST_CMPT_ITEM_CD           --최종호환품목코드
            ,A.CAR_USE_UNIT_CNT            --차량사용단위수
            ,(SELECT CMM_CD_NM FROM CM_0303T WHERE CMM_GRP_CD = 'PAR106' AND CMM_CD = A.MOBIS_IMP_LOCAL_YN_TP  ) AS MOBIS_IMP_LOCAL_YN_TP       --모비스수입로컬여부유형
            ,(SELECT CMM_CD_NM FROM CM_0303T WHERE CMM_GRP_CD = 'PAR104' AND CMM_CD = A.PAR_SPEC_CD  ) AS PAR_SPEC_CD                 --부품특성코드
            ,A.PNC_CD                      --PNC코드
            ,E.UNIT_EXT_CD AS STOCK_UNIT_CD               --재고단위코드
            ,A.ITEM_LGTH_VAL               --품목길이값
            ,A.ITEM_WIDTH_VAL              --품목폭값
            ,A.ITEM_HGTH_VAL               --품목높이값
            ,A.WEIGHT_UNIT_CD              --중량단위코드
            ,A.TOT_WEIGHT_VAL              --총중량값
            ,A.NET_WEIGHT_VAL              --순중량값
            ,A.FILE_DOC_NO                 --첨부문서번호
            ,A.PURC_LEAD_HM                --구매리드타임
            ,A.CQTY_RAISE_TP               --소요량올림유형
            ,A.MIN_PURC_QTY                --최소구매수량
            ,A.STDRD_STOCK_CALC_YN         --적정재고산출여부
            ,A.SFTY_STOCK_QTY              --안전재고수량
            ,A.STDRD_STOCK_QTY             --적정재고수량
            ,A.STDRD_STOCK_APPLY_RATE      --적정재고적용여부
            ,A.PURC_CQTY_CALC_YN           --구매소요량산출여부
            ,A.STOCK_PRSN_ID               --재고담당자명
            ,A.PURC_PRSN_ID                --구매담당자명
            ,C.STRGE_NM AS GR_STRGE_CD                 --입고창고코드
            ,D.STRGE_NM AS GI_STRGE_CD                 --출고창고코드
            ,A.IMP_TEST_TP                 --수입검사유형
            ,A.ABC_IND                     --ABC CLASS
            ,A.MM3_AVG_DMND_QTY            --3개월평균수요
            ,A.MM6_AVG_DMND_QTY            --6개월평균수요
            ,A.MM12_AVG_DMND_QTY           --12개월평균수요
            ,A.PURC_REQ_CNT                --구매요청횟수
            ,A.NON_MOVING_FLG              --NONMOVINGSTOCK여부
            ,A.BEF_LAST_GR_DT              --이전최종입고일자
            ,A.LAST_GR_DT                  --최종입고일자
            ,A.BEF_LAST_GI_DT              --이전최종출고일자
            ,A.LAST_GI_DT                  --최종출고일자
            ,A.LOCAL_ITEM_IF_YN            --로컬품목연계여부
            ,A.RECOM_RTPRC_AMT             --권장소비자가격금액
            ,(SELECT CMM_CD_NM FROM CM_0303T WHERE CMM_GRP_CD = 'COM019' AND CMM_CD = A.BRAND_CD  ) AS BRAND_CD                    --브랜드
            ,A.MJR_USE_YN                    --주사용여부
            ,A.MJR_ERR_YN                    --주고장여부
            ,F.LOC_CD                        --위치코드
            ,A.ETC_CD1
            ,A.ETC_CD2
            ,A.ETC1
            ,A.ETC2
            ,A.ETC3
            ,A.ETC4
            ,A.REG_USR_ID                  --등록자ID
            ,A.REG_DT                      --등록일자
            ,A.UPDT_USR_ID                 --수정자ID
            ,A.UPDT_DT                     --수정일자
            ,TO_CHAR(NVL(A.UPDT_DT,A.REG_DT), 'YYYYMMDDHH24MISS') AS UPDT_DT_STR
        FROM DMSDB.PT_0201T A    --부품마스터
        LEFT JOIN DMSDB.PT_0101T B ON A.DLR_CD = B.DLR_CD AND A.ITEM_DSTIN_CD = B.ITEM_DSTIN_CD AND A.ITEM_GRP_CD = B.ITEM_GRP_CD
        LEFT JOIN CM_0104T C ON A.DLR_CD = C.DLR_CD AND A.GR_STRGE_CD = C.STRGE_CD
        LEFT JOIN CM_0104T D ON A.DLR_CD = D.DLR_CD AND A.GI_STRGE_CD = D.STRGE_CD
        LEFT JOIN CM_0207T E ON A.STOCK_UNIT_CD = E.UNIT_CD
        LEFT JOIN PT_0224T F ON A.DLR_CD = F.DLR_CD AND A.GI_STRGE_CD = F.STRGE_CD AND A.ITEM_CD = F.ITEM_CD  AND F.LOC_CD != ''
        WHERE A.DLR_CD  = #{sDlrCd}
        AND A.ITEM_CD = #{sItemCd}
    </select>

    <!-- 액셀다운로드 부품정보관리 리스트를 조회한다. -->
    <select id="selectItemMastersExcelDownByCondition" parameterType="ItemMasterSearchVO" resultType="ItemMasterExcelDownVO">
        /* [chn.bhmc.dms.par.pmm.service.dao.ItemMasterDao.selectItemMastersExcelDownByCondition] */
        SELECT
            A.DLR_CD
            ,A.ITEM_CD
            ,A.SPYR_CD
            ,A.ITEM_NM
            ,A.BRAND_CD
            ,A.ABC_IND
            ,A.CARLINE_CD
            ,A.CARLINE_CD2
            ,B.BP_TP
            ,A.BP_CD
            ,B.BP_NM
            ,NVL(A.OLD_RPLC_ITEM_CD,' ') AS OLD_RPLC_ITEM_CD
            ,NVL(A.NEW_RPLC_ITEM_CD,' ') AS NEW_RPLC_ITEM_CD
            ,NVL(A.OLD_RPLC_PAR_CMPT_YN,'N') AS OLD_RPLC_PAR_CMPT_YN
            ,NVL(A.NEW_RPLC_PAR_CMPT_YN,'N') AS NEW_RPLC_PAR_CMPT_YN
            ,NVL(A.STOCK_UNIT_CD,' ') AS STOCK_UNIT_CD
            ,A.NON_MOVING_FLG
            ,A.ITEM_DSTIN_CD
            ,A.END_YN
            ,NVL(A.DGR_ITEM_YN,'N') AS DGR_ITEM_YN
            ,NVL(A.SFTY_STOCK_QTY,0) AS SFTY_STOCK_QTY
            ,A.RENEW_DT
            ,TO_CHAR(A.START_DT,'YYYYMMDD') AS START_DT
            ,A.END_DT
            ,C.LOC_CD
            ,TO_CHAR(NVL(A.UPDT_DT,A.REG_DT), 'YYYYMMDDHH24MISS') AS UPDT_DT_STR
        FROM PT_0201T A
        LEFT JOIN PT_0211T B ON A.DLR_CD = B.DLR_CD AND A.BP_CD  = B.BP_CD
        LEFT JOIN PT_0224T C
           ON A.DLR_CD = C.DLR_CD AND A.GI_STRGE_CD = C.STRGE_CD AND A.ITEM_CD = C.ITEM_CD  AND C.LOC_CD != ''
        WHERE A.DLR_CD = #{sDlrCd}
        <if test='sItemCd != null and sItemCd != ""'>
            AND A.ITEM_CD LIKE '%'||#{sItemCd}||'%'
        </if>
        <if test='sSpyrCd != null and sSpyrCd != ""'>
            AND A.SPYR_CD = #{sSpyrCd}
        </if>
        <if test='sItemNm != null and sItemNm != ""'>
            AND A.ITEM_NM LIKE '%'||#{sItemNm}||'%'
        </if>
        <if test='sItemDstinCd != null and sItemDstinCd != ""'>
            AND A.ITEM_DSTIN_CD = #{sItemDstinCd}
        </if>
        <if test='sPackage != null and sPackage != ""'>
            AND A.ITEM_DSTIN_CD in ('04', '06')
        </if>
        <if test='sItemGrpCd != null and sItemGrpCd != ""'>
            AND A.ITEM_GRP_CD = #{sItemGrpCd}
        </if>
        <if test='sCarlineCd != null and sCarlineCd != ""'>
            AND A.CARLINE_CD = #{sCarlineCd}
        </if>
        <if test='sCarlineCd2 != null and sCarlineCd2 != ""'>
            AND A.CARLINE_CD2 = #{sCarlineCd2}
        </if>
        <if test='sBpTp != null and sBpTp != ""'>
            AND B.BP_TP = #{sBpTp}
        </if>
        <if test='sBrandCd != null and sBrandCd != ""'>
            AND A.BRAND_CD = #{sBrandCd}
        </if>
        <if test='sBpNm != null and sBpNm != ""'>
            AND B.BP_NM = #{sBpNm}
        </if>
        <if test='sAbcInd != null and sAbcInd != ""'>
            AND A.ABC_IND = #{sAbcInd}
        </if>
        AND A.ITEM_DSTIN_CD NOT IN ('04', '20') <!-- 부품구분(패킺지, 판매용품) 제외 -->
        ORDER BY
        <choose>
            <when test='sort != null'>
            <foreach item="item" index="index" collection="sort" open="" separator="," close="">
                <choose>
                    <when test='item.field == "itemCd"'>A.ITEM_CD <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                    <when test='item.field == "itemNm"'>A.ITEM_NM <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                    <otherwise>
                        A.DLR_CD ASC,A.ITEM_CD ASC
                    </otherwise>
                </choose>
            </foreach>
            </when>
         <otherwise>
            A.DLR_CD ASC ,A.ITEM_CD ASC
         </otherwise>
        </choose>
    </select>

    <!-- 부품마스터 리스트 조회. -->
    <select id="selectItemMastersByCondition" parameterType="ItemMasterSearchVO" resultType="ItemMasterVO">
        /* [chn.bhmc.dms.par.pmm.service.dao.ItemMasterDao.selectItemMastersByCondition] */
        SELECT
            *
        FROM(
            SELECT
                ROWNUM AS RNUM
                , T1.*
            FROM
            (
                SELECT
                    A.DLR_CD
                    ,A.ITEM_CD
                    ,A.SPYR_CD
                    ,A.ITEM_NM
                    ,A.ITEM_EN_NM
                    ,A.BRAND_CD
                    ,A.ABC_IND
                    ,A.CARLINE_CD
                    ,A.CARLINE_CD2
                    ,B.BP_TP
                    ,A.BP_CD
                    ,B.BP_NM
                    ,B.BP_FULL_NM
                    ,A.OLD_RPLC_ITEM_CD
                    ,A.NEW_RPLC_ITEM_CD
                    ,A.LAST_CMPT_ITEM_CD
                    ,A.STOCK_UNIT_CD
                    ,A.NON_MOVING_FLG
                    ,A.ITEM_DSTIN_CD
                    ,A.ITEM_DSTIN_AMOS_CD
                    ,A.END_YN
                    ,A.PRND_YN
                    ,A.DGR_ITEM_YN
                    ,A.RENEW_DT
                    ,A.START_DT
                    ,A.END_DT
                    ,D.LOC_CD
                    ,A.ETC_CD1
                    ,A.ETC_CD2
                    ,A.ETC1
                    ,A.ETC2
                    ,A.ETC3
                    ,A.ETC4
                    ,NVL(
                        (SELECT MOVING_AVG_PRC
                          FROM PT_0208T
                         WHERE DLR_CD      = A.DLR_CD
                           AND STRGE_CD    = A.GI_STRGE_CD
                           AND ITEM_CD     = A.ITEM_CD
                       )
                     ,A.MOVING_AVG_PRC) AS MOVING_AVG_PRC                --이동평균가격
                    ,NVL(C.AVLB_STOCK_QTY,0) + NVL(C.RESV_STOCK_QTY,0) - NVL(C.BORROW_QTY,0) + NVL(C.RENT_QTY,0) AS STOCK_QTY
                    ,NVL(C.AVLB_STOCK_QTY,0) AS AVLB_STOCK_QTY
                    ,NVL(C.BORROW_QTY,0) AS BORROW_QTY
                    ,NVL(C.RENT_QTY,0) AS RENT_QTY
                    ,NVL(C.RESV_STOCK_QTY,0) AS RESV_STOCK_QTY
                    ,NVL(A.GR_STRGE_CD,'WHP1') AS GR_STRGE_CD
                    ,TO_CHAR(NVL(A.UPDT_DT,A.REG_DT), 'YYYYMMDDHH24MISS') AS UPDT_DT_STR
                    ,CASE WHEN NVL(E.BMP_PURC_PRC,0) <![CDATA[>]]> 0
                            THEN E.BMP_PURC_PRC
                          ELSE NVL((SELECT NVL(ROUND(LPR_LST_PRC * ( 1 + FN_GET_VAT(null,'ALL')),2),0)
                                  FROM PT_0214I T2
                                 WHERE (LPR_PNO,LPR_APL_DT) IN (
                                            SELECT LPR_PNO,
                                                   MAX(LPR_APL_DT) AS LPR_APL_DT
                                              FROM PT_0214I T3
                                             WHERE TRIM(T3.LPR_PNO) = A.ITEM_CD
                                          GROUP BY LPR_PNO)),
                               (SELECT NVL(ROUND(T.APCP_PRICE_NAT_AMT * ( 1 + FN_GET_VAT(null,'ALL')),2),0)
                                  FROM PT_0216I T
                                 WHERE (APCP_PART_NO,APCP_APPLY_DATE) IN (
                                          SELECT APCP_PART_NO,
                                                 MAX(APCP_APPLY_DATE) AS APCP_APPLY_DATE
                                            FROM PT_0216I I
                                           WHERE I.APCP_PART_NO = A.ITEM_CD
                                        GROUP BY APCP_PART_NO )
                               )
                     ) END  BMP_PURC_PRC
                    ,E.TAX_DDCT_GRTE_PRC
                    ,E.GRTE_PRC
                    ,ROUND(NVL(A.RECOM_RTPRC_AMT,0) * ( 1 + FN_GET_VAT(null,'ALL')),2) AS RECOM_RTPRC_AMT
                    ,A.SUC_CD
                    ,A.PTR_SPEC_MEMO
                    ,( 1 + FN_GET_VAT(null,'ALL')) AS TAX_RATE <!-- 税率 贾明 2019-3-25 为计算pwa申请配件项目 配件金额-->
                FROM DMSDB.PT_0201T A
                LEFT JOIN PT_0211T B ON A.DLR_CD = B.DLR_CD AND A.BP_CD  = B.BP_CD
                LEFT JOIN (
                    SELECT
                        ITEM_CD
                        ,SUM(AVLB_STOCK_QTY) AS AVLB_STOCK_QTY
                        ,SUM(RESV_STOCK_QTY) AS RESV_STOCK_QTY
                        ,SUM(BORROW_QTY) AS BORROW_QTY
                        ,SUM(RENT_QTY) AS RENT_QTY
                    FROM PT_0301T
                    WHERE DLR_CD = #{sDlrCd}
                    GROUP BY ITEM_CD
                ) C ON A.ITEM_CD = C.ITEM_CD
                LEFT JOIN PT_0224T D
                   ON A.DLR_CD = D.DLR_CD AND A.GI_STRGE_CD = D.STRGE_CD AND A.ITEM_CD = D.ITEM_CD AND D.LOC_CD != ''
                LEFT JOIN
                (
                    SELECT
                        DLR_CD
                        ,ITEM_CD
                        ,MAX(PRC_TP) AS PRC_TP
                        ,MAX(LINE_NO) AS LINE_NO
                        ,MAX(NVL(SALE_PRC_AMT,0)) AS BMP_PURC_PRC
                        ,MAX(NVL(TAX_DDCT_GRTE_PRC,0)) AS TAX_DDCT_GRTE_PRC
                        ,MAX(NVL(GRTE_PRC,0)) AS GRTE_PRC
                    FROM PT_0214T
                    WHERE DLR_CD = #{sDlrCd}
                    AND NVL(DEL_YN,'N') != 'Y'
                    GROUP BY DLR_CD, ITEM_CD
                ) E ON A.DLR_CD = E.DLR_CD AND A.ITEM_CD = E.ITEM_CD
                WHERE A.DLR_CD = #{sDlrCd}
                <if test='sItemCd != null and sItemCd != ""'>
                    AND A.ITEM_CD LIKE '%'||#{sItemCd}||'%'
                </if>
                <if test='sItemCdOnly != null and sItemCdOnly != ""'>
                    AND A.ITEM_CD = #{sItemCdOnly}
                </if>
                <if test='sSpyrCd != null and sSpyrCd != ""'>
                    AND A.SPYR_CD = #{sSpyrCd}
                </if>
                <!-- 供应商类型只有BMP和其他，其他类型要包含为空的数据 update by lyy 2018-09-21 start -->
                <if test='sBpTp != null and sBpTp == "01"'>
                    AND B.BP_TP = #{sBpTp}
                </if>
                <if test='sBpTp != null and sBpTp != "01"  and sBpTp != ""'>
                    AND NVL(B.BP_TP,'99') <![CDATA[<>]]> '01'
                </if>
                <!-- 供应商类型只有BMP和其他，其他类型要包含为空的数据 update by lyy 2018-09-21 end -->
                <if test='sItemNm != null and sItemNm != ""'>
                    AND A.ITEM_NM LIKE '%'||#{sItemNm}||'%'
                </if>
                <if test='sItemDstinCd != null and sItemDstinCd != ""'>
                    AND A.ITEM_DSTIN_CD = #{sItemDstinCd}
                </if>
                <if test='sPackage != null and sPackage != ""'>
                    AND A.ITEM_DSTIN_CD in ('04', '06')
                </if>
                <if test='sItemGrpCd != null and sItemGrpCd != ""'>
                    AND A.ITEM_GRP_CD = #{sItemGrpCd}
                </if>
                <if test='sAbcInd != null and sAbcInd != ""'>
                    AND A.ABC_IND = #{sAbcInd}
                </if>
                <if test='sCarlineCd != null and sCarlineCd != ""'>
                    AND A.CARLINE_CD = #{sCarlineCd}
                </if>
                <if test='sCarlineCd2 != null and sCarlineCd2 != ""'>
                    AND A.CARLINE_CD2 = #{sCarlineCd2}
                </if>
                <if test='sBrandCd != null and sBrandCd != ""'>
                    AND A.BRAND_CD = #{sBrandCd}
                </if>
                <if test='sBpCd != null and sBpCd != ""'>
                    AND A.BP_CD LIKE '%'|| #{sBpCd} ||'%'
                </if>
                <if test='sBpNm != null and sBpNm != ""'>
                    AND B.BP_NM LIKE '%'|| #{sBpNm} ||'%'
                </if>
                <if test='sEndYn != null and sEndYn != ""'>
                    AND A.END_YN = #{sEndYn}
                </if>
                <if test='sEtcCd1 != null and sEtcCd1 != ""'>
                    AND A.ETC_CD1 = #{sEtcCd1}
                </if>
                <if test='sEtcCd2 != null and sEtcCd2 != ""'>
                    AND A.ETC_CD2 = #{sEtcCd2}
                </if>
                AND A.ITEM_DSTIN_CD NOT IN ('04', '20') <!-- 부품구분(패키지, 판매용품) 제외 -->
                ORDER BY
                <choose>
                    <when test='sort != null'>
                        <foreach item="item" index="index" collection="sort" open="" separator="," close="">
                        <choose>
                            <when test='item.field == "itemCd"'>A.ITEM_CD <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                            <when test='item.field == "itemNm"'>A.ITEM_NM <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                            <when test='item.field == "itemNmEng"'>A.ITEM_EN_NM <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                            <when test='item.field == "itemDstinCd"'>A.ITEM_DSTIN_CD <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                            <when test='item.field == "brandCd"'>A.BRAND_CD <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                            <when test='item.field == "carlineCd"'>A.CARLINE_CD <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                            <when test='item.field == "carlineCd2"'>A.CARLINE_CD2 <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                            <when test='item.field == "abcInd"'>A.ABC_IND <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                            <when test='item.field == "bpTp"'>A.SPYR_CD <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                            <when test='item.field == "bpCd"'>A.BP_CD <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                            <when test='item.field == "bpNm"'>B.BP_NM <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                            <when test='item.field == "newRplcItemCd"'>A.NEW_RPLC_ITEM_CD <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                            <when test='item.field == "oldRplcItemCd"'>A.OLD_RPLC_ITEM_CD <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                            <when test='item.field == "lastCmptItemCd"'>A.LAST_CMPT_ITEM_CD <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                            <when test='item.field == "stockUnitCd"'>A.STOCK_UNIT_CD <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                            <when test='item.field == "nonMovingFlg"'>A.NON_MOVING_FLAG <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                            <when test='item.field == "endYn"'>A.END_YN <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                            <when test='item.field == "dgrItemYn"'>A.DGR_ITEM_YN <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                            <when test='item.field == "renewDt"'>A.RENEW_DT <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                            <when test='item.field == "updtDt"'>A.UPDT_DT <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                            <when test='item.field == "startDt"'>A.START_DT <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                            <when test='item.field == "endDt"'>A.END_DT <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                            <when test='item.field == "etcCd1"'>A.ETC_CD1 <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                            <when test='item.field == "etcCd2"'>A.ETC_CD2 <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                            <when test='item.field == "etc1"'>A.ETC1 <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                            <when test='item.field == "etc2"'>A.ETC2 <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                            <when test='item.field == "etc3"'>A.ETC3 <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                            <when test='item.field == "etc4"'>A.ETC4 <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                            <otherwise>
                            A.DLR_CD ASC, A.ITEM_CD ASC
                            </otherwise>
                        </choose>
                        </foreach>
                    </when>
                    <otherwise>
                    A.DLR_CD ASC, A.ITEM_CD ASC
                    </otherwise>
                </choose>
            ) T1
            WHERE 1=1
            <if test='firstIndex != -1 and lastIndex != -1'>
               AND ROWNUM <![CDATA[<=]]> #{lastIndex}
            </if>
        )
        <where>
        <if test='firstIndex != -1 and lastIndex != -1'>
            RNUM <![CDATA[>]]> #{firstIndex}
        </if>
        </where>
    </select>

    <!-- 부품마스터 리스트 조회. -->
    <select id="selectPopItemMastersByCondition" parameterType="ItemMasterSearchVO" resultType="ItemMasterVO">
        /* [chn.bhmc.dms.par.pmm.service.dao.ItemMasterDao.selectPopItemMastersByCondition] */
        SELECT
            *
        FROM(
            SELECT
                ROWNUM AS RNUM
                , T1.*
            FROM
            (
                SELECT
                    A.DLR_CD
                    ,A.ITEM_CD
                    ,A.SPYR_CD
                    ,A.ITEM_NM
                    ,A.ITEM_EN_NM
                    ,A.BRAND_CD
                    ,A.ABC_IND
                    ,A.CARLINE_CD
                    ,A.CARLINE_CD2
                    ,B.BP_TP
                    ,A.BP_CD
                    ,B.BP_NM
                    ,B.BP_FULL_NM
                    ,A.OLD_RPLC_ITEM_CD
                    ,A.NEW_RPLC_ITEM_CD
                    ,A.LAST_CMPT_ITEM_CD
                    ,A.STOCK_UNIT_CD
                    ,A.NON_MOVING_FLG
                    ,A.ITEM_DSTIN_CD
                    ,A.ITEM_DSTIN_AMOS_CD
                    ,A.END_YN
                    ,A.PRND_YN
                    ,A.DGR_ITEM_YN
                    ,A.RENEW_DT
                    ,A.START_DT
                    ,A.END_DT
                    ,D.LOC_CD
                    ,A.ETC_CD1
                    ,A.ETC_CD2
                    ,A.ETC1
                    ,A.ETC2
                    ,A.ETC3
                    ,A.ETC4
                    ,NVL(
                        (SELECT MOVING_AVG_PRC
                          FROM PT_0208T
                         WHERE DLR_CD      = A.DLR_CD
                           AND STRGE_CD    = A.GI_STRGE_CD
                           AND ITEM_CD     = A.ITEM_CD
                       )
                     ,A.MOVING_AVG_PRC) AS MOVING_AVG_PRC                --이동평균가격
                    ,NVL(C.AVLB_STOCK_QTY,0) + NVL(C.RESV_STOCK_QTY,0) - NVL(C.BORROW_QTY,0) + NVL(C.RENT_QTY,0) AS STOCK_QTY
                    ,NVL(C.AVLB_STOCK_QTY,0) AS AVLB_STOCK_QTY
                    ,NVL(C.BORROW_QTY,0) AS BORROW_QTY
                    ,NVL(C.RENT_QTY,0) AS RENT_QTY
                    ,NVL(C.RESV_STOCK_QTY,0) AS RESV_STOCK_QTY
                    ,NVL(A.GR_STRGE_CD,'WHP1') AS GR_STRGE_CD
                    , CASE WHEN NVL(TO_CHAR(A.END_DT,'YYYY-MM-DD'),'9999-12-31') <![CDATA[<]]> TO_CHAR(SYSDATE,'YYYY-MM-DD')  THEN 'N' ELSE 'Y' END END_CHK
                FROM DMSDB.PT_0201T A
                LEFT JOIN PT_0211T B ON A.DLR_CD = B.DLR_CD AND A.BP_CD  = B.BP_CD
                LEFT JOIN (
                    SELECT
                        ITEM_CD
                        ,SUM(AVLB_STOCK_QTY) AS AVLB_STOCK_QTY
                        ,SUM(RESV_STOCK_QTY) AS RESV_STOCK_QTY
                        ,SUM(BORROW_QTY) AS BORROW_QTY
                        ,SUM(RENT_QTY) AS RENT_QTY
                    FROM PT_0301T
                    WHERE DLR_CD = #{sDlrCd}
                    GROUP BY ITEM_CD
                ) C ON A.ITEM_CD = C.ITEM_CD
                LEFT JOIN PT_0224T D
                   ON A.DLR_CD = D.DLR_CD AND A.GI_STRGE_CD = D.STRGE_CD AND A.ITEM_CD = D.ITEM_CD AND D.LOC_CD != ''
                WHERE A.DLR_CD = #{sDlrCd}
                <if test='sItemCd != null and sItemCd != ""'>
                    AND A.ITEM_CD LIKE '%'||#{sItemCd}||'%'
                </if>
                <if test='sSpyrCd != null and sSpyrCd != ""'>
                    AND A.SPYR_CD = #{sSpyrCd}
                </if>
                <if test='sBpTp != null and sBpTp != ""'>
                    AND B.BP_TP = #{sBpTp}
                </if>
                <if test='sItemNm != null and sItemNm != ""'>
                    AND A.ITEM_NM LIKE '%'||#{sItemNm}||'%'
                </if>
                <if test='sItemDstinCd != null and sItemDstinCd != ""'>
                    AND A.ITEM_DSTIN_CD = #{sItemDstinCd}
                </if>
                <if test='sPackage != null and sPackage != ""'>
                    AND A.ITEM_DSTIN_CD in ('04', '06')
                </if>
                <if test='sItemGrpCd != null and sItemGrpCd != ""'>
                    AND A.ITEM_GRP_CD = #{sItemGrpCd}
                </if>
                <if test='sAbcInd != null and sAbcInd != ""'>
                    AND A.ABC_IND = #{sAbcInd}
                </if>
                <if test='sCarlineCd != null and sCarlineCd != ""'>
                    AND A.CARLINE_CD = #{sCarlineCd}
                </if>
                <if test='sCarlineCd2 != null and sCarlineCd2 != ""'>
                    AND A.CARLINE_CD2 = #{sCarlineCd2}
                </if>
                <if test='sBrandCd != null and sBrandCd != ""'>
                    AND A.BRAND_CD = #{sBrandCd}
                </if>
                <if test='sBpCd != null and sBpCd != ""'>
                    AND A.BP_CD LIKE '%'|| #{sBpCd} ||'%'
                </if>
                <if test='sBpNm != null and sBpNm != ""'>
                    AND B.BP_NM LIKE '%'|| #{sBpNm} ||'%'
                </if>
                <if test='sEndYn != null and sEndYn != ""'>
                    AND A.END_YN = #{sEndYn}
                </if>
                <if test='sEtcCd1 != null and sEtcCd1 != ""'>
                    AND A.ETC_CD1 = #{sEtcCd1}
                </if>
                <if test='sEtcCd2 != null and sEtcCd2 != ""'>
                    AND A.ETC_CD2 = #{sEtcCd2}
                </if>
                AND A.ITEM_DSTIN_CD NOT IN ('20','04') <!-- 부품구분(판매용품,패키지) 제외 -->
                ORDER BY
                <choose>
                    <when test='sort != null'>
                        <foreach item="item" index="index" collection="sort" open="" separator="," close="">
                        <choose>
                            <when test='item.field == "itemCd"'>A.ITEM_CD <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                            <when test='item.field == "itemNm"'>A.ITEM_NM <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                            <when test='item.field == "itemNmEng"'>A.ITEM_EN_NM <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                            <when test='item.field == "itemDstinCd"'>A.ITEM_DSTIN_CD <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                            <when test='item.field == "brandCd"'>A.BRAND_CD <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                            <when test='item.field == "carlineCd"'>A.CARLINE_CD <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                            <when test='item.field == "carlineCd2"'>A.CARLINE_CD2 <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                            <when test='item.field == "abcInd"'>A.ABC_IND <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                            <when test='item.field == "bpTp"'>A.SPYR_CD <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                            <when test='item.field == "bpCd"'>A.BP_CD <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                            <when test='item.field == "bpNm"'>B.BP_NM <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                            <when test='item.field == "newRplcItemCd"'>A.NEW_RPLC_ITEM_CD <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                            <when test='item.field == "oldRplcItemCd"'>A.OLD_RPLC_ITEM_CD <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                            <when test='item.field == "lastCmptItemCd"'>A.LAST_CMPT_ITEM_CD <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                            <when test='item.field == "stockUnitCd"'>A.STOCK_UNIT_CD <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                            <when test='item.field == "nonMovingFlg"'>A.NON_MOVING_FLAG <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                            <when test='item.field == "endYn"'>A.END_YN <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                            <when test='item.field == "dgrItemYn"'>A.DGR_ITEM_YN <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                            <when test='item.field == "renewDt"'>A.RENEW_DT <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                            <when test='item.field == "updtDt"'>A.UPDT_DT <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                            <when test='item.field == "startDt"'>A.START_DT <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                            <when test='item.field == "endDt"'>A.END_DT <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                            <when test='item.field == "etcCd1"'>A.ETC_CD1 <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                            <when test='item.field == "etcCd2"'>A.ETC_CD2 <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                            <when test='item.field == "etc1"'>A.ETC1 <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                            <when test='item.field == "etc2"'>A.ETC2 <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                            <when test='item.field == "etc3"'>A.ETC3 <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                            <when test='item.field == "etc4"'>A.ETC4 <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                            <otherwise>
                            A.DLR_CD ASC, A.ITEM_CD ASC
                            </otherwise>
                        </choose>
                        </foreach>
                    </when>
                    <otherwise>
                    A.DLR_CD ASC, A.ITEM_CD ASC
                    </otherwise>
                </choose>
            ) T1
            WHERE 1=1
            <if test='firstIndex != -1 and lastIndex != -1'>
               AND ROWNUM <![CDATA[<=]]> #{lastIndex}
            </if>
        )
        <where>
        <if test='firstIndex != -1 and lastIndex != -1'>
            RNUM <![CDATA[>]]> #{firstIndex}
        </if>
        </where>
    </select>

    <!-- 통용부품 리스트 조회. -->
    <select id="selectComItemMastersByCondition" parameterType="ItemMasterSearchVO" resultType="ItemMasterVO">
        /* [chn.bhmc.dms.par.pmm.service.dao.ItemMasterDao.selectComItemMastersByCondition] */
        SELECT
            *
        FROM (
            SELECT
                ROWNUM AS RNUM
                , T1.*
            FROM
            (
                SELECT
                    A.DLR_CD
                    ,A.ITEM_CD
                    ,A.SPYR_CD
                    ,A.ITEM_NM
                    ,A.ITEM_EN_NM
                    ,A.BRAND_CD
                    ,A.ABC_IND
                    ,A.CARLINE_CD
                    ,A.CARLINE_CD2
                    ,B.BP_TP
                    ,A.BP_CD
                    ,B.BP_NM
                    ,B.BP_FULL_NM
                    ,A.OLD_RPLC_ITEM_CD
                    ,A.NEW_RPLC_ITEM_CD
                    ,A.LAST_CMPT_ITEM_CD
                    ,A.STOCK_UNIT_CD
                    ,A.NON_MOVING_FLG
                    ,A.ITEM_DSTIN_CD
                    ,A.ITEM_DSTIN_AMOS_CD
                    ,A.END_YN
                    ,A.DGR_ITEM_YN
                    ,A.RENEW_DT
                    ,A.START_DT
                    ,A.END_DT
                    ,C.STRGE_CD AS GI_STRGE_CD
                    ,D.LOC_CD
                    ,NVL(
                        (SELECT MOVING_AVG_PRC
                          FROM PT_0208T
                         WHERE DLR_CD   = A.DLR_CD
                           AND STRGE_CD = C.STRGE_CD
                           AND ITEM_CD  = A.ITEM_CD
                       )
                     ,A.MOVING_AVG_PRC) AS MOVING_AVG_PRC                --이동평균가격
                    ,NVL(C.AVLB_STOCK_QTY,0) + NVL(C.RESV_STOCK_QTY,0) - NVL(C.BORROW_QTY,0) + NVL(C.RENT_QTY,0) AS TOT_STOCK_QTY
                    ,NVL(C.AVLB_STOCK_QTY,0) AS AVLB_STOCK_QTY
                    ,NVL(C.RESV_STOCK_QTY,0) AS RESV_STOCK_QTY
                    ,NVL(C.CLAM_STOCK_QTY,0) AS CLAM_STOCK_QTY
                    ,NVL(C.GR_SCHE_QTY,0) AS GR_SCHE_QTY
                    ,NVL(C.GI_SCHE_QTY,0) AS GI_SCHE_QTY
                    ,NVL(C.BORROW_QTY,0) AS BORROW_QTY
                    ,NVL(C.RENT_QTY,0) AS RENT_QTY
                FROM
                (
                    SELECT
                        DLR_CD
                        ,ITEM_CD
                        ,STRGE_CD
                        ,SUM(AVLB_STOCK_QTY) AS AVLB_STOCK_QTY
                        ,SUM(RESV_STOCK_QTY) AS RESV_STOCK_QTY
                        ,SUM(CLAM_STOCK_QTY) AS CLAM_STOCK_QTY
                        ,SUM(GR_SCHE_QTY) AS GR_SCHE_QTY
                        ,SUM(GI_SCHE_QTY) AS GI_SCHE_QTY
                        ,SUM(BORROW_QTY) AS BORROW_QTY
                        ,SUM(RENT_QTY) AS RENT_QTY
                    FROM PT_0301T
                    WHERE DLR_CD = #{sDlrCd}
                    GROUP BY DLR_CD , STRGE_CD, ITEM_CD
                ) C
                INNER JOIN CM_0104T I ON C.DLR_CD = I.DLR_CD AND C.STRGE_CD = I.STRGE_CD
                LEFT JOIN PT_0201T A ON C.DLR_CD = A.DLR_CD AND C.ITEM_CD = A.ITEM_CD
                LEFT JOIN PT_0211T B ON A.DLR_CD = B.DLR_CD AND A.BP_CD = B.BP_CD
                LEFT JOIN PT_0224T D
                   ON C.DLR_CD = D.DLR_CD AND C.STRGE_CD = D.STRGE_CD AND C.ITEM_CD = D.ITEM_CD AND D.LOC_CD != ''
                WHERE C.DLR_CD = #{sDlrCd}
                <if test='sItemCd != null and sItemCd != ""'>
                    AND A.ITEM_CD LIKE '%'||#{sItemCd}||'%'
                </if>
                <if test='sSpyrCd != null and sSpyrCd != ""'>
                    AND A.SPYR_CD = #{sSpyrCd}
                </if>
                <if test='sBpTp != null and sBpTp != ""'>
                    AND B.BP_TP = #{sBpTp}
                </if>
                <if test='sItemNm != null and sItemNm != ""'>
                    AND A.ITEM_NM LIKE '%'||#{sItemNm}||'%'
                </if>
                <if test='sItemDstinCd != null and sItemDstinCd != ""'>
                    AND A.ITEM_DSTIN_CD = #{sItemDstinCd}
                </if>
                <if test='sPackage != null and sPackage != ""'>
                    AND A.ITEM_DSTIN_CD in ('04', '06')
                </if>
                <if test='sItemGrpCd != null and sItemGrpCd != ""'>
                    AND A.ITEM_GRP_CD = #{sItemGrpCd}
                </if>
                <if test='sAbcInd != null and sAbcInd != ""'>
                    AND A.ABC_IND = #{sAbcInd}
                </if>
                <if test='sCarlineCd != null and sCarlineCd != ""'>
                    AND A.CARLINE_CD = #{sCarlineCd}
                </if>
                <if test='sCarlineCd2 != null and sCarlineCd2 != ""'>
                    AND A.CARLINE_CD2 = #{sCarlineCd2}
                </if>
                <if test='sBrandCd != null and sBrandCd != ""'>
                    AND A.BRAND_CD = #{sBrandCd}
                </if>
                <if test='sBpNm != null and sBpNm != ""'>
                    AND B.BP_NM LIKE '%'|| #{sBpNm} ||'%'
                </if>
                AND A.ITEM_DSTIN_CD NOT IN ('04','20')<!-- 부품구분(패키지,판매용품) 제외 -->
                ORDER BY
                <choose>
                <when test='sort != null'>
                    <foreach item="item" index="index" collection="sort" open="" separator="," close="">
                    <choose>
                        <when test='item.field == "itemCd"'>A.ITEM_CD <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                        <when test='item.field == "itemNm"'>A.ITEM_NM <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                        <when test='item.field == "itemNmEng"'>A.ITEM_EN_NM <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                        <when test='item.field == "itemDstinCd"'>A.ITEM_DSTIN_CD <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                        <when test='item.field == "brandCd"'>A.BRAND_CD <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                        <when test='item.field == "carlineCd"'>A.CARLINE_CD <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                        <when test='item.field == "carlineCd2"'>A.CARLINE_CD2 <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                        <when test='item.field == "abcInd"'>A.ABC_IND <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                        <when test='item.field == "bpTp"'>A.SPYR_CD <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                        <when test='item.field == "bpCd"'>A.BP_CD <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                        <when test='item.field == "bpNm"'>B.BP_NM <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                        <when test='item.field == "newRplcItemCd"'>A.NEW_RPLC_ITEM_CD <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                        <when test='item.field == "oldRplcItemCd"'>A.OLD_RPLC_ITEM_CD <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                        <when test='item.field == "lastCmptItemCd"'>A.LAST_CMPT_ITEM_CD <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                        <when test='item.field == "stockUnitCd"'>A.STOCK_UNIT_CD <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                        <when test='item.field == "nonMovingFlg"'>A.NON_MOVING_FLAG <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                        <when test='item.field == "endYn"'>A.END_YN <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                        <when test='item.field == "dgrItemYn"'>A.DGR_ITEM_YN <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                        <when test='item.field == "renewDt"'>A.RENEW_DT <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                        <when test='item.field == "updtDt"'>A.UPDT_DT <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                        <when test='item.field == "startDt"'>A.START_DT <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                        <when test='item.field == "endDt"'>A.END_DT <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                        <otherwise>
                        A.DLR_CD ASC, C.STRGE_CD, A.ITEM_CD ASC
                        </otherwise>
                    </choose>
                    </foreach>
                </when>
                <otherwise>
                A.DLR_CD ASC, C.STRGE_CD, A.ITEM_CD ASC
                </otherwise>
                </choose>
            ) T1
            <where>
                <if test='firstIndex != -1 and lastIndex != -1'>
                    ROWNUM <![CDATA[<=]]> #{lastIndex}
                </if>
            </where>
        )
        <where>
            <if test='firstIndex != -1 and lastIndex != -1'>
                RNUM <![CDATA[>]]> #{firstIndex}
            </if>
        </where>
    </select>

    <!-- 부품마스터 카운트 -->
    <select id="selectItemMastersByConditionCnt" resultType="int">
        /* [chn.bhmc.dms.par.pmm.service.dao.ItemMasterDao.selectItemMastersByConditionCnt] */
        SELECT  COUNT(*) AS VALUE
        FROM PT_0201T A
        LEFT JOIN PT_0211T B ON A.DLR_CD = B.DLR_CD AND A.BP_CD  = B.BP_CD
        WHERE A.DLR_CD = #{sDlrCd}
        <if test='sItemCd != null and sItemCd != ""'>
            AND A.ITEM_CD LIKE '%'||#{sItemCd}||'%'
        </if>
        <if test='sItemCdOnly != null and sItemCdOnly != ""'>
            AND A.ITEM_CD = #{sItemCdOnly}
        </if>
        <if test='sSpyrCd != null and sSpyrCd != ""'>
            AND A.SPYR_CD = #{sSpyrCd}
        </if>
        <!-- 供应商类型只有BMP和其他，其他类型要包含为空的数据 update by lyy 2018-09-21 start -->
        <if test='sBpTp != null and sBpTp == "01"'>
            AND B.BP_TP = #{sBpTp}
        </if>
        <if test='sBpTp != null and sBpTp != "01" and sBpTp != ""'>
            AND NVL(B.BP_TP,'99') <![CDATA[<>]]> '01'
        </if>
        <!-- 供应商类型只有BMP和其他，其他类型要包含为空的数据 update by lyy 2018-09-21 end-->
        <if test='sItemNm != null and sItemNm != ""'>
            AND A.ITEM_NM LIKE '%'||#{sItemNm}||'%'
        </if>
        <if test='sItemDstinCd != null and sItemDstinCd != ""'>
            AND A.ITEM_DSTIN_CD = #{sItemDstinCd}
        </if>
        <if test='sPackage != null and sPackage != ""'>
            AND A.ITEM_DSTIN_CD in ('04', '06')
        </if>
        <if test='sItemGrpCd != null and sItemGrpCd != ""'>
            AND A.ITEM_GRP_CD = #{sItemGrpCd}
        </if>
        <if test='sAbcInd != null and sAbcInd != ""'>
            AND A.ABC_IND = #{sAbcInd}
        </if>
        <if test='sCarlineCd != null and sCarlineCd != ""'>
            AND A.CARLINE_CD = #{sCarlineCd}
        </if>
        <if test='sCarlineCd2 != null and sCarlineCd2 != ""'>
            AND A.CARLINE_CD2 = #{sCarlineCd2}
        </if>
        <if test='sBrandCd != null and sBrandCd != ""'>
            AND A.BRAND_CD = #{sBrandCd}
        </if>
        <if test='sBpCd != null and sBpCd != ""'>
            AND A.BP_CD LIKE '%'|| #{sBpCd} ||'%'
        </if>
        <if test='sBpNm != null and sBpNm != ""'>
            AND B.BP_NM LIKE '%'|| #{sBpNm} ||'%'
        </if>
        <if test='sEndYn != null and sEndYn != ""'>
            AND A.END_YN = #{sEndYn}
        </if>
        <if test='sEtcCd1 != null and sEtcCd1 != ""'>
            AND A.ETC_CD1 = #{sEtcCd1}
        </if>
        <if test='sEtcCd2 != null and sEtcCd2 != ""'>
            AND A.ETC_CD2 = #{sEtcCd2}
        </if>
        AND A.ITEM_DSTIN_CD NOT IN ('04', '20') <!-- 부품구분(패키지, 판매용품) 제외 -->
    </select>

    <!-- 부품마스터 카운트 -->
    <select id="selectPopItemMastersByConditionCnt" resultType="int">
        /* [chn.bhmc.dms.par.pmm.service.dao.ItemMasterDao.selectPopItemMastersByConditionCnt] */
        SELECT COUNT(*) AS VALUE
        FROM PT_0201T A
        LEFT JOIN PT_0211T B ON A.DLR_CD = B.DLR_CD AND A.BP_CD = B.BP_CD
        WHERE A.DLR_CD = #{sDlrCd}
        <if test='sItemCd != null and sItemCd != ""'>
            AND A.ITEM_CD LIKE '%'||#{sItemCd}||'%'
        </if>
        <if test='sSpyrCd != null and sSpyrCd != ""'>
            AND A.SPYR_CD = #{sSpyrCd}
        </if>
        <if test='sBpTp != null and sBpTp != ""'>
            AND B.BP_TP = #{sBpTp}
        </if>
        <if test='sItemNm != null and sItemNm != ""'>
            AND A.ITEM_NM LIKE '%'||#{sItemNm}||'%'
        </if>
        <if test='sItemDstinCd != null and sItemDstinCd != ""'>
            AND A.ITEM_DSTIN_CD = #{sItemDstinCd}
        </if>
        <if test='sPackage != null and sPackage != ""'>
            AND A.ITEM_DSTIN_CD in ('04', '06')
        </if>
        <if test='sItemGrpCd != null and sItemGrpCd != ""'>
            AND A.ITEM_GRP_CD = #{sItemGrpCd}
        </if>
        <if test='sAbcInd != null and sAbcInd != ""'>
            AND A.ABC_IND = #{sAbcInd}
        </if>
        <if test='sCarlineCd != null and sCarlineCd != ""'>
            AND A.CARLINE_CD = #{sCarlineCd}
        </if>
        <if test='sCarlineCd2 != null and sCarlineCd2 != ""'>
            AND A.CARLINE_CD2 = #{sCarlineCd2}
        </if>
        <if test='sBrandCd != null and sBrandCd != ""'>
            AND A.BRAND_CD = #{sBrandCd}
        </if>
        <if test='sBpCd != null and sBpCd != ""'>
            AND A.BP_CD LIKE '%'|| #{sBpCd} ||'%'
        </if>
        <if test='sBpNm != null and sBpNm != ""'>
            AND B.BP_NM LIKE '%'|| #{sBpNm} ||'%'
        </if>
        <if test='sEndYn != null and sEndYn != ""'>
            AND A.END_YN = #{sEndYn}
        </if>
        <if test='sEtcCd1 != null and sEtcCd1 != ""'>
            AND A.ETC_CD1 = #{sEtcCd1}
        </if>
        <if test='sEtcCd2 != null and sEtcCd2 != ""'>
            AND A.ETC_CD2 = #{sEtcCd2}
        </if>
        AND A.ITEM_DSTIN_CD NOT IN ('20','04') <!-- 부품구분(판매용품,패키지) 제외 -->
    </select>

    <!-- 통용부품 카운트 -->
    <select id="selectComItemMastersByConditionCnt" resultType="int">
        /* [chn.bhmc.dms.par.pmm.service.dao.ItemMasterDao.selectComItemMastersByConditionCnt] */
        SELECT
            COUNT(*) AS VALUE
        FROM
        (
            SELECT
                DLR_CD
                ,STRGE_CD
                ,ITEM_CD
                ,SUM(AVLB_STOCK_QTY) AS AVLB_STOCK_QTY
                ,SUM(RESV_STOCK_QTY) AS RESV_STOCK_QTY
                ,SUM(BORROW_QTY) AS BORROW_QTY
                ,SUM(RENT_QTY) AS RENT_QTY
            FROM PT_0301T
            WHERE DLR_CD = #{sDlrCd}
            GROUP BY DLR_CD, STRGE_CD, ITEM_CD
        ) C
        INNER JOIN CM_0104T I ON C.DLR_CD = I.DLR_CD AND C.STRGE_CD = I.STRGE_CD
        LEFT JOIN PT_0201T A ON C.DLR_CD = A.DLR_CD AND C.ITEM_CD = A.ITEM_CD
        LEFT JOIN PT_0211T B ON A.DLR_CD = B.DLR_CD AND A.BP_CD  = B.BP_CD
        WHERE C.DLR_CD = #{sDlrCd}
        <if test='sItemCd != null and sItemCd != ""'>
            AND A.ITEM_CD LIKE '%'||#{sItemCd}||'%'
        </if>
        <if test='sSpyrCd != null and sSpyrCd != ""'>
            AND A.SPYR_CD = #{sSpyrCd}
        </if>
        <if test='sBpTp != null and sBpTp != ""'>
            AND B.BP_TP = #{sBpTp}
        </if>
        <if test='sItemNm != null and sItemNm != ""'>
            AND A.ITEM_NM LIKE '%'||#{sItemNm}||'%'
        </if>
        <if test='sItemDstinCd != null and sItemDstinCd != ""'>
            AND A.ITEM_DSTIN_CD = #{sItemDstinCd}
        </if>
        <if test='sPackage != null and sPackage != ""'>
            AND A.ITEM_DSTIN_CD in ('04', '06')
        </if>
        <if test='sItemGrpCd != null and sItemGrpCd != ""'>
            AND A.ITEM_GRP_CD = #{sItemGrpCd}
        </if>
        <if test='sAbcInd != null and sAbcInd != ""'>
            AND A.ABC_IND = #{sAbcInd}
        </if>
        <if test='sCarlineCd != null and sCarlineCd != ""'>
            AND A.CARLINE_CD = #{sCarlineCd}
        </if>
        <if test='sCarlineCd2 != null and sCarlineCd2 != ""'>
            AND A.CARLINE_CD2 = #{sCarlineCd2}
        </if>
        <if test='sBrandCd != null and sBrandCd != ""'>
            AND A.BRAND_CD = #{sBrandCd}
        </if>
        <if test='sBpNm != null and sBpNm != ""'>
            AND B.BP_NM LIKE '%'|| #{sBpNm} ||'%'
        </if>
        AND A.ITEM_DSTIN_CD NOT IN ('04','20')<!-- 부품구분(패키지,판매용품) 제외 -->
    </select>

    <!-- 부품재고관리 리스트를 조회한다. -->
    <select id="selectInventoryInfoByCondition" parameterType="ItemMasterSearchVO" resultType="ItemMasterVO">
        /* [chn.bhmc.dms.par.pmm.service.dao.ItemMasterDao.selectInventoryInfoByCondition] */

        SELECT
            RNUM
            ,DLR_CD
            ,ITEM_CD
            ,ITEM_NM
            ,SPYR_CD
            ,AVLB_STOCK_QTY
            ,STOCK_QTY
            ,RESV_STOCK_QTY
            ,BORROW_QTY
            ,RENT_QTY
            ,GR_SCHE_QTY
            ,ABC_IND
            ,CARLINE_CD
            ,MM3_AVG_DMND_QTY
            ,MM6_AVG_DMND_QTY
            ,MM12_AVG_DMND_QTY
            ,NON_MOVING_FLG
            ,PURC_REQ_CNT
            ,BP_CD
            ,BP_NM
            ,MOVING_AVG_PRC
            ,BMP_PURC_PRC
        FROM
        (
            SELECT
                ROWNUM AS RNUM
                ,T1.DLR_CD
                ,T1.ITEM_CD
                ,T1.ITEM_NM
                ,T1.SPYR_CD
                ,T1.AVLB_STOCK_QTY
                ,T1.STOCK_QTY
                ,T1.RESV_STOCK_QTY
                ,T1.BORROW_QTY
                ,T1.RENT_QTY
                ,T1.GR_SCHE_QTY
                ,T1.ABC_IND
                ,T1.CARLINE_CD
                ,T1.MM3_AVG_DMND_QTY
                ,T1.MM6_AVG_DMND_QTY
                ,T1.MM12_AVG_DMND_QTY
                ,T1.NON_MOVING_FLG
                ,T1.PURC_REQ_CNT
                ,T1.BP_CD
                ,T1.BP_NM
                ,T1.MOVING_AVG_PRC
                ,T1.BMP_PURC_PRC  <!-- B/O 금액 : bmp구매가 -->
            FROM
            (
                SELECT
                    A.DLR_CD
                    ,A.ITEM_CD
                    ,A.SPYR_CD
                    ,A.ITEM_NM
                    ,A.ITEM_EN_NM
                    ,A.ITEM_DSTIN_CD
                    ,A.ITEM_GRP_CD
                    ,A.HS_CD
                    ,A.END_YN
                    ,A.START_DT
                    ,A.END_DT
                    ,A.PRE_ITEM_CD
                    ,A.OLD_RPLC_ITEM_CD
                    ,A.NEW_RPLC_ITEM_CD
                    ,A.OLD_RPLC_PAR_CMPT_YN
                    ,A.NEW_RPLC_PAR_CMPT_YN
                    ,A.SUC_CD
                    ,A.LAST_CMPT_ITEM_CD
                    ,A.CAR_USE_UNIT_CNT
                    ,A.MOBIS_IMP_LOCAL_YN_TP
                    ,A.PAR_SPEC_CD
                    ,A.PNC_CD
                    ,A.STOCK_UNIT_CD
                    ,A.ITEM_LGTH_VAL
                    ,A.ITEM_WIDTH_VAL
                    ,A.ITEM_HGTH_VAL
                    ,A.WEIGHT_UNIT_CD
                    ,A.TOT_WEIGHT_VAL
                    ,A.NET_WEIGHT_VAL
                    ,A.ITEM_BARS_CD
                    ,A.ITEM_QR_CD
                    ,A.FILE_DOC_NO
                    ,A.PURC_LEAD_HM
                    ,A.CQTY_RAISE_TP
                    ,A.MIN_PURC_QTY
                    ,A.STDRD_STOCK_CALC_YN
                    ,A.SFTY_STOCK_QTY
                    ,A.PURC_CQTY_CALC_YN
                    ,A.STOCK_PRSN_ID
                    ,A.PURC_PRSN_ID
                    ,A.GR_STRGE_CD
                    ,A.GI_STRGE_CD
                    ,A.IMP_TEST_TP
                    ,A.ABC_IND
                    ,A.MM3_AVG_DMND_QTY
                    ,A.MM6_AVG_DMND_QTY
                    ,A.MM12_AVG_DMND_QTY
                    ,A.PURC_REQ_CNT
                    ,A.NON_MOVING_FLG
                    ,A.BEF_LAST_GR_DT
                    ,A.LAST_GR_DT
                    ,A.BEF_LAST_GI_DT
                    ,A.LAST_GI_DT
                    ,A.LOCAL_ITEM_IF_YN
                    ,A.RECOM_RTPRC_AMT
                    ,A.REG_USR_ID
                    ,A.REG_DT
                    ,A.UPDT_USR_ID
                    ,A.UPDT_DT
                    ,NVL(D.MOVING_AVG_PRC, A.MOVING_AVG_PRC) AS MOVING_AVG_PRC                --이동평균가격
                    ,A.CARLINE_CD
                    ,A.CARLINE_CD2
                    ,A.BRAND_CD
                    ,A.STDRD_STOCK_QTY
                    ,A.STDRD_STOCK_APPLY_RATE
                    ,A.COM_CARLINE_NM
                    ,NVL(B.AVLB_STOCK_QTY,0) + NVL(B.RESV_STOCK_QTY,0) - NVL(B.BORROW_QTY,0) + NVL(B.RENT_QTY,0) AS STOCK_QTY
                    ,NVL(B.RESV_STOCK_QTY,0) AS RESV_STOCK_QTY
                    ,NVL(B.BORROW_QTY,0) AS BORROW_QTY
                    ,NVL(B.RENT_QTY,0) AS RENT_QTY
                    ,NVL(B.AVLB_STOCK_QTY,0) AS AVLB_STOCK_QTY
                    ,NVL(B.GR_SCHE_QTY,0) AS GR_SCHE_QTY
                    ,A.BP_CD
                    ,C.BP_NM
                    ,CASE WHEN NVL(E.BMP_PURC_PRC,0) <![CDATA[>]]> 0
                            THEN BMP_PURC_PRC
                          ELSE NVL((SELECT NVL(ROUND(LPR_LST_PRC * ( 1 + FN_GET_VAT(null,'ALL')),2),0)
                                  FROM PT_0214I T2
                                 WHERE (LPR_PNO,LPR_APL_DT) IN (
                                            SELECT LPR_PNO,
                                                   MAX(LPR_APL_DT) AS LPR_APL_DT
                                              FROM PT_0214I T3
                                             WHERE TRIM(T3.LPR_PNO) = A.ITEM_CD
                                          GROUP BY LPR_PNO))
                               ,(SELECT NVL(ROUND(T.APCP_PRICE_NAT_AMT * ( 1 + FN_GET_VAT(null,'ALL')),2),0)
                                  FROM PT_0216I T
                                 WHERE (APCP_PART_NO,APCP_APPLY_DATE) IN (
                                          SELECT APCP_PART_NO,
                                                 MAX(APCP_APPLY_DATE) AS APCP_APPLY_DATE
                                            FROM PT_0216I I
                                           WHERE I.APCP_PART_NO = A.ITEM_CD
                                        GROUP BY APCP_PART_NO )
                               )
                     ) END  BMP_PURC_PRC
                    FROM PT_0201T A
                    LEFT JOIN
                    (
                        SELECT
                            DLR_CD
                            ,ITEM_CD
                            ,SUM(NVL(AVLB_STOCK_QTY,0)) AS AVLB_STOCK_QTY
                            ,SUM(NVL(BORROW_QTY,0)) AS BORROW_QTY
                            ,SUM(NVL(RENT_QTY,0)) AS RENT_QTY
                            ,SUM(NVL(CLAM_STOCK_QTY,0)) AS CLAM_STOCK_QTY
                            ,SUM(NVL(RESV_STOCK_QTY,0)) AS RESV_STOCK_QTY
                            ,SUM(NVL(GR_SCHE_QTY,0)) AS GR_SCHE_QTY
                            ,SUM(NVL(GI_SCHE_QTY,0)) AS GI_SCHE_QTY
                        FROM PT_0301T
                        GROUP BY DLR_CD ,ITEM_CD
                    ) B ON A.DLR_CD  = B.DLR_CD AND A.ITEM_CD = B.ITEM_CD
                    LEFT JOIN PT_0211T C ON A.DLR_CD = C.DLR_CD AND A.BP_CD  = C.BP_CD
                    LEFT JOIN PT_0208T D ON A.DLR_CD  = D.DLR_CD AND A.GI_STRGE_CD = D.STRGE_CD AND A.ITEM_CD = D.ITEM_CD
                    LEFT JOIN (
                        SELECT
                            DLR_CD
                            ,ITEM_CD
                            ,MAX(PRC_TP) AS PRC_TP
                            ,MAX(LINE_NO) AS LINE_NO
                            ,MAX(NVL(SALE_PRC_AMT,0)) AS BMP_PURC_PRC
                        FROM PT_0214T
                        WHERE DLR_CD = #{sDlrCd}
                        AND NVL(DEL_YN,'N') != 'Y'
                        GROUP BY DLR_CD, ITEM_CD
                    ) E ON A.DLR_CD = E.DLR_CD AND A.ITEM_CD = E.ITEM_CD
                    WHERE A.DLR_CD = #{sDlrCd}
                    <if test='sItemCd != null and sItemCd != ""'>
                        AND A.ITEM_CD LIKE '%'||#{sItemCd}||'%'
                    </if>
                    <if test='sItemNm != null and sItemNm != ""'>
                        AND A.ITEM_NM LIKE '%'||#{sItemNm}||'%'
                    </if>
                    <if test='sAbcInd != null and sAbcInd != ""'>
                        AND A.ABC_IND = #{sAbcInd}
                    </if>
                    <if test='sItemDstinCd != null and sItemDstinCd != ""'>
                        AND A.ITEM_DSTIN_CD = #{sItemDstinCd}
                    </if>
                    <if test='sAvlbStockQty != null and sAvlbStockQty != ""'>
                        AND B.AVLB_STOCK_QTY <![CDATA[>=]]> #{sAvlbStockQty}
                    </if>

                    <if test='sBpCd != null and sBpCd != ""'>
                        AND A.BP_CD = #{sBpCd}
                    </if>

                    <if test='sBpNm != null and sBpNm != ""'>
                        AND C.BP_NM LIKE '%'||#{sBpNm}||'%'
                    </if>
                    <if test='sNonMovingFlg != null and sNonMovingFlg != ""'>
                    <if test='sNonMovingFlg == "Y"'>
                        AND A.NON_MOVING_FLG = {sNonMovingFlg}
                    </if >
                    </if>
                    AND A.ITEM_DSTIN_CD NOT IN ('20', '04') <!-- 부품구분(판매용품, 패키지) 제외 -->
                    ORDER BY
                    <choose>
                        <when test='sort != null'>
                            <foreach item="item" index="index" collection="sort" open="" separator="," close="">
                            <choose>
                                <when test='item.field == "itemCd"'>A.ITEM_CD <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                                <when test='item.field == "itemNm"'>A.ITEM_NM <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                                <when test='item.field == "parSpecCd"'>A.PAR_SPEC_CD <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                                <when test='item.field == "abcInd"'>A.ABC_IND <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                                <when test='item.field == "mm3AvgDmndQty"'>A.MM3_AVG_DMND_QTY <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                                <when test='item.field == "mm6AvgDmndQty"'>A.MM6_AVG_DMND_QTY <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                                <when test='item.field == "mm12AvgDmndQty"'>A.MM12_AVG_DMND_QTY <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                                <when test='item.field == "nonMovingFlg"'>A.NON_MOVING_FLG <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                                <when test='item.field == "avlbStockQty"'>B.AVLB_STOCK_QTY <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                                <when test='item.field == "grScheQty"'>B.GR_SCHE_QTY <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                                <when test='item.field == "purcReqCnt"'>A.PURC_REQ_CNT <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                                <otherwise>
                                A.DLR_CD ASC ,A.ITEM_CD ASC
                                </otherwise>
                            </choose>
                            </foreach>
                        </when>
                    <otherwise>
                    A.DLR_CD ASC ,A.ITEM_CD ASC
                    </otherwise>
                    </choose>
            ) T1
            <where>
                <if test='firstIndex != -1 and lastIndex != -1'>
                    ROWNUM <![CDATA[<=]]> #{lastIndex}
                </if>
            </where>
        )
        <where>
            <if test='firstIndex != -1 and lastIndex != -1'>
                RNUM <![CDATA[>]]> #{firstIndex}
            </if>
        </where>
    </select>

    <!-- 부품재고관리 부품 카운트를 조회한다. -->
    <select id="selectInventoryInfoByConditionCnt" parameterType="ItemMasterSearchVO" resultType="int">
        /* [chn.bhmc.dms.par.pmm.service.dao.selectInventoryInfoByConditionCnt] */
        SELECT
            COUNT(*) AS VALUE
        FROM PT_0201T A
        LEFT JOIN
        (
            SELECT
                DLR_CD
                ,ITEM_CD
                ,SUM(AVLB_STOCK_QTY) AS AVLB_STOCK_QTY
                ,SUM(BORROW_QTY) AS BORROW_QTY
                ,SUM(RENT_QTY) AS RENT_QTY
                ,SUM(CLAM_STOCK_QTY) AS CLAM_STOCK_QTY
                ,SUM(RESV_STOCK_QTY) AS RESV_STOCK_QTY
            FROM PT_0301T
            GROUP BY DLR_CD, ITEM_CD
        ) B ON A.DLR_CD = B.DLR_CD AND A.ITEM_CD = B.ITEM_CD
        LEFT JOIN PT_0211T C ON A.DLR_CD = C.DLR_CD AND A.BP_CD  = C.BP_CD
        WHERE A.DLR_CD = #{sDlrCd}
        <if test='sItemCd != null and sItemCd != ""'>
            AND A.ITEM_CD LIKE '%'||#{sItemCd}||'%'
        </if>
        <if test='sItemNm != null and sItemNm != ""'>
            AND A.ITEM_NM LIKE '%'||#{sItemNm}||'%'
        </if>
        <if test='sAbcInd != null and sAbcInd != ""'>
            AND A.ABC_IND  = #{sAbcInd}
        </if>
        <if test='sAvlbStockQty != null and sAvlbStockQty != ""'>
            AND B.AVLB_STOCK_QTY <![CDATA[>=]]> #{sAvlbStockQty}
        </if>
        <if test='sBpCd != null and sBpCd != ""'>
            AND A.BP_CD = #{sBpCd}
        </if>
        <if test='sBpNm != null and sBpNm != ""'>
            AND C.BP_NM LIKE '%'||#{sBpNm}||'%'
        </if>
        <if test='sNonMovingFlg != null and sNonMovingFlg != ""'>
        <if test='sNonMovingFlg == "Y"'>
            AND A.NON_MOVING_FLG = #{sNonMovingFlg}
        </if >
        </if>
        AND A.ITEM_DSTIN_CD NOT IN ('20', '04') <!-- 부품구분(판매용품, 패키지) 제외 -->
    </select>

    <!-- 팝업용 부품정보관리 리스트를 조회한다. -->
    <select id="selectItemPopupByCondition" resultType="ItemMasterVO">
        /* [chn.bhmc.dms.par.pmm.service.dao.ItemMasterDao.selectItemPopupByCondition] */
        SELECT
            RNUM
            ,DLR_CD
            ,SPYR_CD
            ,BP_TP
            ,BP_CD
            ,BP_NM
            ,ITEM_CD
            ,ITEM_NM
            ,STOCK_UNIT_CD
            ,ITEM_DSTIN_CD
            ,ITEM_DSTIN_AMOS_CD
            ,LOC_CD
            ,PRC_TP
            ,NVL(PURC_PRC,0) AS PURC_PRC
            ,BMP_PURC_PRC
            ,NVL(LAST_GR_PRC,0) AS LAST_GR_PRC
            ,AVLB_STOCK_QTY
            ,ABC_IND
            ,CARLINE_CD
            ,CARLINE_CD2
            ,PURC_LEAD_HM
            ,NVL(GR_STRGE_CD,' ') AS GR_STRGE_CD
            ,NVL(MIN_PURC_QTY, 1) AS MIN_PURC_QTY
            ,NVL(MIN_PACK_QTY, 1) AS MIN_PACK_QTY
            ,BORROW_QTY
            ,RENT_QTY
            ,STOCK_QTY
            ,RESV_STOCK_QTY
            ,MOVING_AVG_PRC
            ,STRGE_CD_LIST
            ,END_CHK
            ,PAR_SPEC_CD
            ,SUC_CD
        FROM
        (
            SELECT
                ROWNUM AS RNUM
                ,T1.DLR_CD
                ,T1.SPYR_CD
                ,T1.BP_TP
                ,T1.BP_CD
                ,T1.BP_NM
                ,T1.ITEM_CD
                ,T1.ITEM_NM
                ,T1.STOCK_UNIT_CD
                ,T1.ITEM_DSTIN_CD
                ,T1.ITEM_DSTIN_AMOS_CD
                ,T1.LOC_CD
                ,T1.PRC_TP
                ,T1.LAST_GR_PRC
                ,T1.BMP_PURC_PRC
                ,T1.PURC_PRC
                ,T1.AVLB_STOCK_QTY
                ,T1.ABC_IND
                ,T1.CARLINE_CD
                ,T1.CARLINE_CD2
                ,T1.PURC_LEAD_HM
                ,T1.GR_STRGE_CD
                ,T1.MIN_PURC_QTY
                ,T1.MIN_PACK_QTY
                ,T1.BORROW_QTY
                ,T1.RENT_QTY
                ,T1.STOCK_QTY
                ,T1.RESV_STOCK_QTY
                ,ROUND(NVL(T1.MOVING_AVG_PRC,0),2) AS MOVING_AVG_PRC
                ,T1.STRGE_CD_LIST
                ,T1.END_CHK
                ,T1.PAR_SPEC_CD
                ,T1.SUC_CD
            FROM
            (
                SELECT
                    A.DLR_CD
                    ,A.SPYR_CD
                    ,A.BP_CD
                    ,C.BP_TP
                    ,C.BP_NM
                    ,A.ITEM_CD
                    ,A.ITEM_NM
                    ,A.STOCK_UNIT_CD
                    ,A.ITEM_DSTIN_CD
                    ,A.ITEM_DSTIN_AMOS_CD
                    ,F.LOC_CD
                    ,B.PRC_TP
                    ,NVL(A.LAST_GR_AMT, 0) AS LAST_GR_PRC
                    ,CASE WHEN NVL(B.BMP_PURC_PRC,0) <![CDATA[>]]> 0
                            THEN B.BMP_PURC_PRC
                          ELSE NVL((SELECT NVL(ROUND(LPR_LST_PRC * ( 1 + FN_GET_VAT(null,'ALL')),2),0)
                                  FROM PT_0214I T2
                                 WHERE (LPR_PNO,LPR_APL_DT) IN (
                                            SELECT LPR_PNO,
                                                   MAX(LPR_APL_DT) AS LPR_APL_DT
                                              FROM PT_0214I T3
                                             WHERE TRIM(T3.LPR_PNO) = A.ITEM_CD
                                          GROUP BY LPR_PNO)),
                               (SELECT NVL(ROUND(T.APCP_PRICE_NAT_AMT * ( 1 + FN_GET_VAT(null,'ALL')),2),0)
                                  FROM PT_0216I T
                                 WHERE (APCP_PART_NO,APCP_APPLY_DATE) IN (
                                          SELECT APCP_PART_NO,
                                                 MAX(APCP_APPLY_DATE) AS APCP_APPLY_DATE
                                            FROM PT_0216I I
                                           WHERE I.APCP_PART_NO = A.ITEM_CD
                                        GROUP BY APCP_PART_NO )
                               )
                     ) END  BMP_PURC_PRC
                    ,NVL(A.LAST_GR_AMT, B.BMP_PURC_PRC) AS PURC_PRC
                    ,NVL(D.AVLB_STOCK_QTY, 0) AS AVLB_STOCK_QTY
                    ,A.ABC_IND
                    ,A.CARLINE_CD
                    ,A.CARLINE_CD2
                    ,A.PURC_LEAD_HM
                    ,A.GR_STRGE_CD
                    ,A.MIN_PURC_QTY
                    ,A.MIN_PACK_QTY
                    ,NVL(D.BORROW_QTY, 0) AS BORROW_QTY
                    ,NVL(D.RENT_QTY, 0) AS RENT_QTY
                    ,NVL(E.MOVING_AVG_PRC, A.MOVING_AVG_PRC) AS MOVING_AVG_PRC                --이동평균가격
                    ,NVL(D.AVLB_STOCK_QTY,0) + NVL(D.RESV_STOCK_QTY,0) - NVL(D.BORROW_QTY,0) + NVL(D.RENT_QTY,0) AS STOCK_QTY
                    ,NVL(D.RESV_STOCK_QTY, 0) AS RESV_STOCK_QTY
                    ,D.STRGE_CD_LIST
                    , CASE WHEN NVL(TO_CHAR(A.END_DT,'YYYY-MM-DD'),'9999-12-31') <![CDATA[<]]> TO_CHAR(SYSDATE,'YYYY-MM-DD')  THEN 'N' ELSE 'Y' END END_CHK
                    ,NVL(A.PAR_SPEC_CD,' ') AS PAR_SPEC_CD
                    ,NVL(A.SUC_CD,' ') as SUC_CD
                FROM PT_0201T A
                LEFT JOIN
                (
                    SELECT
                        DLR_CD
                        ,ITEM_CD
                        ,MAX(PRC_TP) AS PRC_TP
                        ,MAX(LINE_NO) AS LINE_NO
                        ,MAX(NVL(SALE_PRC_AMT,0)) AS BMP_PURC_PRC
                    FROM PT_0214T
                    WHERE DLR_CD = #{sDlrCd}
                    AND NVL(DEL_YN,'N') != 'Y'
                    GROUP BY DLR_CD, ITEM_CD
                ) B ON A.DLR_CD = B.DLR_CD AND A.ITEM_CD = B.ITEM_CD
                LEFT JOIN PT_0211T C ON A.DLR_CD = C.DLR_CD AND A.BP_CD  = C.BP_CD AND NVL(C.END_YN,'N') != 'Y'
                LEFT JOIN
                (
                    SELECT
                         A.DLR_CD
                        ,A.ITEM_CD
                        ,SUBSTR(xmlagg(xmlelement(a,','||B.STRGE_NM) ORDER BY A.ITEM_CD,A.STRGE_CD).extract('//text()'),2) AS STRGE_CD_LIST
                        ,SUM(NVL(A.AVLB_STOCK_QTY,0)) AS AVLB_STOCK_QTY
                        ,SUM(NVL(A.BORROW_QTY,0)) AS BORROW_QTY
                        ,SUM(NVL(A.RENT_QTY,0)) AS RENT_QTY
                        ,SUM(NVL(A.CLAM_STOCK_QTY,0)) AS CLAM_STOCK_QTY
                        ,SUM(NVL(A.RESV_STOCK_QTY,0)) AS RESV_STOCK_QTY
                        ,SUM(NVL(A.GR_SCHE_QTY,0)) AS GR_SCHE_QTY
                        ,SUM(NVL(A.GI_SCHE_QTY,0)) AS GI_SCHE_QTY
                    FROM PT_0301T A
                            LEFT OUTER JOIN CM_0104T B
                                ON A.DLR_CD   = B.DLR_CD
                               AND A.STRGE_CD  = B.STRGE_CD
                   WHERE A.DLR_CD  = #{sDlrCd}
                     --AND NVL(A.AVLB_STOCK_QTY,0) + NVL(A.RESV_STOCK_QTY,0) - NVL(A.BORROW_QTY,0) + NVL(A.RENT_QTY,0) <![CDATA[>]]> 0
                    GROUP BY A.DLR_CD ,A.ITEM_CD
                ) D ON A.DLR_CD = D.DLR_CD AND A.ITEM_CD = D.ITEM_CD
                LEFT JOIN PT_0208T E ON A.DLR_CD = E.DLR_CD AND A.GI_STRGE_CD = E.STRGE_CD AND A.ITEM_CD = E.ITEM_CD
                LEFT JOIN PT_0224T F
                   ON A.DLR_CD = F.DLR_CD AND A.GI_STRGE_CD = F.STRGE_CD AND A.ITEM_CD = F.ITEM_CD AND F.LOC_CD != ''
                WHERE A.DLR_CD  = #{sDlrCd}
                <if test='sItemCd != null and sItemCd != ""'> AND A.ITEM_CD LIKE '%'||#{sItemCd}||'%' </if>
                <if test='sItemNm != null and sItemNm != ""'> AND A.ITEM_NM LIKE '%'||#{sItemNm}||'%' </if>
                <if test='sAbcInd != null and sAbcInd != ""'> AND A.ABC_IND = #{sAbcInd} </if>
                <if test='sCarlineCd != null and sCarlineCd != ""'> AND A.CARLINE_CD = #{sCarlineCd}</if>
                <if test='sBrandCd != null and sBrandCd != ""'> AND A.BRAND_CD = #{sBrandCd}</if>
                <if test='sBpCd != null and sBpCd != ""'> AND A.BP_CD = #{sBpCd}</if>
                <if test='sGrStrgeCd != null and sGrStrgeCd != ""'> AND A.GI_STRGE_CD = #{sGrStrgeCd}</if>
               <!-- 注释 原有 借记登记入库添加方法 sql 贾明 2018-9-27
                <if test='sBpTp != null and sBpTp != ""'>
                    <choose>
                        <when test='sBpTp != "01"'>
                            AND A.SPYR_CD != '01'
                        </when>
                        <otherwise>
                            AND A.SPYR_CD  = '01'
                        </otherwise>
                    </choose>
                </if>
                 -->
                 <!--   借记登记入库添加方法 sql 贾明 2018-9-27   start -->
                <if test='sBpTp != null and sBpTp == "01"'>
                    AND C.BP_TP = #{sBpTp}
                </if>
                <if test='sBpTp != null and sBpTp != "01"  and sBpTp != ""'>
                    AND NVL(C.BP_TP,'99') <![CDATA[<>]]> '01'
                </if>
                <!--   借记登记入库添加方法 sql 贾明 2018-9-27   end -->
                
                <if test='sPurcTpList != null and !sPurcTpList.isEmpty'>
                    AND (A.PAR_SPEC_CD IN
                    <foreach item="item" index="index" collection="sPurcTpList" open="(" separator="," close=")">
                       #{item}
                    </foreach>
                    or A.PAR_SPEC_CD IS NULL)
                </if>        --구매오더코드
                <!--  注释 原有 借记登记入库添加方法 sql 贾明 2018-9-27
                AND NVL(A.END_YN,'N')  != 'Y'
                AND A.GR_STRGE_CD IS NOT NULL
                AND A.GI_STRGE_CD IS NOT NULL
                AND A.ITEM_DSTIN_CD NOT IN ('20','04')
                -->  <!-- 부품구분(판매용품,패키지) 제외 -->
                <choose>
                     <when test='sItemDstinCd != null and sItemDstinCd != ""'>
                          AND A.ITEM_DSTIN_CD = #{sItemDstinCd}
                     </when>
                     <otherwise>
                          --AND A.ITEM_DSTIN_CD in ('02','05') --천충이 구매입고 팝업에서 페인트,오일도 키인시 구매입고가능해야한다했음
                     </otherwise>
                 </choose>
                 ORDER BY
                 <choose>
                     <when test='sort != null'>
                         <foreach item="item" index="index" collection="sort" open="" separator="," close="">
                             <choose>
                                 <when test='item.field == "itemCd"'>ITEM_CD <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                                 <when test='item.field == "itemNm"'>ITEM_NM <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                                 <otherwise>
                                    DLR_CD ASC, ITEM_CD ASC
                                 </otherwise>
                             </choose>
                         </foreach>
                     </when>
                     <otherwise>
                     DLR_CD ASC, ITEM_CD ASC
                     </otherwise>
                 </choose>
           ) T1
            WHERE 1=1
            <if test='firstIndex != -1 and lastIndex != -1'>
                AND ROWNUM <![CDATA[<=]]> #{lastIndex}
            </if>
           -- AND T1.END_CHK = 'Y'
     )
     <where>
        <if test='firstIndex != -1 and lastIndex != -1'>
            RNUM <![CDATA[>]]> #{firstIndex}
        </if>
     </where>
    </select>

    <!-- 팝업용 부품정보관리 카운트 정보를 조회한다. -->
    <select id="selectItemPopupByConditionCnt" resultType="int">
        /* [chn.bhmc.dms.par.pmm.service.dao.selectItemPopupByConditionCnt] */
            SELECT
                COUNT(*) AS VALUE
            FROM PT_0201T A
            LEFT JOIN (
                SELECT
                    DLR_CD
                    ,ITEM_CD
                    ,MAX(PRC_TP) AS PRC_TP
                    ,MAX(LINE_NO) AS LINE_NO
                    ,MAX(NVL(SALE_PRC_AMT,0)) AS SALE_PRC_AMT
                FROM PT_0214T
                WHERE DLR_CD = #{sDlrCd}
                AND NVL(DEL_YN,'N') != 'Y'
                GROUP BY DLR_CD, ITEM_CD
            ) B ON A.DLR_CD = B.DLR_CD AND A.ITEM_CD = B.ITEM_CD
            LEFT JOIN PT_0211T C ON A.DLR_CD = C.DLR_CD AND A.BP_CD  = C.BP_CD AND NVL(C.END_YN,'N') != 'Y'
            WHERE A.DLR_CD = #{sDlrCd}
            <if test='sItemCd != null and sItemCd != ""'> AND A.ITEM_CD LIKE '%'||#{sItemCd}||'%' </if>
            <if test='sItemNm != null and sItemNm != ""'> AND A.ITEM_NM LIKE '%'||#{sItemNm}||'%' </if>
            <if test='sAbcInd != null and sAbcInd != ""'> AND A.ABC_IND = #{sAbcInd}</if>
            <if test='sCarlineCd != null and sCarlineCd != ""'> AND A.CARLINE_CD = #{sCarlineCd}</if>
            <if test='sBrandCd != null and sBrandCd != ""'> AND A.BRAND_CD = #{sBrandCd}</if>
            <if test='sBpCd != null and sBpCd != ""'> AND A.BP_CD = #{sBpCd} </if>
            <if test='sGrStrgeCd != null and sGrStrgeCd != ""'> AND A.GI_STRGE_CD = #{sGrStrgeCd}</if>
            <!--  注释 原有 借记登记入库添加方法 sql 贾明 2018-9-27
            <if test='sBpTp != null and sBpTp != ""'>
                <choose>
                    <when test='sBpTp != "01"'>
                        AND A.SPYR_CD != '01'
                    </when>
                    <otherwise>
                        AND A.SPYR_CD  = '01'
                    </otherwise>
                </choose>
            </if>
            -->
            <!--   借记登记入库添加方法 sql 贾明 2018-9-27   start -->
                <if test='sBpTp != null and sBpTp == "01"'>
                    AND C.BP_TP = #{sBpTp}
                </if>
                <if test='sBpTp != null and sBpTp != "01"  and sBpTp != ""'>
                    AND NVL(C.BP_TP,'99') <![CDATA[<>]]> '01'
                </if>
             <!--  借记登记入库添加方法 sql 贾明 2018-9-27   end -->
            <if test='sPurcTpList != null and !sPurcTpList.isEmpty'>
                AND (A.PAR_SPEC_CD IN
                    <foreach item="item" index="index" collection="sPurcTpList" open="(" separator="," close=")">
                       #{item}
                    </foreach>
                    or A.PAR_SPEC_CD IS NULL)
            </if>
            <!--  注释 原有 借记登记入库添加方法 sql 贾明 2018-9-27
            AND NVL(A.END_YN,'N')  != 'Y'
            AND A.GR_STRGE_CD IS NOT NULL
            AND A.GI_STRGE_CD IS NOT NULL
            AND A.ITEM_DSTIN_CD NOT IN ('20','04')
            --> <!-- 부품구분(판매용품,패키지) 제외 -->
            <choose>
                <when test='sItemDstinCd != null and sItemDstinCd != ""'>
                    AND A.ITEM_DSTIN_CD = #{sItemDstinCd}
                </when>
                <otherwise>
                    --AND A.ITEM_DSTIN_CD in ('02','05')  --천충이 구매입고 팝업에서 페인트,오일도 키인시 구매입고가능해야한다했음
                </otherwise>
            </choose>
            <!-- AND NVL(TO_CHAR(A.END_DT,'YYYY-MM-DD'),'9999-12-31') <![CDATA[>=]]> TO_CHAR(SYSDATE,'YYYY-MM-DD') -->
    </select>

    <!-- 구매단가  부품정보관리 정보를 조회한다. -->
    <select id="selectPurcPrcItemByKey" resultType="ItemMasterVO">
        /* [chn.bhmc.dms.par.pmm.service.dao.ItemMasterDao.selectPurcPrcItemByKey] */
        SELECT
            A.DLR_CD
            ,A.BP_CD
            ,C.BP_NM
            ,A.ITEM_CD
            ,A.ITEM_NM
            ,A.STOCK_UNIT_CD
            ,NVL(B.PRC_TP, '01') AS PRC_TP
            ,NVL(B.SALE_PRC_AMT, 0) AS PURC_PRC
            ,NVL(D.AVLB_STOCK_QTY, 0) AS AVLB_STOCK_QTY
            ,A.ABC_IND
            ,A.CARLINE_CD
            ,A.PURC_LEAD_HM
            ,NVL(A.GR_STRGE_CD,' ') AS GR_STRGE_CD
            ,A.MIN_PURC_QTY
            ,NVL(D.RESV_STOCK_QTY,0) AS RESV_STOCK_QTY
            ,NVL(D.CLAM_STOCK_QTY,0) AS CLAM_STOCK_QTY
            ,NVL(D.BORROW_QTY,0) AS BORROW_QTY
            ,NVL(D.RENT_QTY,0) AS RENT_QTY
            , NVL(E.MOVING_AVG_PRC, A.MOVING_AVG_PRC) AS MOVING_AVG_PRC                --이동평균가격
            ,NVL(D.AVLB_STOCK_QTY,0) + NVL(D.RESV_STOCK_QTY,0) - NVL(D.BORROW_QTY,0) + NVL(D.RENT_QTY,0) AS STOCK_QTY
        FROM PT_0201T A
        LEFT JOIN
        (
            SELECT
                DLR_CD
                ,ITEM_CD
                ,MAX(PRC_TP) AS PRC_TP
                ,MAX(LINE_NO) AS LINE_NO
                ,MAX(NVL(SALE_PRC_AMT,0)) AS SALE_PRC_AMT
            FROM PT_0214T
            WHERE DLR_CD = #{sDlrCd}
            AND NVL(DEL_YN,'N') != 'Y'
            GROUP BY DLR_CD, ITEM_CD
        ) B ON A.DLR_CD = B.DLR_CD AND A.ITEM_CD = B.ITEM_CD
        LEFT JOIN PT_0211T C ON A.DLR_CD = C.DLR_CD AND A.BP_CD  = C.BP_CD AND NVL(C.END_YN,'N') != 'Y'
        LEFT JOIN
        (
            SELECT
                DLR_CD
                ,ITEM_CD
                ,SUM(NVL(AVLB_STOCK_QTY,0)) AS AVLB_STOCK_QTY
                ,SUM(NVL(BORROW_QTY,0)) AS BORROW_QTY
                ,SUM(NVL(RENT_QTY,0)) AS RENT_QTY
                ,SUM(NVL(CLAM_STOCK_QTY,0)) AS CLAM_STOCK_QTY
                ,SUM(NVL(RESV_STOCK_QTY,0)) AS RESV_STOCK_QTY
                ,SUM(NVL(GR_SCHE_QTY,0)) AS GR_SCHE_QTY
                ,SUM(NVL(GI_SCHE_QTY,0)) AS GI_SCHE_QTY
            FROM PT_0301T
            GROUP BY DLR_CD, ITEM_CD
        ) D ON A.DLR_CD = D.DLR_CD AND A.ITEM_CD = D.ITEM_CD
        LEFT JOIN PT_0208T E ON A.DLR_CD = E.DLR_CD AND A.GI_STRGE_CD = E.STRGE_CD AND A.ITEM_CD = E.ITEM_CD
        WHERE A.DLR_CD = #{sDlrCd}
        AND A.ITEM_CD = #{sItemCd}
        AND NVL(A.END_YN,'N') != 'Y'
        AND A.ITEM_DSTIN_CD in ('02','05')
    </select>

    <!-- 구매단가  부품정보관리 카운트 정보를 조회한다.-->
    <select id="selectPurcPrcItemByKeyCnt" resultType="int">
        /* [chn.bhmc.dms.par.pmm.service.dao.selectPurcPrcItemByKeyCnt] */
        SELECT
            COUNT(*) AS VALUE
        FROM PT_0201T A
        LEFT JOIN
        (
            SELECT
                DLR_CD
                ,ITEM_CD
                ,MAX(PRC_TP) AS PRC_TP
                ,MAX(LINE_NO) AS LINE_NO
                ,MAX(NVL(SALE_PRC_AMT,0)) AS SALE_PRC_AMT
            FROM PT_0214T
            WHERE DLR_CD = #{sDlrCd}
            AND NVL(DEL_YN,'N') != 'Y'
            GROUP BY DLR_CD, ITEM_CD
        ) B ON A.DLR_CD = B.DLR_CD AND A.ITEM_CD= B.ITEM_CD
        LEFT JOIN PT_0211T C ON A.DLR_CD = C.DLR_CD AND A.BP_CD  = C.BP_CD AND NVL(C.END_YN,'N') != 'Y'
        LEFT JOIN
        (
            SELECT
                DLR_CD
                ,ITEM_CD
                ,SUM(AVLB_STOCK_QTY) AS AVLB_STOCK_QTY
                ,SUM(BORROW_QTY) AS BORROW_QTY
                ,SUM(RENT_QTY) AS RENT_QTY
                ,SUM(CLAM_STOCK_QTY) AS CLAM_STOCK_QTY
                ,SUM(RESV_STOCK_QTY) AS RESV_STOCK_QTY
            FROM PT_0301T
            GROUP BY DLR_CD ,ITEM_CD
        ) D ON A.DLR_CD = D.DLR_CD AND A.ITEM_CD = D.ITEM_CD
        WHERE A.DLR_CD = #{sDlrCd}
        AND A.ITEM_CD = #{sItemCd}
        AND NVL(A.END_YN,'N') != 'Y'
        AND A.ITEM_DSTIN_CD in ('02','05')
    </select>

    <!-- 판매단가  부품정보관리 정보를 조회한다. -->
    <select id="selectItemSalePrcPopupByCondition" parameterType="ItemMasterSearchVO" resultType="ItemMasterVO">
        /* [chn.bhmc.dms.par.pmm.service.dao.ItemMasterDao.selectItemSalePrcPopupByCondition] */
        SELECT
            RNUM
            ,DLR_CD
            ,ITEM_CD
            ,ITEM_NM
            ,STOCK_UNIT_CD
            ,PRC_TP
            ,SALE_PRC_AMT
            ,TAX_DDCT_GRTE_PRC
            ,ABC_IND
            ,CARLINE_CD
            ,PURC_LEAD_HM
            ,NVL(GR_STRGE_CD,' ') AS GR_STRGE_CD
            ,NVL(GI_STRGE_CD,' ') AS GI_STRGE_CD
            ,'' AS REQ_STRGE_CD
            ,NVL(STOCK_QTY,0) AS STOCK_QTY
            ,NVL(AVLB_STOCK_QTY,0) AS AVLB_STOCK_QTY
            ,NVL(RESV_STOCK_QTY,0) AS RESV_STOCK_QTY
            ,NVL(CLAM_STOCK_QTY,0) AS CLAM_STOCK_QTY
            ,NVL(BORROW_QTY,0) AS BORROW_QTY
            ,NVL(RENT_QTY,0) AS RENT_QTY
            ,NVL(MOVING_AVG_PRC, 0) AS MOVING_AVG_PRC
            ,NVL(MOVING_AVG_TAX_DDCT_PRC, 0) AS MOVING_AVG_TAX_DDCT_PRC
            ,NVL(LOC_CD, ' ') AS LOC_CD
            ,NVL(LOC_NM, ' ') AS LOC_NM
            ,END_CHK
        FROM
        (
            SELECT
                ROWNUM AS RNUM
                ,T1.DLR_CD
                ,T1.ITEM_CD
                ,T1.ITEM_NM
                ,T1.STOCK_UNIT_CD
                ,T1.PRC_TP
                ,T1.SALE_PRC_AMT
                ,T1.TAX_DDCT_GRTE_PRC
                ,T1.ABC_IND
                ,T1.CARLINE_CD
                ,T1.PURC_LEAD_HM
                ,T1.GR_STRGE_CD
                ,T1.GI_STRGE_CD
                ,T1.STOCK_QTY
                ,T1.AVLB_STOCK_QTY
                ,T1.RESV_STOCK_QTY
                ,T1.CLAM_STOCK_QTY
                ,T1.BORROW_QTY
                ,T1.RENT_QTY
                ,T1.MOVING_AVG_PRC
                ,T1.MOVING_AVG_TAX_DDCT_PRC
                ,T1.LOC_CD
                ,T1.LOC_NM
                ,T1.END_CHK
            FROM
            (
                SELECT
                    A.DLR_CD
                    ,A.ITEM_CD
                    ,C.ITEM_NM
                    ,C.STOCK_UNIT_CD
                    ,B.PRC_TP
                    ,DECODE(#{sPrcTp},'01',NVL(B.RETL_PRC, 0),'02',NVL(B.WHSL_PRC, 0),'03',NVL(B.INC_PRC, 0),'04',NVL(B.GRTE_PRC, 0),NVL(B.SALE_PRC_AMT, 0)) AS SALE_PRC_AMT
                    ,DECODE(#{sPrcTp},'01',NVL(B.RETL_PRC, 0),'02',NVL(B.WHSL_PRC, 0),'03',NVL(B.INC_PRC, 0),'04',NVL(B.TAX_DDCT_GRTE_PRC, 0),NVL(B.SALE_PRC_AMT, 0)) AS TAX_DDCT_GRTE_PRC
                    ,C.ABC_IND
                    ,C.CARLINE_CD
                    ,C.PURC_LEAD_HM
                    ,A.STRGE_CD AS GI_STRGE_CD
                    ,C.GR_STRGE_CD
                    ,A.STOCK_QTY
                    ,A.AVLB_STOCK_QTY
                    ,A.RESV_STOCK_QTY
                    ,A.CLAM_STOCK_QTY
                    ,A.BORROW_QTY
                    ,A.RENT_QTY
                    ,NVL(D.MOVING_AVG_PRC, C.MOVING_AVG_PRC) AS MOVING_AVG_PRC
                    ,NVL(D.MOVING_AVG_TAX_DDCT_PRC, 0) AS MOVING_AVG_TAX_DDCT_PRC
                    ,F.LOC_CD
                    ,F.LOC_NM
                    ,CASE WHEN NVL(TO_CHAR(C.END_DT,'YYYY-MM-DD'),'9999-12-31') <![CDATA[<]]> TO_CHAR(SYSDATE,'YYYY-MM-DD')  THEN 'N' ELSE 'Y' END END_CHK
                FROM (
                    SELECT
                        DLR_CD
                        ,ITEM_CD
                        ,STRGE_CD
                        ,NVL(AVLB_STOCK_QTY,0) + NVL(RESV_STOCK_QTY,0) - NVL(BORROW_QTY,0) + NVL(RENT_QTY,0) AS STOCK_QTY
                        ,NVL(AVLB_STOCK_QTY,0) AS AVLB_STOCK_QTY
                        ,NVL(BORROW_QTY,0) AS BORROW_QTY
                        ,NVL(RENT_QTY,0) AS RENT_QTY
                        ,NVL(CLAM_STOCK_QTY,0) AS CLAM_STOCK_QTY
                        ,NVL(RESV_STOCK_QTY,0) AS RESV_STOCK_QTY
                    FROM PT_0301T
                    WHERE DLR_CD = #{sDlrCd}
                    <if test='sItemCd != null and sItemCd != ""'>
                        AND ITEM_CD LIKE '%'||#{sItemCd}||'%'
                    </if>
                    <if test='sGrStrgeCd != null and sGrStrgeCd != ""'>
                        AND STRGE_CD = #{sGrStrgeCd}
                     </if>
                ) A
                LEFT JOIN
                (
                    SELECT
                        DLR_CD
                        ,STRGE_CD
                        ,ITEM_CD
                        ,MAX(PRC_TP) AS PRC_TP
                        ,MAX(LINE_NO) AS LINE_NO
                        ,MAX(NVL(RETL_PRC,0)) AS RETL_PRC
                        ,MAX(NVL(WHSL_PRC,0)) AS WHSL_PRC
                        ,MAX(NVL(SALE_PRC_AMT,0)) AS SALE_PRC_AMT
                        ,MAX(NVL(INC_PRC,0)) AS INC_PRC
                        ,MAX(NVL(GRTE_PRC,0)) AS GRTE_PRC
                        ,MAX(NVL(TAX_DDCT_GRTE_PRC,0)) AS TAX_DDCT_GRTE_PRC
                    FROM PT_0214T
                    WHERE DLR_CD = #{sDlrCd}
                    AND NVL(DEL_YN,'N') != 'Y'
                    GROUP BY DLR_CD, STRGE_CD, ITEM_CD
                ) B ON A.DLR_CD = B.DLR_CD AND A.STRGE_CD = B.STRGE_CD AND A.ITEM_CD = B.ITEM_CD
                LEFT JOIN PT_0201T C ON A.DLR_CD = C.DLR_CD AND A.ITEM_CD = C.ITEM_CD
                LEFT JOIN PT_0208T D ON A.DLR_CD = D.DLR_CD AND A.STRGE_CD = D.STRGE_CD AND A.ITEM_CD = D.ITEM_CD
                LEFT JOIN CM_0104T E ON A.DLR_CD = E.DLR_CD AND A.STRGE_CD = E.STRGE_CD
                LEFT JOIN PT_0224T F ON A.DLR_CD = F.DLR_CD AND A.STRGE_CD = F.STRGE_CD AND A.ITEM_CD = F.ITEM_CD AND F.LOC_CD != ' '
                WHERE A.DLR_CD = #{sDlrCd}
                <if test='sItemCd != null and sItemCd != ""'>
                    AND A.ITEM_CD LIKE '%'||#{sItemCd}||'%'
                </if>
                <if test='sItemNm != null and sItemNm != ""'>
                    AND C.ITEM_NM LIKE '%'||#{sItemNm}||'%'
                </if>
                <if test='sAbcInd != null and sAbcInd != ""'>
                    AND C.ABC_IND = #{sAbcInd}
                </if>
                <if test='sCarlineCd != null and sCarlineCd != ""'>
                    AND C.CARLINE_CD = #{sCarlineCd}
                </if>
                <if test='sCarlineCd2 != null and sCarlineCd2 != ""'>
                    AND C.CARLINE_CD2 = #{sCarlineCd2}
                </if>
                <if test='sItemDstinCd == null or sItemDstinCd == ""'>
                    AND C.ITEM_DSTIN_CD in ('02','05')
                </if>
                <if test='sItemDstinCd != null and sItemDstinCd != ""'>
                    AND C.ITEM_DSTIN_CD = #{sItemDstinCd}
                </if>
                <if test='sGrStrgeCd != null and sGrStrgeCd != ""'>
                    AND A.STRGE_CD = #{sGrStrgeCd}
                </if>
                <if test='sAvlbStockQtyZeroYn == null or sAvlbStockQtyZeroYn != "N"'>
                    AND A.AVLB_STOCK_QTY <![CDATA[>]]> 0
                </if>
                <if test='sSpyrCd != null and sSpyrCd != ""'>
                    AND C.SPYR_CD = #{sSpyrCd}
                </if>
                <if test='sPageTp != null and sPageTp != ""'>
                <choose>
                    <when test='@org.apache.commons.lang3.StringUtils@contains(sPageTp,"IN")'>
                         AND E.STRGE_TP IN ('09','10')--페인트,보조부품 창고유형 만
                    </when>
                    <otherwise>
                         AND E.STRGE_TP = #{sPageTp}
                    </otherwise>
                </choose>
                </if>
                AND NVL(C.END_YN,'N') != 'Y'
                AND A.STRGE_CD IS NOT NULL<!-- 재고 창고 있는 부품  -->
                AND E.STRGE_TP NOT IN ('02','20')<!-- 창고유형 판매제외(부품)  -->
                AND C.ITEM_DSTIN_CD NOT IN ('04','20')<!-- 부품구분(패키지, 판매용품) 제외 -->
                ORDER BY
                <choose>
                <when test='sort != null'>
                    <foreach item="item" index="index" collection="sort" open="" separator="," close="">
                    <choose>
                        <when test='item.field == "itemCd"'>A.ITEM_CD <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                        <when test='item.field == "itemNm"'>C.ITEM_NM <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                        <otherwise>
                            A.DLR_CD ASC ,A.ITEM_CD ASC
                        </otherwise>
                    </choose>
                    </foreach>
                </when>
                <otherwise>
                    A.DLR_CD ASC ,A.ITEM_CD ASC
                </otherwise>
                </choose>
            ) T1
            <where>
                <if test='sTaxDdctGrtePrcOverZeroUseYn != null and sTaxDdctGrtePrcOverZeroUseYn == "Y"'>
                    T1.TAX_DDCT_GRTE_PRC <![CDATA[>]]> 0
                </if>

            </where>
        )
        <where>
            <if test='firstIndex != -1 and lastIndex != -1'>
                RNUM <![CDATA[>]]> #{firstIndex} AND ROWNUM <![CDATA[<=]]> #{recordCountPerPage}
            </if>
        </where>
    </select>

    <!-- 판매단가  부품정보관리 카운트 정보를 조회한다. -->
    <select id="selectItemSalePrcPopupByConditionCnt" parameterType="ItemMasterSearchVO" resultType="int">
        /* [chn.bhmc.dms.par.pmm.service.dao.selectItemSalePrcPopupByConditionCnt] */
        SELECT COUNT(0)
        FROM
        (
            SELECT
                A.DLR_CD
                ,A.ITEM_CD
                ,C.ITEM_NM
                ,C.STOCK_UNIT_CD
                ,B.PRC_TP
                ,DECODE(#{sPrcTp},'01',NVL(B.RETL_PRC, 0),'02',NVL(B.WHSL_PRC, 0),'03',NVL(B.INC_PRC, 0),'04',NVL(B.GRTE_PRC, 0),NVL(B.SALE_PRC_AMT, 0)) AS SALE_PRC_AMT
                ,DECODE(#{sPrcTp},'01',NVL(B.RETL_PRC, 0),'02',NVL(B.WHSL_PRC, 0),'03',NVL(B.INC_PRC, 0),'04',NVL(B.TAX_DDCT_GRTE_PRC, 0),NVL(B.SALE_PRC_AMT, 0)) AS TAX_DDCT_GRTE_PRC
                ,C.ABC_IND
                ,C.CARLINE_CD
                ,C.PURC_LEAD_HM
                ,A.STRGE_CD AS GI_STRGE_CD
                ,C.GR_STRGE_CD
                ,A.STOCK_QTY
                ,A.AVLB_STOCK_QTY
                ,A.RESV_STOCK_QTY
                ,A.CLAM_STOCK_QTY
                ,A.BORROW_QTY
                ,A.RENT_QTY
                ,NVL(D.MOVING_AVG_PRC, C.MOVING_AVG_PRC) AS MOVING_AVG_PRC
                ,F.LOC_CD
                ,F.LOC_NM
                ,CASE WHEN NVL(TO_CHAR(C.END_DT,'YYYY-MM-DD'),'9999-12-31') <![CDATA[<]]> TO_CHAR(SYSDATE,'YYYY-MM-DD')  THEN 'N' ELSE 'Y' END END_CHK
            FROM (
                SELECT
                    DLR_CD
                    ,ITEM_CD
                    ,STRGE_CD
                    ,NVL(AVLB_STOCK_QTY,0) + NVL(RESV_STOCK_QTY,0) - NVL(BORROW_QTY,0) + NVL(RENT_QTY,0) AS STOCK_QTY
                    ,NVL(AVLB_STOCK_QTY,0) AS AVLB_STOCK_QTY
                    ,NVL(BORROW_QTY,0) AS BORROW_QTY
                    ,NVL(RENT_QTY,0) AS RENT_QTY
                    ,NVL(CLAM_STOCK_QTY,0) AS CLAM_STOCK_QTY
                    ,NVL(RESV_STOCK_QTY,0) AS RESV_STOCK_QTY
                FROM PT_0301T
                WHERE DLR_CD = #{sDlrCd}
                <if test='sItemCd != null and sItemCd != ""'>
                    AND ITEM_CD LIKE '%'||#{sItemCd}||'%'
                </if>
                <if test='sGrStrgeCd != null and sGrStrgeCd != ""'>
                    AND STRGE_CD = #{sGrStrgeCd}
                 </if>
            ) A
            LEFT JOIN
            (
                SELECT
                    DLR_CD
                    ,STRGE_CD
                    ,ITEM_CD
                    ,MAX(PRC_TP) AS PRC_TP
                    ,MAX(LINE_NO) AS LINE_NO
                    ,MAX(NVL(RETL_PRC,0)) AS RETL_PRC
                    ,MAX(NVL(WHSL_PRC,0)) AS WHSL_PRC
                    ,MAX(NVL(SALE_PRC_AMT,0)) AS SALE_PRC_AMT
                    ,MAX(NVL(INC_PRC,0)) AS INC_PRC
                    ,MAX(NVL(GRTE_PRC,0)) AS GRTE_PRC
                    ,MAX(NVL(TAX_DDCT_GRTE_PRC,0)) AS TAX_DDCT_GRTE_PRC
                FROM PT_0214T
                WHERE DLR_CD = #{sDlrCd}
                AND NVL(DEL_YN,'N') != 'Y'
                GROUP BY DLR_CD, STRGE_CD, ITEM_CD
            ) B ON A.DLR_CD = B.DLR_CD AND A.STRGE_CD = B.STRGE_CD AND A.ITEM_CD = B.ITEM_CD
            LEFT JOIN PT_0201T C ON A.DLR_CD = C.DLR_CD AND A.ITEM_CD = C.ITEM_CD
            LEFT JOIN PT_0208T D ON A.DLR_CD = D.DLR_CD AND A.STRGE_CD = D.STRGE_CD AND A.ITEM_CD = D.ITEM_CD
            LEFT JOIN CM_0104T E ON A.DLR_CD = E.DLR_CD AND A.STRGE_CD = E.STRGE_CD
            LEFT JOIN PT_0224T F ON A.DLR_CD = F.DLR_CD AND A.STRGE_CD = F.STRGE_CD AND A.ITEM_CD = F.ITEM_CD AND F.LOC_CD != ' '
            WHERE A.DLR_CD = #{sDlrCd}
            <if test='sItemCd != null and sItemCd != ""'>
                AND A.ITEM_CD LIKE '%'||#{sItemCd}||'%'
            </if>
            <if test='sItemNm != null and sItemNm != ""'>
                AND C.ITEM_NM LIKE '%'||#{sItemNm}||'%'
            </if>
            <if test='sAbcInd != null and sAbcInd != ""'>
                AND C.ABC_IND = #{sAbcInd}
            </if>
            <if test='sCarlineCd != null and sCarlineCd != ""'>
                AND C.CARLINE_CD = #{sCarlineCd}
            </if>
            <if test='sCarlineCd2 != null and sCarlineCd2 != ""'>
                AND C.CARLINE_CD2 = #{sCarlineCd2}
            </if>
            <if test='sItemDstinCd == null or sItemDstinCd == ""'>
                AND C.ITEM_DSTIN_CD in ('02','05')
            </if>
            <if test='sItemDstinCd != null and sItemDstinCd != ""'>
                AND C.ITEM_DSTIN_CD = #{sItemDstinCd}
            </if>
            <if test='sGrStrgeCd != null and sGrStrgeCd != ""'>
                AND A.STRGE_CD = #{sGrStrgeCd}
            </if>
            <if test='sAvlbStockQtyZeroYn == null or sAvlbStockQtyZeroYn != "N"'>
                AND A.AVLB_STOCK_QTY <![CDATA[>]]> 0
            </if>
            <if test='sPageTp != null and sPageTp != ""'>
            <choose>
                <when test='@org.apache.commons.lang3.StringUtils@contains(sPageTp,"IN")'>
                     AND E.STRGE_TP IN ('09','10')<!-- 페인트,보조부품 창고유형 만 -->
                </when>
                <otherwise>
                     AND E.STRGE_TP = #{sPageTp}
                </otherwise>
            </choose>
            </if>
            AND NVL(C.END_YN,'N') != 'Y'
            AND A.STRGE_CD IS NOT NULL<!-- 재고 창고 있는 부품  -->
            AND E.STRGE_TP NOT IN ('02','20')<!-- 창고유형 판매제외(부품)  -->
            AND C.ITEM_DSTIN_CD NOT IN ('04','20')<!-- 부품구분(패키지, 판매용품) 제외 -->
            ORDER BY
            <choose>
            <when test='sort != null'>
                <foreach item="item" index="index" collection="sort" open="" separator="," close="">
                <choose>
                    <when test='item.field == "itemCd"'>A.ITEM_CD <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                    <when test='item.field == "itemNm"'>C.ITEM_NM <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                    <otherwise>
                        A.DLR_CD ASC ,A.ITEM_CD ASC
                    </otherwise>
                </choose>
                </foreach>
            </when>
            <otherwise>
                A.DLR_CD ASC ,A.ITEM_CD ASC
            </otherwise>
            </choose>
        ) T1
        <where>
            <if test='sTaxDdctGrtePrcOverZeroUseYn != null and sTaxDdctGrtePrcOverZeroUseYn == "Y"'>
                T1.TAX_DDCT_GRTE_PRC <![CDATA[>]]> 0
            </if>

            <if test='sEndChk != null and sEndChk == "Y"'>
               -- AND T1.END_CHK = 'Y'
            </if>

        </where>

    </select>


    <!-- 서비스 보증단가  부품정보관리 정보를 조회한다. -->
    <select id="selectItemGrtePrcPopupByCondition" parameterType="ItemMasterSearchVO" resultType="ItemMasterVO">
        /* [chn.bhmc.dms.par.pmm.service.dao.ItemMasterDao.selectItemGrtePrcPopupByCondition] */
        SELECT
             RNUM
            ,DLR_CD
            ,ITEM_CD
            ,ITEM_NM
            ,STOCK_UNIT_CD
            ,PRC_TP
            ,MARK_UP
            ,SALE_PRC_AMT
            ,TAX_DDCT_GRTE_PRC
            ,ABC_IND
            ,CARLINE_CD
            ,PURC_LEAD_HM
            ,NVL(GR_STRGE_CD,' ') AS GR_STRGE_CD
            ,NVL(GI_STRGE_CD,' ') AS GI_STRGE_CD
            ,'' AS REQ_STRGE_CD
            ,NVL(STOCK_QTY,0) AS STOCK_QTY
            ,NVL(AVLB_STOCK_QTY,0) AS AVLB_STOCK_QTY
            ,NVL(RESV_STOCK_QTY,0) AS RESV_STOCK_QTY
            ,NVL(CLAM_STOCK_QTY,0) AS CLAM_STOCK_QTY
            ,NVL(BORROW_QTY,0) AS BORROW_QTY
            ,NVL(RENT_QTY,0) AS RENT_QTY
            ,NVL(MOVING_AVG_PRC, 0) AS MOVING_AVG_PRC
            ,NVL(LOC_CD, ' ') AS LOC_CD
            ,NVL(LOC_NM, ' ') AS LOC_NM
            ,END_CHK
        FROM
        (
            SELECT
                ROWNUM AS RNUM
                ,T1.DLR_CD
                ,T1.ITEM_CD
                ,T1.ITEM_NM
                ,T1.STOCK_UNIT_CD
                ,T1.PRC_TP
                ,T1.MARK_UP
                ,T1.SALE_PRC_AMT
                ,T1.TAX_DDCT_GRTE_PRC
                ,T1.ABC_IND
                ,T1.CARLINE_CD
                ,T1.PURC_LEAD_HM
                ,T1.GR_STRGE_CD
                ,T1.GI_STRGE_CD
                ,T1.STOCK_QTY
                ,T1.AVLB_STOCK_QTY
                ,T1.RESV_STOCK_QTY
                ,T1.CLAM_STOCK_QTY
                ,T1.BORROW_QTY
                ,T1.RENT_QTY
                ,T1.MOVING_AVG_PRC
                ,T1.LOC_CD
                ,T1.LOC_NM
                ,T1.END_CHK
            FROM
            (
                SELECT
                    C.DLR_CD
                    ,C.ITEM_CD
                    ,C.ITEM_NM
                    ,C.STOCK_UNIT_CD
                    ,'04' AS PRC_TP
                    ,C.ABC_IND
                    ,C.CARLINE_CD
                    ,C.PURC_LEAD_HM
                    ,C.GR_STRGE_CD
                    ,C.GI_STRGE_CD
                    ,A.LPR_PNO
                    ,A.PTUP_PART_NO
                    ,A.LPR_LST_PRC
                    ,A.MARK_UP
                    ,NVL(A.MARKUP_USE_YN,'N') AS MARKUP_USE_YN
                    ,A.SALE_PRC_AMT
                    ,A.TAX_DDCT_GRTE_PRC
                    ,F.STOCK_QTY
                    ,F.AVLB_STOCK_QTY
                    ,F.RESV_STOCK_QTY
                    ,F.CLAM_STOCK_QTY
                    ,F.BORROW_QTY
                    ,F.RENT_QTY
                    ,0 AS MOVING_AVG_PRC
                    ,' ' AS LOC_CD
                    ,' ' AS LOC_NM
                    ,CASE WHEN NVL(TO_CHAR(C.END_DT,'YYYY-MM-DD'),'9999-12-31') <![CDATA[<]]> TO_CHAR(SYSDATE,'YYYY-MM-DD')  THEN 'N' ELSE 'Y' END END_CHK
                FROM(
                    SELECT
                        A.LPR_PNO
                        ,B.PTUP_PART_NO
                        ,A.LPR_LST_PRC
                        ,B.PTUP_DUMP AS MARK_UP
                        ,NVL(B.MARKUP_USE_YN,'N') AS MARKUP_USE_YN
                        ,A.LPR_LST_PRC AS TAX_DDCT_GRTE_PRC
                        ,CASE WHEN B.MARKUP_USE_YN = 'Y' THEN
                            TO_NUMBER(ROUND(ROUND(A.LPR_LST_PRC  * ( 1 + FN_GET_VAT(null,'ALL')) * ROUND(B.PTUP_DUMP/100,2),2),2))
                        ELSE TO_NUMBER(ROUND(ROUND(A.LPR_LST_PRC * ( 1 + 0.12 ),2) * ( 1 + FN_GET_VAT(null,'ALL')),2))
                        END SALE_PRC_AMT
                    FROM(
                        SELECT
                             T1.LPR_PNO
                            ,T1.LPR_APL_DT
                            ,T1.LPR_LST_PRC
                        FROM PT_0214I T1
                        INNER JOIN(
                        SELECT
                             LPR_PNO
                            ,MAX(LPR_APL_DT) AS LPR_APL_DT
                        FROM PT_0214I
                        GROUP BY LPR_PNO
                        ) T2 ON T1.LPR_PNO = T2.LPR_PNO AND T1.LPR_APL_DT = T2.LPR_APL_DT
                    )A LEFT JOIN (
                       SELECT * FROM (
				    -----取最新接收的并且在有效范围内的加价率-----
						SELECT 
						row_number() over (partition by  PTUP_PART_NO order by CREATEDATE DESC) as rn
						,A.PTUP_PART_NO
						,A.PTUP_DUMP
						,A.PTUP_CDAT
						,'Y' AS MARKUP_USE_YN
						FROM PT_0215I A
						WHERE TO_CHAR(SYSDATE,'yyyyMMdd') between TO_CHAR(PTUP_EFFM,'yyyyMMdd') and TO_CHAR(PTUP_EFTO,'yyyyMMdd') 
			   			)WHERE RN = 1
                    )B ON TRIM(A.LPR_PNO) = TRIM(B.PTUP_PART_NO)
                )A
                LEFT JOIN PT_0201T C ON trim(A.LPR_PNO) = C.ITEM_CD
                LEFT JOIN CM_0104T E ON C.DLR_CD = E.DLR_CD AND C.GR_STRGE_CD = E.STRGE_CD
                LEFT JOIN
                (
                    SELECT
                        DLR_CD
                        ,ITEM_CD
                        ,NVL(SUM(AVLB_STOCK_QTY),0) + NVL(SUM(RESV_STOCK_QTY),0) - NVL(SUM(BORROW_QTY),0) + NVL(SUM(RENT_QTY),0) AS STOCK_QTY
                        ,NVL(SUM(AVLB_STOCK_QTY),0) AS AVLB_STOCK_QTY
                        ,NVL(SUM(BORROW_QTY),0) AS BORROW_QTY
                        ,NVL(SUM(RENT_QTY),0) AS RENT_QTY
                        ,NVL(SUM(CLAM_STOCK_QTY),0) AS CLAM_STOCK_QTY
                        ,NVL(SUM(RESV_STOCK_QTY),0) AS RESV_STOCK_QTY
                    FROM PT_0301T
                    WHERE DLR_CD = #{sDlrCd}
                    GROUP BY DLR_CD, ITEM_CD
                ) F ON C.DLR_CD = F.DLR_CD AND C.ITEM_CD = F.ITEM_CD
                WHERE C.DLR_CD = #{sDlrCd}
                <if test='sItemCd != null and sItemCd != ""'>
                    AND C.ITEM_CD LIKE '%'||#{sItemCd}||'%'
                </if>
                <if test='sItemNm != null and sItemNm != ""'>
                    AND C.ITEM_NM LIKE '%'||#{sItemNm}||'%'
                </if>
                <if test='sAbcInd != null and sAbcInd != ""'>
                    AND C.ABC_IND = #{sAbcInd}
                </if>
                <if test='sCarlineCd != null and sCarlineCd != ""'>
                    AND C.CARLINE_CD = #{sCarlineCd}
                </if>
                <if test='sCarlineCd2 != null and sCarlineCd2 != ""'>
                    AND C.CARLINE_CD2 = #{sCarlineCd2}
                </if>
                <if test='sItemDstinCd == null or sItemDstinCd == ""'>
                    AND C.ITEM_DSTIN_CD in ('02','05')
                </if>
                <if test='sItemDstinCd != null and sItemDstinCd != ""'>
                    AND C.ITEM_DSTIN_CD = #{sItemDstinCd}
                </if>
                <if test='sGrStrgeCd != null and sGrStrgeCd != ""'>
                    AND C.GR_STRGE_CD = #{sGrStrgeCd}
                </if>
                <if test='sAvlbStockQtyZeroYn == null or sAvlbStockQtyZeroYn != "N"'>
                    AND F.AVLB_STOCK_QTY <![CDATA[>]]> 0
                </if>
                <if test='sPageTp != null and sPageTp != ""'>
                <choose>
                    <when test='@org.apache.commons.lang3.StringUtils@contains(sPageTp,"IN")'>
                         AND E.STRGE_TP IN ('09','10')--페인트,보조부품 창고유형 만
                    </when>
                    <otherwise>
                         AND E.STRGE_TP = #{sPageTp}
                    </otherwise>
                </choose>
                </if>
                AND NVL(C.END_YN,'N') != 'Y'
                AND E.STRGE_TP NOT IN ('02','20')<!-- 창고유형 판매제외(부품)  -->
                AND C.ITEM_DSTIN_CD NOT IN ('04','20')<!-- 부품구분(패키지, 판매용품) 제외 -->
                ORDER BY
                <choose>
                <when test='sort != null'>
                    <foreach item="item" index="index" collection="sort" open="" separator="," close="">
                    <choose>
                        <when test='item.field == "itemCd"'>C.ITEM_CD <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                        <when test='item.field == "itemNm"'>C.ITEM_NM <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                        <otherwise>
                            C.DLR_CD ASC ,A.ITEM_CD ASC
                        </otherwise>
                    </choose>
                    </foreach>
                </when>
                <otherwise>
                    C.DLR_CD ASC ,C.ITEM_CD ASC
                </otherwise>
                </choose>
            ) T1
            <where>
                AND T1.TAX_DDCT_GRTE_PRC <![CDATA[>]]> 0
                AND T1.SALE_PRC_AMT <![CDATA[>]]> 0
            </where>
        )
        <where>
            <if test='firstIndex != -1 and lastIndex != -1'>
                RNUM <![CDATA[>]]> #{firstIndex} AND ROWNUM <![CDATA[<=]]> #{recordCountPerPage}
            </if>
        </where>
    </select>

    <!-- 서비스 보증단가  부품정보관리 카운트 정보를 조회한다. -->
    <select id="selectItemGrtePrcPopupByConditionCnt" parameterType="ItemMasterSearchVO" resultType="int">
        /* [chn.bhmc.dms.par.pmm.service.dao.selectItemGrtePrcPopupByConditionCnt] */
            SELECT
                count(1)
            FROM
            (
                SELECT
                    C.DLR_CD
                    ,C.ITEM_CD
                    ,C.ITEM_NM
                    ,C.STOCK_UNIT_CD
                    ,'04' AS PRC_TP
                    ,C.ABC_IND
                    ,C.CARLINE_CD
                    ,C.PURC_LEAD_HM
                    ,C.GR_STRGE_CD
                    ,C.GI_STRGE_CD
                    ,A.LPR_PNO
                    ,A.PTUP_PART_NO
                    ,A.LPR_LST_PRC
                    ,A.MARK_UP
                    ,NVL(A.MARKUP_USE_YN,'N') AS MARKUP_USE_YN
                    ,A.SALE_PRC_AMT
                    ,A.TAX_DDCT_GRTE_PRC
                    ,F.STOCK_QTY
                    ,F.AVLB_STOCK_QTY
                    ,F.RESV_STOCK_QTY
                    ,F.CLAM_STOCK_QTY
                    ,F.BORROW_QTY
                    ,F.RENT_QTY
                    ,0 AS MOVING_AVG_PRC
                    ,' ' AS LOC_CD
                    ,' ' AS LOC_NM
                    ,CASE WHEN NVL(TO_CHAR(C.END_DT,'YYYY-MM-DD'),'9999-12-31') <![CDATA[<]]> TO_CHAR(SYSDATE,'YYYY-MM-DD')  THEN 'N' ELSE 'Y' END END_CHK
                FROM(
                    SELECT
                        A.LPR_PNO
                        ,B.PTUP_PART_NO
                        ,A.LPR_LST_PRC
                        ,B.PTUP_DUMP AS MARK_UP
                        ,NVL(B.MARKUP_USE_YN,'N') AS MARKUP_USE_YN
                        ,A.LPR_LST_PRC AS TAX_DDCT_GRTE_PRC<!-- 보증원가(세금미포함) -->
                        ,CASE WHEN B.MARKUP_USE_YN = 'Y' THEN
                            TO_NUMBER(ROUND(ROUND(A.LPR_LST_PRC  * ( 1 + FN_GET_VAT(null,'ALL')) * ROUND(B.PTUP_DUMP/100,2),2),2))
                        ELSE TO_NUMBER(ROUND(ROUND(A.LPR_LST_PRC,2) * ( 1 + 0.12 ) * ( 1 + FN_GET_VAT(null,'ALL')),2))
                        END SALE_PRC_AMT<!-- 마크업 적용 보증가 -->
                    FROM(
                        SELECT
                             T1.LPR_PNO
                            ,T1.LPR_APL_DT
                            ,T1.LPR_LST_PRC
                        FROM PT_0214I T1
                        INNER JOIN(
                        SELECT
                             LPR_PNO
                            ,MAX(LPR_APL_DT) AS LPR_APL_DT
                        FROM PT_0214I
                        GROUP BY LPR_PNO
                        ) T2 ON T1.LPR_PNO = T2.LPR_PNO AND T1.LPR_APL_DT = T2.LPR_APL_DT
                    )A LEFT JOIN (
                       SELECT * FROM (
				    -----取最新接收的并且在有效范围内的加价率-----
						SELECT 
						row_number() over (partition by  PTUP_PART_NO order by CREATEDATE DESC) as rn
						,A.PTUP_PART_NO
						,A.PTUP_DUMP
						,A.PTUP_CDAT
						,'Y' AS MARKUP_USE_YN
						FROM PT_0215I A
						WHERE TO_CHAR(SYSDATE,'yyyyMMdd') between TO_CHAR(PTUP_EFFM,'yyyyMMdd') and TO_CHAR(PTUP_EFTO,'yyyyMMdd') 
			   			)WHERE RN = 1
                    )B ON TRIM(A.LPR_PNO) = TRIM(B.PTUP_PART_NO)
                )A
                LEFT JOIN PT_0201T C ON trim(A.LPR_PNO) = C.ITEM_CD
                LEFT JOIN CM_0104T E ON C.DLR_CD = E.DLR_CD AND C.GR_STRGE_CD = E.STRGE_CD
                LEFT JOIN
                (
                    SELECT
                        DLR_CD
                        ,ITEM_CD
                        ,NVL(SUM(AVLB_STOCK_QTY),0) + NVL(SUM(RESV_STOCK_QTY),0) - NVL(SUM(BORROW_QTY),0) + NVL(SUM(RENT_QTY),0) AS STOCK_QTY
                        ,NVL(SUM(AVLB_STOCK_QTY),0) AS AVLB_STOCK_QTY
                        ,NVL(SUM(BORROW_QTY),0) AS BORROW_QTY
                        ,NVL(SUM(RENT_QTY),0) AS RENT_QTY
                        ,NVL(SUM(CLAM_STOCK_QTY),0) AS CLAM_STOCK_QTY
                        ,NVL(SUM(RESV_STOCK_QTY),0) AS RESV_STOCK_QTY
                    FROM PT_0301T
                    WHERE DLR_CD = #{sDlrCd}
                    GROUP BY DLR_CD, ITEM_CD
                ) F ON C.DLR_CD = F.DLR_CD AND C.ITEM_CD = F.ITEM_CD
                WHERE C.DLR_CD = #{sDlrCd}
                <if test='sItemCd != null and sItemCd != ""'>
                    AND C.ITEM_CD LIKE '%'||#{sItemCd}||'%'
                </if>
                <if test='sItemNm != null and sItemNm != ""'>
                    AND C.ITEM_NM LIKE '%'||#{sItemNm}||'%'
                </if>
                <if test='sAbcInd != null and sAbcInd != ""'>
                    AND C.ABC_IND = #{sAbcInd}
                </if>
                <if test='sCarlineCd != null and sCarlineCd != ""'>
                    AND C.CARLINE_CD = #{sCarlineCd}
                </if>
                <if test='sCarlineCd2 != null and sCarlineCd2 != ""'>
                    AND C.CARLINE_CD2 = #{sCarlineCd2}
                </if>
                <if test='sItemDstinCd == null or sItemDstinCd == ""'>
                    AND C.ITEM_DSTIN_CD in ('02','05')
                </if>
                <if test='sItemDstinCd != null and sItemDstinCd != ""'>
                    AND C.ITEM_DSTIN_CD = #{sItemDstinCd}
                </if>
                <if test='sGrStrgeCd != null and sGrStrgeCd != ""'>
                    AND C.GR_STRGE_CD = #{sGrStrgeCd}
                </if>
                <if test='sAvlbStockQtyZeroYn == null or sAvlbStockQtyZeroYn != "N"'>
                    AND F.AVLB_STOCK_QTY <![CDATA[>]]> 0
                </if>
                <if test='sPageTp != null and sPageTp != ""'>
                <choose>
                    <when test='@org.apache.commons.lang3.StringUtils@contains(sPageTp,"IN")'>
                         AND E.STRGE_TP IN ('09','10')--페인트,보조부품 창고유형 만
                    </when>
                    <otherwise>
                         AND E.STRGE_TP = #{sPageTp}
                    </otherwise>
                </choose>
                </if>
                AND NVL(C.END_YN,'N') != 'Y'
                AND E.STRGE_TP NOT IN ('02','20')<!-- 창고유형 판매제외(부품)  -->
                AND C.ITEM_DSTIN_CD NOT IN ('04','20')<!-- 부품구분(패키지, 판매용품) 제외 -->
                ORDER BY
                <choose>
                <when test='sort != null'>
                    <foreach item="item" index="index" collection="sort" open="" separator="," close="">
                    <choose>
                        <when test='item.field == "itemCd"'>C.ITEM_CD <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                        <when test='item.field == "itemNm"'>C.ITEM_NM <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                        <otherwise>
                            C.DLR_CD ASC ,A.ITEM_CD ASC
                        </otherwise>
                    </choose>
                    </foreach>
                </when>
                <otherwise>
                    C.DLR_CD ASC ,C.ITEM_CD ASC
                </otherwise>
                </choose>
            ) T1
            <where>
                AND T1.TAX_DDCT_GRTE_PRC <![CDATA[>]]> 0
                AND T1.SALE_PRC_AMT <![CDATA[>]]> 0
            </where>
    </select>


    <!--판매단가  부품정보관리 단일정보 리스트 정보를 조회한다. -->
    <select id="selectSalePrcItemByKey" resultType="ItemMasterVO">
        /* [chn.bhmc.dms.par.pmm.service.dao.ItemMasterDao.selectSalePrcItemByKey] */
        SELECT
            A.DLR_CD
            ,A.ITEM_CD
            ,A.ITEM_NM
            ,A.STOCK_UNIT_CD
            ,B.PRC_TP
            ,NVL(B.RETL_PRC, 0) AS SALE_PRC_AMT
            ,A.ABC_IND
            ,A.CARLINE_CD
            ,A.PURC_LEAD_HM
            ,NVL(A.GR_STRGE_CD,' ') AS GR_STRGE_CD
            ,NVL(A.GI_STRGE_CD,' ') AS GI_STRGE_CD
            ,NVL(C.AVLB_STOCK_QTY, 0) AS AVLB_STOCK_QTY
            ,NVL(C.RESV_STOCK_QTY, 0) AS RESV_STOCK_QTY
            ,NVL(C.CLAM_STOCK_QTY, 0) AS CLAM_STOCK_QTY
            ,NVL(D.MOVING_AVG_PRC, A.MOVING_AVG_PRC) AS MOVING_AVG_PRC                --이동평균가격
        FROM PT_0201T A
        LEFT JOIN
        (
            SELECT
                DLR_CD
                ,ITEM_CD
                ,MAX(PRC_TP) AS PRC_TP
                ,MAX(LINE_NO) AS LINE_NO
                ,MAX(NVL(RETL_PRC,0)) AS RETL_PRC
                ,MAX(NVL(WHSL_PRC,0)) AS WHSL_PRC
                ,MAX(NVL(SALE_PRC_AMT,0)) AS SALE_PRC_AMT
            FROM PT_0214T
            WHERE DLR_CD = #{sDlrCd}
            AND NVL(DEL_YN,'N') != 'Y'
            GROUP BY DLR_CD, ITEM_CD
        ) B ON A.DLR_CD = B.DLR_CD AND A.ITEM_CD = B.ITEM_CD
        LEFT JOIN
        (
            SELECT
                DLR_CD
                ,ITEM_CD
                ,SUM(AVLB_STOCK_QTY) AS AVLB_STOCK_QTY
                ,SUM(BORROW_QTY) AS BORROW_QTY
                ,SUM(RENT_QTY) AS RENT_QTY
                ,SUM(CLAM_STOCK_QTY) AS CLAM_STOCK_QTY
                ,SUM(RESV_STOCK_QTY) AS RESV_STOCK_QTY
            FROM PT_0301T
            GROUP BY DLR_CD ,ITEM_CD
        ) C ON A.DLR_CD = C.DLR_CD AND A.ITEM_CD = C.ITEM_CD
        LEFT JOIN PT_0208T D ON A.DLR_CD = D.DLR_CD AND A.GI_STRGE_CD = D.STRGE_CD AND A.ITEM_CD = D.ITEM_CD
        WHERE A.DLR_CD = #{sDlrCd}
        AND A.ITEM_CD = #{sItemCd}
        AND NVL(A.END_YN,'N')  != 'Y'
        AND C.AVLB_STOCK_QTY  <![CDATA[>]]> 0
        <if test='sItemDstinCd != null and sItemDstinCd != ""'>
            AND A.ITEM_DSTIN_CD = #{sItemDstinCd}
        </if>
    </select>

    <!-- 판매단가  부품정보관리 단일정보 카운트 정보를 조회한다. -->
    <select id="selectSalePrcItemByKeyCnt" resultType="int">
        /* [chn.bhmc.dms.par.pmm.service.dao.selectSalePrcItemByKeyCnt] */
        SELECT
            COUNT(*)
        FROM PT_0201T A
        LEFT JOIN
        (
            SELECT
                DLR_CD
                ,ITEM_CD
                ,MAX(PRC_TP) AS PRC_TP
                ,MAX(LINE_NO) AS LINE_NO
                ,MAX(NVL(RETL_PRC,0)) AS RETL_PRC
                ,MAX(NVL(WHSL_PRC,0)) AS WHSL_PRC
                ,MAX(NVL(SALE_PRC_AMT,0)) AS SALE_PRC_AMT
            FROM PT_0214T
            WHERE DLR_CD = #{sDlrCd}
            AND NVL(DEL_YN,'N') != 'Y'
            GROUP BY DLR_CD, ITEM_CD
        ) B ON A.DLR_CD = B.DLR_CD AND A.ITEM_CD = B.ITEM_CD
        LEFT JOIN
        (
            SELECT
                DLR_CD
                ,ITEM_CD
                ,SUM(AVLB_STOCK_QTY) AS AVLB_STOCK_QTY
                ,SUM(BORROW_QTY) AS BORROW_QTY
                ,SUM(RENT_QTY) AS RENT_QTY
                ,SUM(CLAM_STOCK_QTY) AS CLAM_STOCK_QTY
                ,SUM(RESV_STOCK_QTY) AS RESV_STOCK_QTY
            FROM PT_0301T
            GROUP BY DLR_CD, ITEM_CD
        ) C ON A.DLR_CD = C.DLR_CD AND A.ITEM_CD = C.ITEM_CD
        WHERE A.DLR_CD = #{sDlrCd}
        AND A.ITEM_CD = #{sItemCd}
        AND C.AVLB_STOCK_QTY  <![CDATA[>]]> 0
        AND NVL(A.END_YN,'N') != 'Y'
        <if test='sItemDstinCd != null and sItemDstinCd != ""'>
            AND A.ITEM_DSTIN_CD = #{sItemDstinCd}
        </if>
    </select>

    <!-- 부품상세검색팝업  부품정보관리 리스트 정보를 조회한다.  -->
    <select id="selectSearchItemPopupByCondition" parameterType="ItemMasterSearchVO" resultType="ItemMasterVO">
        /* [chn.bhmc.dms.par.pmm.service.dao.ItemMasterDao.selectSearchItemPopupByCondition] */
        SELECT
            RNUM
            ,DLR_CD
            ,ITEM_CD
            ,SPYR_CD
            ,ITEM_NM
            ,ITEM_EN_NM
            ,NVL(ITEM_DSTIN_CD, ' ') AS ITEM_DSTIN_CD
            ,NVL(ITEM_GRP_CD, ' ') AS ITEM_GRP_CD
            ,NVL(ITEM_GRP_NM, ' ') AS ITEM_GRP_NM
            ,HS_CD
            ,END_YN
            ,START_DT
            ,END_DT
            ,PRE_ITEM_CD
            ,OLD_RPLC_ITEM_CD
            ,NEW_RPLC_ITEM_CD
            ,OLD_RPLC_PAR_CMPT_YN
            ,NEW_RPLC_PAR_CMPT_YN
            ,SUC_CD
            ,LAST_CMPT_ITEM_CD
            ,CAR_USE_UNIT_CNT
            ,MOBIS_IMP_LOCAL_YN_TP
            ,PAR_SPEC_CD
            ,PNC_CD
            ,NVL(STOCK_UNIT_CD,'EA') AS STOCK_UNIT_CD
            ,ITEM_LGTH_VAL
            ,ITEM_WIDTH_VAL
            ,ITEM_HGTH_VAL
            ,WEIGHT_UNIT_CD
            ,TOT_WEIGHT_VAL
            ,NET_WEIGHT_VAL
            ,ITEM_BARS_CD
            ,ITEM_QR_CD
            ,FILE_DOC_NO
            ,PURC_LEAD_HM
            ,CQTY_RAISE_TP
            ,MIN_PURC_QTY
            ,STDRD_STOCK_CALC_YN
            ,SFTY_STOCK_QTY
            ,STDRD_STOCK_QTY
            ,STDRD_STOCK_APPLY_RATE
            ,PURC_CQTY_CALC_YN
            ,STOCK_PRSN_ID
            ,PURC_PRSN_ID
            ,GR_STRGE_CD
            ,GI_STRGE_CD
            ,IMP_TEST_TP
            ,ABC_IND
            ,MM3_AVG_DMND_QTY
            ,MM6_AVG_DMND_QTY
            ,MM12_AVG_DMND_QTY
            ,PURC_REQ_CNT
            ,NON_MOVING_FLG
            ,BEF_LAST_GR_DT
            ,LAST_GR_DT
            ,BEF_LAST_GI_DT
            ,LAST_GI_DT
            ,LOCAL_ITEM_IF_YN
            ,RECOM_RTPRC_AMT
            ,REG_USR_ID
            ,REG_DT
            ,MOVING_AVG_PRC
            ,CARLINE_CD
            ,AVLB_STOCK_QTY
            ,REMARK
            ,DLR_SELF_ITEM_NM
        FROM
        (
            SELECT
                ROWNUM AS RNUM
                ,T1.DLR_CD
                ,T1.ITEM_CD
                ,T1.SPYR_CD
                ,T1.ITEM_NM
                ,T1.ITEM_EN_NM
                ,T1.ITEM_DSTIN_CD
                ,T1.ITEM_GRP_CD
                ,T1.ITEM_GRP_NM
                ,T1.HS_CD
                ,T1.END_YN
                ,T1.START_DT
                ,T1.END_DT
                ,T1.PRE_ITEM_CD
                ,T1.OLD_RPLC_ITEM_CD
                ,T1.NEW_RPLC_ITEM_CD
                ,T1.OLD_RPLC_PAR_CMPT_YN
                ,T1.NEW_RPLC_PAR_CMPT_YN
                ,T1.SUC_CD
                ,T1.LAST_CMPT_ITEM_CD
                ,T1.CAR_USE_UNIT_CNT
                ,T1.MOBIS_IMP_LOCAL_YN_TP
                ,T1.PAR_SPEC_CD
                ,T1.PNC_CD
                ,T1.STOCK_UNIT_CD
                ,T1.ITEM_LGTH_VAL
                ,T1.ITEM_WIDTH_VAL
                ,T1.ITEM_HGTH_VAL
                ,T1.WEIGHT_UNIT_CD
                ,T1.TOT_WEIGHT_VAL
                ,T1.NET_WEIGHT_VAL
                ,T1.ITEM_BARS_CD
                ,T1.ITEM_QR_CD
                ,T1.FILE_DOC_NO
                ,T1.PURC_LEAD_HM
                ,T1.CQTY_RAISE_TP
                ,T1.MIN_PURC_QTY
                ,T1.STDRD_STOCK_CALC_YN
                ,T1.SFTY_STOCK_QTY
                ,T1.STDRD_STOCK_QTY
                ,T1.STDRD_STOCK_APPLY_RATE
                ,T1.PURC_CQTY_CALC_YN
                ,T1.STOCK_PRSN_ID
                ,T1.PURC_PRSN_ID
                ,T1.GR_STRGE_CD
                ,T1.GI_STRGE_CD
                ,T1.IMP_TEST_TP
                ,T1.ABC_IND
                ,T1.MM3_AVG_DMND_QTY
                ,T1.MM6_AVG_DMND_QTY
                ,T1.MM12_AVG_DMND_QTY
                ,T1.PURC_REQ_CNT
                ,T1.NON_MOVING_FLG
                ,T1.BEF_LAST_GR_DT
                ,T1.LAST_GR_DT
                ,T1.BEF_LAST_GI_DT
                ,T1.LAST_GI_DT
                ,T1.LOCAL_ITEM_IF_YN
                ,T1.RECOM_RTPRC_AMT
                ,T1.REG_USR_ID
                ,T1.REG_DT
                ,T1.MOVING_AVG_PRC
                ,T1.CARLINE_CD
                ,T1.AVLB_STOCK_QTY
                ,T1.REMARK
                ,T1.DLR_SELF_ITEM_NM
            FROM
            (
                SELECT
                    A.DLR_CD
                    ,A.ITEM_CD
                    ,A.SPYR_CD
                    ,A.ITEM_NM
                    ,A.ITEM_EN_NM
                    ,A.ITEM_DSTIN_CD
                    ,A.ITEM_GRP_CD
                    ,B.ITEM_GRP_NM
                    ,A.HS_CD
                    ,A.END_YN
                    ,A.START_DT
                    ,A.END_DT
                    ,A.PRE_ITEM_CD
                    ,A.OLD_RPLC_ITEM_CD
                    ,A.NEW_RPLC_ITEM_CD
                    ,A.OLD_RPLC_PAR_CMPT_YN
                    ,A.NEW_RPLC_PAR_CMPT_YN
                    ,A.SUC_CD
                    ,A.LAST_CMPT_ITEM_CD
                    ,A.CAR_USE_UNIT_CNT
                    ,A.MOBIS_IMP_LOCAL_YN_TP
                    ,A.PAR_SPEC_CD
                    ,A.PNC_CD
                    ,A.STOCK_UNIT_CD
                    ,A.ITEM_LGTH_VAL
                    ,A.ITEM_WIDTH_VAL
                    ,A.ITEM_HGTH_VAL
                    ,A.WEIGHT_UNIT_CD
                    ,A.TOT_WEIGHT_VAL
                    ,A.NET_WEIGHT_VAL
                    ,A.ITEM_BARS_CD
                    ,A.ITEM_QR_CD
                    ,A.FILE_DOC_NO
                    ,A.PURC_LEAD_HM
                    ,A.CQTY_RAISE_TP
                    ,A.MIN_PURC_QTY
                    ,A.STDRD_STOCK_CALC_YN
                    ,A.SFTY_STOCK_QTY
                    ,A.STDRD_STOCK_QTY
                    ,A.STDRD_STOCK_APPLY_RATE
                    ,A.PURC_CQTY_CALC_YN
                    ,A.STOCK_PRSN_ID
                    ,A.PURC_PRSN_ID
                    ,A.GR_STRGE_CD
                    ,A.GI_STRGE_CD
                    ,A.IMP_TEST_TP
                    ,A.ABC_IND
                    ,A.MM3_AVG_DMND_QTY
                    ,A.MM6_AVG_DMND_QTY
                    ,A.MM12_AVG_DMND_QTY
                    ,A.PURC_REQ_CNT
                    ,A.NON_MOVING_FLG
                    ,A.BEF_LAST_GR_DT
                    ,A.LAST_GR_DT
                    ,A.BEF_LAST_GI_DT
                    ,A.LAST_GI_DT
                    ,A.LOCAL_ITEM_IF_YN
                    ,A.RECOM_RTPRC_AMT
                    ,A.REG_USR_ID
                    ,A.REG_DT
                    ,A.REMARK
                    ,A.DLR_SELF_ITEM_NM
                    ,NVL(D.MOVING_AVG_PRC, A.MOVING_AVG_PRC) AS MOVING_AVG_PRC                --이동평균가격
                    ,A.CARLINE_CD
                    ,NVL(C.AVLB_STOCK_QTY, 0) AS AVLB_STOCK_QTY
                FROM PT_0201T A
                LEFT JOIN PT_0101T B ON A.DLR_CD = B.DLR_CD AND A.ITEM_DSTIN_CD = B.ITEM_DSTIN_CD AND A.ITEM_GRP_CD = B.ITEM_GRP_CD AND B.USE_YN = 'Y'
                INNER JOIN
                (
                    SELECT
                        DLR_CD
                        ,ITEM_CD
                        ,SUM(AVLB_STOCK_QTY) AS AVLB_STOCK_QTY
                        ,SUM(BORROW_QTY) AS BORROW_QTY
                        ,SUM(RENT_QTY) AS RENT_QTY
                        ,SUM(CLAM_STOCK_QTY) AS CLAM_STOCK_QTY
                        ,SUM(RESV_STOCK_QTY) AS RESV_STOCK_QTY
                    FROM PT_0301T
                    GROUP BY DLR_CD, ITEM_CD
                ) C ON A.DLR_CD  = C.DLR_CD AND A.ITEM_CD = C.ITEM_CD
                LEFT OUTER JOIN PT_0208T D ON A.DLR_CD  = D.DLR_CD AND A.GI_STRGE_CD = D.STRGE_CD AND A.ITEM_CD = D.ITEM_CD
                WHERE A.DLR_CD = #{sDlrCd}
                <if test='sItemCd != null and sItemCd != ""'>
                    AND A.ITEM_CD LIKE '%'||#{sItemCd}||'%'
                </if>
                <if test='sItemNm != null and sItemNm != ""'>
                    AND A.ITEM_NM LIKE '%'||#{sItemNm}||'%'
                </if>
                <if test='sItemDstinCd != null and sItemDstinCd != ""'>
                    AND A.ITEM_DSTIN_CD = #{sItemDstinCd}
                </if>
                <if test='sItemGrpCd != null and sItemGrpCd != ""'>
                    AND A.ITEM_GRP_CD = #{sItemGrpCd}
                </if>
                <if test='sAbcInd != null and sAbcInd != ""'>
                    AND A.ABC_IND = #{sAbcInd}
                </if>
                <if test='sCarlineCd != null and sCarlineCd != ""'>
                    AND A.CARLINE_CD = #{sCarlineCd}
                </if>
                <if test='sAvlbStockQtyZeroYn != null and sAvlbStockQtyZeroYn == "N"'>
                    AND C.AVLB_STOCK_QTY <![CDATA[>]]> 0
                </if>
                AND NVL(A.END_YN,'N')  != 'Y'
                AND A.ITEM_DSTIN_CD NOT IN ('04','20') <!-- 부품구분(패키지,판매용품) 제외 -->
                ORDER BY
                <choose>
                <when test='sort != null'>
                    <foreach item="item" index="index" collection="sort" open="" separator="," close="">
                    <choose>
                        <when test='item.field == "itemCd"'>A.ITEM_CD <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                        <when test='item.field == "itemNm"'>A.ITEM_NM <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                        <when test='item.field == "itemDstinCd"'>A.ITEM_DSTIN_CD <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                        <when test='item.field == "itemGrpCd"'>A.ITEM_GRP_CD <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                        <otherwise>
                        A.DLR_CD ASC ,A.ITEM_CD ASC
                        </otherwise>
                    </choose>
                    </foreach>
                </when>
                <otherwise>
                A.DLR_CD ASC, A.ITEM_CD ASC
                </otherwise>
                </choose>
            ) T1
            <where>
                <if test='firstIndex != -1 and lastIndex != -1'>
                    ROWNUM <![CDATA[<=]]> #{lastIndex}
                </if>
            </where>
        )
        <where>
        <if test='firstIndex != -1 and lastIndex != -1'>
            RNUM <![CDATA[>]]> #{firstIndex}
        </if>
        </where>
    </select>

    <!-- 부품상세검색팝업  부품정보관리 리스트 정보를 조회한다.(기술자문)  -->
    <select id="selectSearchItemPopupByQnACondition" parameterType="ItemMasterSearchVO" resultType="ItemMasterVO">
        /* [chn.bhmc.dms.par.pmm.service.dao.ItemMasterDao.selectSearchItemPopupByQnACondition] */
        SELECT
            RNUM
            ,DLR_CD
            ,ITEM_CD
            ,SPYR_CD
            ,ITEM_NM
            ,ITEM_EN_NM
            ,NVL(ITEM_DSTIN_CD, ' ') AS ITEM_DSTIN_CD
            ,NVL(ITEM_GRP_CD, ' ') AS ITEM_GRP_CD
            ,NVL(ITEM_GRP_NM, ' ') AS ITEM_GRP_NM
            ,HS_CD
            ,END_YN
            ,START_DT
            ,END_DT
            ,PRE_ITEM_CD
            ,OLD_RPLC_ITEM_CD
            ,NEW_RPLC_ITEM_CD
            ,OLD_RPLC_PAR_CMPT_YN
            ,NEW_RPLC_PAR_CMPT_YN
            ,SUC_CD
            ,LAST_CMPT_ITEM_CD
            ,CAR_USE_UNIT_CNT
            ,MOBIS_IMP_LOCAL_YN_TP
            ,PAR_SPEC_CD
            ,PNC_CD
            ,NVL(STOCK_UNIT_CD,'EA') AS STOCK_UNIT_CD
            ,ITEM_LGTH_VAL
            ,ITEM_WIDTH_VAL
            ,ITEM_HGTH_VAL
            ,WEIGHT_UNIT_CD
            ,TOT_WEIGHT_VAL
            ,NET_WEIGHT_VAL
            ,ITEM_BARS_CD
            ,ITEM_QR_CD
            ,FILE_DOC_NO
            ,PURC_LEAD_HM
            ,CQTY_RAISE_TP
            ,MIN_PURC_QTY
            ,STDRD_STOCK_CALC_YN
            ,SFTY_STOCK_QTY
            ,STDRD_STOCK_QTY
            ,STDRD_STOCK_APPLY_RATE
            ,PURC_CQTY_CALC_YN
            ,STOCK_PRSN_ID
            ,PURC_PRSN_ID
            ,GR_STRGE_CD
            ,GI_STRGE_CD
            ,IMP_TEST_TP
            ,ABC_IND
            ,MM3_AVG_DMND_QTY
            ,MM6_AVG_DMND_QTY
            ,MM12_AVG_DMND_QTY
            ,PURC_REQ_CNT
            ,NON_MOVING_FLG
            ,BEF_LAST_GR_DT
            ,LAST_GR_DT
            ,BEF_LAST_GI_DT
            ,LAST_GI_DT
            ,LOCAL_ITEM_IF_YN
            ,RECOM_RTPRC_AMT
            ,REG_USR_ID
            ,REG_DT
            ,MOVING_AVG_PRC
            ,CARLINE_CD
            ,REMARK
            ,DLR_SELF_ITEM_NM
        FROM
        (
            SELECT
                ROWNUM AS RNUM
                ,T1.DLR_CD
                ,T1.ITEM_CD
                ,T1.SPYR_CD
                ,T1.ITEM_NM
                ,T1.ITEM_EN_NM
                ,T1.ITEM_DSTIN_CD
                ,T1.ITEM_GRP_CD
                ,T1.ITEM_GRP_NM
                ,T1.HS_CD
                ,T1.END_YN
                ,T1.START_DT
                ,T1.END_DT
                ,T1.PRE_ITEM_CD
                ,T1.OLD_RPLC_ITEM_CD
                ,T1.NEW_RPLC_ITEM_CD
                ,T1.OLD_RPLC_PAR_CMPT_YN
                ,T1.NEW_RPLC_PAR_CMPT_YN
                ,T1.SUC_CD
                ,T1.LAST_CMPT_ITEM_CD
                ,T1.CAR_USE_UNIT_CNT
                ,T1.MOBIS_IMP_LOCAL_YN_TP
                ,T1.PAR_SPEC_CD
                ,T1.PNC_CD
                ,T1.STOCK_UNIT_CD
                ,T1.ITEM_LGTH_VAL
                ,T1.ITEM_WIDTH_VAL
                ,T1.ITEM_HGTH_VAL
                ,T1.WEIGHT_UNIT_CD
                ,T1.TOT_WEIGHT_VAL
                ,T1.NET_WEIGHT_VAL
                ,T1.ITEM_BARS_CD
                ,T1.ITEM_QR_CD
                ,T1.FILE_DOC_NO
                ,T1.PURC_LEAD_HM
                ,T1.CQTY_RAISE_TP
                ,T1.MIN_PURC_QTY
                ,T1.STDRD_STOCK_CALC_YN
                ,T1.SFTY_STOCK_QTY
                ,T1.STDRD_STOCK_QTY
                ,T1.STDRD_STOCK_APPLY_RATE
                ,T1.PURC_CQTY_CALC_YN
                ,T1.STOCK_PRSN_ID
                ,T1.PURC_PRSN_ID
                ,T1.GR_STRGE_CD
                ,T1.GI_STRGE_CD
                ,T1.IMP_TEST_TP
                ,T1.ABC_IND
                ,T1.MM3_AVG_DMND_QTY
                ,T1.MM6_AVG_DMND_QTY
                ,T1.MM12_AVG_DMND_QTY
                ,T1.PURC_REQ_CNT
                ,T1.NON_MOVING_FLG
                ,T1.BEF_LAST_GR_DT
                ,T1.LAST_GR_DT
                ,T1.BEF_LAST_GI_DT
                ,T1.LAST_GI_DT
                ,T1.LOCAL_ITEM_IF_YN
                ,T1.RECOM_RTPRC_AMT
                ,T1.REG_USR_ID
                ,T1.REG_DT
                ,T1.MOVING_AVG_PRC
                ,T1.CARLINE_CD
                ,T1.REMARK
                ,T1.DLR_SELF_ITEM_NM
            FROM
            (
                SELECT
                    A.DLR_CD
                    ,A.ITEM_CD
                    ,A.SPYR_CD
                    ,A.ITEM_NM
                    ,A.ITEM_EN_NM
                    ,A.ITEM_DSTIN_CD
                    ,A.ITEM_GRP_CD
                    ,B.ITEM_GRP_NM
                    ,A.HS_CD
                    ,A.END_YN
                    ,A.START_DT
                    ,A.END_DT
                    ,A.PRE_ITEM_CD
                    ,A.OLD_RPLC_ITEM_CD
                    ,A.NEW_RPLC_ITEM_CD
                    ,A.OLD_RPLC_PAR_CMPT_YN
                    ,A.NEW_RPLC_PAR_CMPT_YN
                    ,A.SUC_CD
                    ,A.LAST_CMPT_ITEM_CD
                    ,A.CAR_USE_UNIT_CNT
                    ,A.MOBIS_IMP_LOCAL_YN_TP
                    ,A.PAR_SPEC_CD
                    ,A.PNC_CD
                    ,A.STOCK_UNIT_CD
                    ,A.ITEM_LGTH_VAL
                    ,A.ITEM_WIDTH_VAL
                    ,A.ITEM_HGTH_VAL
                    ,A.WEIGHT_UNIT_CD
                    ,A.TOT_WEIGHT_VAL
                    ,A.NET_WEIGHT_VAL
                    ,A.ITEM_BARS_CD
                    ,A.ITEM_QR_CD
                    ,A.FILE_DOC_NO
                    ,A.PURC_LEAD_HM
                    ,A.CQTY_RAISE_TP
                    ,A.MIN_PURC_QTY
                    ,A.STDRD_STOCK_CALC_YN
                    ,A.SFTY_STOCK_QTY
                    ,A.STDRD_STOCK_QTY
                    ,A.STDRD_STOCK_APPLY_RATE
                    ,A.PURC_CQTY_CALC_YN
                    ,A.STOCK_PRSN_ID
                    ,A.PURC_PRSN_ID
                    ,A.GR_STRGE_CD
                    ,A.GI_STRGE_CD
                    ,A.IMP_TEST_TP
                    ,A.ABC_IND
                    ,A.MM3_AVG_DMND_QTY
                    ,A.MM6_AVG_DMND_QTY
                    ,A.MM12_AVG_DMND_QTY
                    ,A.PURC_REQ_CNT
                    ,A.NON_MOVING_FLG
                    ,A.BEF_LAST_GR_DT
                    ,A.LAST_GR_DT
                    ,A.BEF_LAST_GI_DT
                    ,A.LAST_GI_DT
                    ,A.LOCAL_ITEM_IF_YN
                    ,A.RECOM_RTPRC_AMT
                    ,A.REG_USR_ID
                    ,A.REG_DT
                    ,A.REMARK
                    ,A.DLR_SELF_ITEM_NM
                    ,NVL(D.MOVING_AVG_PRC, A.MOVING_AVG_PRC) AS MOVING_AVG_PRC                --이동평균가격
                    ,A.CARLINE_CD
                FROM PT_0201T A
                LEFT JOIN PT_0101T B ON A.DLR_CD = B.DLR_CD AND A.ITEM_DSTIN_CD = B.ITEM_DSTIN_CD AND A.ITEM_GRP_CD = B.ITEM_GRP_CD AND B.USE_YN = 'Y'
                LEFT OUTER JOIN PT_0208T D ON A.DLR_CD  = D.DLR_CD AND A.GI_STRGE_CD = D.STRGE_CD AND A.ITEM_CD = D.ITEM_CD
                WHERE A.DLR_CD = #{sDlrCd}
                <if test='sItemCd != null and sItemCd != ""'>
                    AND A.ITEM_CD LIKE '%'||#{sItemCd}||'%'
                </if>
                <if test='sItemNm != null and sItemNm != ""'>
                    AND A.ITEM_NM LIKE '%'||#{sItemNm}||'%'
                </if>
                <if test='sItemDstinCd != null and sItemDstinCd != ""'>
                    AND A.ITEM_DSTIN_CD = #{sItemDstinCd}
                </if>
                <if test='sItemGrpCd != null and sItemGrpCd != ""'>
                    AND A.ITEM_GRP_CD = #{sItemGrpCd}
                </if>
                <if test='sAbcInd != null and sAbcInd != ""'>
                    AND A.ABC_IND = #{sAbcInd}
                </if>
                <if test='sCarlineCd != null and sCarlineCd != ""'>
                    AND A.CARLINE_CD = #{sCarlineCd}
                </if>
                AND NVL(A.END_YN,'N')  != 'Y'
                AND A.ITEM_DSTIN_CD NOT IN ('04','20') <!-- 부품구분(패키지,판매용품) 제외 -->
                AND A.SPYR_CD = '01'
                ORDER BY
                <choose>
                <when test='sort != null'>
                    <foreach item="item" index="index" collection="sort" open="" separator="," close="">
                    <choose>
                        <when test='item.field == "itemCd"'>ITEM_CD <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                        <when test='item.field == "itemNm"'>ITEM_NM <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                        <when test='item.field == "itemDstinCd"'>ITEM_DSTIN_CD <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                        <when test='item.field == "itemGrpCd"'>ITEM_GRP_CD <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                        <otherwise>
                        DLR_CD ASC ,ITEM_CD ASC
                        </otherwise>
                    </choose>
                    </foreach>
                </when>
                <otherwise>
                DLR_CD ASC, ITEM_CD ASC
                </otherwise>
                </choose>
            ) T1
            <where>
                <if test='firstIndex != -1 and lastIndex != -1'>
                    ROWNUM <![CDATA[<=]]> #{lastIndex}
                </if>
            </where>
        )
        <where>
        <if test='firstIndex != -1 and lastIndex != -1'>
            RNUM <![CDATA[>]]> #{firstIndex}
        </if>
        </where>
    </select>

    <!-- 부품상세검색팝업  부품정보관리 리스트 정보를 조회한다.(기술자문)  -->
    <select id="selectSearchItemPopupByQnAConditionCnt" parameterType="ItemMasterSearchVO" resultType="int">
        /* [chn.bhmc.dms.par.pmm.service.dao.ItemMasterDao.selectSearchItemPopupByQnAConditionCnt] */
            SELECT
                 count(*)
            FROM
            (
                SELECT
                    A.DLR_CD
                    ,A.ITEM_CD
                    ,A.SPYR_CD
                    ,A.ITEM_NM
                    ,A.ITEM_EN_NM
                    ,A.ITEM_DSTIN_CD
                    ,A.ITEM_GRP_CD
                    ,B.ITEM_GRP_NM
                    ,A.HS_CD
                    ,A.END_YN
                    ,A.START_DT
                    ,A.END_DT
                    ,A.PRE_ITEM_CD
                    ,A.OLD_RPLC_ITEM_CD
                    ,A.NEW_RPLC_ITEM_CD
                    ,A.OLD_RPLC_PAR_CMPT_YN
                    ,A.NEW_RPLC_PAR_CMPT_YN
                    ,A.SUC_CD
                    ,A.LAST_CMPT_ITEM_CD
                    ,A.CAR_USE_UNIT_CNT
                    ,A.MOBIS_IMP_LOCAL_YN_TP
                    ,A.PAR_SPEC_CD
                    ,A.PNC_CD
                    ,A.STOCK_UNIT_CD
                    ,A.ITEM_LGTH_VAL
                    ,A.ITEM_WIDTH_VAL
                    ,A.ITEM_HGTH_VAL
                    ,A.WEIGHT_UNIT_CD
                    ,A.TOT_WEIGHT_VAL
                    ,A.NET_WEIGHT_VAL
                    ,A.ITEM_BARS_CD
                    ,A.ITEM_QR_CD
                    ,A.FILE_DOC_NO
                    ,A.PURC_LEAD_HM
                    ,A.CQTY_RAISE_TP
                    ,A.MIN_PURC_QTY
                    ,A.STDRD_STOCK_CALC_YN
                    ,A.SFTY_STOCK_QTY
                    ,A.STDRD_STOCK_QTY
                    ,A.STDRD_STOCK_APPLY_RATE
                    ,A.PURC_CQTY_CALC_YN
                    ,A.STOCK_PRSN_ID
                    ,A.PURC_PRSN_ID
                    ,A.GR_STRGE_CD
                    ,A.GI_STRGE_CD
                    ,A.IMP_TEST_TP
                    ,A.ABC_IND
                    ,A.MM3_AVG_DMND_QTY
                    ,A.MM6_AVG_DMND_QTY
                    ,A.MM12_AVG_DMND_QTY
                    ,A.PURC_REQ_CNT
                    ,A.NON_MOVING_FLG
                    ,A.BEF_LAST_GR_DT
                    ,A.LAST_GR_DT
                    ,A.BEF_LAST_GI_DT
                    ,A.LAST_GI_DT
                    ,A.LOCAL_ITEM_IF_YN
                    ,A.RECOM_RTPRC_AMT
                    ,A.REG_USR_ID
                    ,A.REG_DT
                    ,A.REMARK
                    ,A.DLR_SELF_ITEM_NM
                    ,NVL(D.MOVING_AVG_PRC, A.MOVING_AVG_PRC) AS MOVING_AVG_PRC                --이동평균가격
                    ,A.CARLINE_CD
                FROM PT_0201T A
                LEFT JOIN PT_0101T B ON A.DLR_CD = B.DLR_CD AND A.ITEM_DSTIN_CD = B.ITEM_DSTIN_CD AND A.ITEM_GRP_CD = B.ITEM_GRP_CD AND B.USE_YN = 'Y'
                LEFT OUTER JOIN PT_0208T D ON A.DLR_CD  = D.DLR_CD AND A.GI_STRGE_CD = D.STRGE_CD AND A.ITEM_CD = D.ITEM_CD
                WHERE A.DLR_CD = #{sDlrCd}
                <if test='sItemCd != null and sItemCd != ""'>
                    AND A.ITEM_CD LIKE '%'||#{sItemCd}||'%'
                </if>
                <if test='sItemNm != null and sItemNm != ""'>
                    AND A.ITEM_NM LIKE '%'||#{sItemNm}||'%'
                </if>
                <if test='sItemDstinCd != null and sItemDstinCd != ""'>
                    AND A.ITEM_DSTIN_CD = #{sItemDstinCd}
                </if>
                <if test='sItemGrpCd != null and sItemGrpCd != ""'>
                    AND A.ITEM_GRP_CD = #{sItemGrpCd}
                </if>
                <if test='sAbcInd != null and sAbcInd != ""'>
                    AND A.ABC_IND = #{sAbcInd}
                </if>
                <if test='sCarlineCd != null and sCarlineCd != ""'>
                    AND A.CARLINE_CD = #{sCarlineCd}
                </if>
                AND NVL(A.END_YN,'N')  != 'Y'
                AND A.ITEM_DSTIN_CD NOT IN ('04','20') <!-- 부품구분(패키지,판매용품) 제외 -->
                AND A.SPYR_CD = '01'
                ORDER BY
                <choose>
                <when test='sort != null'>
                    <foreach item="item" index="index" collection="sort" open="" separator="," close="">
                    <choose>
                        <when test='item.field == "itemCd"'>ITEM_CD <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                        <when test='item.field == "itemNm"'>ITEM_NM <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                        <when test='item.field == "itemDstinCd"'>ITEM_DSTIN_CD <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                        <when test='item.field == "itemGrpCd"'>ITEM_GRP_CD <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                        <otherwise>
                        DLR_CD ASC ,ITEM_CD ASC
                        </otherwise>
                    </choose>
                    </foreach>
                </when>
                <otherwise>
                DLR_CD ASC, ITEM_CD ASC
                </otherwise>
                </choose>
            ) T1
    </select>

    <!-- 부품상세검색팝업  부품정보관리 카운트 정보를 조회한다. -->
    <select id="selectSearchItemPopupByConditionCnt" parameterType="ItemMasterSearchVO" resultType="int">
        /* [chn.bhmc.dms.par.pmm.service.dao.selectSearchItemPopupByConditionCnt] */
        SELECT
            COUNT(*) AS VALUE
        FROM PT_0201T A
        LEFT JOIN PT_0101T B ON A.DLR_CD = B.DLR_CD AND A.ITEM_DSTIN_CD = B.ITEM_DSTIN_CD AND A.ITEM_GRP_CD = B.ITEM_GRP_CD AND B.USE_YN = 'Y'
        INNER JOIN
        (
            SELECT
                DLR_CD
                ,ITEM_CD
                ,SUM(AVLB_STOCK_QTY) AS AVLB_STOCK_QTY
                ,SUM(BORROW_QTY) AS BORROW_QTY
                ,SUM(RENT_QTY) AS RENT_QTY
                ,SUM(CLAM_STOCK_QTY) AS CLAM_STOCK_QTY
                ,SUM(RESV_STOCK_QTY) AS RESV_STOCK_QTY
            FROM PT_0301T
            GROUP BY DLR_CD, ITEM_CD
        ) C ON A.DLR_CD = C.DLR_CD AND A.ITEM_CD = C.ITEM_CD
        WHERE A.DLR_CD  = #{sDlrCd}
        <if test='sItemCd != null and sItemCd != ""'>
            AND A.ITEM_CD LIKE '%'||#{sItemCd}||'%'
        </if>
        <if test='sItemNm != null and sItemNm != ""'>
            AND A.ITEM_NM LIKE '%'||#{sItemNm}||'%'
        </if>
        <if test='sItemDstinCd != null and sItemDstinCd != ""'>
            AND A.ITEM_DSTIN_CD = #{sItemDstinCd}
        </if>
        <if test='sItemGrpCd != null and sItemGrpCd != ""'>
            AND A.ITEM_GRP_CD = #{sItemGrpCd}
        </if>
        <if test='sAbcInd != null and sAbcInd != ""'>
            AND A.ABC_IND = #{sAbcInd}
        </if>
        <if test='sCarlineCd != null and sCarlineCd != ""'>
            AND A.CARLINE_CD = #{sCarlineCd}
        </if>
        <if test='sAvlbStockQtyZeroYn != null and sAvlbStockQtyZeroYn == "N"'>
            AND C.AVLB_STOCK_QTY > 0
        </if>
        AND NVL(A.END_YN,'N')  != 'Y'
        AND A.ITEM_DSTIN_CD NOT IN ('04','20') <!-- 부품구분(패키지,판매용품) 제외 -->
    </select>

    <!-- 구매오더 부품 정보를 삭제한다. -->
    <delete id="deleteLocalItemMaster" parameterType="PurcOrdItemVO">
        /* [chn.bhmc.dms.par.pmm.service.dao.ItemMasterDao.deleteLocalItemMaster] */
        DELETE PT_0201T A
        WHERE A.DLR_CD = #{dlrCd}
        AND A.ITEM_CD = #{itemCd}
    </delete>

    <!-- 부품구매가격제시  부품정보관리 정보를 조회한다. -->
    <select id="selectPurcPrcItemsForSuggest" parameterType="ItemMasterSearchVO" resultType="ItemMasterVO">
        /* [chn.bhmc.dms.par.pmm.service.dao.ItemMasterDao.selectPurcPrcItemsForSuggest] */
        SELECT
            T1.*
        FROM
        (
            SELECT
                A.DLR_CD
                ,A.BP_CD
                ,C.BP_NM
                ,A.ITEM_CD
                ,A.ITEM_NM
                ,A.STOCK_UNIT_CD
                ,NVL(B.PRC_TP, '01') AS PRC_TP
                ,NVL(B.SALE_PRC_AMT, 0) AS PURC_PRC
                ,NVL(D.AVLB_STOCK_QTY, 0) AS AVLB_STOCK_QTY
                ,A.ABC_IND
                ,A.CARLINE_CD
                ,A.PURC_LEAD_HM
                ,NVL(A.GR_STRGE_CD,' ') AS GR_STRGE_CD
                ,A.MIN_PURC_QTY
                ,NVL(D.BORROW_QTY,0) AS BORROW_QTY
                ,NVL(D.RENT_QTY,0) AS RENT_QTY
                ,NVL(D.AVLB_STOCK_QTY,0) + NVL(D.RESV_STOCK_QTY,0) - NVL(D.BORROW_QTY,0) + NVL(D.RENT_QTY,0) AS STOCK_QTY
                ,NVL(E.MOVING_AVG_PRC, A.MOVING_AVG_PRC) AS MOVING_AVG_PRC                --이동평균가격
            FROM PT_0201T A
            LEFT JOIN
            (
                SELECT
                    DLR_CD
                    ,ITEM_CD
                    ,MAX(PRC_TP) AS PRC_TP
                    ,MAX(LINE_NO) AS LINE_NO
                    ,MAX(NVL(SALE_PRC_AMT,0)) AS SALE_PRC_AMT
                FROM PT_0214T
                WHERE DLR_CD = #{sDlrCd}
                AND NVL(DEL_YN,'N') != 'Y'
                GROUP BY DLR_CD, ITEM_CD
            ) B ON A.DLR_CD = B.DLR_CD AND A.ITEM_CD= B.ITEM_CD
            LEFT JOIN PT_0211T C ON A.DLR_CD = C.DLR_CD AND A.BP_CD = C.BP_CD AND NVL(C.END_YN,'N') != 'Y'
            LEFT JOIN
            (
                SELECT
                    DLR_CD
                    ,ITEM_CD
                    ,SUM(NVL(AVLB_STOCK_QTY,0)) AS AVLB_STOCK_QTY
                    ,SUM(NVL(BORROW_QTY,0)) AS BORROW_QTY
                    ,SUM(NVL(RENT_QTY,0)) AS RENT_QTY
                    ,SUM(NVL(CLAM_STOCK_QTY,0)) AS CLAM_STOCK_QTY
                    ,SUM(NVL(RESV_STOCK_QTY,0)) AS RESV_STOCK_QTY
                    ,SUM(NVL(GR_SCHE_QTY,0)) AS GR_SCHE_QTY
                    ,SUM(NVL(GI_SCHE_QTY,0)) AS GI_SCHE_QTY
                FROM PT_0301T
                GROUP BY DLR_CD, ITEM_CD
            ) D ON A.DLR_CD = D.DLR_CD AND A.ITEM_CD = D.ITEM_CD
            LEFT JOIN PT_0208T E ON A.DLR_CD = E.DLR_CD AND A.GI_STRGE_CD = E.STRGE_CD AND A.ITEM_CD = E.ITEM_CD
            WHERE A.DLR_CD = #{sDlrCd}
            AND A.ITEM_CD LIKE '%'||#{sItemCd}||'%'
            AND NVL(A.END_YN,'N') != 'Y'
            AND A.ITEM_DSTIN_CD in ('02','05')
        ) T1
        WHERE ROWNUM <![CDATA[<=]]> #{recordCountPerPage}
    </select>

    <!-- 부품판매가격제시  부품정보관리 정보를 조회한다. -->
    <select id="selectSalePrcItemsForSuggest" parameterType="ItemMasterSearchVO" resultType="ItemMasterVO">
        /* [chn.bhmc.dms.par.pmm.service.dao.ItemMasterDao.selectSalePrcItemsForSuggest] */
                SELECT
                         DLR_CD
                        ,ITEM_CD
                        ,ITEM_NM
                        ,STOCK_UNIT_CD
                        ,RETL_PRC
                        ,WHSL_PRC
                        ,INC_PRC
                        ,GRTE_PRC
                        ,ABC_IND
                        ,CARLINE_CD
                        ,PURC_LEAD_HM
                        ,NVL(GR_STRGE_CD,' ') AS GR_STRGE_CD
                        ,NVL(GI_STRGE_CD,' ') AS GI_STRGE_CD
                        ,'' AS REQ_STRGE_CD
                        ,NVL(STOCK_QTY,0) AS STOCK_QTY
                        ,NVL(AVLB_STOCK_QTY,0) AS AVLB_STOCK_QTY
                        ,NVL(RESV_STOCK_QTY,0) AS RESV_STOCK_QTY
                        ,NVL(CLAM_STOCK_QTY,0) AS CLAM_STOCK_QTY
                        ,NVL(BORROW_QTY,0) AS BORROW_QTY
                        ,NVL(RENT_QTY,0) AS RENT_QTY
                        ,NVL(MOVING_AVG_PRC, 0) AS MOVING_AVG_PRC
                        ,NVL(LOC_CD, ' ') AS LOC_CD
                        ,NVL(LOC_NM, ' ') AS LOC_NM
                        ,BP_TP
                        ,BP_CD
                        ,BP_NM
                FROM
                (
                    SELECT
                        A.DLR_CD
                        ,A.ITEM_CD
                        ,C.ITEM_NM
                        ,C.STOCK_UNIT_CD
                        ,CASE WHEN B.STD_PRC_CD IS NULL THEN C.LAST_GR_AMT
                        ELSE B.RETL_PRC
                        END AS RETL_PRC
                        ,CASE WHEN B.STD_PRC_CD IS NULL THEN C.LAST_GR_AMT
                        ELSE B.WHSL_PRC
                        END AS WHSL_PRC
                        ,CASE WHEN B.STD_PRC_CD IS NULL THEN C.LAST_GR_AMT
                        ELSE B.INC_PRC
                        END AS INC_PRC
                        ,NVL(B.GRTE_PRC,0) AS GRTE_PRC
                        ,C.ABC_IND
                        ,C.CARLINE_CD
                        ,C.PURC_LEAD_HM
                        ,A.STRGE_CD AS GI_STRGE_CD
                        ,A.STRGE_CD AS GR_STRGE_CD
                        ,NVL(A.AVLB_STOCK_QTY,0) + NVL(A.RESV_STOCK_QTY,0) - NVL(A.BORROW_QTY,0) + NVL(A.RENT_QTY,0) AS STOCK_QTY
                        ,NVL(A.AVLB_STOCK_QTY,0) AS AVLB_STOCK_QTY
                        ,NVL(A.BORROW_QTY,0) AS BORROW_QTY
                        ,NVL(A.RENT_QTY,0) AS RENT_QTY
                        ,NVL(A.CLAM_STOCK_QTY,0) AS CLAM_STOCK_QTY
                        ,NVL(A.RESV_STOCK_QTY,0) AS RESV_STOCK_QTY
                        ,NVL(D.MOVING_AVG_PRC, C.MOVING_AVG_PRC) AS MOVING_AVG_PRC
                        ,F.LOC_CD
                        ,F.LOC_NM
                        ,G.BP_TP
                        ,G.BP_CD
                        ,G.BP_NM
                    FROM PT_0301T A
                    INNER JOIN PT_0214T B ON A.DLR_CD = B.DLR_CD AND A.STRGE_CD = B.STRGE_CD AND A.ITEM_CD = B.ITEM_CD
                    LEFT JOIN PT_0201T C ON A.DLR_CD = C.DLR_CD AND A.ITEM_CD = C.ITEM_CD
                    LEFT JOIN PT_0208T D ON A.DLR_CD = D.DLR_CD AND A.STRGE_CD = D.STRGE_CD AND A.ITEM_CD = D.ITEM_CD
                    LEFT JOIN CM_0104T E ON A.DLR_CD = E.DLR_CD AND A.STRGE_CD = E.STRGE_CD
                    LEFT JOIN PT_0224T F
                      ON A.DLR_CD = F.DLR_CD AND A.STRGE_CD = F.STRGE_CD AND A.ITEM_CD = F.ITEM_CD AND F.LOC_CD != ''
                    LEFT JOIN PT_0211T G ON G.DLR_CD = C.DLR_CD AND G.BP_CD = C.BP_CD AND NVL(G.END_YN,'N') != 'Y'
                    WHERE A.DLR_CD = #{sDlrCd}
                      AND A.ITEM_CD LIKE '%'||#{sItemCd}||'%'
                      AND C.ITEM_DSTIN_CD in ('02','05')
                      AND (NVL(C.END_YN,'N') != 'Y' OR (NVL(C.END_YN,'N') = 'Y' AND A.AVLB_STOCK_QTY <![CDATA[>]]> 0))
                      AND A.STRGE_CD IS NOT NULL<!-- 재고 창고 있는 부품  -->
                      AND C.ITEM_DSTIN_CD != '20'<!-- 부품구분(판매용품) 제외 -->
                ) T1
                WHERE ROWNUM <![CDATA[<=]]> #{recordCountPerPage}
    </select>

    <!-- key in한 부품번호에 해당하는 목록을 조회한다.(정비수령전용) -->
    <select id="selectIssueReqItemSalePrcByKeyIn" parameterType="ItemMasterSearchVO" resultType="ItemMasterVO">
        /* [chn.bhmc.dms.par.pmm.service.dao.ItemMasterDao.selectIssueReqItemSalePrcByKeyIn] */
                SELECT
                         DLR_CD
                        ,ITEM_CD
                        ,ITEM_NM
                        ,STOCK_UNIT_CD
                        ,RETL_PRC
                        ,WHSL_PRC
                        ,INC_PRC
                        ,GRTE_PRC
                        ,ABC_IND
                        ,CARLINE_CD
                        ,PURC_LEAD_HM
                        ,NVL(GR_STRGE_CD,' ') AS GR_STRGE_CD
                        ,NVL(GI_STRGE_CD,' ') AS GI_STRGE_CD
                        ,'' AS REQ_STRGE_CD
                        ,NVL(STOCK_QTY,0) AS STOCK_QTY
                        ,NVL(AVLB_STOCK_QTY,0) AS AVLB_STOCK_QTY
                        ,NVL(RESV_STOCK_QTY,0) AS RESV_STOCK_QTY
                        ,NVL(CLAM_STOCK_QTY,0) AS CLAM_STOCK_QTY
                        ,NVL(BORROW_QTY,0) AS BORROW_QTY
                        ,NVL(RENT_QTY,0) AS RENT_QTY
                        ,NVL(MOVING_AVG_PRC, 0) AS MOVING_AVG_PRC
                        ,NVL(LOC_CD, ' ') AS LOC_CD
                        ,NVL(LOC_NM, ' ') AS LOC_NM
                        ,BP_TP
                        ,BP_CD
                        ,BP_NM
                FROM
                (
                    SELECT
                        A.DLR_CD
                        ,A.ITEM_CD
                        ,C.ITEM_NM
                        ,C.STOCK_UNIT_CD
                        ,CASE WHEN B.STD_PRC_CD IS NULL THEN C.LAST_GR_AMT
                        ELSE B.RETL_PRC
                        END AS RETL_PRC
                        ,CASE WHEN B.STD_PRC_CD IS NULL THEN C.LAST_GR_AMT
                        ELSE B.WHSL_PRC
                        END AS WHSL_PRC
                        ,CASE WHEN B.STD_PRC_CD IS NULL THEN C.LAST_GR_AMT
                        ELSE B.INC_PRC
                        END AS INC_PRC
                        ,NVL(B.GRTE_PRC,0) AS GRTE_PRC
                        ,C.ABC_IND
                        ,C.CARLINE_CD
                        ,C.PURC_LEAD_HM
                        ,A.STRGE_CD AS GI_STRGE_CD
                        ,A.STRGE_CD AS GR_STRGE_CD
                        ,NVL(A.AVLB_STOCK_QTY,0) + NVL(A.RESV_STOCK_QTY,0) - NVL(A.BORROW_QTY,0) + NVL(A.RENT_QTY,0) AS STOCK_QTY
                        ,NVL(A.AVLB_STOCK_QTY,0) AS AVLB_STOCK_QTY
                        ,NVL(A.BORROW_QTY,0) AS BORROW_QTY
                        ,NVL(A.RENT_QTY,0) AS RENT_QTY
                        ,NVL(A.CLAM_STOCK_QTY,0) AS CLAM_STOCK_QTY
                        ,NVL(A.RESV_STOCK_QTY,0) AS RESV_STOCK_QTY
                        ,NVL(D.MOVING_AVG_PRC, C.MOVING_AVG_PRC) AS MOVING_AVG_PRC
                        ,F.LOC_CD
                        ,F.LOC_NM
                        ,G.BP_TP
                        ,G.BP_CD
                        ,G.BP_NM
                    FROM PT_0301T A
                    INNER JOIN PT_0214T B ON A.DLR_CD = B.DLR_CD AND A.STRGE_CD = B.STRGE_CD AND A.ITEM_CD = B.ITEM_CD
                    LEFT JOIN PT_0201T C ON A.DLR_CD = C.DLR_CD AND A.ITEM_CD = C.ITEM_CD
                    LEFT JOIN PT_0208T D ON A.DLR_CD = D.DLR_CD AND A.STRGE_CD = D.STRGE_CD AND A.ITEM_CD = D.ITEM_CD
                    LEFT JOIN CM_0104T E ON A.DLR_CD = E.DLR_CD AND A.STRGE_CD = E.STRGE_CD
                    LEFT JOIN PT_0224T F
                      ON A.DLR_CD = F.DLR_CD AND A.STRGE_CD = F.STRGE_CD AND A.ITEM_CD = F.ITEM_CD AND F.LOC_CD != ''
                    LEFT JOIN PT_0211T G ON G.DLR_CD = C.DLR_CD AND G.BP_CD = C.BP_CD AND NVL(G.END_YN,'N') != 'Y'
                    WHERE A.DLR_CD = #{sDlrCd}
                      AND A.ITEM_CD = #{sItemCd}
                      AND C.ITEM_DSTIN_CD in ('02','05')
                      AND A.AVLB_STOCK_QTY <![CDATA[>]]> 0
                      AND (NVL(C.END_YN,'N') != 'Y' OR (NVL(C.END_YN,'N') = 'Y' AND A.AVLB_STOCK_QTY <![CDATA[>]]> 0))
                      AND A.STRGE_CD IS NOT NULL<!-- 재고 창고 있는 부품  -->
                      AND C.ITEM_DSTIN_CD != '20'<!-- 부품구분(판매용품) 제외 -->
                ) T1
    </select>

     <!-- 판매단가(서비스전용)  부품정보관리 정보를 조회한다. -->
    <select id="selectItemSalePrcForServicePopupByCondition" parameterType="ItemMasterSearchVO" resultType="ItemMasterVO">
        /* [chn.bhmc.dms.par.pmm.service.dao.ItemMasterDao.selectItemSalePrcForServicePopupByCondition] */
        SELECT
                RNUM
                ,DLR_CD
                ,ITEM_CD
                ,ITEM_NM
                ,STOCK_UNIT_CD
                ,MARK_UP
                ,RETL_PRC
                ,WHSL_PRC
                ,INC_PRC
                ,GRTE_PRC
                ,ABC_IND
                ,CARLINE_CD
                ,PURC_LEAD_HM
                ,NVL(GR_STRGE_CD,' ') AS GR_STRGE_CD
                ,NVL(GI_STRGE_CD,' ') AS GI_STRGE_CD
                ,'' AS REQ_STRGE_CD
                ,NVL(STOCK_QTY,0) AS STOCK_QTY
                ,NVL(AVLB_STOCK_QTY,0) AS AVLB_STOCK_QTY
                ,NVL(RESV_STOCK_QTY,0) AS RESV_STOCK_QTY
                ,NVL(CLAM_STOCK_QTY,0) AS CLAM_STOCK_QTY
                ,NVL(BORROW_QTY,0) AS BORROW_QTY
                ,NVL(RENT_QTY,0) AS RENT_QTY
                ,NVL(MOVING_AVG_PRC, 0) AS MOVING_AVG_PRC
                ,NVL(MOVING_AVG_TAX_DDCT_PRC, 0) AS MOVING_AVG_TAX_DDCT_PRC
                ,NVL(LOC_CD, ' ') AS LOC_CD
                ,NVL(LOC_NM, ' ') AS LOC_NM
                ,BP_TP
                ,BP_CD
                ,BP_NM
                ,TAX_DDCT_GRTE_PRC
                ,SALE_PRC_AMT
            FROM
            (
                SELECT
                    ROWNUM AS RNUM
                    ,T1.DLR_CD
                    ,T1.ITEM_CD
                    ,T1.ITEM_NM
                    ,T1.STOCK_UNIT_CD
                    ,T1.MARK_UP
                    ,T1.RETL_PRC
                    ,T1.WHSL_PRC
                    ,T1.INC_PRC
                    ,T1.GRTE_PRC
                    ,T1.ABC_IND
                    ,T1.CARLINE_CD
                    ,T1.PURC_LEAD_HM
                    ,T1.GR_STRGE_CD
                    ,T1.GI_STRGE_CD
                    ,T1.STOCK_QTY
                    ,T1.AVLB_STOCK_QTY
                    ,T1.RESV_STOCK_QTY
                    ,T1.CLAM_STOCK_QTY
                    ,T1.BORROW_QTY
                    ,T1.RENT_QTY
                    ,T1.MOVING_AVG_PRC
                    ,T1.MOVING_AVG_TAX_DDCT_PRC
                    ,T1.LOC_CD
                    ,T1.LOC_NM
                    ,T1.BP_TP
                    ,T1.BP_CD
                    ,T1.BP_NM
                    ,T1.TAX_DDCT_GRTE_PRC
                    ,T1.SALE_PRC_AMT
                FROM
                (
                    SELECT
                        A.DLR_CD
                        ,A.ITEM_CD
                        ,C.ITEM_NM
                        ,C.STOCK_UNIT_CD
                        ,(
                            SELECT
                                TB.PTUP_DUMP AS MARK_UP<!-- 없으면 기본 null -->
                            FROM(
                                SELECT
                                    TRIM(T1.APCP_PART_NO) AS APCP_PART_NO
                                    ,T1.APCP_APPLY_DATE
                                    ,T1.APCP_PRICE_NAT_AMT
                                FROM PT_0216I T1
                                INNER JOIN(
                                SELECT
                                    TRIM(APCP_PART_NO) AS APCP_PART_NO
                                    ,MAX(APCP_APPLY_DATE) AS APCP_APPLY_DATE
                                FROM PT_0216I
                                GROUP BY APCP_PART_NO
                                ) T2 ON T1.APCP_PART_NO = T2.APCP_PART_NO AND T1.APCP_APPLY_DATE = T2.APCP_APPLY_DATE
                            )TA LEFT JOIN (
                                SELECT
                                    TRIM(PTUP_PART_NO) AS PTUP_PART_NO
                                    ,MAX(PTUP_CDAT) AS PTUP_CDAT
                                    ,MAX(PTUP_DUMP) AS PTUP_DUMP
                                    ,'Y' AS MARKUP_USE_YN
                                FROM PT_0215I
                                GROUP BY PTUP_PART_NO
                            )TB ON TA.APCP_PART_NO = TB.PTUP_PART_NO
                            WHERE TA.APCP_PART_NO = A.ITEM_CD
                        ) AS MARK_UP<!-- 마크업 -->
                        ,CASE WHEN B.STD_PRC_CD IS NULL THEN C.LAST_GR_AMT
                        ELSE B.RETL_PRC
                        END AS RETL_PRC
                        ,CASE WHEN B.STD_PRC_CD IS NULL THEN C.LAST_GR_AMT
                        ELSE B.WHSL_PRC
                        END AS WHSL_PRC
                        ,CASE WHEN B.STD_PRC_CD IS NULL THEN C.LAST_GR_AMT
                        ELSE B.INC_PRC
                        END AS INC_PRC
                        ,NVL(B.GRTE_PRC,0) AS GRTE_PRC
                        ,C.ABC_IND
                        ,C.CARLINE_CD
                        ,C.PURC_LEAD_HM
                        ,A.STRGE_CD AS GI_STRGE_CD
                        ,A.STRGE_CD AS GR_STRGE_CD
                        ,NVL(A.AVLB_STOCK_QTY,0) + NVL(A.RESV_STOCK_QTY,0) - NVL(A.BORROW_QTY,0) + NVL(A.RENT_QTY,0) AS STOCK_QTY
                        ,NVL(A.AVLB_STOCK_QTY,0) AS AVLB_STOCK_QTY
                        ,NVL(A.BORROW_QTY,0) AS BORROW_QTY
                        ,NVL(A.RENT_QTY,0) AS RENT_QTY
                        ,NVL(A.CLAM_STOCK_QTY,0) AS CLAM_STOCK_QTY
                        ,NVL(A.RESV_STOCK_QTY,0) AS RESV_STOCK_QTY
                        ,NVL(D.MOVING_AVG_PRC, C.MOVING_AVG_PRC) AS MOVING_AVG_PRC
                        ,NVL(D.MOVING_AVG_TAX_DDCT_PRC, 0) AS MOVING_AVG_TAX_DDCT_PRC
                        ,F.LOC_CD
                        ,F.LOC_NM
                        ,G.BP_TP
                        ,G.BP_CD
                        ,G.BP_NM
                        ,B.TAX_DDCT_GRTE_PRC
                        ,B.SALE_PRC_AMT
                    FROM PT_0301T A
                    INNER JOIN PT_0214T B ON A.DLR_CD = B.DLR_CD AND A.STRGE_CD = B.STRGE_CD AND A.ITEM_CD = B.ITEM_CD
                    LEFT JOIN PT_0201T C ON A.DLR_CD = C.DLR_CD AND A.ITEM_CD = C.ITEM_CD
                    LEFT JOIN PT_0208T D ON A.DLR_CD = D.DLR_CD AND A.STRGE_CD = D.STRGE_CD AND A.ITEM_CD = D.ITEM_CD
                    LEFT JOIN CM_0104T E ON A.DLR_CD = E.DLR_CD AND A.STRGE_CD = E.STRGE_CD
                    LEFT JOIN PT_0224T F
                      ON A.DLR_CD = F.DLR_CD AND A.STRGE_CD = F.STRGE_CD AND A.ITEM_CD = F.ITEM_CD AND F.LOC_CD != ''
                    LEFT JOIN PT_0211T G ON G.DLR_CD = C.DLR_CD AND G.BP_CD = C.BP_CD AND NVL(G.END_YN,'N') != 'Y'
                    WHERE A.DLR_CD = #{sDlrCd}
                    <if test='sItemCd != null and sItemCd != ""'>
                        AND A.ITEM_CD LIKE '%'||#{sItemCd}||'%'
                    </if>
                    <if test='sItemNm != null and sItemNm != ""'>
                        AND C.ITEM_NM LIKE '%'||#{sItemNm}||'%'
                    </if>
                    <if test='sAbcInd != null and sAbcInd != ""'>
                        AND C.ABC_IND = #{sAbcInd}
                    </if>
                    <if test='sCarlineCd != null and sCarlineCd != ""'>
                        AND C.CARLINE_CD = #{sCarlineCd}
                    </if>
                    <if test='sCarlineCd2 != null and sCarlineCd2 != ""'>
                        AND C.CARLINE_CD2 = #{sCarlineCd2}
                    </if>
                    <!-- <if test='sItemDstinCd == null or sItemDstinCd == ""'>
                        AND C.ITEM_DSTIN_CD in ('02','05')
                    </if> -->
                    <if test='sItemDstinCd != null and sItemDstinCd != ""'>
                        AND C.ITEM_DSTIN_CD = #{sItemDstinCd}
                    </if>
                    <if test='sGrStrgeCd != null and sGrStrgeCd != ""'>
                        AND A.STRGE_CD = #{sGrStrgeCd}
                    </if>
                    <if test='sAvlbStockQtyZeroYn == null or sAvlbStockQtyZeroYn != "N"'>
                        AND A.AVLB_STOCK_QTY <![CDATA[>]]> 0
                    </if>
                    <if test='sBpTp != null and sBpTp != ""'>
                        <choose>
                            <when test='sBpTp == "01"'>
                                 AND G.BP_TP = NVL(#{sBpTp},'03')
                            </when>
                            <otherwise>
                                 AND NVL(G.BP_TP,'03') != '01'
                            </otherwise>
                        </choose>
                    </if>
                    <if test='sPageTp != null and sPageTp != ""'>
                        <choose>
                            <when test='@org.apache.commons.lang3.StringUtils@contains(sPageTp,"IN")'>
                                 AND E.STRGE_TP IN ('09','10')--페인트,보조부품 창고유형 만
                            </when>
                            <otherwise>
                                 AND E.STRGE_TP = #{sPageTp}
                            </otherwise>
                        </choose>
                    </if>
                    AND (NVL(C.END_YN,'N') != 'Y' OR (NVL(C.END_YN,'N') = 'Y' AND A.AVLB_STOCK_QTY <![CDATA[>]]> 0))
                    AND A.STRGE_CD IS NOT NULL<!-- 재고 창고 있는 부품  -->
                    AND C.ITEM_DSTIN_CD NOT IN ('20','04')<!-- 부품구분(판매용품) 제외 -->
                ) T1
                ORDER BY
                  <choose>
                    <when test='sort != null'>
                        <foreach item="item" index="index" collection="sort" open="" separator="," close="">
                        <choose>
                            <when test='item.field == "stockQty"'>T1.STOCK_QTY <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                            <when test='item.field == "avlbStockQty"'>T1.AVLB_STOCK_QTY <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                            <otherwise>
                                T1.DLR_CD ASC ,T1.ITEM_CD ASC
                            </otherwise>
                        </choose>
                        </foreach>
                    </when>
                    <otherwise>
                        T1.DLR_CD ASC ,T1.ITEM_CD ASC
                    </otherwise>
                  </choose>
            )
            <where>
                <if test='firstIndex != -1 and lastIndex != -1'>
                    RNUM <![CDATA[>]]> #{firstIndex} AND ROWNUM <![CDATA[<=]]> #{recordCountPerPage}
                </if>
            </where>
    </select>

    <!-- 판매단가(서비스전용)  부품정보관리 카운트 정보를 조회한다. -->
    <select id="selectItemSalePrcForServicePopupByConditionCnt" parameterType="ItemMasterSearchVO" resultType="int">
        /* [chn.bhmc.dms.par.pmm.service.dao.selectItemSalePrcForServicePopupByConditionCnt] */
        SELECT
            COUNT(*) AS VALUE
        FROM PT_0301T A
        INNER JOIN PT_0214T B ON A.DLR_CD = B.DLR_CD AND A.STRGE_CD = B.STRGE_CD AND A.ITEM_CD = B.ITEM_CD
        LEFT JOIN PT_0201T C ON A.DLR_CD = C.DLR_CD AND A.ITEM_CD = C.ITEM_CD
        LEFT JOIN CM_0104T E ON C.DLR_CD = E.DLR_CD AND A.STRGE_CD = E.STRGE_CD
        LEFT JOIN PT_0211T G ON G.DLR_CD = C.DLR_CD AND G.BP_CD = C.BP_CD AND NVL(G.END_YN,'N') != 'Y'
        WHERE A.DLR_CD = #{sDlrCd}
        <if test='sItemCd != null and sItemCd != ""'>
            AND A.ITEM_CD LIKE '%'||#{sItemCd}||'%'
        </if>
        <if test='sItemNm != null and sItemNm != ""'>
            AND C.ITEM_NM LIKE '%'||#{sItemNm}||'%'
        </if>
        <if test='sAbcInd != null and sAbcInd != ""'>
            AND C.ABC_IND = #{sAbcInd}
        </if>
        <if test='sCarlineCd != null and sCarlineCd != ""'>
            AND C.CARLINE_CD = #{sCarlineCd}
        </if>
        <if test='sCarlineCd2 != null and sCarlineCd2 != ""'>
            AND C.CARLINE_CD2 = #{sCarlineCd2}
        </if>
        <!-- <if test='sItemDstinCd == null or sItemDstinCd == ""'>
            AND C.ITEM_DSTIN_CD in ('02','05')
        </if> -->
        <if test='sItemDstinCd != null and sItemDstinCd != ""'>
            AND C.ITEM_DSTIN_CD = #{sItemDstinCd}
        </if>
        <if test='sGrStrgeCd != null and sGrStrgeCd != ""'>
            AND A.STRGE_CD = #{sGrStrgeCd}
        </if>
        <if test='sAvlbStockQtyZeroYn == null or sAvlbStockQtyZeroYn != "N"'>
            AND A.AVLB_STOCK_QTY <![CDATA[>]]> 0
        </if>
        <if test='sBpTp != null and sBpTp != ""'>
            <choose>
                <when test='sBpTp == "01"'>
                     AND G.BP_TP = NVL(#{sBpTp},'03')
                </when>
                <otherwise>
                     AND NVL(G.BP_TP,'03') != '01'
                </otherwise>
            </choose>
        </if>
        <if test='sPageTp != null and sPageTp != ""'>
            <choose>
                <when test='@org.apache.commons.lang3.StringUtils@contains(sPageTp,"IN")'>
                     AND E.STRGE_TP IN ('09','10')--페인트,보조부품 창고유형 만
                </when>
                <otherwise>
                     AND E.STRGE_TP = #{sPageTp}
                </otherwise>
            </choose>
        </if>
        AND C.ITEM_DSTIN_CD NOT IN ('20','04') <!-- 부품구분(판매용품) 제외 -->
        AND (NVL(C.END_YN,'N') != 'Y' OR (NVL(C.END_YN,'N') = 'Y' AND A.AVLB_STOCK_QTY <![CDATA[>]]> 0))
        AND A.STRGE_CD IS NOT NULL  <!-- 재고 창고 있는 부품 -->

    </select>

    <!-- 부품기준 창고를 조회한다. -->
    <select id="selectStandardStrgeCdByItemCd" parameterType="ItemMasterSearchVO" resultType="String">
    /* [chn.bhmc.dms.par.pmm.service.dao.ItemMasterDAO.selectStandardStrgeCdByItemCd] */
            SELECT STRGE_CD
              FROM
            (
                SELECT STRGE_CD
                  FROM PT_0301T
                 WHERE DLR_CD  = #{sDlrCd}
                   AND ITEM_CD LIKE SUBSTR(#{sItemCd},0,5)||'%'
              GROUP BY STRGE_CD
              ORDER BY SUM(AVLB_STOCK_QTY) DESC
            ) A
            WHERE ROWNUM = 1
    </select>

    <!-- 부품마스터 정보의 수정일시를 조회한다. -->
    <select id="selectItemMasterUpdtDtByKey" parameterType="ItemMasterVO" resultType="String">
        /* [chn.bhmc.dms.par.pmm.service.dao.ItemMasterDAO.selectItemMasterUpdtDtByKey] */
        SELECT TO_CHAR(NVL(A.UPDT_DT,A.REG_DT), 'YYYYMMDDHH24MISS') AS UPDT_DT_STR
          FROM DMSDB.PT_0201T A    --부품마스터정보
         WHERE A.DLR_CD             = #{dlrCd}
           AND A.ITEM_CD            = #{itemCd}
    </select>
    
    <!-- 借进登记入库修改弹出配件选择窗口 add by lyy 2018-09-07 -->
    <select id="selectReceiveEtcBorrowByCondition" resultType="ItemMasterVO">
        /* [chn.bhmc.dms.par.pmm.service.dao.ItemMasterDao.selectReceiveEtcBorrowByCondition] */
        SELECT
            RNUM
            ,DLR_CD
            ,SPYR_CD
            ,BP_TP
            ,BP_CD
            ,BP_NM
            ,ITEM_CD
            ,ITEM_NM
            ,STOCK_UNIT_CD
            ,ITEM_DSTIN_CD
            ,ITEM_DSTIN_AMOS_CD
            ,LOC_CD
            ,PRC_TP
            ,NVL(PURC_PRC,0) AS PURC_PRC
            ,BMP_PURC_PRC
            ,NVL(LAST_GR_PRC,0) AS LAST_GR_PRC
            ,AVLB_STOCK_QTY
            ,ABC_IND
            ,CARLINE_CD
            ,CARLINE_CD2
            ,PURC_LEAD_HM
            ,NVL(GR_STRGE_CD,' ') AS GR_STRGE_CD
            ,NVL(MIN_PURC_QTY, 1) AS MIN_PURC_QTY
            ,NVL(MIN_PACK_QTY, 1) AS MIN_PACK_QTY
            ,BORROW_QTY
            ,RENT_QTY
            ,STOCK_QTY
            ,RESV_STOCK_QTY
            ,MOVING_AVG_PRC
            ,STRGE_CD_LIST
            ,END_CHK
            ,PAR_SPEC_CD
            ,SUC_CD
        FROM
        (
            SELECT
                ROWNUM AS RNUM
                ,T1.DLR_CD
                ,T1.SPYR_CD
                ,T1.BP_TP
                ,T1.BP_CD
                ,T1.BP_NM
                ,T1.ITEM_CD
                ,T1.ITEM_NM
                ,T1.STOCK_UNIT_CD
                ,T1.ITEM_DSTIN_CD
                ,T1.ITEM_DSTIN_AMOS_CD
                ,T1.LOC_CD
                ,T1.PRC_TP
                ,T1.LAST_GR_PRC
                ,T1.BMP_PURC_PRC
                ,T1.PURC_PRC
                ,T1.AVLB_STOCK_QTY
                ,T1.ABC_IND
                ,T1.CARLINE_CD
                ,T1.CARLINE_CD2
                ,T1.PURC_LEAD_HM
                ,T1.GR_STRGE_CD
                ,T1.MIN_PURC_QTY
                ,T1.MIN_PACK_QTY
                ,T1.BORROW_QTY
                ,T1.RENT_QTY
                ,T1.STOCK_QTY
                ,T1.RESV_STOCK_QTY
                ,ROUND(NVL(T1.MOVING_AVG_PRC,0),2) AS MOVING_AVG_PRC
                ,T1.STRGE_CD_LIST
                ,T1.END_CHK
                ,T1.PAR_SPEC_CD
                ,T1.SUC_CD
            FROM
            (
                SELECT
                    A.DLR_CD
                    ,A.SPYR_CD
                    ,A.BP_CD
                    ,C.BP_TP
                    ,C.BP_NM
                    ,A.ITEM_CD
                    ,A.ITEM_NM
                    ,A.STOCK_UNIT_CD
                    ,A.ITEM_DSTIN_CD
                    ,A.ITEM_DSTIN_AMOS_CD
                    ,F.LOC_CD
                    ,B.PRC_TP
                    ,NVL(A.LAST_GR_AMT, 0) AS LAST_GR_PRC
                    ,CASE WHEN NVL(B.BMP_PURC_PRC,0) <![CDATA[>]]> 0
                            THEN B.BMP_PURC_PRC
                          ELSE NVL((SELECT NVL(ROUND(LPR_LST_PRC * ( 1 + FN_GET_VAT(null,'ALL')),2),0)
                                  FROM PT_0214I T2
                                 WHERE (LPR_PNO,LPR_APL_DT) IN (
                                            SELECT LPR_PNO,
                                                   MAX(LPR_APL_DT) AS LPR_APL_DT
                                              FROM PT_0214I T3
                                             WHERE TRIM(T3.LPR_PNO) = A.ITEM_CD
                                          GROUP BY LPR_PNO)),
                               (SELECT NVL(ROUND(T.APCP_PRICE_NAT_AMT * ( 1 + FN_GET_VAT(null,'ALL')),2),0)
                                  FROM PT_0216I T
                                 WHERE (APCP_PART_NO,APCP_APPLY_DATE) IN (
                                          SELECT APCP_PART_NO,
                                                 MAX(APCP_APPLY_DATE) AS APCP_APPLY_DATE
                                            FROM PT_0216I I
                                           WHERE I.APCP_PART_NO = A.ITEM_CD
                                        GROUP BY APCP_PART_NO )
                               )
                     ) END  BMP_PURC_PRC
                    ,NVL(A.LAST_GR_AMT, B.BMP_PURC_PRC) AS PURC_PRC
                    ,NVL(D.AVLB_STOCK_QTY, 0) AS AVLB_STOCK_QTY
                    ,A.ABC_IND
                    ,A.CARLINE_CD
                    ,A.CARLINE_CD2
                    ,A.PURC_LEAD_HM
                    ,A.GR_STRGE_CD
                    ,A.MIN_PURC_QTY
                    ,A.MIN_PACK_QTY
                    ,NVL(D.BORROW_QTY, 0) AS BORROW_QTY
                    ,NVL(D.RENT_QTY, 0) AS RENT_QTY
                    ,NVL(E.MOVING_AVG_PRC, A.MOVING_AVG_PRC) AS MOVING_AVG_PRC                --이동평균가격
                    ,NVL(D.AVLB_STOCK_QTY,0) + NVL(D.RESV_STOCK_QTY,0) - NVL(D.BORROW_QTY,0) + NVL(D.RENT_QTY,0) AS STOCK_QTY
                    ,NVL(D.RESV_STOCK_QTY, 0) AS RESV_STOCK_QTY
                    ,D.STRGE_CD_LIST
                    , CASE WHEN NVL(TO_CHAR(A.END_DT,'YYYY-MM-DD'),'9999-12-31') <![CDATA[<]]> TO_CHAR(SYSDATE,'YYYY-MM-DD')  THEN 'N' ELSE 'Y' END END_CHK
                    ,NVL(A.PAR_SPEC_CD,' ') AS PAR_SPEC_CD
                    ,NVL(A.SUC_CD,' ') as SUC_CD
                FROM PT_0201T A
                LEFT JOIN
                (
                    SELECT
                        DLR_CD
                        ,ITEM_CD
                        ,MAX(PRC_TP) AS PRC_TP
                        ,MAX(LINE_NO) AS LINE_NO
                        ,MAX(NVL(SALE_PRC_AMT,0)) AS BMP_PURC_PRC
                    FROM PT_0214T
                    WHERE DLR_CD = #{sDlrCd}
                    AND NVL(DEL_YN,'N') != 'Y'
                    GROUP BY DLR_CD, ITEM_CD
                ) B ON A.DLR_CD = B.DLR_CD AND A.ITEM_CD = B.ITEM_CD
                INNER JOIN PT_0211T C ON A.DLR_CD = C.DLR_CD AND A.BP_CD  = C.BP_CD AND NVL(C.END_YN,'N') != 'Y'
                LEFT JOIN
                (
                    SELECT
                         A.DLR_CD
                        ,A.ITEM_CD
                        ,SUBSTR(xmlagg(xmlelement(a,','||B.STRGE_NM) ORDER BY A.ITEM_CD,A.STRGE_CD).extract('//text()'),2) AS STRGE_CD_LIST
                        ,SUM(NVL(A.AVLB_STOCK_QTY,0)) AS AVLB_STOCK_QTY
                        ,SUM(NVL(A.BORROW_QTY,0)) AS BORROW_QTY
                        ,SUM(NVL(A.RENT_QTY,0)) AS RENT_QTY
                        ,SUM(NVL(A.CLAM_STOCK_QTY,0)) AS CLAM_STOCK_QTY
                        ,SUM(NVL(A.RESV_STOCK_QTY,0)) AS RESV_STOCK_QTY
                        ,SUM(NVL(A.GR_SCHE_QTY,0)) AS GR_SCHE_QTY
                        ,SUM(NVL(A.GI_SCHE_QTY,0)) AS GI_SCHE_QTY
                    FROM PT_0301T A
                            LEFT OUTER JOIN CM_0104T B
                                ON A.DLR_CD   = B.DLR_CD
                               AND A.STRGE_CD  = B.STRGE_CD
                   WHERE A.DLR_CD  = #{sDlrCd}
                     --AND NVL(A.AVLB_STOCK_QTY,0) + NVL(A.RESV_STOCK_QTY,0) - NVL(A.BORROW_QTY,0) + NVL(A.RENT_QTY,0) <![CDATA[>]]> 0
                    GROUP BY A.DLR_CD ,A.ITEM_CD
                ) D ON A.DLR_CD = D.DLR_CD AND A.ITEM_CD = D.ITEM_CD
                LEFT JOIN PT_0208T E ON A.DLR_CD = E.DLR_CD AND A.GI_STRGE_CD = E.STRGE_CD AND A.ITEM_CD = E.ITEM_CD
                LEFT JOIN PT_0224T F
                   ON A.DLR_CD = F.DLR_CD AND A.GI_STRGE_CD = F.STRGE_CD AND A.ITEM_CD = F.ITEM_CD AND F.LOC_CD != ''
                WHERE A.DLR_CD  = #{sDlrCd}
                <if test='sItemCd != null and sItemCd != ""'> AND A.ITEM_CD LIKE '%'||#{sItemCd}||'%' </if>
                <if test='sItemNm != null and sItemNm != ""'> AND A.ITEM_NM LIKE '%'||#{sItemNm}||'%' </if>
                <if test='sAbcInd != null and sAbcInd != ""'> AND A.ABC_IND = #{sAbcInd} </if>
                <if test='sCarlineCd != null and sCarlineCd != ""'> AND A.CARLINE_CD = #{sCarlineCd}</if>
                <if test='sBrandCd != null and sBrandCd != ""'> AND A.BRAND_CD = #{sBrandCd}</if>
                <if test='sBpCd != null and sBpCd != ""'> AND A.BP_CD = #{sBpCd}</if>
                <if test='sGrStrgeCd != null and sGrStrgeCd != ""'> AND A.GI_STRGE_CD = #{sGrStrgeCd}</if>
                <if test='sBpTp != null and sBpTp != ""'>
                    <choose>
                        <when test='sBpTp != "01"'>
                            AND A.SPYR_CD != '01'
                        </when>
                        <otherwise>
                            AND A.SPYR_CD  = '01'
                        </otherwise>
                    </choose>
                </if>
                <if test='sPurcTpList != null and !sPurcTpList.isEmpty'>
                    AND (A.PAR_SPEC_CD IN
                    <foreach item="item" index="index" collection="sPurcTpList" open="(" separator="," close=")">
                       #{item}
                    </foreach>
                    or A.PAR_SPEC_CD IS NULL)
                </if>        --구매오더코드
                <!-- 借进登记入库，不区分配件是否终止 update by lyy 2018-09-05 start -->
                <!-- AND NVL(A.END_YN,'N')  != 'Y' -->
                <!-- 借进登记入库，不区分配件是否终止 update by lyy 2018-09-05 end -->
                AND A.GR_STRGE_CD IS NOT NULL
                AND A.GI_STRGE_CD IS NOT NULL
                <!-- 借进登记入库，查询非BMP配件时统计空值  update by lyy 2018-09-21 start -->
	            AND NVL(C.BP_TP,'99') <![CDATA[<>]]> '01'
	            <!-- 借进登记入库，查询非BMP配件时统计空值 update by lyy 2018-09-21 end -->
                AND A.ITEM_DSTIN_CD NOT IN ('20','04') <!-- 부품구분(판매용품,패키지) 제외 -->
                <choose>
                     <when test='sItemDstinCd != null and sItemDstinCd != ""'>
                          AND A.ITEM_DSTIN_CD = #{sItemDstinCd}
                     </when>
                     <otherwise>
                          --AND A.ITEM_DSTIN_CD in ('02','05') --천충이 구매입고 팝업에서 페인트,오일도 키인시 구매입고가능해야한다했음
                     </otherwise>
                 </choose>
                 ORDER BY
                 <choose>
                     <when test='sort != null'>
                         <foreach item="item" index="index" collection="sort" open="" separator="," close="">
                             <choose>
                                 <when test='item.field == "itemCd"'>ITEM_CD <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                                 <when test='item.field == "itemNm"'>ITEM_NM <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                                 <otherwise>
                                    DLR_CD ASC, ITEM_CD ASC
                                 </otherwise>
                             </choose>
                         </foreach>
                     </when>
                     <otherwise>
                     DLR_CD ASC, ITEM_CD ASC
                     </otherwise>
                 </choose>
           ) T1
            WHERE 1=1
            <if test='firstIndex != -1 and lastIndex != -1'>
                AND ROWNUM <![CDATA[<=]]> #{lastIndex}
            </if>
           -- AND T1.END_CHK = 'Y'
     )
     <where>
        <if test='firstIndex != -1 and lastIndex != -1'>
            RNUM <![CDATA[>]]> #{firstIndex}
        </if>
     </where>
    </select>

    <!-- 팝업용 부품정보관리 카운트 정보를 조회한다. -->
    <select id="selectReceiveEtcBorrowByConditionCnt" resultType="int">
        /* [chn.bhmc.dms.par.pmm.service.dao.selectReceiveEtcBorrowByConditionCnt] */
            SELECT
                COUNT(*) AS VALUE
            FROM PT_0201T A
            LEFT JOIN (
                SELECT
                    DLR_CD
                    ,ITEM_CD
                    ,MAX(PRC_TP) AS PRC_TP
                    ,MAX(LINE_NO) AS LINE_NO
                    ,MAX(NVL(SALE_PRC_AMT,0)) AS SALE_PRC_AMT
                FROM PT_0214T
                WHERE DLR_CD = #{sDlrCd}
                AND NVL(DEL_YN,'N') != 'Y'
                GROUP BY DLR_CD, ITEM_CD
            ) B ON A.DLR_CD = B.DLR_CD AND A.ITEM_CD = B.ITEM_CD
            INNER JOIN PT_0211T C ON A.DLR_CD = C.DLR_CD AND A.BP_CD  = C.BP_CD AND NVL(C.END_YN,'N') != 'Y'
            WHERE A.DLR_CD = #{sDlrCd}
            <if test='sItemCd != null and sItemCd != ""'> AND A.ITEM_CD LIKE '%'||#{sItemCd}||'%' </if>
            <if test='sItemNm != null and sItemNm != ""'> AND A.ITEM_NM LIKE '%'||#{sItemNm}||'%' </if>
            <if test='sAbcInd != null and sAbcInd != ""'> AND A.ABC_IND = #{sAbcInd}</if>
            <if test='sCarlineCd != null and sCarlineCd != ""'> AND A.CARLINE_CD = #{sCarlineCd}</if>
            <if test='sBrandCd != null and sBrandCd != ""'> AND A.BRAND_CD = #{sBrandCd}</if>
            <if test='sBpCd != null and sBpCd != ""'> AND A.BP_CD = #{sBpCd} </if>
            <if test='sGrStrgeCd != null and sGrStrgeCd != ""'> AND A.GI_STRGE_CD = #{sGrStrgeCd}</if>
            <if test='sBpTp != null and sBpTp != ""'>
                <choose>
                    <when test='sBpTp != "01"'>
                        AND A.SPYR_CD != '01'
                    </when>
                    <otherwise>
                        AND A.SPYR_CD  = '01'
                    </otherwise>
                </choose>
            </if>
            <if test='sPurcTpList != null and !sPurcTpList.isEmpty'>
                AND (A.PAR_SPEC_CD IN
                    <foreach item="item" index="index" collection="sPurcTpList" open="(" separator="," close=")">
                       #{item}
                    </foreach>
                    or A.PAR_SPEC_CD IS NULL)
            </if>
            <!-- 借进登记入库，不区分配件是否终止 update by lyy 2018-09-05 start -->
            <!-- AND NVL(A.END_YN,'N')  != 'Y' -->
            <!-- 借进登记入库，不区分配件是否终止 update by lyy 2018-09-05 end -->
            AND A.GR_STRGE_CD IS NOT NULL
            AND A.GI_STRGE_CD IS NOT NULL
            <!-- 借进登记入库，查询非BMP配件时统计空值  update by lyy 2018-09-21 start -->
            AND NVL(C.BP_TP,'99') <![CDATA[<>]]> '01'
            <!-- 借进登记入库，查询非BMP配件时统计空值 update by lyy 2018-09-21 end -->
            AND A.ITEM_DSTIN_CD = '02'
            AND A.ITEM_DSTIN_CD NOT IN ('20','04') <!-- 부품구분(판매용품,패키지) 제외 -->
            <choose>
                <when test='sItemDstinCd != null and sItemDstinCd != ""'>
                    AND A.ITEM_DSTIN_CD = #{sItemDstinCd}
                </when>
                <otherwise>
                    --AND A.ITEM_DSTIN_CD in ('02','05')  --천충이 구매입고 팝업에서 페인트,오일도 키인시 구매입고가능해야한다했음
                </otherwise>
            </choose>
            <!-- AND NVL(TO_CHAR(A.END_DT,'YYYY-MM-DD'),'9999-12-31') <![CDATA[>=]]> TO_CHAR(SYSDATE,'YYYY-MM-DD') -->
    </select>
</mapper>