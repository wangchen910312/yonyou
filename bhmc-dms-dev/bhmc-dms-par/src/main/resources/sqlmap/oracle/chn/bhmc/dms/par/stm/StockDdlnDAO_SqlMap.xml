<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--
    SQL File Name : StockDdlnDAO_SqlMap.xml
    Description : 현재고관리.
    author Ju Won Lee
    since 2016. 1. 20.
    version 1.0
    Modification Information
       since          author              description
    ===========    =============    ===========================
    2016. 01. 20.     Ju Won Lee     최초 생성
-->

<mapper namespace="chn.bhmc.dms.par.stm.service.dao.StockDdlnDAO">

    <!-- 월마감 정보를 조회한다. -->
    <select id="selectStockDdlnByCondition_ORG" resultType="StockDdlnItemVO" parameterType="StockDdlnSearchVO">
        /* [chn.bhmc.dms.par.stm.service.dao.StockDdlnDao.selectStockDdlnByCondition] */
            SELECT
                    A.DLR_CD                        --딜러코드
                   ,A.PLT_CD                        --센터코드
                   ,A.STRGE_CD                      --창고코드
                   ,'' AS LOC_CD                    --로케이션코드
                   ,A.ITEM_CD                       --품목코드
                   ,B.ITEM_NM                       --품목코드
                   ,A.YY_MM                         --년월
                   ,NVL(B.STOCK_UNIT_CD, 'EA') AS UNIT_CD  --재고단위
                   ,'' AS FIRST_TP                  --1등급구분
                   ,'' AS SECOND_TP                 --2등급구분
                   ,'' AS THIRD_TP                  --3등급구분
                   ,A.ITEM_TP AS ITEM_DSTIN_CD      --품목유형
                   ,A.BP_CD                         --거래처코드
                   ,D.BP_NM                         --거래처
                   ,B.CARLINE_CD                    --차형코드
                   ,A.MODEL_CD                      --모델코드
                   ,A.PRE_MM_DDLN_STOCK_QTY         --전월마감재고수량
                   --,NVL(C.PRE_MM_DDLN_MOVE_AVG_PRC, 0) AS PRE_MM_DDLN_STOCK_PRC     --전월마감이동평균가격
                   ,CASE WHEN NVL(A.PRE_MM_DDLN_STOCK_QTY,0) = 0 THEN 0
                         ELSE ROUND(NVL(A.PRE_MM_DDLN_STOCK_AMT,0) / NVL(A.PRE_MM_DDLN_STOCK_QTY,0),2) END PRE_MM_DDLN_STOCK_PRC     --전월마감이동평균가격
                   ,A.PRE_MM_DDLN_STOCK_AMT         --전월마감재고금액
                   ,A.PSNT_MM_DDLN_STOCK_QTY        --당월마감재고수량
                   ,NVL(C.PSNT_MM_DDLN_MOVE_AVG_PRC, 0) AS PSNT_MM_DDLN_STOCK_PRC     --당월마감이동평균가격
                   ,A.PSNT_MM_DDLN_STOCK_AMT        --당월마감재고금액
                   ,A.GR_QTY                        --입고수량
                   ,A.GR_AMT                        --입고금액
                   ,A.GI_QTY                        --출고수량
                   ,A.GI_BASE_AMT                   --출고원가금액
                   ,A.GI_AMT                        --출고금액
                   ,A.PURC_GR_QTY                   --구매입고수량
                   ,A.PURC_GR_AMT                   --구매입고금액
                   ,A.MOVE_AVG_PRC                  --이동평균단가
                   ,A.OBT_GR_QTY                    --조달입고수량
                   ,A.OBT_GR_AMT                    --조달입고금액
                   ,A.PAL_GR_QTY                    --손익입고수량
                   ,A.PAL_GR_AMT                    --손익입고금액
                   ,A.STRGE_MOVE_GR_QTY             --창고이동입고수량
                   ,A.STRGE_MOVE_GR_AMT             --창고이동입고금액
                   ,A.ETC_GR_QTY                    --기타입고수량
                   ,A.ETC_GR_AMT                    --기타입고금액
                   ,A.CT_SALE_QTY                   --COUNTER판매수량
                   ,A.CT_SALE_BASE_AMT              --COUNTER판매원가금액
                   ,A.CT_SALE_AMT                   --COUNTER판매금액
                   ,A.WKS_SALE_QTY                  --WORKSHOP판매수량
                   ,A.WKS_SALE_BASE_AMT             --WORKSHOP판매원가금액
                   ,A.WKS_SALE_AMT                  --WORKSHOP판매금액
                   ,0 AS SER_SALE_QTY                   --정비판매수량
                   ,0 AS SER_SALE_BASE_AMT              --정비판매원가금액
                   ,0 AS SER_SALE_AMT                   --정비판매금액
                   ,(A.CT_SALE_QTY + A.WKS_SALE_QTY) AS  PAR_SALE_QTY                  --부품판매수량
                   ,(A.CT_SALE_BASE_AMT + A.WKS_SALE_BASE_AMT) AS PAR_SALE_BASE_AMT    --부품판매원가금액
                   ,(A.CT_SALE_AMT + A.WKS_SALE_AMT) AS PAR_SALE_AMT                   --부품판매금액
                   ,A.STRGE_MOVE_GI_QTY             --창고이동출고수량
                   ,A.STRGE_MOVE_GI_BASE_AMT        --창고이동출고원가금액
                   ,A.INT_RCV_GI_QTY                --내부수령출고수량
                   ,A.INT_RCV_GI_BASE_AMT           --내부수령출고원가금액
                   ,A.INT_RCV_GI_AMT                --내부수령출고금액
                   ,A.OBT_GI_QTY                    --조달출고수량
                   ,A.OBT_GI_BASE_AMT               --조달출고원가금액
                   ,A.OBT_GI_AMT                    --조달출고금액
                   ,A.LOSS_GI_QTY                   --손실출고수량
                   ,A.LOSS_GI_BASE_AMT              --손실출고원가금액
                   ,A.ETC_GI_QTY                    --기타출고수량
                   ,A.ETC_GI_BASE_AMT               --기타출고원가금액
                   ,A.ETC_GI_AMT                    --기타출고금액
              FROM DMSDB.PT_0901T A    --부품마감관리
             INNER JOIN PT_0201T B  --부품마스터관리
                ON A.DLR_CD  = B.DLR_CD
               AND A.ITEM_CD = B.ITEM_CD
              LEFT OUTER JOIN PT_0902T C
                ON A.DLR_CD   = C.DLR_CD
               AND A.PLT_CD   = C.PLT_CD
               AND A.STRGE_CD = C.STRGE_CD
               AND A.ITEM_CD  = C.ITEM_CD
               AND C.YY_MM    = #{sAccYyMm}
             LEFT OUTER JOIN PT_0211T D
               ON B.DLR_CD = D.DLR_CD
              AND B.BP_CD  = D.BP_CD
            WHERE A.DLR_CD = #{sDlrCd} --딜러코드
              AND A.YY_MM = #{sAccYyMm}  --년월
               <if test='sStrgeCd != null and sStrgeCd != ""'> AND A.STRGE_CD = #{sStrgeCd}</if> <!-- 창고코드 -->
                   <if test='sItemCd != null and sItemCd != ""'>
                       AND A.ITEM_CD LIKE '%'||#{sItemCd}||'%'
                   </if>
                   <if test='sItemNm != null and sItemNm != ""'>
                       AND B.ITEM_NM LIKE '%'||#{sItemNm}||'%'
                   </if>
               <if test='sItemDstinCd != null and sItemDstinCd != ""'> AND A.ITEM_TP = #{sItemDstinCd}</if><!-- 품목유형 -->
               <if test='sCarlineCd != null and sCarlineCd != ""'> AND B.CARLINE_CD = #{sCarlineCd}</if><!--  차종 -->
               <if test='sModelCd != null and sModelCd != ""'> AND A.MODEL_CD = #{sModelCd}</if><!-- 모델코드 -->
               <if test='sLocCd != null and sLocCd != ""'> AND B.LOC_CD like '%'||#{sLocCd} ||'%'</if><!-- 로케이션 -->
               <if test='sBpTp != null and sBpTp != ""'> AND D.BP_TP = #{sBpTp}</if><!-- 거래처유형 -->
               <if test='sStartStocQty != null and sStartStocQty != ""'> AND A.PRE_MM_DDLN_STOCK_QTY <![CDATA[>=]]> #{sStartStocQty}</if><!-- 기초재고 -->
               <if test='sEndStocQty != null and sEndStocQty != ""'> AND A.PSNT_MM_DDLN_STOCK_QTY <![CDATA[>=]]> #{sEndStocQty}</if><!-- 기말재고 -->
         ORDER BY
             <choose>
                 <when test='sort != null'>
                     <foreach item="item" index="index" collection="sort" open="" separator="," close="">
                         <choose>
                             <when test='item.field == "dlrCd"'>                 A.DLR_CD <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose>                </when>
                             <when test='item.field == "strgeCd"'>               A.STRGE_CD <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose>              </when>
                             <when test='item.field == "itemCd"'>                A.ITEM_CD <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose>               </when>
                             <when test='item.field == "itemNm"'>                B.ITEM_NM <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose>               </when>
                             <when test='item.field == "stockUnitCd"'>           B.STOCK_UNIT_CD <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose>         </when>
                             <when test='item.field == "modelCd"'>               A.MODEL_CD <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose>              </when>
                             <when test='item.field == "preMmDdlnStockQty"'>     A.PRE_MM_DDLN_STOCK_QTY <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose> </when>
                             <when test='item.field == "preMmDdlnStockAmt"'>     A.PRE_MM_DDLN_STOCK_AMT <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose> </when>
                             <when test='item.field == "grQty"'>                 A.GR_QTY <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose>                </when>
                             <when test='item.field == "grAmt"'>                 A.GR_AMT <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose>                </when>
                             <when test='item.field == "giQty"'>                 A.GI_QTY <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose>                </when>
                             <when test='item.field == "giAmt"'>                 A.GI_AMT <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose>                </when>
                             <when test='item.field == "giBaseAmt"'>             A.GI_BASE_AMT <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose>           </when>
                             <when test='item.field == "purcGrQty"'>             A.PURC_GR_QTY <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose>           </when>
                             <when test='item.field == "purcGrAmt"'>             A.PURC_GR_AMT <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose>           </when>
                             <when test='item.field == "obtGrQty"'>              A.OBT_GR_QTY <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose>            </when>
                             <when test='item.field == "obtGrAmt"'>              A.OBT_GR_AMT <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose>            </when>
                             <when test='item.field == "palGrQty"'>              A.PAL_GR_QTY <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose>            </when>
                             <when test='item.field == "palGrAmt"'>              A.PAL_GR_AMT <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose>            </when>
                             <when test='item.field == "strgeMoveGrQty"'>        A.STRGE_MOVE_GR_QTY <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose>     </when>
                             <when test='item.field == "strgeMoveGrAmt"'>        A.STRGE_MOVE_GR_AMT <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose>     </when>
                             <when test='item.field == "etcGrQty"'>              A.ETC_GR_QTY <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose>            </when>
                             <when test='item.field == "etcGrAmt"'>              A.ETC_GR_AMT <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose>            </when>
                             <when test='item.field == "moveAvgPrc"'>            A.MOVE_AVG_PRC <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose>          </when>
                             <when test='item.field == "ctSaleQty"'>             A.CT_SALE_QTY <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose>           </when>
                             <when test='item.field == "ctSaleAmt"'>             A.CT_SALE_AMT <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose>           </when>
                             <when test='item.field == "ctSaleBaseAmt"'>         A.CT_SALE_BASE_AMT <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose>      </when>
                             <when test='item.field == "wksSaleQty"'>            A.WKS_SALE_QTY <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose>          </when>
                             <when test='item.field == "wksSaleAmt"'>            A.WKS_SALE_AMT <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose>          </when>
                             <when test='item.field == "wksSaleBaseAmt"'>        A.WKS_SALE_BASE_AMT <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose>     </when>
                             <when test='item.field == "strgeMoveGiQty"'>        A.STRGE_MOVE_GI_QTY <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose>     </when>
                             <when test='item.field == "strgeMoveGiBaseAmt"'>    A.STRGE_MOVE_GI_BASE_AMT <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                             <when test='item.field == "intRcvGiQty"'>           A.INT_RCV_GI_QTY <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose>        </when>
                             <when test='item.field == "intRcvGiAmt"'>           A.INT_RCV_GI_AMT <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose>        </when>
                             <when test='item.field == "intRcvGiBaseAmt"'>       A.INT_RCV_GI_BASE_AMT <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose>   </when>
                             <when test='item.field == "obtGiQty"'>              A.OBT_GI_QTY <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose>            </when>
                             <when test='item.field == "obtGiAmt"'>              A.OBT_GI_AMT <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose>            </when>
                             <when test='item.field == "obtGiBaseAmt"'>          A.OBT_GI_BASE_AMT <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose>       </when>
                             <when test='item.field == "lossGiQty"'>             A.LOSS_GI_QTY <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose>           </when>
                             <when test='item.field == "lossGiBaseAmt"'>         A.LOSS_GI_BASE_AMT <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose>      </when>
                             <when test='item.field == "etcGiQty"'>              A.ETC_GI_QTY <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose>            </when>
                             <when test='item.field == "etcGiAmt"'>              A.ETC_GI_AMT <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose>            </when>
                             <when test='item.field == "etcGiBaseAmt"'>          A.ETC_GI_BASE_AMT <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose>       </when>
                             <when test='item.field == "psntMmDdlnStockQty"'>    A.PSNT_MM_DDLN_STOCK_QTY <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                             <when test='item.field == "psntMmDdlnStockAmt"'>    A.PSNT_MM_DDLN_STOCK_AMT <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                             <otherwise>
                               A.DLR_CD ASC
                             ,A.PLT_CD ASC
                             ,A.STRGE_CD ASC
                             ,A.YY_MM ASC
                             ,A.ITEM_CD ASC
                             </otherwise>
                         </choose>
                     </foreach>
                 </when>
                 <otherwise>
                   A.DLR_CD ASC
                 ,A.PLT_CD ASC
                 ,A.STRGE_CD ASC
                 ,A.YY_MM ASC
                 ,A.ITEM_CD ASC
                 </otherwise>
             </choose>
    </select>

    <!-- 월마감 정보를 조회한다. -->
    <select id="selectStockDdlnByConditionCnt_ORG" resultType="int" parameterType="StockDdlnSearchVO">
    /* [chn.bhmc.dms.par.stm.service.dao.StockDdlnDao.selectStockDdlnByConditionCnt] */
        SELECT COUNT(*)
          FROM DMSDB.PT_0901T A    --부품마감관리
                 INNER JOIN PT_0201T B  --부품마스터관리
                    ON A.DLR_CD  = B.DLR_CD
                   AND A.ITEM_CD = B.ITEM_CD
                  LEFT OUTER JOIN PT_0902T C
                    ON A.DLR_CD   = C.DLR_CD
                   AND A.PLT_CD   = C.PLT_CD
                   AND A.STRGE_CD = C.STRGE_CD
                   AND A.ITEM_CD  = C.ITEM_CD
                   AND C.YY_MM    = #{sAccYyMm}
          WHERE A.DLR_CD          = #{sDlrCd} --딜러코드
            AND A.YY_MM           = #{sAccYyMm}  --년월
           <if test='sStrgeCd               != null and sStrgeCd               != ""'> AND A.STRGE_CD               = #{sStrgeCd}             </if>        --창고코드
            <if test='sItemCd != null and sItemCd != ""'>
                AND A.ITEM_CD LIKE '%'||#{sItemCd}||'%'
             </if>
             <if test='sItemNm != null and sItemNm != ""'>
                AND B.ITEM_NM LIKE '%'||#{sItemNm}||'%'
             </if>
           <if test='sItemDstinCd           != null and sItemDstinCd           != ""'> AND A.ITEM_TP                = #{sItemDstinCd}                  </if>        --품목유형
           <if test='sCarlineCd             != null and sCarlineCd             != ""'> AND B.CARLINE_CD             = #{sCarlineCd}                    </if>        --차종
           <if test='sModelCd               != null and sModelCd               != ""'> AND A.MODEL_CD               = #{sModelCd}                      </if>        --모델코드
           <if test='sLocCd                 != null and sLocCd                 != ""'> AND B.LOC_CD                 like '%'||#{sLocCd} ||'%'               </if>        --로케이션
           <if test='sBpTp                  != null and sBpTp                  != ""'> AND D.BP_TP                  = #{sBpTp}                         </if>        --거래처유형
           <if test='sStartStocQty          != null and sStartStocQty          != ""'> AND A.PRE_MM_DDLN_STOCK_QTY   <![CDATA[>=]]>  #{sStartStocQty}  </if>        --기초재고
           <if test='sEndStocQty            != null and sEndStocQty            != ""'> AND A.PSNT_MM_DDLN_STOCK_QTY  <![CDATA[>=]]>  #{sEndStocQty}    </if>        --기말재고
    </select>

    <!-- 월마감 정보를 조회한다. -->
    <select id="selectStockDdlnByCondition" resultType="StockDdlnItemVO" parameterType="StockDdlnSearchVO">
    /* [chn.bhmc.dms.par.stm.service.dao.StockDdlnDao.selectStockDdlnByCondition] */
     SELECT A.*
       FROM
         (
            SELECT   ROW_NUMBER() OVER(ORDER BY A.DLR_CD, A.PLT_CD, A.STRGE_CD, A.ITEM_CD) AS RNUM
                    ,A.DLR_CD
                    ,A.PLT_CD
                    ,A.STRGE_CD
                    ,'' AS LOC_CD
                    ,A.ITEM_CD
                    ,B.ITEM_NM
                    ,B.ITEM_DSTIN_CD
                    ,'' AS FIRST_TP                  --1등급구분
                    ,'' AS SECOND_TP                 --2등급구분
                    ,'' AS THIRD_TP                  --3등급구분
                    ,B.STOCK_UNIT_CD AS UNIT_CD
                    ,B.BP_CD
                    ,F.BP_NM
                    ,B.CARLINE_CD AS MODEL_CD
                    ,B.CARLINE_CD
                    ,CASE WHEN TO_CHAR(TO_DATE(#{sAccYyMmFr}||'01','YYYYMMDD'),'YYYYMM') = TO_CHAR(SYSDATE,'YYYYMM') THEN NVL(J.PSNT_MM_DDLN_STOCK_QTY,0) ELSE NVL(D.PRE_MM_DDLN_STOCK_QTY,0) END  PRE_MM_DDLN_STOCK_QTY
                    ,CASE
                       WHEN TO_CHAR(TO_DATE(#{sAccYyMmFr}||'01','YYYYMMDD'),'YYYYMM') = TO_CHAR(SYSDATE,'YYYYMM')
                          THEN
                             CASE
                               WHEN NVL(J.PSNT_MM_DDLN_STOCK_QTY,0) = 0
                                 THEN 0
                               ELSE ROUND(NVL(J.PSNT_MM_DDLN_STOCK_AMT,0) / NVL(J.PSNT_MM_DDLN_STOCK_QTY,0),2)
                             END
                       ELSE
                         CASE
                           WHEN NVL(D.PRE_MM_DDLN_STOCK_QTY,0) = 0
                             THEN 0
                           ELSE ROUND(NVL(D.PRE_MM_DDLN_STOCK_AMT,0) / NVL(D.PRE_MM_DDLN_STOCK_QTY,0),2)
                         END
                     END  PRE_MM_DDLN_STOCK_PRC --전월마감이동평균가격
                    ,CASE WHEN TO_CHAR(TO_DATE(#{sAccYyMmFr}||'01','YYYYMMDD'),'YYYYMM') = TO_CHAR(SYSDATE,'YYYYMM') THEN NVL(J.PSNT_MM_DDLN_STOCK_AMT,0) ELSE NVL(D.PRE_MM_DDLN_STOCK_AMT,0) END  PRE_MM_DDLN_STOCK_AMT
                    ,NVL(C.GR_QTY,0) AS GR_QTY
                    ,NVL(C.GR_AMT,0) AS GR_AMT
                    ,NVL(C.GI_QTY,0) AS GI_QTY
                    ,NVL(C.GI_AMT,0) AS GI_AMT
                    ,NVL(C.GI_BASE_AMT,0) AS GI_BASE_AMT
                    ,NVL(C.PURC_GR_QTY,0) AS PURC_GR_QTY
                    ,NVL(C.PURC_GR_AMT,0) AS PURC_GR_AMT
                    ,NVL(C.OBT_GR_QTY,0) AS OBT_GR_QTY
                    ,NVL(C.OBT_GR_AMT,0) AS OBT_GR_AMT
                    ,NVL(C.PAL_GR_QTY,0) AS PAL_GR_QTY
                    ,NVL(C.PAL_GR_AMT,0) AS PAL_GR_AMT
                    ,NVL(C.STRGE_MOVE_GR_QTY,0) AS STRGE_MOVE_GR_QTY
                    ,NVL(C.STRGE_MOVE_GR_AMT,0) AS STRGE_MOVE_GR_AMT
                    ,NVL(C.ETC_GR_QTY,0) AS ETC_GR_QTY
                    ,NVL(C.ETC_GR_AMT,0) AS ETC_GR_AMT
                    ,NVL(I.MOVING_AVG_PRC,0) AS CURRENT_MOVING_AVG_PRC
                    --,NVL(C.MOVING_AVG_PRC,0) AS MOVING_AVG_PRC
                    --,NVL(C.MOVING_AVG_TAX_DDCT_PRC,0) AS MOVING_AVG_TAX_DDCT_PRC
                    ,NVL(C.GR_MOVING_AVG_AMT,0) AS GR_MOVING_AVG_AMT
                    ,NVL(C.GR_MOVING_AVG_TAX_DDCT_AMT,0) AS GR_MOVING_AVG_TAX_DDCT_AMT
                    ,NVL(C.GI_MOVING_AVG_TAX_DDCT_AMT,0) AS GI_MOVING_AVG_TAX_DDCT_AMT
                    ,CASE WHEN NVL(C.GR_QTY,0) = 0 THEN 0 ELSE ROUND(NVL(C.GR_MOVING_AVG_AMT,0) / NVL(C.GR_QTY,0),2) END GR_MOVING_AVG_PRC
                    ,CASE WHEN NVL(C.GR_QTY,0) = 0 THEN 0 ELSE ROUND(NVL(C.GR_MOVING_AVG_TAX_DDCT_AMT,0) / NVL(C.GR_QTY,0),2) END GR_MOVING_AVG_TAX_DDCT_PRC
                    ,CASE WHEN NVL(C.GI_QTY,0) = 0 THEN 0 ELSE ROUND(NVL(C.GI_BASE_AMT,0) / NVL(C.GI_QTY,0),2) END GI_MOVING_AVG_PRC
                    ,CASE WHEN NVL(C.GI_QTY,0) = 0 THEN 0 ELSE ROUND(NVL(C.GI_MOVING_AVG_TAX_DDCT_AMT,0) / NVL(C.GI_QTY,0),2) END GI_MOVING_AVG_TAX_DDCT_PRC
                    ,NVL(C.CT_SALE_QTY,0) AS CT_SALE_QTY
                    ,NVL(C.CT_SALE_AMT,0) AS CT_SALE_AMT
                    ,NVL(C.CT_SALE_BASE_AMT,0) AS CT_SALE_BASE_AMT
                    ,NVL(C.WKS_SALE_QTY,0) AS WKS_SALE_QTY
                    ,NVL(C.WKS_SALE_AMT,0) AS WKS_SALE_AMT
                    ,NVL(C.WKS_SALE_BASE_AMT,0) AS WKS_SALE_BASE_AMT
                    ,NVL(C.STRGE_MOVE_GI_QTY,0) AS STRGE_MOVE_GI_QTY
                    ,NVL(C.STRGE_MOVE_GI_BASE_AMT,0) AS STRGE_MOVE_GI_BASE_AMT
                    ,NVL(C.INT_RCV_GI_QTY,0) AS INT_RCV_GI_QTY
                    ,NVL(C.INT_RCV_GI_AMT,0) AS INT_RCV_GI_AMT
                    ,NVL(C.INT_RCV_GI_BASE_AMT,0) AS INT_RCV_GI_BASE_AMT
                    ,NVL(C.OBT_GI_QTY,0) AS OBT_GI_QTY
                    ,NVL(C.OBT_GI_AMT,0) AS OBT_GI_AMT
                    ,NVL(C.OBT_GI_BASE_AMT,0) AS OBT_GI_BASE_AMT
                    ,NVL(C.LOSS_GI_QTY,0) AS LOSS_GI_QTY
                    ,NVL(C.LOSS_GI_BASE_AMT,0) AS LOSS_GI_BASE_AMT
                    ,NVL(C.ETC_GI_QTY,0) AS ETC_GI_QTY
                    ,NVL(C.ETC_GI_AMT,0) AS ETC_GI_AMT
                    ,NVL(C.ETC_GI_BASE_AMT,0) AS ETC_GI_BASE_AMT
                    ,NVL(E.PSNT_MM_DDLN_STOCK_QTY,0) AS PSNT_MM_DDLN_STOCK_QTY
                    ,NVL(H.PSNT_MM_DDLN_MOVE_AVG_PRC, 0) AS PSNT_MM_DDLN_STOCK_PRC     --당월마감이동평균가격
                    ,NVL(E.PSNT_MM_DDLN_STOCK_AMT,0) AS PSNT_MM_DDLN_STOCK_AMT
                    ,(NVL(C.CT_SALE_QTY,0) + NVL(C.WKS_SALE_QTY,0)) AS  PAR_SALE_QTY                  --부품판매수량
                    ,(NVL(C.CT_SALE_BASE_AMT,0) + NVL(C.WKS_SALE_BASE_AMT,0)) AS PAR_SALE_BASE_AMT    --부품판매원가금액
                    ,(NVL(C.CT_SALE_AMT,0) + NVL(C.WKS_SALE_AMT,0)) AS PAR_SALE_AMT                   --부품판매금액
                    ,NVL(C.SER_SALE_QTY,0) AS SER_SALE_QTY
                    ,NVL(C.SER_SALE_BASE_AMT,0) AS SER_SALE_BASE_AMT
                    ,NVL(C.SER_SALE_AMT,0) AS SER_SALE_AMT
              FROM   PT_0301T A
                     INNER JOIN PT_0201T B
                       ON A.DLR_CD = B.DLR_CD
                      AND A.ITEM_CD = B.ITEM_CD
                     LEFT OUTER JOIN   (
                            SELECT   A.DLR_CD
                                    ,A.PLT_CD
                                    ,A.STRGE_CD
                                    ,A.ITEM_CD
                                    ,SUM(GR_QTY) AS GR_QTY
                                    ,SUM(GR_AMT) AS GR_AMT
                                    ,SUM(GI_QTY) AS GI_QTY
                                    ,SUM(GI_AMT) AS GI_AMT
                                    ,SUM(GI_BASE_AMT) AS GI_BASE_AMT
                                    ,SUM(PURC_GR_QTY) AS PURC_GR_QTY
                                    ,SUM(PURC_GR_AMT) AS PURC_GR_AMT
                                    ,SUM(OBT_GR_QTY) AS OBT_GR_QTY
                                    ,SUM(OBT_GR_AMT) AS OBT_GR_AMT
                                    ,SUM(PAL_GR_QTY) AS PAL_GR_QTY
                                    ,SUM(PAL_GR_AMT) AS PAL_GR_AMT
                                    ,SUM(STRGE_MOVE_GR_QTY) AS STRGE_MOVE_GR_QTY
                                    ,SUM(STRGE_MOVE_GR_AMT) AS STRGE_MOVE_GR_AMT
                                    ,SUM(ETC_GR_QTY) AS ETC_GR_QTY
                                    ,SUM(ETC_GR_AMT) AS ETC_GR_AMT
                                    ,SUM(CT_SALE_QTY)  AS CT_SALE_QTY
                                    ,SUM(CT_SALE_AMT)  AS CT_SALE_AMT
                                    ,SUM(CT_SALE_BASE_AMT) AS CT_SALE_BASE_AMT
                                    ,SUM(WKS_SALE_QTY)  AS WKS_SALE_QTY
                                    ,SUM(WKS_SALE_AMT) AS WKS_SALE_AMT
                                    ,SUM(WKS_SALE_BASE_AMT) AS WKS_SALE_BASE_AMT
                                    ,SUM(SER_SALE_QTY)  AS SER_SALE_QTY
                                    ,SUM(SER_SALE_BASE_AMT) AS SER_SALE_BASE_AMT
                                    ,SUM(SER_SALE_AMT) AS SER_SALE_AMT
                                    ,SUM(STRGE_MOVE_GI_QTY) AS STRGE_MOVE_GI_QTY
                                    ,SUM(STRGE_MOVE_GI_BASE_AMT) AS STRGE_MOVE_GI_BASE_AMT
                                    ,SUM(INT_RCV_GI_QTY) AS INT_RCV_GI_QTY
                                    ,SUM(INT_RCV_GI_AMT) AS INT_RCV_GI_AMT
                                    ,SUM(INT_RCV_GI_BASE_AMT) AS INT_RCV_GI_BASE_AMT
                                    ,SUM(OBT_GI_QTY) AS OBT_GI_QTY
                                    ,SUM(OBT_GI_AMT) AS OBT_GI_AMT
                                    ,SUM(OBT_GI_BASE_AMT) AS OBT_GI_BASE_AMT
                                    ,SUM(LOSS_GI_QTY ) AS LOSS_GI_QTY
                                    ,SUM(LOSS_GI_BASE_AMT ) AS LOSS_GI_BASE_AMT
                                    ,SUM(ETC_GI_QTY) AS ETC_GI_QTY
                                    ,SUM(ETC_GI_AMT) AS ETC_GI_AMT
                                    ,SUM(ETC_GI_BASE_AMT) AS ETC_GI_BASE_AMT
                                    --,SUM(MOVING_AVG_PRC) AS MOVING_AVG_PRC
                                    --,SUM(MOVING_AVG_TAX_DDCT_PRC) AS MOVING_AVG_TAX_DDCT_PRC
                                    ,SUM(GR_MOVING_AVG_AMT) AS GR_MOVING_AVG_AMT
                                    ,SUM(GR_MOVING_AVG_TAX_DDCT_AMT) AS GR_MOVING_AVG_TAX_DDCT_AMT
                                    ,SUM(GI_MOVING_AVG_TAX_DDCT_AMT) AS GI_MOVING_AVG_TAX_DDCT_AMT
                              FROM
                                (
                                  SELECT A.DLR_CD
                                        ,A.MVT_DOC_YY_MM AS YY_MM
                                        ,A.MVT_DOC_NO
                                        ,A.MVT_TP
                                        ,B.ITEM_CD
                                        ,B.MVT_DOC_LINE_NO
                                        ,B.CANC_STMT_YN
                                        ,B.AUTO_CRE_YN
                                        ,B.PLT_CD
                                        ,B.STRGE_CD
                                        ,B.LOC_CD
                                        ,B.DEBIT_CREDIT_DSTIN_CD
                                        ,B.ITEM_QTY
                                        ,CASE WHEN A.MVT_TP IN ('01', '04', '63', '49', '59','31','33','35','36','37')
                                                THEN NVL(B.ITEM_QTY,0)
                                              WHEN A.MVT_TP IN ('21','23','25')
                                                THEN
                                                  CASE WHEN B.DEBIT_CREDIT_DSTIN_CD = 'S'
                                                         THEN NVL(B.ITEM_QTY,0)
                                                       ELSE 0
                                                   END
                                              WHEN A.MVT_TP IN ('22','24','26')
                                                THEN
                                                  CASE WHEN B.DEBIT_CREDIT_DSTIN_CD = 'S'
                                                         THEN NVL(B.ITEM_QTY,0)
                                                       ELSE 0
                                                   END
                                              WHEN  A.MVT_TP IN ('02', '03', '64', '50', '60','32','34','38')     THEN NVL(B.ITEM_QTY,0) * -1 ELSE 0 END GR_QTY   --입고수량
                                        ,CASE WHEN A.MVT_TP IN ('01', '04', '63', '49', '59','31','33','35','36','37')
                                                THEN NVL(B.PURC_AMT,0)
                                              WHEN A.MVT_TP IN ('21','23','25')
                                                THEN
                                                  CASE WHEN B.DEBIT_CREDIT_DSTIN_CD = 'S'
                                                         THEN NVL(B.PURC_AMT,0)
                                                       ELSE 0
                                                   END
                                              WHEN A.MVT_TP IN ('22','24','26')
                                                THEN
                                                  CASE WHEN B.DEBIT_CREDIT_DSTIN_CD = 'S'
                                                         THEN CASE WHEN NVL(B.PURC_AMT, 0) = 0
                                                                     THEN NVL(B.SALE_AMT, 0)
                                                                   ELSE NVL(B.PURC_AMT, 0)
                                                               END
                                                       ELSE 0
                                                   END
                                              WHEN  A.MVT_TP IN ('02', '03', '64', '50', '60','32','34','38')     THEN NVL(B.MOVING_AVG_AMT,0) * -1 ELSE 0 END GR_AMT   --입고금액
                                        ,CASE WHEN A.MVT_TP IN ('11', '14', '15','71', '74', '75', '41', '43','45','47','48','61', '65')
                                                THEN NVL(B.ITEM_QTY,0)
                                              WHEN A.MVT_TP IN ('21','23','25')
                                                THEN
                                                  CASE WHEN B.DEBIT_CREDIT_DSTIN_CD = 'H'
                                                         THEN NVL(B.ITEM_QTY,0)
                                                       ELSE 0
                                                   END
                                                WHEN A.MVT_TP IN ('22','24','26')
                                                THEN
                                                  CASE WHEN B.DEBIT_CREDIT_DSTIN_CD = 'H'
                                                         THEN NVL(B.ITEM_QTY,0)
                                                       ELSE 0
                                                   END
                                              WHEN  A.MVT_TP IN ('12', '13', '16','72', '73', '76',  '42', '44', '46','62','66')     THEN NVL(B.ITEM_QTY,0) * -1 ELSE 0 END GI_QTY   --출고수량
                                        ,CASE WHEN A.MVT_TP IN ('11', '14', '15','71', '74', '75', '41', '43','45','47','48','61', '65')
                                                THEN NVL(B.SALE_AMT,0)
                                              WHEN A.MVT_TP IN ('21','23','25')
                                                THEN
                                                  CASE WHEN B.DEBIT_CREDIT_DSTIN_CD = 'H'
                                                         THEN NVL(B.SALE_AMT,0)
                                                       ELSE 0
                                                   END
                                                WHEN A.MVT_TP IN ('22','24','26')
                                                THEN
                                                  CASE WHEN B.DEBIT_CREDIT_DSTIN_CD = 'H'
                                                         THEN CASE WHEN NVL(B.SALE_AMT, 0) = 0
                                                                     THEN NVL(B.PURC_AMT, 0)
                                                                   ELSE NVL(B.SALE_AMT, 0)
                                                               END
                                                       ELSE 0
                                                   END
                                              WHEN  A.MVT_TP IN ('12', '13', '16','72', '73', '76', '42', '44', '46','62','66')     THEN NVL(B.SALE_AMT,0) * -1 ELSE 0 END GI_AMT   --출고금액
                                        ,CASE WHEN A.MVT_TP IN ('11', '14', '15','71', '74', '75', '41', '43','45','47','48','61', '65')
                                                THEN NVL(B.MOVING_AVG_AMT,0)
                                              WHEN A.MVT_TP IN ('21','23','25')
                                                THEN
                                                  CASE WHEN B.DEBIT_CREDIT_DSTIN_CD = 'H'
                                                         THEN NVL(B.MOVING_AVG_AMT,0)
                                                       ELSE 0
                                                   END
                                                WHEN A.MVT_TP IN ('22','24','26')
                                                THEN
                                                  CASE WHEN B.DEBIT_CREDIT_DSTIN_CD = 'H'
                                                         THEN NVL(B.MOVING_AVG_AMT,0)
                                                       ELSE 0
                                                   END
                                              WHEN  A.MVT_TP IN ('12', '13', '16','72', '73', '76', '42', '44', '46','62','66')     THEN NVL(B.MOVING_AVG_AMT,0) * -1 ELSE 0 END GI_BASE_AMT   --출고원가
                                        ,CASE WHEN A.MVT_TP IN ('01', '04')     THEN NVL(B.ITEM_QTY,0) WHEN  A.MVT_TP IN ('02', '03')     THEN NVL(B.ITEM_QTY,0) * -1 ELSE 0 END PURC_GR_QTY   --구매입고수량
                                        ,CASE WHEN A.MVT_TP IN ('01', '04')     THEN NVL(B.PURC_AMT,0) WHEN  A.MVT_TP IN ('02', '03')     THEN NVL(B.MOVING_AVG_AMT,0) * -1 ELSE 0 END PURC_GR_AMT  --구매입고금액
                                        ,CASE WHEN A.MVT_TP IN ('63')           THEN NVL(B.ITEM_QTY,0) WHEN  A.MVT_TP IN ('64')           THEN NVL(B.ITEM_QTY,0) * -1 ELSE 0 END OBT_GR_QTY   --조달입고수량
                                        ,CASE WHEN A.MVT_TP IN ('63')           THEN NVL(B.PURC_AMT,0) WHEN  A.MVT_TP IN ('64')           THEN NVL(B.MOVING_AVG_AMT,0) * -1 ELSE 0 END OBT_GR_AMT  --조달입고금액
                                        ,CASE WHEN A.MVT_TP IN ('49','59')      THEN NVL(B.ITEM_QTY,0) WHEN  A.MVT_TP IN ('50','60')      THEN NVL(B.ITEM_QTY,0) * -1 ELSE 0 END PAL_GR_QTY   --손익입고수량
                                        ,CASE WHEN A.MVT_TP IN ('49','59')      THEN NVL(B.PURC_AMT,0) WHEN  A.MVT_TP IN ('50','60')      THEN NVL(B.MOVING_AVG_AMT,0) * -1 ELSE 0 END PAL_GR_AMT  --손익입고금액
                                        ,CASE WHEN A.MVT_TP IN ('21','23','25')
                                                THEN
                                                  CASE WHEN B.DEBIT_CREDIT_DSTIN_CD = 'S'
                                                         THEN NVL(B.ITEM_QTY,0)
                                                       ELSE 0
                                                   END
                                              WHEN A.MVT_TP IN ('22','24','26')
                                                THEN
                                                  CASE WHEN B.DEBIT_CREDIT_DSTIN_CD = 'S'
                                                         THEN NVL(B.ITEM_QTY,0)
                                                       ELSE 0
                                                   END
                                              ELSE 0
                                         END STRGE_MOVE_GR_QTY   --창고이동입고수량
                                        ,CASE WHEN A.MVT_TP IN ('21','23','25')
                                                THEN
                                                  CASE WHEN B.DEBIT_CREDIT_DSTIN_CD = 'S'
                                                         THEN NVL(B.PURC_AMT,0)
                                                       ELSE 0
                                                   END
                                              WHEN A.MVT_TP IN ('22','24','26')
                                                THEN
                                                  CASE WHEN B.DEBIT_CREDIT_DSTIN_CD = 'S'
                                                         THEN CASE WHEN NVL(B.PURC_AMT, 0) = 0
                                                                     THEN NVL(B.SALE_AMT, 0)
                                                                   ELSE NVL(B.PURC_AMT, 0)
                                                               END
                                                       ELSE 0
                                                   END
                                              ELSE 0
                                         END STRGE_MOVE_GR_AMT  --창고이동입고금액
                                         --33,34,35,36,37,38
                                        ,CASE WHEN A.MVT_TP IN ('31','33','35','36','37')      THEN NVL(B.ITEM_QTY,0) WHEN  A.MVT_TP IN ('32','34','38')      THEN NVL(B.ITEM_QTY,0) * -1 ELSE 0 END ETC_GR_QTY   --기타입고수량[33:기타입고,35:차입입고,36:차출반환입고,37:내부수령, 34:기타입고취소, 38:내부수령취소]
                                        ,CASE WHEN A.MVT_TP IN ('31','33','35','36','37')      THEN NVL(B.PURC_AMT,0) WHEN  A.MVT_TP IN ('32','34','38')      THEN NVL(B.MOVING_AVG_AMT,0) * -1 ELSE 0 END ETC_GR_AMT  --기타입고금액
                                        ,NVL(D.SALE_TP,'03') AS SALE_TP
                                         ,CASE WHEN A.MVT_TP IN ('71', '74', '75')
                                                    THEN
                                                      CASE WHEN NVL(D.SALE_TP,'01') = '01'
                                                             THEN NVL(B.ITEM_QTY,0)
                                                           ELSE 0
                                                       END
                                                  WHEN  A.MVT_TP IN ('72', '73', '76')
                                                    THEN
                                                      CASE WHEN NVL(D.SALE_TP,'01') = '01'
                                                             THEN NVL(B.ITEM_QTY,0) * -1
                                                           ELSE 0
                                                       END
                                                  ELSE 0
                                              END CT_SALE_QTY   --COUNTER판매수량
                                            ,CASE WHEN A.MVT_TP IN ('71', '74', '75')
                                                    THEN
                                                       CASE WHEN NVL(D.SALE_TP,'01') = '01'
                                                             THEN NVL(B.SALE_AMT,0)
                                                           ELSE 0
                                                       END
                                                  WHEN A.MVT_TP IN ('72', '73', '76')
                                                    THEN
                                                       CASE WHEN NVL(D.SALE_TP,'01') = '01'
                                                             THEN NVL(B.SALE_AMT,0) * -1
                                                           ELSE 0
                                                       END
                                                  ELSE 0
                                             END CT_SALE_AMT  --COUNTER판매금액
                                            ,CASE WHEN A.MVT_TP IN ('71', '74', '75')
                                                    THEN
                                                      CASE WHEN NVL(D.SALE_TP,'01') = '01'
                                                             THEN NVL(B.MOVING_AVG_AMT,0)
                                                           ELSE 0
                                                       END
                                                  WHEN  A.MVT_TP IN ('72', '73', '76')
                                                    THEN
                                                      CASE WHEN NVL(D.SALE_TP,'01') = '01'
                                                             THEN NVL(B.MOVING_AVG_AMT,0) * -1
                                                           ELSE 0
                                                       END
                                                  ELSE 0
                                             END CT_SALE_BASE_AMT  --COUNTER원가금액
                                              ,CASE WHEN A.MVT_TP IN ('71', '74', '75')
                                                    THEN
                                                      CASE WHEN NVL(D.SALE_TP,'01') = '02'
                                                             THEN NVL(B.ITEM_QTY,0)
                                                           ELSE 0
                                                       END
                                                  WHEN  A.MVT_TP IN ('72', '73', '76')
                                                    THEN
                                                      CASE WHEN NVL(D.SALE_TP,'01') = '02'
                                                             THEN NVL(B.ITEM_QTY,0) * -1
                                                           ELSE 0
                                                       END
                                                  ELSE 0
                                              END WKS_SALE_QTY   --WOKSHOP판매수량
                                            ,CASE WHEN A.MVT_TP IN ('71', '74', '75')
                                                    THEN
                                                       CASE WHEN NVL(D.SALE_TP,'01') = '02'
                                                             THEN NVL(B.SALE_AMT,0)
                                                           ELSE 0
                                                       END
                                                  WHEN A.MVT_TP IN ('72', '73', '76')
                                                    THEN
                                                       CASE WHEN NVL(D.SALE_TP,'01') = '02'
                                                             THEN NVL(B.SALE_AMT,0) * -1
                                                           ELSE 0
                                                       END
                                                  ELSE 0
                                             END WKS_SALE_AMT  --WOKSHOP판매금액
                                            ,CASE WHEN A.MVT_TP IN ('71', '74', '75')
                                                    THEN
                                                      CASE WHEN NVL(D.SALE_TP,'01') = '02'
                                                             THEN NVL(B.MOVING_AVG_AMT,0)
                                                           ELSE 0
                                                       END
                                                  WHEN  A.MVT_TP IN ('72', '73', '76')
                                                    THEN
                                                      CASE WHEN NVL(D.SALE_TP,'01') = '02'
                                                             THEN NVL(B.MOVING_AVG_AMT,0) * -1
                                                           ELSE 0
                                                       END
                                                  ELSE 0
                                             END WKS_SALE_BASE_AMT  --WOKSHOP판매원가금액
                                             ,CASE WHEN A.MVT_TP IN ('11','14','15')
                                                    THEN
                                                      CASE WHEN NVL(D.SALE_TP,'01') = '01'
                                                             THEN NVL(B.ITEM_QTY,0)
                                                           ELSE 0
                                                       END
                                                  WHEN  A.MVT_TP IN ('12','13','16')
                                                    THEN
                                                      CASE WHEN NVL(D.SALE_TP,'01') = '01'
                                                             THEN NVL(B.ITEM_QTY,0) * -1
                                                           ELSE 0
                                                       END
                                                  ELSE 0
                                              END SER_SALE_QTY   --정비판매수량
                                            ,CASE WHEN A.MVT_TP IN ('11','14','15')
                                                    THEN
                                                       CASE WHEN NVL(D.SALE_TP,'01') = '01'
                                                             THEN NVL(B.SALE_AMT,0)
                                                           ELSE 0
                                                       END
                                                  WHEN A.MVT_TP IN ('12','13','16')
                                                    THEN
                                                       CASE WHEN NVL(D.SALE_TP,'01') = '01'
                                                             THEN NVL(B.SALE_AMT,0) * -1
                                                           ELSE 0
                                                       END
                                                  ELSE 0
                                             END SER_SALE_AMT  --정비판매금액
                                            ,CASE WHEN A.MVT_TP IN ('11','14','15')
                                                    THEN
                                                      CASE WHEN NVL(D.SALE_TP,'01') = '01'
                                                             THEN NVL(B.MOVING_AVG_AMT,0)
                                                           ELSE 0
                                                       END
                                                  WHEN  A.MVT_TP IN ('12','13','16')
                                                    THEN
                                                      CASE WHEN NVL(D.SALE_TP,'01') = '01'
                                                             THEN NVL(B.MOVING_AVG_AMT,0) * -1
                                                           ELSE 0
                                                       END
                                                  ELSE 0
                                             END SER_SALE_BASE_AMT  --정비판매원가금액
                                        ,CASE WHEN A.MVT_TP IN ('21','23','25')
                                                THEN
                                                  CASE WHEN B.DEBIT_CREDIT_DSTIN_CD = 'H'
                                                         THEN NVL(B.ITEM_QTY,0)
                                                       ELSE 0
                                                   END
                                                WHEN A.MVT_TP IN ('22','24','26')
                                                THEN
                                                  CASE WHEN B.DEBIT_CREDIT_DSTIN_CD = 'H'
                                                         THEN NVL(B.ITEM_QTY,0)
                                                       ELSE 0
                                                   END
                                              ELSE 0
                                         END STRGE_MOVE_GI_QTY   --창고이동출고수량
                                         ,CASE WHEN A.MVT_TP IN ('21','23','25')
                                                THEN
                                                  CASE WHEN B.DEBIT_CREDIT_DSTIN_CD = 'H'
                                                         THEN NVL(B.MOVING_AVG_AMT,0)
                                                       ELSE 0
                                                   END
                                               WHEN A.MVT_TP IN ('22','24','26')
                                                THEN
                                                  CASE WHEN B.DEBIT_CREDIT_DSTIN_CD = 'H'
                                                         THEN NVL(B.MOVING_AVG_AMT,0)
                                                       ELSE 0
                                                   END
                                              ELSE 0
                                         END STRGE_MOVE_GI_BASE_AMT  --창고이동출고원가금액
                                        ,CASE WHEN A.MVT_TP IN ('41')      THEN NVL(B.ITEM_QTY,0)       WHEN  A.MVT_TP IN ('42')      THEN NVL(B.ITEM_QTY,0) * -1       ELSE 0 END INT_RCV_GI_QTY   --내부출고수량
                                        ,CASE WHEN A.MVT_TP IN ('41')      THEN NVL(B.SALE_AMT,0)       WHEN  A.MVT_TP IN ('42')      THEN NVL(B.SALE_AMT,0) * -1       ELSE 0 END INT_RCV_GI_AMT  --내부출고금액
                                        ,CASE WHEN A.MVT_TP IN ('41')      THEN NVL(B.MOVING_AVG_AMT,0) WHEN  A.MVT_TP IN ('42')      THEN NVL(B.MOVING_AVG_AMT,0) * -1 ELSE 0 END INT_RCV_GI_BASE_AMT  --내부출고원가고금액
                                        ,CASE WHEN A.MVT_TP IN ('61')      THEN NVL(B.ITEM_QTY,0)       WHEN  A.MVT_TP IN ('62')      THEN NVL(B.ITEM_QTY,0) * -1       ELSE 0 END OBT_GI_QTY   --조달출고수량
                                        ,CASE WHEN A.MVT_TP IN ('61')      THEN NVL(B.SALE_AMT,0)       WHEN  A.MVT_TP IN ('62')      THEN NVL(B.SALE_AMT,0) * -1       ELSE 0 END OBT_GI_AMT  --조달출고금액
                                        ,CASE WHEN A.MVT_TP IN ('61')      THEN NVL(B.MOVING_AVG_AMT,0) WHEN  A.MVT_TP IN ('62')      THEN NVL(B.MOVING_AVG_AMT,0) * -1 ELSE 0 END OBT_GI_BASE_AMT  --조달출고원가고금액
                                        ,CASE WHEN A.MVT_TP IN ('43','45','65')      THEN NVL(B.ITEM_QTY,0)       WHEN  A.MVT_TP IN ('44','46','66')      THEN NVL(B.ITEM_QTY,0) * -1       ELSE 0 END LOSS_GI_QTY   --손실출고수량
                                        ,CASE WHEN A.MVT_TP IN ('43','45','65')      THEN NVL(B.MOVING_AVG_AMT,0) WHEN  A.MVT_TP IN ('44','46','66')      THEN NVL(B.MOVING_AVG_AMT,0) * -1 ELSE 0 END LOSS_GI_BASE_AMT  --손실출고원가고금액
                                        ,CASE WHEN A.MVT_TP IN ('47','48')      THEN NVL(B.ITEM_QTY,0)       ELSE 0 END ETC_GI_QTY   --기타출고수량
                                        ,CASE WHEN A.MVT_TP IN ('47','48')      THEN NVL(B.SALE_AMT,0)       ELSE 0 END ETC_GI_AMT  --기타출고금액
                                        ,CASE WHEN A.MVT_TP IN ('47','48')      THEN NVL(B.MOVING_AVG_AMT,0) ELSE 0 END ETC_GI_BASE_AMT  --기타출고원가고금액
                                        --,NVL(B.MOVING_AVG_PRC,0) AS MOVING_AVG_PRC
                                        --,NVL(B.MOVING_AVG_TAX_DDCT_PRC,0) AS MOVING_AVG_TAX_DDCT_PRC
                                        ,CASE WHEN A.MVT_TP IN ('01','04','63','49','59','31','33','35','36','37')
                                                THEN NVL(B.MOVING_AVG_AMT,0)
                                              WHEN A.MVT_TP IN ('21','23','25')
                                                THEN
                                                  CASE WHEN B.DEBIT_CREDIT_DSTIN_CD = 'S'
                                                         THEN NVL(B.MOVING_AVG_AMT,0)
                                                       ELSE 0
                                                   END
                                              WHEN A.MVT_TP IN ('22','24','26')
                                                THEN
                                                  CASE WHEN B.DEBIT_CREDIT_DSTIN_CD = 'S'
                                                         THEN NVL(B.MOVING_AVG_AMT,0)
                                                       ELSE 0
                                                   END
                                              WHEN  A.MVT_TP IN ('02','03','64','50','60','32','34','38') THEN NVL(B.MOVING_AVG_AMT,0) * -1 ELSE 0 END GR_MOVING_AVG_AMT -- 입고이동금액
                                        ,CASE WHEN A.MVT_TP IN ('01','04','63','49','59','31','33','35','36','37')
                                                THEN NVL(B.MOVING_AVG_TAX_DDCT_AMT,0)
                                              WHEN A.MVT_TP IN ('21','23','25')
                                                THEN
                                                  CASE WHEN B.DEBIT_CREDIT_DSTIN_CD = 'S'
                                                         THEN NVL(B.MOVING_AVG_TAX_DDCT_AMT,0)
                                                       ELSE 0
                                                   END
                                              WHEN A.MVT_TP IN ('22','24','26')
                                                THEN
                                                  CASE WHEN B.DEBIT_CREDIT_DSTIN_CD = 'S'
                                                         THEN NVL(B.MOVING_AVG_TAX_DDCT_AMT,0)
                                                       ELSE 0
                                                   END
                                              WHEN  A.MVT_TP IN ('02','03','64','50','60','32','34','38') THEN NVL(B.MOVING_AVG_TAX_DDCT_AMT,0) * -1 ELSE 0 END GR_MOVING_AVG_TAX_DDCT_AMT -- 입고이동금액(세금제외)
                                        ,CASE WHEN A.MVT_TP IN ('11','14','15','71','74','75','41','43','45','47','48','61','65')
                                                THEN NVL(B.MOVING_AVG_TAX_DDCT_AMT,0)
                                              WHEN A.MVT_TP IN ('21','23','25')
                                                THEN
                                                  CASE WHEN B.DEBIT_CREDIT_DSTIN_CD = 'H'
                                                         THEN NVL(B.MOVING_AVG_TAX_DDCT_AMT,0)
                                                       ELSE 0
                                                   END
                                                WHEN A.MVT_TP IN ('22','24','26')
                                                THEN
                                                  CASE WHEN B.DEBIT_CREDIT_DSTIN_CD = 'H'
                                                         THEN NVL(B.MOVING_AVG_TAX_DDCT_AMT,0)
                                                       ELSE 0
                                                   END
                                              WHEN  A.MVT_TP IN ('12','13','16','72','73','76','42','44','46','62','66') THEN NVL(B.MOVING_AVG_TAX_DDCT_AMT,0) * -1 ELSE 0 END GI_MOVING_AVG_TAX_DDCT_AMT
                                FROM PT_0311T A
                                        INNER JOIN PT_0312T B
                                                ON A.DLR_CD = B.DLR_CD
                                               AND A.MVT_DOC_YY_MM = B.MVT_DOC_YY_MM
                                               AND A.MVT_DOC_NO    = B.MVT_DOC_NO
                                        INNER JOIN PT_0201T C
                                           ON B.DLR_CD  = C.DLR_CD
                                          AND B.ITEM_CD = C.ITEM_CD
                                        LEFT OUTER JOIN (
                                                SELECT   A.DLR_CD
                                                        ,A.PAR_SALE_ORD_NO
                                                        ,A.SALE_TP
                                                        ,B.PAR_SALE_ORD_LINE_NO
                                                        ,B.ITEM_CD
                                                  FROM   DMSDB.PT_0521T A    --부품판매헤더정보
                                                           INNER JOIN DMSDB.PT_0522T B    --부품판매품목정보
                                                              ON A.DLR_CD          = B.DLR_CD
                                                             AND A.PAR_SALE_ORD_NO = B.PAR_SALE_ORD_NO
                                                WHERE    A.DLR_CD = '${sDlrCd}'
                                               ) D
                                             ON A.DLR_CD          = D.DLR_CD
                                            AND B.REF_DOC_NO      = D.PAR_SALE_ORD_NO
                                            AND B.REF_DOC_LINE_NO = D.PAR_SALE_ORD_LINE_NO
                                WHERE  A.DLR_CD = '${sDlrCd}'
                                  and  A.MVT_DOC_YY_MM between #{sAccYyMmFr} and #{sAccYyMmTo}
                                  AND C.ITEM_DSTIN_CD NOT IN  ('20','04')
                                  AND A.MVT_TP NOT IN ('23','24')  --예류 및 예류 취소는 마감에서 제외한다.
                                 ) A
                               GROUP BY  A.DLR_CD
                                        ,A.PLT_CD
                                        ,A.STRGE_CD
                                        ,A.ITEM_CD
                             ) C
                         ON A.DLR_CD = C.DLR_CD
                        AND A.PLT_CD = C.PLT_CD
                        AND A.STRGE_CD = C.STRGE_CD
                        AND A.ITEM_CD = C.ITEM_CD
                        LEFT OUTER JOIN PT_0901T D  --기초재고
                           ON A.DLR_CD    = D.DLR_CD
                          AND A.PLT_CD    = D.PLT_CD
                          AND A.STRGE_CD  = D.STRGE_CD
                          AND D.YY_MM     = TO_CHAR(TO_DATE(#{sAccYyMmFr}||'01','YYYYMMDD'),'YYYYMM')
                          AND A.ITEM_CD   = D.ITEM_CD
                        LEFT OUTER JOIN PT_0901T E  --기말재고
                           ON A.DLR_CD    = E.DLR_CD
                          AND A.PLT_CD    = E.PLT_CD
                          AND A.STRGE_CD  = E.STRGE_CD
                          AND E.YY_MM      = TO_CHAR(TO_DATE(#{sAccYyMmTo}||'01','YYYYMMDD'),'YYYYMM')
                          AND A.ITEM_CD   = E.ITEM_CD
                       LEFT OUTER JOIN PT_0211T F
                         ON B.DLR_CD = F.DLR_CD
                        AND B.BP_CD  = F.BP_CD
                       LEFT OUTER JOIN PT_0902T G
                         ON A.DLR_CD   = G.DLR_CD
                        AND A.PLT_CD   = G.PLT_CD
                        AND A.STRGE_CD = G.STRGE_CD
                        AND A.ITEM_CD  = G.ITEM_CD
                        AND G.YY_MM    = TO_CHAR(ADD_MONTHS(TO_DATE(#{sAccYyMmFr}||'01','YYYYMMDD'),-1),'YYYYMM')
                       LEFT OUTER JOIN PT_0902T H
                         ON A.DLR_CD   = H.DLR_CD
                        AND A.PLT_CD   = H.PLT_CD
                        AND A.STRGE_CD = H.STRGE_CD
                        AND A.ITEM_CD  = H.ITEM_CD
                        AND H.YY_MM    = #{sAccYyMmTo}
                       LEFT OUTER JOIN PT_0208T I
                           ON A.DLR_CD    = I.DLR_CD
                          AND A.STRGE_CD  = I.STRGE_CD
                          AND A.ITEM_CD   = I.ITEM_CD
                       LEFT OUTER JOIN PT_0901T J  --기초재고(검색 조건 시작점이 현재월인경우)
                         ON A.DLR_CD    = J.DLR_CD
                        AND A.PLT_CD    = J.PLT_CD
                        AND A.STRGE_CD  = J.STRGE_CD
                        AND J.YY_MM     = TO_CHAR(ADD_MONTHS(TO_DATE(#{sAccYyMmFr}||'01','YYYYMMDD'),-1),'YYYYMM')
                        AND A.ITEM_CD   = J.ITEM_CD
                        WHERE B.ITEM_DSTIN_CD NOT IN  ('20','04')
                        <if test='sStrgeCd != null and sStrgeCd != ""'>
                            AND A.STRGE_CD = #{sStrgeCd}
                        </if> <!-- 창고코드 -->
                        <if test='sItemCd != null and sItemCd != ""'>
                            AND A.ITEM_CD LIKE '%'||#{sItemCd}||'%'
                        </if>
                        <if test='sItemNm != null and sItemNm != ""'>
                            AND B.ITEM_NM LIKE '%'||#{sItemNm}||'%'
                        </if>
                        <if test='sItemDstinCd != null and sItemDstinCd != ""'> AND B.ITEM_DSTIN_CD = #{sItemDstinCd}</if><!-- 품목유형 -->
                        <if test='sCarlineCd != null and sCarlineCd != ""'> AND B.CARLINE_CD = #{sCarlineCd}</if><!--  차종 -->
                        <if test='sModelCd != null and sModelCd != ""'> AND B.MODEL_CD = #{sModelCd}</if><!-- 모델코드 -->
                        <if test='sLocCd != null and sLocCd != ""'> AND B.LOC_CD like '%'||#{sLocCd} ||'%'</if><!-- 로케이션 -->
                        <if test='sBpTp != null and sBpTp != ""'> AND F.BP_TP = #{sBpTp}</if><!-- 거래처유형 -->
           ) A
           <where>
             <if test='firstIndex != -1 and lastIndex != -1'>
                     A.RNUM <![CDATA[<=]]> #{lastIndex}
                 AND A.RNUM <![CDATA[>]]> #{firstIndex}
             </if>
          </where>
    </select>

    <!-- 월마감 정보를 조회한다. -->
    <select id="selectStockDdlnByConditionCnt" resultType="int" parameterType="StockDdlnSearchVO">
    /* [chn.bhmc.dms.par.stm.service.dao.StockDdlnDao.selectStockDdlnByConditionCnt] */
        SELECT COUNT(*)
          FROM
            (
            SELECT   ROW_NUMBER() OVER(ORDER BY A.DLR_CD, A.PLT_CD, A.STRGE_CD, A.ITEM_CD) AS RNUM
                    ,A.DLR_CD
                    ,A.PLT_CD
                    ,A.STRGE_CD
                    ,'' AS LOC_CD
                    ,A.ITEM_CD
                    ,B.ITEM_NM
                    ,B.ITEM_DSTIN_CD
                    ,'' AS FIRST_TP                  --1등급구분
                    ,'' AS SECOND_TP                 --2등급구분
                    ,'' AS THIRD_TP                  --3등급구분
                    ,B.STOCK_UNIT_CD AS UNIT_CD
                    ,B.BP_CD
                    ,F.BP_NM
                    ,B.CARLINE_CD AS MODEL_CD
                    ,B.CARLINE_CD
                    ,CASE WHEN TO_CHAR(TO_DATE(#{sAccYyMmFr}||'01','YYYYMMDD'),'YYYYMM') = TO_CHAR(SYSDATE,'YYYYMM') THEN NVL(J.PSNT_MM_DDLN_STOCK_QTY,0) ELSE NVL(D.PRE_MM_DDLN_STOCK_QTY,0) END  PRE_MM_DDLN_STOCK_QTY
                    ,CASE
                       WHEN TO_CHAR(TO_DATE(#{sAccYyMmFr}||'01','YYYYMMDD'),'YYYYMM') = TO_CHAR(SYSDATE,'YYYYMM')
                          THEN
                             CASE
                               WHEN NVL(J.PSNT_MM_DDLN_STOCK_QTY,0) = 0
                                 THEN 0
                               ELSE ROUND(NVL(J.PSNT_MM_DDLN_STOCK_AMT,0) / NVL(J.PSNT_MM_DDLN_STOCK_QTY,0),2)
                             END
                       ELSE
                         CASE
                           WHEN NVL(D.PRE_MM_DDLN_STOCK_QTY,0) = 0
                             THEN 0
                           ELSE ROUND(NVL(D.PRE_MM_DDLN_STOCK_AMT,0) / NVL(D.PRE_MM_DDLN_STOCK_QTY,0),2)
                         END
                     END  PRE_MM_DDLN_STOCK_PRC --전월마감이동평균가격
                    ,CASE WHEN TO_CHAR(TO_DATE(#{sAccYyMmFr}||'01','YYYYMMDD'),'YYYYMM') = TO_CHAR(SYSDATE,'YYYYMM') THEN NVL(J.PSNT_MM_DDLN_STOCK_AMT,0) ELSE NVL(D.PRE_MM_DDLN_STOCK_AMT,0) END  PRE_MM_DDLN_STOCK_AMT
                    ,NVL(C.GR_QTY,0) AS GR_QTY
                    ,NVL(C.GR_AMT,0) AS GR_AMT
                    ,NVL(C.GI_QTY,0) AS GI_QTY
                    ,NVL(C.GI_AMT,0) AS GI_AMT
                    ,NVL(C.GI_BASE_AMT,0) AS GI_BASE_AMT
                    ,NVL(C.PURC_GR_QTY,0) AS PURC_GR_QTY
                    ,NVL(C.PURC_GR_AMT,0) AS PURC_GR_AMT
                    ,NVL(C.OBT_GR_QTY,0) AS OBT_GR_QTY
                    ,NVL(C.OBT_GR_AMT,0) AS OBT_GR_AMT
                    ,NVL(C.PAL_GR_QTY,0) AS PAL_GR_QTY
                    ,NVL(C.PAL_GR_AMT,0) AS PAL_GR_AMT
                    ,NVL(C.STRGE_MOVE_GR_QTY,0) AS STRGE_MOVE_GR_QTY
                    ,NVL(C.STRGE_MOVE_GR_AMT,0) AS STRGE_MOVE_GR_AMT
                    ,NVL(C.ETC_GR_QTY,0) AS ETC_GR_QTY
                    ,NVL(C.ETC_GR_AMT,0) AS ETC_GR_AMT
                    ,NVL(I.MOVING_AVG_PRC,0) AS MOVING_AVG_PRC
                    ,NVL(C.MOVING_AVG_PRC,0) AS MOVING_AVG_PRC
                    ,NVL(C.MOVING_AVG_TAX_DDCT_PRC,0) AS MOVING_AVG_TAX_DDCT_PRC
                    ,NVL(C.MOVING_AVG_AMT,0) AS MOVING_AVG_AMT
                    ,NVL(C.MOVING_AVG_TAX_DDCT_AMT,0) AS MOVING_AVG_TAX_DDCT_AMT
                    ,NVL(C.CT_SALE_QTY,0) AS CT_SALE_QTY
                    ,NVL(C.CT_SALE_AMT,0) AS CT_SALE_AMT
                    ,NVL(C.CT_SALE_BASE_AMT,0) AS CT_SALE_BASE_AMT
                    ,NVL(C.WKS_SALE_QTY,0) AS WKS_SALE_QTY
                    ,NVL(C.WKS_SALE_AMT,0) AS WKS_SALE_AMT
                    ,NVL(C.WKS_SALE_BASE_AMT,0) AS WKS_SALE_BASE_AMT
                    ,NVL(C.STRGE_MOVE_GI_QTY,0) AS STRGE_MOVE_GI_QTY
                    ,NVL(C.STRGE_MOVE_GI_BASE_AMT,0) AS STRGE_MOVE_GI_BASE_AMT
                    ,NVL(C.INT_RCV_GI_QTY,0) AS INT_RCV_GI_QTY
                    ,NVL(C.INT_RCV_GI_AMT,0) AS INT_RCV_GI_AMT
                    ,NVL(C.INT_RCV_GI_BASE_AMT,0) AS INT_RCV_GI_BASE_AMT
                    ,NVL(C.OBT_GI_QTY,0) AS OBT_GI_QTY
                    ,NVL(C.OBT_GI_AMT,0) AS OBT_GI_AMT
                    ,NVL(C.OBT_GI_BASE_AMT,0) AS OBT_GI_BASE_AMT
                    ,NVL(C.LOSS_GI_QTY,0) AS LOSS_GI_QTY
                    ,NVL(C.LOSS_GI_BASE_AMT,0) AS LOSS_GI_BASE_AMT
                    ,NVL(C.ETC_GI_QTY,0) AS ETC_GI_QTY
                    ,NVL(C.ETC_GI_AMT,0) AS ETC_GI_AMT
                    ,NVL(C.ETC_GI_BASE_AMT,0) AS ETC_GI_BASE_AMT
                    ,NVL(E.PSNT_MM_DDLN_STOCK_QTY,0) AS PSNT_MM_DDLN_STOCK_QTY
                    ,NVL(H.PSNT_MM_DDLN_MOVE_AVG_PRC, 0) AS PSNT_MM_DDLN_STOCK_PRC     --당월마감이동평균가격
                    ,NVL(E.PSNT_MM_DDLN_STOCK_AMT,0) AS PSNT_MM_DDLN_STOCK_AMT
                    ,(NVL(C.CT_SALE_QTY,0) + NVL(C.WKS_SALE_QTY,0)) AS  PAR_SALE_QTY                  --부품판매수량
                    ,(NVL(C.CT_SALE_BASE_AMT,0) + NVL(C.WKS_SALE_BASE_AMT,0)) AS PAR_SALE_BASE_AMT    --부품판매원가금액
                    ,(NVL(C.CT_SALE_AMT,0) + NVL(C.WKS_SALE_AMT,0)) AS PAR_SALE_AMT                   --부품판매금액
                    ,NVL(C.SER_SALE_QTY,0) AS SER_SALE_QTY
                    ,NVL(C.SER_SALE_BASE_AMT,0) AS SER_SALE_BASE_AMT
                    ,NVL(C.SER_SALE_AMT,0) AS SER_SALE_AMT
              FROM   PT_0301T A
                     INNER JOIN PT_0201T B
                       ON A.DLR_CD = B.DLR_CD
                      AND A.ITEM_CD = B.ITEM_CD
                     LEFT OUTER JOIN   (
                            SELECT   A.DLR_CD
                                    ,A.PLT_CD
                                    ,A.STRGE_CD
                                    ,A.ITEM_CD
                                    ,SUM(GR_QTY) AS GR_QTY
                                    ,SUM(GR_AMT) AS GR_AMT
                                    ,SUM(GI_QTY) AS GI_QTY
                                    ,SUM(GI_AMT) AS GI_AMT
                                    ,SUM(GI_BASE_AMT) AS GI_BASE_AMT
                                    ,SUM(PURC_GR_QTY) AS PURC_GR_QTY
                                    ,SUM(PURC_GR_AMT) AS PURC_GR_AMT
                                    ,SUM(OBT_GR_QTY) AS OBT_GR_QTY
                                    ,SUM(OBT_GR_AMT) AS OBT_GR_AMT
                                    ,SUM(PAL_GR_QTY) AS PAL_GR_QTY
                                    ,SUM(PAL_GR_AMT) AS PAL_GR_AMT
                                    ,SUM(STRGE_MOVE_GR_QTY) AS STRGE_MOVE_GR_QTY
                                    ,SUM(STRGE_MOVE_GR_AMT) AS STRGE_MOVE_GR_AMT
                                    ,SUM(ETC_GR_QTY) AS ETC_GR_QTY
                                    ,SUM(ETC_GR_AMT) AS ETC_GR_AMT
                                    ,SUM(CT_SALE_QTY)  AS CT_SALE_QTY
                                    ,SUM(CT_SALE_AMT)  AS CT_SALE_AMT
                                    ,SUM(CT_SALE_BASE_AMT) AS CT_SALE_BASE_AMT
                                    ,SUM(WKS_SALE_QTY)  AS WKS_SALE_QTY
                                    ,SUM(WKS_SALE_AMT) AS WKS_SALE_AMT
                                    ,SUM(WKS_SALE_BASE_AMT) AS WKS_SALE_BASE_AMT
                                    ,SUM(SER_SALE_QTY)  AS SER_SALE_QTY
                                    ,SUM(SER_SALE_BASE_AMT) AS SER_SALE_BASE_AMT
                                    ,SUM(SER_SALE_AMT) AS SER_SALE_AMT
                                    ,SUM(STRGE_MOVE_GI_QTY) AS STRGE_MOVE_GI_QTY
                                    ,SUM(STRGE_MOVE_GI_BASE_AMT) AS STRGE_MOVE_GI_BASE_AMT
                                    ,SUM(INT_RCV_GI_QTY) AS INT_RCV_GI_QTY
                                    ,SUM(INT_RCV_GI_AMT) AS INT_RCV_GI_AMT
                                    ,SUM(INT_RCV_GI_BASE_AMT) AS INT_RCV_GI_BASE_AMT
                                    ,SUM(OBT_GI_QTY) AS OBT_GI_QTY
                                    ,SUM(OBT_GI_AMT) AS OBT_GI_AMT
                                    ,SUM(OBT_GI_BASE_AMT) AS OBT_GI_BASE_AMT
                                    ,SUM(LOSS_GI_QTY ) AS LOSS_GI_QTY
                                    ,SUM(LOSS_GI_BASE_AMT ) AS LOSS_GI_BASE_AMT
                                    ,SUM(ETC_GI_QTY) AS ETC_GI_QTY
                                    ,SUM(ETC_GI_AMT) AS ETC_GI_AMT
                                    ,SUM(ETC_GI_BASE_AMT) AS ETC_GI_BASE_AMT
                                    ,SUM(MOVING_AVG_PRC) AS MOVING_AVG_PRC
                                    ,SUM(MOVING_AVG_TAX_DDCT_PRC) AS MOVING_AVG_TAX_DDCT_PRC
                                    ,SUM(MOVING_AVG_AMT) AS MOVING_AVG_AMT
                                    ,SUM(MOVING_AVG_TAX_DDCT_AMT) AS MOVING_AVG_TAX_DDCT_AMT
                              FROM
                                (
                                  SELECT A.DLR_CD
                                        ,A.MVT_DOC_YY_MM AS YY_MM
                                        ,A.MVT_DOC_NO
                                        ,A.MVT_TP
                                        ,B.ITEM_CD
                                        ,B.MVT_DOC_LINE_NO
                                        ,B.CANC_STMT_YN
                                        ,B.AUTO_CRE_YN
                                        ,B.PLT_CD
                                        ,B.STRGE_CD
                                        ,B.LOC_CD
                                        ,B.DEBIT_CREDIT_DSTIN_CD
                                        ,B.ITEM_QTY
                                        ,CASE WHEN A.MVT_TP IN ('01', '04', '63', '49', '59','31','33','35','36','37')
                                                THEN NVL(B.ITEM_QTY,0)
                                              WHEN A.MVT_TP IN ('21','23','25')
                                                THEN
                                                  CASE WHEN B.DEBIT_CREDIT_DSTIN_CD = 'S'
                                                         THEN NVL(B.ITEM_QTY,0)
                                                       ELSE 0
                                                   END
                                              WHEN A.MVT_TP IN ('22','24','26')
                                                THEN
                                                  CASE WHEN B.DEBIT_CREDIT_DSTIN_CD = 'S'
                                                         THEN NVL(B.ITEM_QTY,0)
                                                       ELSE 0
                                                   END
                                              WHEN  A.MVT_TP IN ('02', '03', '64', '50', '60','32','34','38')     THEN NVL(B.ITEM_QTY,0) * -1 ELSE 0 END GR_QTY   --입고수량
                                        ,CASE WHEN A.MVT_TP IN ('01', '04', '63', '49', '59','31','33','35','36','37')
                                                THEN NVL(B.PURC_AMT,0)
                                              WHEN A.MVT_TP IN ('21','23','25')
                                                THEN
                                                  CASE WHEN B.DEBIT_CREDIT_DSTIN_CD = 'S'
                                                         THEN NVL(B.PURC_AMT,0)
                                                       ELSE 0
                                                   END
                                              WHEN A.MVT_TP IN ('22','24','26')
                                                THEN
                                                  CASE WHEN B.DEBIT_CREDIT_DSTIN_CD = 'S'
                                                         THEN CASE WHEN NVL(B.PURC_AMT, 0) = 0
                                                                     THEN NVL(B.SALE_AMT, 0)
                                                                   ELSE NVL(B.PURC_AMT, 0)
                                                               END
                                                       ELSE 0
                                                   END
                                              WHEN  A.MVT_TP IN ('02', '03', '64', '50', '60','32','34','38')     THEN NVL(B.MOVING_AVG_AMT,0) * -1 ELSE 0 END GR_AMT   --입고금액
                                        ,CASE WHEN A.MVT_TP IN ('11', '14', '15','71', '74', '75', '41', '43','45','47','48','61', '65')
                                                THEN NVL(B.ITEM_QTY,0)
                                              WHEN A.MVT_TP IN ('21','23','25')
                                                THEN
                                                  CASE WHEN B.DEBIT_CREDIT_DSTIN_CD = 'H'
                                                         THEN NVL(B.ITEM_QTY,0)
                                                       ELSE 0
                                                   END
                                                WHEN A.MVT_TP IN ('22','24','26')
                                                THEN
                                                  CASE WHEN B.DEBIT_CREDIT_DSTIN_CD = 'H'
                                                         THEN NVL(B.ITEM_QTY,0)
                                                       ELSE 0
                                                   END
                                              WHEN  A.MVT_TP IN ('12', '13', '16','72', '73', '76',  '42', '44', '46','62','66')     THEN NVL(B.ITEM_QTY,0) * -1 ELSE 0 END GI_QTY   --출고수량
                                        ,CASE WHEN A.MVT_TP IN ('11', '14', '15','71', '74', '75', '41', '43','45','47','48','61', '65')
                                                THEN NVL(B.SALE_AMT,0)
                                              WHEN A.MVT_TP IN ('21','23','25')
                                                THEN
                                                  CASE WHEN B.DEBIT_CREDIT_DSTIN_CD = 'H'
                                                         THEN NVL(B.SALE_AMT,0)
                                                       ELSE 0
                                                   END
                                                WHEN A.MVT_TP IN ('22','24','26')
                                                THEN
                                                  CASE WHEN B.DEBIT_CREDIT_DSTIN_CD = 'H'
                                                         THEN CASE WHEN NVL(B.SALE_AMT, 0) = 0
                                                                     THEN NVL(B.PURC_AMT, 0)
                                                                   ELSE NVL(B.SALE_AMT, 0)
                                                               END
                                                       ELSE 0
                                                   END
                                              WHEN  A.MVT_TP IN ('12', '13', '16','72', '73', '76', '42', '44', '46','62','66')     THEN NVL(B.SALE_AMT,0) * -1 ELSE 0 END GI_AMT   --출고금액
                                        ,CASE WHEN A.MVT_TP IN ('11', '14', '15','71', '74', '75', '41', '43','45','47','48','61', '65')
                                                THEN NVL(B.MOVING_AVG_AMT,0)
                                              WHEN A.MVT_TP IN ('21','23','25')
                                                THEN
                                                  CASE WHEN B.DEBIT_CREDIT_DSTIN_CD = 'H'
                                                         THEN NVL(B.MOVING_AVG_AMT,0)
                                                       ELSE 0
                                                   END
                                                WHEN A.MVT_TP IN ('22','24','26')
                                                THEN
                                                  CASE WHEN B.DEBIT_CREDIT_DSTIN_CD = 'H'
                                                         THEN NVL(B.MOVING_AVG_AMT,0)
                                                       ELSE 0
                                                   END
                                              WHEN  A.MVT_TP IN ('12', '13', '16','72', '73', '76', '42', '44', '46','62','66')     THEN NVL(B.MOVING_AVG_AMT,0) * -1 ELSE 0 END GI_BASE_AMT   --출고원가
                                        ,CASE WHEN A.MVT_TP IN ('01', '04')     THEN NVL(B.ITEM_QTY,0) WHEN  A.MVT_TP IN ('02', '03')     THEN NVL(B.ITEM_QTY,0) * -1 ELSE 0 END PURC_GR_QTY   --구매입고수량
                                        ,CASE WHEN A.MVT_TP IN ('01', '04')     THEN NVL(B.PURC_AMT,0) WHEN  A.MVT_TP IN ('02', '03')     THEN NVL(B.MOVING_AVG_AMT,0) * -1 ELSE 0 END PURC_GR_AMT  --구매입고금액
                                        ,CASE WHEN A.MVT_TP IN ('63')           THEN NVL(B.ITEM_QTY,0) WHEN  A.MVT_TP IN ('64')           THEN NVL(B.ITEM_QTY,0) * -1 ELSE 0 END OBT_GR_QTY   --조달입고수량
                                        ,CASE WHEN A.MVT_TP IN ('63')           THEN NVL(B.PURC_AMT,0) WHEN  A.MVT_TP IN ('64')           THEN NVL(B.MOVING_AVG_AMT,0) * -1 ELSE 0 END OBT_GR_AMT  --조달입고금액
                                        ,CASE WHEN A.MVT_TP IN ('49','59')      THEN NVL(B.ITEM_QTY,0) WHEN  A.MVT_TP IN ('50','60')      THEN NVL(B.ITEM_QTY,0) * -1 ELSE 0 END PAL_GR_QTY   --손익입고수량
                                        ,CASE WHEN A.MVT_TP IN ('49','59')      THEN NVL(B.PURC_AMT,0) WHEN  A.MVT_TP IN ('50','60')      THEN NVL(B.MOVING_AVG_AMT,0) * -1 ELSE 0 END PAL_GR_AMT  --손익입고금액
                                        ,CASE WHEN A.MVT_TP IN ('21','23','25')
                                                THEN
                                                  CASE WHEN B.DEBIT_CREDIT_DSTIN_CD = 'S'
                                                         THEN NVL(B.ITEM_QTY,0)
                                                       ELSE 0
                                                   END
                                              WHEN A.MVT_TP IN ('22','24','26')
                                                THEN
                                                  CASE WHEN B.DEBIT_CREDIT_DSTIN_CD = 'S'
                                                         THEN NVL(B.ITEM_QTY,0)
                                                       ELSE 0
                                                   END
                                              ELSE 0
                                         END STRGE_MOVE_GR_QTY   --창고이동입고수량
                                        ,CASE WHEN A.MVT_TP IN ('21','23','25')
                                                THEN
                                                  CASE WHEN B.DEBIT_CREDIT_DSTIN_CD = 'S'
                                                         THEN NVL(B.PURC_AMT,0)
                                                       ELSE 0
                                                   END
                                              WHEN A.MVT_TP IN ('22','24','26')
                                                THEN
                                                  CASE WHEN B.DEBIT_CREDIT_DSTIN_CD = 'S'
                                                         THEN CASE WHEN NVL(B.PURC_AMT, 0) = 0
                                                                     THEN NVL(B.SALE_AMT, 0)
                                                                   ELSE NVL(B.PURC_AMT, 0)
                                                               END
                                                       ELSE 0
                                                   END
                                              ELSE 0
                                         END STRGE_MOVE_GR_AMT  --창고이동입고금액
                                         --33,34,35,36,37,38
                                        ,CASE WHEN A.MVT_TP IN ('31','33','35','36','37')      THEN NVL(B.ITEM_QTY,0) WHEN  A.MVT_TP IN ('32','34','38')      THEN NVL(B.ITEM_QTY,0) * -1 ELSE 0 END ETC_GR_QTY   --기타입고수량[33:기타입고,35:차입입고,36:차출반환입고,37:내부수령, 34:기타입고취소, 38:내부수령취소]
                                        ,CASE WHEN A.MVT_TP IN ('31','33','35','36','37')      THEN NVL(B.PURC_AMT,0) WHEN  A.MVT_TP IN ('32','34','38')      THEN NVL(B.MOVING_AVG_AMT,0) * -1 ELSE 0 END ETC_GR_AMT  --기타입고금액
                                        ,NVL(D.SALE_TP,'03') AS SALE_TP
                                         ,CASE WHEN A.MVT_TP IN ('71', '74', '75')
                                                    THEN
                                                      CASE WHEN NVL(D.SALE_TP,'01') = '01'
                                                             THEN NVL(B.ITEM_QTY,0)
                                                           ELSE 0
                                                       END
                                                  WHEN  A.MVT_TP IN ('72', '73', '76')
                                                    THEN
                                                      CASE WHEN NVL(D.SALE_TP,'01') = '01'
                                                             THEN NVL(B.ITEM_QTY,0) * -1
                                                           ELSE 0
                                                       END
                                                  ELSE 0
                                              END CT_SALE_QTY   --COUNTER판매수량
                                            ,CASE WHEN A.MVT_TP IN ('71', '74', '75')
                                                    THEN
                                                       CASE WHEN NVL(D.SALE_TP,'01') = '01'
                                                             THEN NVL(B.SALE_AMT,0)
                                                           ELSE 0
                                                       END
                                                  WHEN A.MVT_TP IN ('72', '73', '76')
                                                    THEN
                                                       CASE WHEN NVL(D.SALE_TP,'01') = '01'
                                                             THEN NVL(B.SALE_AMT,0) * -1
                                                           ELSE 0
                                                       END
                                                  ELSE 0
                                             END CT_SALE_AMT  --COUNTER판매금액
                                            ,CASE WHEN A.MVT_TP IN ('71', '74', '75')
                                                    THEN
                                                      CASE WHEN NVL(D.SALE_TP,'01') = '01'
                                                             THEN NVL(B.MOVING_AVG_AMT,0)
                                                           ELSE 0
                                                       END
                                                  WHEN  A.MVT_TP IN ('72', '73', '76')
                                                    THEN
                                                      CASE WHEN NVL(D.SALE_TP,'01') = '01'
                                                             THEN NVL(B.MOVING_AVG_AMT,0) * -1
                                                           ELSE 0
                                                       END
                                                  ELSE 0
                                             END CT_SALE_BASE_AMT  --COUNTER원가금액
                                              ,CASE WHEN A.MVT_TP IN ('71', '74', '75')
                                                    THEN
                                                      CASE WHEN NVL(D.SALE_TP,'01') = '02'
                                                             THEN NVL(B.ITEM_QTY,0)
                                                           ELSE 0
                                                       END
                                                  WHEN  A.MVT_TP IN ('72', '73', '76')
                                                    THEN
                                                      CASE WHEN NVL(D.SALE_TP,'01') = '02'
                                                             THEN NVL(B.ITEM_QTY,0) * -1
                                                           ELSE 0
                                                       END
                                                  ELSE 0
                                              END WKS_SALE_QTY   --WOKSHOP판매수량
                                            ,CASE WHEN A.MVT_TP IN ('71', '74', '75')
                                                    THEN
                                                       CASE WHEN NVL(D.SALE_TP,'01') = '02'
                                                             THEN NVL(B.SALE_AMT,0)
                                                           ELSE 0
                                                       END
                                                  WHEN A.MVT_TP IN ('72', '73', '76')
                                                    THEN
                                                       CASE WHEN NVL(D.SALE_TP,'01') = '02'
                                                             THEN NVL(B.SALE_AMT,0) * -1
                                                           ELSE 0
                                                       END
                                                  ELSE 0
                                             END WKS_SALE_AMT  --WOKSHOP판매금액
                                            ,CASE WHEN A.MVT_TP IN ('71', '74', '75')
                                                    THEN
                                                      CASE WHEN NVL(D.SALE_TP,'01') = '02'
                                                             THEN NVL(B.MOVING_AVG_AMT,0)
                                                           ELSE 0
                                                       END
                                                  WHEN  A.MVT_TP IN ('72', '73', '76')
                                                    THEN
                                                      CASE WHEN NVL(D.SALE_TP,'01') = '02'
                                                             THEN NVL(B.MOVING_AVG_AMT,0) * -1
                                                           ELSE 0
                                                       END
                                                  ELSE 0
                                             END WKS_SALE_BASE_AMT  --WOKSHOP판매원가금액
                                             ,CASE WHEN A.MVT_TP IN ('11','14','15')
                                                    THEN
                                                      CASE WHEN NVL(D.SALE_TP,'01') = '01'
                                                             THEN NVL(B.ITEM_QTY,0)
                                                           ELSE 0
                                                       END
                                                  WHEN  A.MVT_TP IN ('12','13','16')
                                                    THEN
                                                      CASE WHEN NVL(D.SALE_TP,'01') = '01'
                                                             THEN NVL(B.ITEM_QTY,0) * -1
                                                           ELSE 0
                                                       END
                                                  ELSE 0
                                              END SER_SALE_QTY   --정비판매수량
                                            ,CASE WHEN A.MVT_TP IN ('11','14','15')
                                                    THEN
                                                       CASE WHEN NVL(D.SALE_TP,'01') = '01'
                                                             THEN NVL(B.SALE_AMT,0)
                                                           ELSE 0
                                                       END
                                                  WHEN A.MVT_TP IN ('12','13','16')
                                                    THEN
                                                       CASE WHEN NVL(D.SALE_TP,'01') = '01'
                                                             THEN NVL(B.SALE_AMT,0) * -1
                                                           ELSE 0
                                                       END
                                                  ELSE 0
                                             END SER_SALE_AMT  --정비판매금액
                                            ,CASE WHEN A.MVT_TP IN ('11','14','15')
                                                    THEN
                                                      CASE WHEN NVL(D.SALE_TP,'01') = '01'
                                                             THEN NVL(B.MOVING_AVG_AMT,0)
                                                           ELSE 0
                                                       END
                                                  WHEN  A.MVT_TP IN ('12','13','16')
                                                    THEN
                                                      CASE WHEN NVL(D.SALE_TP,'01') = '01'
                                                             THEN NVL(B.MOVING_AVG_AMT,0) * -1
                                                           ELSE 0
                                                       END
                                                  ELSE 0
                                             END SER_SALE_BASE_AMT  --정비판매원가금액
                                        ,CASE WHEN A.MVT_TP IN ('21','23','25')
                                                THEN
                                                  CASE WHEN B.DEBIT_CREDIT_DSTIN_CD = 'H'
                                                         THEN NVL(B.ITEM_QTY,0)
                                                       ELSE 0
                                                   END
                                                WHEN A.MVT_TP IN ('22','24','26')
                                                THEN
                                                  CASE WHEN B.DEBIT_CREDIT_DSTIN_CD = 'H'
                                                         THEN NVL(B.ITEM_QTY,0)
                                                       ELSE 0
                                                   END
                                              ELSE 0
                                         END STRGE_MOVE_GI_QTY   --창고이동출고수량
                                         ,CASE WHEN A.MVT_TP IN ('21','23','25')
                                                THEN
                                                  CASE WHEN B.DEBIT_CREDIT_DSTIN_CD = 'H'
                                                         THEN NVL(B.MOVING_AVG_AMT,0)
                                                       ELSE 0
                                                   END
                                               WHEN A.MVT_TP IN ('22','24','26')
                                                THEN
                                                  CASE WHEN B.DEBIT_CREDIT_DSTIN_CD = 'H'
                                                         THEN NVL(B.MOVING_AVG_AMT,0)
                                                       ELSE 0
                                                   END
                                              ELSE 0
                                         END STRGE_MOVE_GI_BASE_AMT  --창고이동출고원가금액
                                        ,CASE WHEN A.MVT_TP IN ('41')      THEN NVL(B.ITEM_QTY,0)       WHEN  A.MVT_TP IN ('42')      THEN NVL(B.ITEM_QTY,0) * -1       ELSE 0 END INT_RCV_GI_QTY   --내부출고수량
                                        ,CASE WHEN A.MVT_TP IN ('41')      THEN NVL(B.SALE_AMT,0)       WHEN  A.MVT_TP IN ('42')      THEN NVL(B.SALE_AMT,0) * -1       ELSE 0 END INT_RCV_GI_AMT  --내부출고금액
                                        ,CASE WHEN A.MVT_TP IN ('41')      THEN NVL(B.MOVING_AVG_AMT,0) WHEN  A.MVT_TP IN ('42')      THEN NVL(B.MOVING_AVG_AMT,0) * -1 ELSE 0 END INT_RCV_GI_BASE_AMT  --내부출고원가고금액
                                        ,CASE WHEN A.MVT_TP IN ('61')      THEN NVL(B.ITEM_QTY,0)       WHEN  A.MVT_TP IN ('62')      THEN NVL(B.ITEM_QTY,0) * -1       ELSE 0 END OBT_GI_QTY   --조달출고수량
                                        ,CASE WHEN A.MVT_TP IN ('61')      THEN NVL(B.SALE_AMT,0)       WHEN  A.MVT_TP IN ('62')      THEN NVL(B.SALE_AMT,0) * -1       ELSE 0 END OBT_GI_AMT  --조달출고금액
                                        ,CASE WHEN A.MVT_TP IN ('61')      THEN NVL(B.MOVING_AVG_AMT,0) WHEN  A.MVT_TP IN ('62')      THEN NVL(B.MOVING_AVG_AMT,0) * -1 ELSE 0 END OBT_GI_BASE_AMT  --조달출고원가고금액
                                        ,CASE WHEN A.MVT_TP IN ('43','45','65')      THEN NVL(B.ITEM_QTY,0)       WHEN  A.MVT_TP IN ('44','46','66')      THEN NVL(B.ITEM_QTY,0) * -1       ELSE 0 END LOSS_GI_QTY   --손실출고수량
                                        ,CASE WHEN A.MVT_TP IN ('43','45','65')      THEN NVL(B.MOVING_AVG_AMT,0) WHEN  A.MVT_TP IN ('44','46','66')      THEN NVL(B.MOVING_AVG_AMT,0) * -1 ELSE 0 END LOSS_GI_BASE_AMT  --손실출고원가고금액
                                        ,CASE WHEN A.MVT_TP IN ('47','48')      THEN NVL(B.ITEM_QTY,0)       ELSE 0 END ETC_GI_QTY   --기타출고수량
                                        ,CASE WHEN A.MVT_TP IN ('47','48')      THEN NVL(B.SALE_AMT,0)       ELSE 0 END ETC_GI_AMT  --기타출고금액
                                        ,CASE WHEN A.MVT_TP IN ('47','48')      THEN NVL(B.MOVING_AVG_AMT,0) ELSE 0 END ETC_GI_BASE_AMT  --기타출고원가고금액
                                        ,NVL(B.MOVING_AVG_PRC,0) AS MOVING_AVG_PRC
                                        ,NVL(B.MOVING_AVG_TAX_DDCT_PRC,0) AS MOVING_AVG_TAX_DDCT_PRC
                                        ,NVL(B.MOVING_AVG_AMT,0) AS MOVING_AVG_AMT
                                        ,NVL(B.MOVING_AVG_TAX_DDCT_AMT,0) AS MOVING_AVG_TAX_DDCT_AMT
                                FROM PT_0311T A
                                        INNER JOIN PT_0312T B
                                                ON A.DLR_CD = B.DLR_CD
                                               AND A.MVT_DOC_YY_MM = B.MVT_DOC_YY_MM
                                               AND A.MVT_DOC_NO    = B.MVT_DOC_NO
                                        INNER JOIN PT_0201T C
                                           ON B.DLR_CD  = C.DLR_CD
                                          AND B.ITEM_CD = C.ITEM_CD
                                        LEFT OUTER JOIN (
                                                SELECT   A.DLR_CD
                                                        ,A.PAR_SALE_ORD_NO
                                                        ,A.SALE_TP
                                                        ,B.PAR_SALE_ORD_LINE_NO
                                                        ,B.ITEM_CD
                                                  FROM   DMSDB.PT_0521T A    --부품판매헤더정보
                                                           INNER JOIN DMSDB.PT_0522T B    --부품판매품목정보
                                                              ON A.DLR_CD          = B.DLR_CD
                                                             AND A.PAR_SALE_ORD_NO = B.PAR_SALE_ORD_NO
                                                WHERE    A.DLR_CD = '${sDlrCd}'
                                               ) D
                                             ON A.DLR_CD          = D.DLR_CD
                                            AND B.REF_DOC_NO      = D.PAR_SALE_ORD_NO
                                            AND B.REF_DOC_LINE_NO = D.PAR_SALE_ORD_LINE_NO
                                WHERE  A.DLR_CD = '${sDlrCd}'
                                  and  A.MVT_DOC_YY_MM between #{sAccYyMmFr} and #{sAccYyMmTo}
                                  AND C.ITEM_DSTIN_CD NOT IN  ('20','04')
                                  AND A.MVT_TP NOT IN ('23','24')  --예류 및 예류 취소는 마감에서 제외한다.
                                 ) A
                               GROUP BY  A.DLR_CD
                                        ,A.PLT_CD
                                        ,A.STRGE_CD
                                        ,A.ITEM_CD
                             ) C
                         ON A.DLR_CD = C.DLR_CD
                        AND A.PLT_CD = C.PLT_CD
                        AND A.STRGE_CD = C.STRGE_CD
                        AND A.ITEM_CD = C.ITEM_CD
                        LEFT OUTER JOIN PT_0901T D  --기초재고
                           ON A.DLR_CD    = D.DLR_CD
                          AND A.PLT_CD    = D.PLT_CD
                          AND A.STRGE_CD  = D.STRGE_CD
                          AND D.YY_MM     = TO_CHAR(TO_DATE(#{sAccYyMmFr}||'01','YYYYMMDD'),'YYYYMM')
                          AND A.ITEM_CD   = D.ITEM_CD
                        LEFT OUTER JOIN PT_0901T E  --기말재고
                           ON A.DLR_CD    = E.DLR_CD
                          AND A.PLT_CD    = E.PLT_CD
                          AND A.STRGE_CD  = E.STRGE_CD
                          AND E.YY_MM      = TO_CHAR(TO_DATE(#{sAccYyMmTo}||'01','YYYYMMDD'),'YYYYMM')
                          AND A.ITEM_CD   = E.ITEM_CD
                       LEFT OUTER JOIN PT_0211T F
                         ON B.DLR_CD = F.DLR_CD
                        AND B.BP_CD  = F.BP_CD
                       LEFT OUTER JOIN PT_0902T G
                         ON A.DLR_CD   = G.DLR_CD
                        AND A.PLT_CD   = G.PLT_CD
                        AND A.STRGE_CD = G.STRGE_CD
                        AND A.ITEM_CD  = G.ITEM_CD
                        AND G.YY_MM    = TO_CHAR(ADD_MONTHS(TO_DATE(#{sAccYyMmFr}||'01','YYYYMMDD'),-1),'YYYYMM')
                       LEFT OUTER JOIN PT_0902T H
                         ON A.DLR_CD   = H.DLR_CD
                        AND A.PLT_CD   = H.PLT_CD
                        AND A.STRGE_CD = H.STRGE_CD
                        AND A.ITEM_CD  = H.ITEM_CD
                        AND H.YY_MM    = #{sAccYyMmTo}
                       LEFT OUTER JOIN PT_0208T I
                           ON A.DLR_CD    = I.DLR_CD
                          AND A.STRGE_CD  = I.STRGE_CD
                          AND A.ITEM_CD   = I.ITEM_CD
                       LEFT OUTER JOIN PT_0901T J  --기초재고(검색 조건 시작점이 현재월인경우)
                         ON A.DLR_CD    = J.DLR_CD
                        AND A.PLT_CD    = J.PLT_CD
                        AND A.STRGE_CD  = J.STRGE_CD
                        AND J.YY_MM     = TO_CHAR(ADD_MONTHS(TO_DATE(#{sAccYyMmFr}||'01','YYYYMMDD'),-1),'YYYYMM')
                        AND A.ITEM_CD   = J.ITEM_CD
                        WHERE B.ITEM_DSTIN_CD NOT IN  ('20','04')
                        <if test='sStrgeCd != null and sStrgeCd != ""'>
                            AND A.STRGE_CD = #{sStrgeCd}
                        </if> <!-- 창고코드 -->
                        <if test='sItemCd != null and sItemCd != ""'>
                            AND A.ITEM_CD LIKE '%'||#{sItemCd}||'%'
                        </if>
                        <if test='sItemNm != null and sItemNm != ""'>
                            AND B.ITEM_NM LIKE '%'||#{sItemNm}||'%'
                        </if>
                        <if test='sItemDstinCd != null and sItemDstinCd != ""'> AND B.ITEM_DSTIN_CD = #{sItemDstinCd}</if><!-- 품목유형 -->
                        <if test='sCarlineCd != null and sCarlineCd != ""'> AND B.CARLINE_CD = #{sCarlineCd}</if><!--  차종 -->
                        <if test='sModelCd != null and sModelCd != ""'> AND B.MODEL_CD = #{sModelCd}</if><!-- 모델코드 -->
                        <if test='sLocCd != null and sLocCd != ""'> AND B.LOC_CD like '%'||#{sLocCd} ||'%'</if><!-- 로케이션 -->
                        <if test='sBpTp != null and sBpTp != ""'> AND F.BP_TP = #{sBpTp}</if><!-- 거래처유형 -->
           )
    </select>

    <!-- 월마감 출고 정보를 조회한다. -->
    <select id="selectStockDdlnByConditionByItemDistCd" resultType="StockDdlnItemVO" parameterType="StockDdlnSearchVO">
    /* [chn.bhmc.dms.par.stm.service.dao.StockDdlnDao.selectStockDdlnByConditionByItemDistCd] */
     SELECT A.*
       FROM
         (
          SELECT     ROW_NUMBER() OVER(ORDER BY A.DLR_CD, A.PLT_CD, A.ITEM_CD) AS RNUM
                    ,A.DLR_CD
                    ,A.PLT_CD
                    ,'' AS LOC_CD
                    ,A.ITEM_CD
                    ,B.ITEM_NM
                    ,B.ITEM_DSTIN_CD
                    ,'' AS FIRST_TP                  --1등급구분
                    ,'' AS SECOND_TP                 --2등급구분
                    ,'' AS THIRD_TP                  --3등급구분
                    ,B.STOCK_UNIT_CD AS UNIT_CD
                    ,B.BP_CD
                    ,D.BP_NM
                    ,B.CARLINE_CD AS MODEL_CD
                    ,B.CARLINE_CD
                    ,CASE WHEN TO_CHAR(TO_DATE(#{sAccYyMmFr}||'01','YYYYMMDD'),'YYYYMM') = TO_CHAR(SYSDATE,'YYYYMM') THEN NVL(G.PSNT_MM_DDLN_STOCK_QTY,0) ELSE NVL(E.PRE_MM_DDLN_STOCK_QTY,0) END  PRE_MM_DDLN_STOCK_QTY
                    ,CASE WHEN TO_CHAR(TO_DATE(#{sAccYyMmFr}||'01','YYYYMMDD'),'YYYYMM') = TO_CHAR(SYSDATE,'YYYYMM') THEN NVL(G.PSNT_MM_DDLN_STOCK_AMT,0) ELSE NVL(E.PRE_MM_DDLN_STOCK_AMT,0) END  PRE_MM_DDLN_STOCK_AMT
                    ,CASE WHEN TO_CHAR(TO_DATE(#{sAccYyMmFr}||'01','YYYYMMDD'),'YYYYMM') = TO_CHAR(SYSDATE,'YYYYMM')
                            THEN
                                 CASE
                                   WHEN NVL(G.PSNT_MM_DDLN_STOCK_QTY,0) = 0
                                     THEN 0
                                   ELSE ROUND(NVL(G.PSNT_MM_DDLN_STOCK_AMT,0) / NVL(G.PSNT_MM_DDLN_STOCK_QTY,0),2)
                                 END
                          ELSE
                                 CASE
                                   WHEN NVL(E.PRE_MM_DDLN_STOCK_QTY,0) = 0
                                     THEN 0
                                   ELSE ROUND(NVL(E.PRE_MM_DDLN_STOCK_AMT,0) / NVL(E.PRE_MM_DDLN_STOCK_QTY,0),2)
                                 END
                      END  PRE_MM_DDLN_STOCK_PRC
                    ,C.GR_QTY
                    ,C.GR_AMT
                    ,C.GI_QTY
                    ,C.GI_AMT
                    ,C.GI_BASE_AMT
                    ,C.PURC_GR_QTY
                    ,C.PURC_GR_AMT
                    ,C.OBT_GR_QTY
                    ,C.OBT_GR_AMT
                    ,C.PAL_GR_QTY
                    ,C.PAL_GR_AMT
                    ,C.STRGE_MOVE_GR_QTY
                    ,C.STRGE_MOVE_GR_AMT
                    ,C.ETC_GR_QTY
                    ,C.ETC_GR_AMT
                    ,CASE WHEN NVL(C.GR_QTY - C.GI_QTY,0) = 0 THEN 0
                     ELSE NVL(C.GR_AMT - C.GI_AMT,0) / NVL(C.GR_QTY - C.GI_QTY,0) END MOVING_AVG_PRC
                    ,C.CT_SALE_QTY
                    ,C.CT_SALE_AMT
                    ,C.CT_SALE_BASE_AMT
                    ,C.WKS_SALE_QTY
                    ,C.WKS_SALE_AMT
                    ,C.WKS_SALE_BASE_AMT
                    ,C.STRGE_MOVE_GI_QTY
                    ,C.STRGE_MOVE_GI_BASE_AMT
                    ,C.INT_RCV_GI_QTY
                    ,C.INT_RCV_GI_AMT
                    ,C.INT_RCV_GI_BASE_AMT
                    ,C.OBT_GI_QTY
                    ,C.OBT_GI_AMT
                    ,C.OBT_GI_BASE_AMT
                    ,C.LOSS_GI_QTY
                    ,C.LOSS_GI_BASE_AMT
                    ,C.ETC_GI_QTY
                    ,C.ETC_GI_AMT
                    ,C.ETC_GI_BASE_AMT
                    ,NVL(F.PSNT_MM_DDLN_STOCK_QTY,0) AS PSNT_MM_DDLN_STOCK_QTY
                    ,NVL(F.PSNT_MM_DDLN_STOCK_AMT,0) AS PSNT_MM_DDLN_STOCK_AMT
                    ,CASE WHEN NVL(F.PSNT_MM_DDLN_STOCK_QTY,0) = 0 THEN 0
                     ELSE ROUND(NVL(F.PSNT_MM_DDLN_STOCK_AMT,0) / NVL(F.PSNT_MM_DDLN_STOCK_QTY,0),2) END PSNT_MM_DDLN_STOCK_PRC     --당월마감이동평균가격
                    ,(C.CT_SALE_QTY + C.WKS_SALE_QTY) AS  PAR_SALE_QTY                  --부품판매수량
                    ,(C.CT_SALE_BASE_AMT + C.WKS_SALE_BASE_AMT) AS PAR_SALE_BASE_AMT    --부품판매원가금액
                    ,(C.CT_SALE_AMT + C.WKS_SALE_AMT) AS PAR_SALE_AMT                   --부품판매금액
                    ,C.SER_SALE_QTY
                    ,C.SER_SALE_BASE_AMT
                    ,C.SER_SALE_AMT
                    ,C.GR_MOVING_AVG_AMT
                    ,C.GR_MOVING_AVG_TAX_DDCT_AMT
                    ,C.GI_MOVING_AVG_TAX_DDCT_AMT
            FROM (SELECT DLR_CD,PLT_CD,ITEM_CD
                    FROM PT_0301T
                   GROUP BY DLR_CD,PLT_CD,ITEM_CD) A
                 INNER JOIN PT_0201T B ON A.DLR_CD = B.DLR_CD AND A.ITEM_CD = B.ITEM_CD
                 LEFT OUTER JOIN
                (
                 SELECT  A.DLR_CD
                        ,A.PLT_CD
                        ,A.ITEM_CD
                        ,SUM(GR_QTY) AS GR_QTY
                        ,SUM(GR_AMT) AS GR_AMT
                        ,SUM(GI_QTY) AS GI_QTY
                        ,SUM(GI_AMT) AS GI_AMT
                        ,SUM(GI_BASE_AMT) AS GI_BASE_AMT
                        ,SUM(PURC_GR_QTY) AS PURC_GR_QTY
                        ,SUM(PURC_GR_AMT) AS PURC_GR_AMT
                        ,SUM(OBT_GR_QTY) AS OBT_GR_QTY
                        ,SUM(OBT_GR_AMT) AS OBT_GR_AMT
                        ,SUM(PAL_GR_QTY) AS PAL_GR_QTY
                        ,SUM(PAL_GR_AMT) AS PAL_GR_AMT
                        ,SUM(STRGE_MOVE_GR_QTY) AS STRGE_MOVE_GR_QTY
                        ,SUM(STRGE_MOVE_GR_AMT) AS STRGE_MOVE_GR_AMT
                        ,SUM(ETC_GR_QTY) AS ETC_GR_QTY
                        ,SUM(ETC_GR_AMT) AS ETC_GR_AMT
                        ,SUM(CT_SALE_QTY)  AS CT_SALE_QTY
                        ,SUM(CT_SALE_AMT)  AS CT_SALE_AMT
                        ,SUM(CT_SALE_BASE_AMT) AS CT_SALE_BASE_AMT
                        ,SUM(WKS_SALE_QTY)  AS WKS_SALE_QTY
                        ,SUM(WKS_SALE_AMT) AS WKS_SALE_AMT
                        ,SUM(WKS_SALE_BASE_AMT) AS WKS_SALE_BASE_AMT
                        ,SUM(SER_SALE_QTY)  AS SER_SALE_QTY
                        ,SUM(SER_SALE_BASE_AMT) AS SER_SALE_BASE_AMT
                        ,SUM(SER_SALE_AMT) AS SER_SALE_AMT
                        ,SUM(STRGE_MOVE_GI_QTY) AS STRGE_MOVE_GI_QTY
                        ,SUM(STRGE_MOVE_GI_BASE_AMT) AS STRGE_MOVE_GI_BASE_AMT
                        ,SUM(INT_RCV_GI_QTY) AS INT_RCV_GI_QTY
                        ,SUM(INT_RCV_GI_AMT) AS INT_RCV_GI_AMT
                        ,SUM(INT_RCV_GI_BASE_AMT) AS INT_RCV_GI_BASE_AMT
                        ,SUM(OBT_GI_QTY) AS OBT_GI_QTY
                        ,SUM(OBT_GI_AMT) AS OBT_GI_AMT
                        ,SUM(OBT_GI_BASE_AMT) AS OBT_GI_BASE_AMT
                        ,SUM(LOSS_GI_QTY ) AS LOSS_GI_QTY
                        ,SUM(LOSS_GI_BASE_AMT ) AS LOSS_GI_BASE_AMT
                        ,SUM(ETC_GI_QTY) AS ETC_GI_QTY
                        ,SUM(ETC_GI_AMT) AS ETC_GI_AMT
                        ,SUM(ETC_GI_BASE_AMT) AS ETC_GI_BASE_AMT
                        ,SUM(GR_MOVING_AVG_AMT) AS GR_MOVING_AVG_AMT
                        ,SUM(GR_MOVING_AVG_TAX_DDCT_AMT) AS GR_MOVING_AVG_TAX_DDCT_AMT
                        ,SUM(GI_MOVING_AVG_TAX_DDCT_AMT) AS GI_MOVING_AVG_TAX_DDCT_AMT
                   FROM
                 (
                  SELECT A.DLR_CD
                        ,A.PLT_CD
                        ,A.ITEM_CD
                        ,A.STRGE_CD
                        ,A.GR_QTY
                        ,A.GR_AMT
                        ,A.GI_QTY
                        ,A.GI_AMT
                        ,A.GI_BASE_AMT
                        ,A.PURC_GR_QTY
                        ,A.PURC_GR_AMT
                        ,A.OBT_GR_QTY
                        ,A.OBT_GR_AMT
                        ,A.PAL_GR_QTY
                        ,A.PAL_GR_AMT
                        ,A.STRGE_MOVE_GR_QTY
                        ,A.STRGE_MOVE_GR_AMT
                        ,A.ETC_GR_QTY
                        ,A.ETC_GR_AMT
                        ,A.CT_SALE_QTY
                        ,A.CT_SALE_AMT
                        ,A.CT_SALE_BASE_AMT
                        ,A.WKS_SALE_QTY
                        ,A.WKS_SALE_AMT
                        ,A.WKS_SALE_BASE_AMT
                        ,A.SER_SALE_QTY
                        ,A.SER_SALE_BASE_AMT
                        ,A.SER_SALE_AMT
                        ,A.STRGE_MOVE_GI_QTY
                        ,A.STRGE_MOVE_GI_BASE_AMT
                        ,A.INT_RCV_GI_QTY
                        ,A.INT_RCV_GI_AMT
                        ,A.INT_RCV_GI_BASE_AMT
                        ,A.OBT_GI_QTY
                        ,A.OBT_GI_AMT
                        ,A.OBT_GI_BASE_AMT
                        ,A.LOSS_GI_QTY
                        ,A.LOSS_GI_BASE_AMT
                        ,A.ETC_GI_QTY
                        ,A.ETC_GI_AMT
                        ,A.ETC_GI_BASE_AMT
                        ,A.GR_MOVING_AVG_AMT
                        ,A.GR_MOVING_AVG_TAX_DDCT_AMT
                        ,A.GI_MOVING_AVG_TAX_DDCT_AMT
                    FROM
                          (
                            SELECT   A.DLR_CD
                                    ,A.PLT_CD
                                    ,A.ITEM_CD
                                    ,A.STRGE_CD
                                    ,SUM(GR_QTY) AS GR_QTY
                                    ,SUM(GR_AMT) AS GR_AMT
                                    ,SUM(GI_QTY) AS GI_QTY
                                    ,SUM(GI_AMT) AS GI_AMT
                                    ,SUM(GI_BASE_AMT) AS GI_BASE_AMT
                                    ,SUM(PURC_GR_QTY) AS PURC_GR_QTY
                                    ,SUM(PURC_GR_AMT) AS PURC_GR_AMT
                                    ,SUM(OBT_GR_QTY) AS OBT_GR_QTY
                                    ,SUM(OBT_GR_AMT) AS OBT_GR_AMT
                                    ,SUM(PAL_GR_QTY) AS PAL_GR_QTY
                                    ,SUM(PAL_GR_AMT) AS PAL_GR_AMT
                                    ,SUM(STRGE_MOVE_GR_QTY) AS STRGE_MOVE_GR_QTY
                                    ,SUM(STRGE_MOVE_GR_AMT) AS STRGE_MOVE_GR_AMT
                                    ,SUM(ETC_GR_QTY) AS ETC_GR_QTY
                                    ,SUM(ETC_GR_AMT) AS ETC_GR_AMT
                                    ,SUM(CT_SALE_QTY)  AS CT_SALE_QTY
                                    ,SUM(CT_SALE_AMT)  AS CT_SALE_AMT
                                    ,SUM(CT_SALE_BASE_AMT) AS CT_SALE_BASE_AMT
                                    ,SUM(WKS_SALE_QTY)  AS WKS_SALE_QTY
                                    ,SUM(WKS_SALE_AMT) AS WKS_SALE_AMT
                                    ,SUM(WKS_SALE_BASE_AMT) AS WKS_SALE_BASE_AMT
                                    ,SUM(SER_SALE_QTY)  AS SER_SALE_QTY
                                    ,SUM(SER_SALE_BASE_AMT) AS SER_SALE_BASE_AMT
                                    ,SUM(SER_SALE_AMT) AS SER_SALE_AMT
                                    ,SUM(STRGE_MOVE_GI_QTY) AS STRGE_MOVE_GI_QTY
                                    ,SUM(STRGE_MOVE_GI_BASE_AMT) AS STRGE_MOVE_GI_BASE_AMT
                                    ,SUM(INT_RCV_GI_QTY) AS INT_RCV_GI_QTY
                                    ,SUM(INT_RCV_GI_AMT) AS INT_RCV_GI_AMT
                                    ,SUM(INT_RCV_GI_BASE_AMT) AS INT_RCV_GI_BASE_AMT
                                    ,SUM(OBT_GI_QTY) AS OBT_GI_QTY
                                    ,SUM(OBT_GI_AMT) AS OBT_GI_AMT
                                    ,SUM(OBT_GI_BASE_AMT) AS OBT_GI_BASE_AMT
                                    ,SUM(LOSS_GI_QTY ) AS LOSS_GI_QTY
                                    ,SUM(LOSS_GI_BASE_AMT ) AS LOSS_GI_BASE_AMT
                                    ,SUM(ETC_GI_QTY) AS ETC_GI_QTY
                                    ,SUM(ETC_GI_AMT) AS ETC_GI_AMT
                                    ,SUM(ETC_GI_BASE_AMT) AS ETC_GI_BASE_AMT
                                    ,SUM(GR_MOVING_AVG_AMT) AS GR_MOVING_AVG_AMT
                                    ,SUM(GR_MOVING_AVG_TAX_DDCT_AMT) AS GR_MOVING_AVG_TAX_DDCT_AMT
                                    ,SUM(GI_MOVING_AVG_TAX_DDCT_AMT) AS GI_MOVING_AVG_TAX_DDCT_AMT
                              FROM
                                (
                                  SELECT A.DLR_CD
                                        ,A.MVT_DOC_YY_MM AS YY_MM
                                        ,A.MVT_DOC_NO
                                        ,A.MVT_TP
                                        ,B.ITEM_CD
                                        ,B.MVT_DOC_LINE_NO
                                        ,B.CANC_STMT_YN
                                        ,B.AUTO_CRE_YN
                                        ,B.PLT_CD
                                        ,B.STRGE_CD
                                        ,B.LOC_CD
                                        ,B.DEBIT_CREDIT_DSTIN_CD
                                        ,B.ITEM_QTY
                                        ,CASE WHEN A.MVT_TP IN ('01', '04', '63', '49', '59','31','33','35','36','37')
                                                THEN NVL(B.ITEM_QTY,0)
                                              WHEN A.MVT_TP IN ('21','23','25')
                                                THEN
                                                  CASE WHEN B.DEBIT_CREDIT_DSTIN_CD = 'S'
                                                         THEN NVL(B.ITEM_QTY,0)
                                                       ELSE 0
                                                   END
                                              WHEN A.MVT_TP IN ('22','24','26')
                                                THEN
                                                  CASE WHEN B.DEBIT_CREDIT_DSTIN_CD = 'S'
                                                         THEN NVL(B.ITEM_QTY,0)
                                                       ELSE 0
                                                   END
                                              WHEN  A.MVT_TP IN ('02', '03', '64', '50', '60','32','34','38')     THEN NVL(B.ITEM_QTY,0) * -1 ELSE 0 END GR_QTY   --입고수량
                                        ,CASE WHEN A.MVT_TP IN ('01', '04', '63', '49', '59','31','33','35','36','37')
                                                THEN NVL(B.PURC_AMT,0)
                                              WHEN A.MVT_TP IN ('21','23','25')
                                                THEN
                                                  CASE WHEN B.DEBIT_CREDIT_DSTIN_CD = 'S'
                                                         THEN NVL(B.PURC_AMT,0)
                                                       ELSE 0
                                                   END
                                              WHEN A.MVT_TP IN ('22','24','26')
                                                THEN
                                                  CASE WHEN B.DEBIT_CREDIT_DSTIN_CD = 'S'
                                                         THEN CASE WHEN NVL(B.PURC_AMT, 0) = 0
                                                                     THEN NVL(B.SALE_AMT, 0)
                                                                   ELSE NVL(B.PURC_AMT, 0)
                                                               END
                                                       ELSE 0
                                                   END
                                              WHEN  A.MVT_TP IN ('02', '03', '64', '50', '60','32','34','38')     THEN NVL(B.MOVING_AVG_AMT,0) * -1 ELSE 0 END GR_AMT   --입고금액
                                        ,CASE WHEN A.MVT_TP IN ('11', '14', '15','71', '74', '75', '41', '43','45','47','48','61', '65')
                                                THEN NVL(B.ITEM_QTY,0)
                                              WHEN A.MVT_TP IN ('21','23','25')
                                                THEN
                                                  CASE WHEN B.DEBIT_CREDIT_DSTIN_CD = 'H'
                                                         THEN NVL(B.ITEM_QTY,0)
                                                       ELSE 0
                                                   END
                                                WHEN A.MVT_TP IN ('22','24','26')
                                                THEN
                                                  CASE WHEN B.DEBIT_CREDIT_DSTIN_CD = 'H'
                                                         THEN NVL(B.ITEM_QTY,0)
                                                       ELSE 0
                                                   END
                                              WHEN  A.MVT_TP IN ('12', '13', '16','72', '73', '76',  '42', '44', '46','62','66')     THEN NVL(B.ITEM_QTY,0) * -1 ELSE 0 END GI_QTY   --출고수량
                                        ,CASE WHEN A.MVT_TP IN ('11', '14', '15','71', '74', '75', '41', '43','45','47','48','61', '65')
                                                THEN NVL(B.SALE_AMT,0)
                                              WHEN A.MVT_TP IN ('21','23','25')
                                                THEN
                                                  CASE WHEN B.DEBIT_CREDIT_DSTIN_CD = 'H'
                                                         THEN NVL(B.SALE_AMT,0)
                                                       ELSE 0
                                                   END
                                                WHEN A.MVT_TP IN ('22','24','26')
                                                THEN
                                                  CASE WHEN B.DEBIT_CREDIT_DSTIN_CD = 'H'
                                                         THEN CASE WHEN NVL(B.SALE_AMT, 0) = 0
                                                                     THEN NVL(B.PURC_AMT, 0)
                                                                   ELSE NVL(B.SALE_AMT, 0)
                                                               END
                                                       ELSE 0
                                                   END
                                              WHEN  A.MVT_TP IN ('12', '13', '16','72', '73', '76', '42', '44', '46','62','66')     THEN NVL(B.SALE_AMT,0) * -1 ELSE 0 END GI_AMT   --출고금액
                                        ,CASE WHEN A.MVT_TP IN ('11', '14', '15','71', '74', '75', '41', '43','45','47','48','61', '65')
                                                THEN NVL(B.MOVING_AVG_AMT,0)
                                              WHEN A.MVT_TP IN ('21','23','25')
                                                THEN
                                                  CASE WHEN B.DEBIT_CREDIT_DSTIN_CD = 'H'
                                                         THEN NVL(B.MOVING_AVG_AMT,0)
                                                       ELSE 0
                                                   END
                                                WHEN A.MVT_TP IN ('22','24','26')
                                                THEN
                                                  CASE WHEN B.DEBIT_CREDIT_DSTIN_CD = 'H'
                                                         THEN NVL(B.MOVING_AVG_AMT,0)
                                                       ELSE 0
                                                   END
                                              WHEN  A.MVT_TP IN ('12', '13', '16','72', '73', '76', '42', '44', '46','62','66')     THEN NVL(B.MOVING_AVG_AMT,0) * -1 ELSE 0 END GI_BASE_AMT   --출고원가
                                        ,CASE WHEN A.MVT_TP IN ('01', '04')     THEN NVL(B.ITEM_QTY,0) WHEN  A.MVT_TP IN ('02', '03')     THEN NVL(B.ITEM_QTY,0) * -1 ELSE 0 END PURC_GR_QTY   --구매입고수량
                                        ,CASE WHEN A.MVT_TP IN ('01', '04')     THEN NVL(B.PURC_AMT,0) WHEN  A.MVT_TP IN ('02', '03')     THEN NVL(B.MOVING_AVG_AMT,0) * -1 ELSE 0 END PURC_GR_AMT  --구매입고금액
                                        ,CASE WHEN A.MVT_TP IN ('63')           THEN NVL(B.ITEM_QTY,0) WHEN  A.MVT_TP IN ('64')           THEN NVL(B.ITEM_QTY,0) * -1 ELSE 0 END OBT_GR_QTY   --조달입고수량
                                        ,CASE WHEN A.MVT_TP IN ('63')           THEN NVL(B.PURC_AMT,0) WHEN  A.MVT_TP IN ('64')           THEN NVL(B.MOVING_AVG_AMT,0) * -1 ELSE 0 END OBT_GR_AMT  --조달입고금액
                                        ,CASE WHEN A.MVT_TP IN ('49','59')      THEN NVL(B.ITEM_QTY,0) WHEN  A.MVT_TP IN ('50','60')      THEN NVL(B.ITEM_QTY,0) * -1 ELSE 0 END PAL_GR_QTY   --손익입고수량
                                        ,CASE WHEN A.MVT_TP IN ('49','59')      THEN NVL(B.PURC_AMT,0) WHEN  A.MVT_TP IN ('50','60')      THEN NVL(B.MOVING_AVG_AMT,0) * -1 ELSE 0 END PAL_GR_AMT  --손익입고금액
                                        ,CASE WHEN A.MVT_TP IN ('21','23','25')
                                                THEN
                                                  CASE WHEN B.DEBIT_CREDIT_DSTIN_CD = 'S'
                                                         THEN NVL(B.ITEM_QTY,0)
                                                       ELSE 0
                                                   END
                                              WHEN A.MVT_TP IN ('22','24','26')
                                                THEN
                                                  CASE WHEN B.DEBIT_CREDIT_DSTIN_CD = 'S'
                                                         THEN NVL(B.ITEM_QTY,0)
                                                       ELSE 0
                                                   END
                                              ELSE 0
                                         END STRGE_MOVE_GR_QTY   --창고이동입고수량
                                        ,CASE WHEN A.MVT_TP IN ('21','23','25')
                                                THEN
                                                  CASE WHEN B.DEBIT_CREDIT_DSTIN_CD = 'S'
                                                         THEN NVL(B.PURC_AMT,0)
                                                       ELSE 0
                                                   END
                                              WHEN A.MVT_TP IN ('22','24','26')
                                                THEN
                                                  CASE WHEN B.DEBIT_CREDIT_DSTIN_CD = 'S'
                                                         THEN CASE WHEN NVL(B.PURC_AMT, 0) = 0
                                                                     THEN NVL(B.SALE_AMT, 0)
                                                                   ELSE NVL(B.PURC_AMT, 0)
                                                               END
                                                       ELSE 0
                                                   END
                                              ELSE 0
                                         END STRGE_MOVE_GR_AMT  --창고이동입고금액
                                         --33,34,35,36,37,38
                                        ,CASE WHEN A.MVT_TP IN ('31','33','35','36','37')      THEN NVL(B.ITEM_QTY,0) WHEN  A.MVT_TP IN ('32','34','38')      THEN NVL(B.ITEM_QTY,0) * -1 ELSE 0 END ETC_GR_QTY   --기타입고수량[33:기타입고,35:차입입고,36:차출반환입고,37:내부수령, 34:기타입고취소, 38:내부수령취소]
                                        ,CASE WHEN A.MVT_TP IN ('31','33','35','36','37')      THEN NVL(B.PURC_AMT,0) WHEN  A.MVT_TP IN ('32','34','38')      THEN NVL(B.MOVING_AVG_AMT,0) * -1 ELSE 0 END ETC_GR_AMT  --기타입고금액
                                        ,NVL(D.SALE_TP,'03') AS SALE_TP
                                         ,CASE WHEN A.MVT_TP IN ('71', '74', '75')
                                                    THEN
                                                      CASE WHEN NVL(D.SALE_TP,'01') = '01'
                                                             THEN NVL(B.ITEM_QTY,0)
                                                           ELSE 0
                                                       END
                                                  WHEN  A.MVT_TP IN ('72', '73', '76')
                                                    THEN
                                                      CASE WHEN NVL(D.SALE_TP,'01') = '01'
                                                             THEN NVL(B.ITEM_QTY,0) * -1
                                                           ELSE 0
                                                       END
                                                  ELSE 0
                                              END CT_SALE_QTY   --COUNTER판매수량
                                            ,CASE WHEN A.MVT_TP IN ('71', '74', '75')
                                                    THEN
                                                       CASE WHEN NVL(D.SALE_TP,'01') = '01'
                                                             THEN NVL(B.SALE_AMT,0)
                                                           ELSE 0
                                                       END
                                                  WHEN A.MVT_TP IN ('72', '73', '76')
                                                    THEN
                                                       CASE WHEN NVL(D.SALE_TP,'01') = '01'
                                                             THEN NVL(B.SALE_AMT,0) * -1
                                                           ELSE 0
                                                       END
                                                  ELSE 0
                                             END CT_SALE_AMT  --COUNTER판매금액
                                            ,CASE WHEN A.MVT_TP IN ('71', '74', '75')
                                                    THEN
                                                      CASE WHEN NVL(D.SALE_TP,'01') = '01'
                                                             THEN NVL(B.MOVING_AVG_AMT,0)
                                                           ELSE 0
                                                       END
                                                  WHEN  A.MVT_TP IN ('72', '73', '76')
                                                    THEN
                                                      CASE WHEN NVL(D.SALE_TP,'01') = '01'
                                                             THEN NVL(B.MOVING_AVG_AMT,0) * -1
                                                           ELSE 0
                                                       END
                                                  ELSE 0
                                             END CT_SALE_BASE_AMT  --COUNTER원가금액
                                              ,CASE WHEN A.MVT_TP IN ('71', '74', '75')
                                                    THEN
                                                      CASE WHEN NVL(D.SALE_TP,'01') = '02'
                                                             THEN NVL(B.ITEM_QTY,0)
                                                           ELSE 0
                                                       END
                                                  WHEN  A.MVT_TP IN ('72', '73', '76')
                                                    THEN
                                                      CASE WHEN NVL(D.SALE_TP,'01') = '02'
                                                             THEN NVL(B.ITEM_QTY,0) * -1
                                                           ELSE 0
                                                       END
                                                  ELSE 0
                                              END WKS_SALE_QTY   --WOKSHOP판매수량
                                            ,CASE WHEN A.MVT_TP IN ('71', '74', '75')
                                                    THEN
                                                       CASE WHEN NVL(D.SALE_TP,'01') = '02'
                                                             THEN NVL(B.SALE_AMT,0)
                                                           ELSE 0
                                                       END
                                                  WHEN A.MVT_TP IN ('72', '73', '76')
                                                    THEN
                                                       CASE WHEN NVL(D.SALE_TP,'01') = '02'
                                                             THEN NVL(B.SALE_AMT,0) * -1
                                                           ELSE 0
                                                       END
                                                  ELSE 0
                                             END WKS_SALE_AMT  --WOKSHOP판매금액
                                            ,CASE WHEN A.MVT_TP IN ('71', '74', '75')
                                                    THEN
                                                      CASE WHEN NVL(D.SALE_TP,'01') = '02'
                                                             THEN NVL(B.MOVING_AVG_AMT,0)
                                                           ELSE 0
                                                       END
                                                  WHEN  A.MVT_TP IN ('72', '73', '76')
                                                    THEN
                                                      CASE WHEN NVL(D.SALE_TP,'01') = '02'
                                                             THEN NVL(B.MOVING_AVG_AMT,0) * -1
                                                           ELSE 0
                                                       END
                                                  ELSE 0
                                             END WKS_SALE_BASE_AMT  --WOKSHOP판매원가금액
                                             ,CASE WHEN A.MVT_TP IN ('11','14','15')
                                                    THEN
                                                      CASE WHEN NVL(D.SALE_TP,'01') = '01'
                                                             THEN NVL(B.ITEM_QTY,0)
                                                           ELSE 0
                                                       END
                                                  WHEN  A.MVT_TP IN ('12','13','16')
                                                    THEN
                                                      CASE WHEN NVL(D.SALE_TP,'01') = '01'
                                                             THEN NVL(B.ITEM_QTY,0) * -1
                                                           ELSE 0
                                                       END
                                                  ELSE 0
                                              END SER_SALE_QTY   --정비판매수량
                                            ,CASE WHEN A.MVT_TP IN ('11','14','15')
                                                    THEN
                                                       CASE WHEN NVL(D.SALE_TP,'01') = '01'
                                                             THEN NVL(B.SALE_AMT,0)
                                                           ELSE 0
                                                       END
                                                  WHEN A.MVT_TP IN ('12','13','16')
                                                    THEN
                                                       CASE WHEN NVL(D.SALE_TP,'01') = '01'
                                                             THEN NVL(B.SALE_AMT,0) * -1
                                                           ELSE 0
                                                       END
                                                  ELSE 0
                                             END SER_SALE_AMT  --정비판매금액
                                            ,CASE WHEN A.MVT_TP IN ('11','14','15')
                                                    THEN
                                                      CASE WHEN NVL(D.SALE_TP,'01') = '01'
                                                             THEN NVL(B.MOVING_AVG_AMT,0)
                                                           ELSE 0
                                                       END
                                                  WHEN  A.MVT_TP IN ('12','13','16')
                                                    THEN
                                                      CASE WHEN NVL(D.SALE_TP,'01') = '01'
                                                             THEN NVL(B.MOVING_AVG_AMT,0) * -1
                                                           ELSE 0
                                                       END
                                                  ELSE 0
                                             END SER_SALE_BASE_AMT  --정비판매원가금액
                                        ,CASE WHEN A.MVT_TP IN ('21','23','25')
                                                THEN
                                                  CASE WHEN B.DEBIT_CREDIT_DSTIN_CD = 'H'
                                                         THEN NVL(B.ITEM_QTY,0)
                                                       ELSE 0
                                                   END
                                                WHEN A.MVT_TP IN ('22','24','26')
                                                THEN
                                                  CASE WHEN B.DEBIT_CREDIT_DSTIN_CD = 'H'
                                                         THEN NVL(B.ITEM_QTY,0)
                                                       ELSE 0
                                                   END
                                              ELSE 0
                                         END STRGE_MOVE_GI_QTY   --창고이동출고수량
                                         ,CASE WHEN A.MVT_TP IN ('21','23','25')
                                                THEN
                                                  CASE WHEN B.DEBIT_CREDIT_DSTIN_CD = 'H'
                                                         THEN NVL(B.MOVING_AVG_AMT,0)
                                                       ELSE 0
                                                   END
                                               WHEN A.MVT_TP IN ('22','24','26')
                                                THEN
                                                  CASE WHEN B.DEBIT_CREDIT_DSTIN_CD = 'H'
                                                         THEN NVL(B.MOVING_AVG_AMT,0)
                                                       ELSE 0
                                                   END
                                              ELSE 0
                                         END STRGE_MOVE_GI_BASE_AMT  --창고이동출고원가금액
                                        ,CASE WHEN A.MVT_TP IN ('41')      THEN NVL(B.ITEM_QTY,0)       WHEN  A.MVT_TP IN ('42')      THEN NVL(B.ITEM_QTY,0) * -1       ELSE 0 END INT_RCV_GI_QTY   --내부출고수량
                                        ,CASE WHEN A.MVT_TP IN ('41')      THEN NVL(B.SALE_AMT,0)       WHEN  A.MVT_TP IN ('42')      THEN NVL(B.SALE_AMT,0) * -1       ELSE 0 END INT_RCV_GI_AMT  --내부출고금액
                                        ,CASE WHEN A.MVT_TP IN ('41')      THEN NVL(B.MOVING_AVG_AMT,0) WHEN  A.MVT_TP IN ('42')      THEN NVL(B.MOVING_AVG_AMT,0) * -1 ELSE 0 END INT_RCV_GI_BASE_AMT  --내부출고원가고금액
                                        ,CASE WHEN A.MVT_TP IN ('61')      THEN NVL(B.ITEM_QTY,0)       WHEN  A.MVT_TP IN ('62')      THEN NVL(B.ITEM_QTY,0) * -1       ELSE 0 END OBT_GI_QTY   --조달출고수량
                                        ,CASE WHEN A.MVT_TP IN ('61')      THEN NVL(B.SALE_AMT,0)       WHEN  A.MVT_TP IN ('62')      THEN NVL(B.SALE_AMT,0) * -1       ELSE 0 END OBT_GI_AMT  --조달출고금액
                                        ,CASE WHEN A.MVT_TP IN ('61')      THEN NVL(B.MOVING_AVG_AMT,0) WHEN  A.MVT_TP IN ('62')      THEN NVL(B.MOVING_AVG_AMT,0) * -1 ELSE 0 END OBT_GI_BASE_AMT  --조달출고원가고금액
                                        ,CASE WHEN A.MVT_TP IN ('43','45','65')      THEN NVL(B.ITEM_QTY,0)       WHEN  A.MVT_TP IN ('44','46','66')      THEN NVL(B.ITEM_QTY,0) * -1       ELSE 0 END LOSS_GI_QTY   --손실출고수량
                                        ,CASE WHEN A.MVT_TP IN ('43','45','65')      THEN NVL(B.MOVING_AVG_AMT,0) WHEN  A.MVT_TP IN ('44','46','66')      THEN NVL(B.MOVING_AVG_AMT,0) * -1 ELSE 0 END LOSS_GI_BASE_AMT  --손실출고원가고금액
                                        ,CASE WHEN A.MVT_TP IN ('47','48')      THEN NVL(B.ITEM_QTY,0)       ELSE 0 END ETC_GI_QTY   --기타출고수량
                                        ,CASE WHEN A.MVT_TP IN ('47','48')      THEN NVL(B.SALE_AMT,0)       ELSE 0 END ETC_GI_AMT  --기타출고금액
                                        ,CASE WHEN A.MVT_TP IN ('47','48')      THEN NVL(B.MOVING_AVG_AMT,0) ELSE 0 END ETC_GI_BASE_AMT  --기타출고원가고금액
                                        ,CASE WHEN A.MVT_TP IN ('01', '04','63','49','59','31','33','35','36','37')
                                                THEN NVL(B.MOVING_AVG_AMT,0)
                                              WHEN A.MVT_TP IN ('21','23','25')
                                                THEN
                                                  CASE WHEN B.DEBIT_CREDIT_DSTIN_CD = 'S'
                                                         THEN NVL(B.MOVING_AVG_AMT,0)
                                                       ELSE 0
                                                   END
                                              WHEN A.MVT_TP IN ('22','24','26')
                                                THEN
                                                  CASE WHEN B.DEBIT_CREDIT_DSTIN_CD = 'S'
                                                         THEN NVL(B.MOVING_AVG_AMT,0)
                                                       ELSE 0
                                                   END
                                              WHEN  A.MVT_TP IN ('02','03','64','50','60','32','34','38') THEN NVL(B.MOVING_AVG_AMT,0) * -1 ELSE 0 END GR_MOVING_AVG_AMT -- 입고이동금액
                                        ,CASE WHEN A.MVT_TP IN ('01','04','63','49','59','31','33','35','36','37')
                                                THEN NVL(B.MOVING_AVG_TAX_DDCT_AMT,0)
                                              WHEN A.MVT_TP IN ('21','23','25')
                                                THEN
                                                  CASE WHEN B.DEBIT_CREDIT_DSTIN_CD = 'S'
                                                         THEN NVL(B.MOVING_AVG_TAX_DDCT_AMT,0)
                                                       ELSE 0
                                                   END
                                              WHEN A.MVT_TP IN ('22','24','26')
                                                THEN
                                                  CASE WHEN B.DEBIT_CREDIT_DSTIN_CD = 'S'
                                                         THEN NVL(B.MOVING_AVG_TAX_DDCT_AMT,0)
                                                       ELSE 0
                                                   END
                                              WHEN  A.MVT_TP IN ('02','03','64','50','60','32','34','38') THEN NVL(B.MOVING_AVG_TAX_DDCT_AMT,0) * -1 ELSE 0 END GR_MOVING_AVG_TAX_DDCT_AMT -- 입고이동금액(세금제외)
                                        ,CASE WHEN A.MVT_TP IN ('11','14','15','71','74','75','41','43','45','47','48','61','65')
                                                THEN NVL(B.MOVING_AVG_TAX_DDCT_AMT,0)
                                              WHEN A.MVT_TP IN ('21','23','25')
                                                THEN
                                                  CASE WHEN B.DEBIT_CREDIT_DSTIN_CD = 'H'
                                                         THEN NVL(B.MOVING_AVG_TAX_DDCT_AMT,0)
                                                       ELSE 0
                                                   END
                                                WHEN A.MVT_TP IN ('22','24','26')
                                                THEN
                                                  CASE WHEN B.DEBIT_CREDIT_DSTIN_CD = 'H'
                                                         THEN NVL(B.MOVING_AVG_TAX_DDCT_AMT,0)
                                                       ELSE 0
                                                   END
                                              WHEN  A.MVT_TP IN ('12','13','16','72','73','76','42','44','46','62','66') THEN NVL(B.MOVING_AVG_TAX_DDCT_AMT,0) * -1 ELSE 0 END GI_MOVING_AVG_TAX_DDCT_AMT
                                FROM PT_0311T A
                                        INNER JOIN PT_0312T B
                                                ON A.DLR_CD = B.DLR_CD
                                               AND A.MVT_DOC_YY_MM = B.MVT_DOC_YY_MM
                                               AND A.MVT_DOC_NO    = B.MVT_DOC_NO
                                        INNER JOIN PT_0201T C
                                           ON B.DLR_CD  = C.DLR_CD
                                          AND B.ITEM_CD = C.ITEM_CD
                                        LEFT OUTER JOIN (
                                                SELECT   A.DLR_CD
                                                        ,A.PAR_SALE_ORD_NO
                                                        ,A.SALE_TP
                                                        ,B.PAR_SALE_ORD_LINE_NO
                                                        ,B.ITEM_CD
                                                  FROM   DMSDB.PT_0521T A    --부품판매헤더정보
                                                           INNER JOIN DMSDB.PT_0522T B    --부품판매품목정보
                                                              ON A.DLR_CD          = B.DLR_CD
                                                             AND A.PAR_SALE_ORD_NO = B.PAR_SALE_ORD_NO
                                                WHERE    A.DLR_CD = #{sDlrCd}
                                               ) D
                                             ON A.DLR_CD          = D.DLR_CD
                                            AND B.REF_DOC_NO      = D.PAR_SALE_ORD_NO
                                            AND B.REF_DOC_LINE_NO = D.PAR_SALE_ORD_LINE_NO
                                WHERE  A.DLR_CD = #{sDlrCd}
                                 and  A.MVT_DOC_YY_MM between #{sAccYyMmFr} and #{sAccYyMmTo}
                                <if test='sItemCd != null and sItemCd != ""'>
                                    AND B.ITEM_CD LIKE '%'||#{sItemCd}||'%'
                                </if>
                                <if test='sItemNm != null and sItemNm != ""'>
                                    AND C.ITEM_NM LIKE '%'||#{sItemNm}||'%'
                                </if>
                                <if test='sStrgeCd != null and sStrgeCd != ""'>
                                    AND B.STRGE_CD = #{sStrgeCd}
                                </if>        <!-- 창고코드 -->
                                <if test='sItemDstinCd != null and sItemDstinCd != ""'>
                                    AND C.ITEM_DSTIN_CD = #{sItemDstinCd}
                                </if>        <!-- 품목유형 -->
                                <if test='sCarlineCd != null and sCarlineCd != ""'>
                                    AND C.CARLINE_CD = #{sCarlineCd}
                                </if>        <!-- 차종 -->
                                <if test='sModelCd != null and sModelCd != ""'>
                                    AND C.CARLINE_CD = #{sModelCd}
                                </if>        <!-- 모델코드 -->
                                AND C.ITEM_DSTIN_CD NOT IN  ('20','04')
                                AND A.MVT_TP NOT IN ('23','24')  --예류 및 예류 취소는 마감에서 제외한다.
                                ) A
                                GROUP BY  A.DLR_CD
                                          ,A.PLT_CD
                                          ,A.STRGE_CD
                                          ,A.ITEM_CD
                             ) A
                     ) A
                     GROUP BY A.DLR_CD
                        ,A.PLT_CD
                        ,A.ITEM_CD
               ) C
               ON A.DLR_CD       = C.DLR_CD
              AND A.PLT_CD       = C.PLT_CD
              AND A.ITEM_CD      = C.ITEM_CD
               LEFT OUTER JOIN PT_0211T D
                  ON B.DLR_CD = D.DLR_CD
                 AND B.BP_CD  = D.BP_CD
               LEFT OUTER JOIN (
                     SELECT DLR_CD,PLT_CD,ITEM_CD
                           ,SUM(NVL(PRE_MM_DDLN_STOCK_QTY,0)) AS PRE_MM_DDLN_STOCK_QTY
                           ,SUM(NVL(PRE_MM_DDLN_STOCK_AMT,0)) AS PRE_MM_DDLN_STOCK_AMT
                       FROM PT_0901T
                      WHERE DLR_CD = #{sDlrCd}
                        AND YY_MM = TO_CHAR(TO_DATE(#{sAccYyMmFr}||'01','YYYYMMDD'),'YYYYMM')
                       GROUP BY DLR_CD,PLT_CD,ITEM_CD) E  --기초재고
                   ON A.DLR_CD    = E.DLR_CD
                  AND A.PLT_CD    = E.PLT_CD
                  AND A.ITEM_CD   = E.ITEM_CD
               LEFT OUTER JOIN (
                     SELECT DLR_CD,PLT_CD,ITEM_CD
                           ,SUM(NVL(PSNT_MM_DDLN_STOCK_QTY,0)) AS PSNT_MM_DDLN_STOCK_QTY
                           ,SUM(NVL(PSNT_MM_DDLN_STOCK_AMT,0)) AS PSNT_MM_DDLN_STOCK_AMT
                       FROM PT_0901T
                      WHERE DLR_CD = #{sDlrCd}
                        AND YY_MM = TO_CHAR(TO_DATE(#{sAccYyMmTo}||'01','YYYYMMDD'),'YYYYMM')
                        GROUP BY DLR_CD,PLT_CD,ITEM_CD) F  --기말재고
                   ON A.DLR_CD    = F.DLR_CD
                  AND A.PLT_CD    = F.PLT_CD
                  AND A.ITEM_CD   = F.ITEM_CD
                LEFT OUTER JOIN (
                     SELECT DLR_CD,PLT_CD,ITEM_CD
                           ,SUM(NVL(PSNT_MM_DDLN_STOCK_QTY,0)) AS PSNT_MM_DDLN_STOCK_QTY
                           ,SUM(NVL(PSNT_MM_DDLN_STOCK_AMT,0)) AS PSNT_MM_DDLN_STOCK_AMT
                       FROM PT_0901T
                      WHERE DLR_CD = #{sDlrCd}
                        AND YY_MM = TO_CHAR(ADD_MONTHS(TO_DATE(#{sAccYyMmFr}||'01','YYYYMMDD'),-1),'YYYYMM')
                        GROUP BY DLR_CD,PLT_CD,ITEM_CD) G  --기초재고(검색 조건 시작점이 현재월인경우)
                   ON A.DLR_CD    = G.DLR_CD
                  AND A.PLT_CD    = G.PLT_CD
                  AND A.ITEM_CD   = G.ITEM_CD
               WHERE B.ITEM_DSTIN_CD NOT IN  ('20','04')
               <if test='sItemCd != null and sItemCd != ""'>
                    AND A.ITEM_CD LIKE '%'||#{sItemCd}||'%'
               </if>
               <if test='sItemNm != null and sItemNm != ""'>
                   AND B.ITEM_NM LIKE '%'||#{sItemNm}||'%'
               </if>
               <if test='sItemDstinCd != null and sItemDstinCd != ""'>
                   AND B.ITEM_DSTIN_CD = #{sItemDstinCd}
               </if>        <!-- 품목유형 -->
               <if test='sCarlineCd != null and sCarlineCd != ""'>
                   AND B.CARLINE_CD = #{sCarlineCd}
               </if>        <!-- 차종 -->
               <if test='sModelCd != null and sModelCd != ""'>
                   AND B.CARLINE_CD = #{sModelCd}
               </if>        <!-- 모델코드 -->
          ) A
           <where>
             <if test='firstIndex != -1 and lastIndex != -1'>
                     A.RNUM <![CDATA[<=]]> #{lastIndex}
                 AND A.RNUM <![CDATA[>]]> #{firstIndex}
             </if>
          </where>
    </select>

    <!-- 월마감 출고 정보를 조회한다. -->
    <select id="selectStockDdlnByConditionByItemDistCdCnt" resultType="int" parameterType="StockDdlnSearchVO">
    /* [chn.bhmc.dms.par.stm.service.dao.StockDdlnDao.selectStockDdlnByConditionByItemDistCdCnt] */
        SELECT COUNT(*)
          FROM
            (SELECT     ROW_NUMBER() OVER(ORDER BY A.DLR_CD, A.PLT_CD, A.ITEM_CD) AS RNUM
                    ,A.DLR_CD
                    ,A.PLT_CD
                    ,'' AS LOC_CD
                    ,A.ITEM_CD
                    ,B.ITEM_NM
                    ,B.ITEM_DSTIN_CD
                    ,'' AS FIRST_TP                  --1등급구분
                    ,'' AS SECOND_TP                 --2등급구분
                    ,'' AS THIRD_TP                  --3등급구분
                    ,B.STOCK_UNIT_CD AS UNIT_CD
                    ,B.BP_CD
                    ,D.BP_NM
                    ,B.CARLINE_CD AS MODEL_CD
                    ,B.CARLINE_CD
                    ,CASE WHEN TO_CHAR(TO_DATE(#{sAccYyMmFr}||'01','YYYYMMDD'),'YYYYMM') = TO_CHAR(SYSDATE,'YYYYMM') THEN NVL(G.PSNT_MM_DDLN_STOCK_QTY,0) ELSE NVL(E.PRE_MM_DDLN_STOCK_QTY,0) END  PRE_MM_DDLN_STOCK_QTY
                    ,CASE WHEN TO_CHAR(TO_DATE(#{sAccYyMmFr}||'01','YYYYMMDD'),'YYYYMM') = TO_CHAR(SYSDATE,'YYYYMM') THEN NVL(G.PSNT_MM_DDLN_STOCK_AMT,0) ELSE NVL(E.PRE_MM_DDLN_STOCK_AMT,0) END  PRE_MM_DDLN_STOCK_AMT
                    ,CASE WHEN TO_CHAR(TO_DATE(#{sAccYyMmFr}||'01','YYYYMMDD'),'YYYYMM') = TO_CHAR(SYSDATE,'YYYYMM')
                            THEN
                                 CASE
                                   WHEN NVL(G.PSNT_MM_DDLN_STOCK_QTY,0) = 0
                                     THEN 0
                                   ELSE ROUND(NVL(G.PSNT_MM_DDLN_STOCK_AMT,0) / NVL(G.PSNT_MM_DDLN_STOCK_QTY,0),2)
                                 END
                          ELSE
                                 CASE
                                   WHEN NVL(E.PRE_MM_DDLN_STOCK_QTY,0) = 0
                                     THEN 0
                                   ELSE ROUND(NVL(E.PRE_MM_DDLN_STOCK_AMT,0) / NVL(E.PRE_MM_DDLN_STOCK_QTY,0),2)
                                 END
                      END  PRE_MM_DDLN_STOCK_PRC
                    ,C.GR_QTY
                    ,C.GR_AMT
                    ,C.GI_QTY
                    ,C.GI_AMT
                    ,C.GI_BASE_AMT
                    ,C.PURC_GR_QTY
                    ,C.PURC_GR_AMT
                    ,C.OBT_GR_QTY
                    ,C.OBT_GR_AMT
                    ,C.PAL_GR_QTY
                    ,C.PAL_GR_AMT
                    ,C.STRGE_MOVE_GR_QTY
                    ,C.STRGE_MOVE_GR_AMT
                    ,C.ETC_GR_QTY
                    ,C.ETC_GR_AMT
                    ,CASE WHEN NVL(C.GR_QTY - C.GI_QTY,0) = 0 THEN 0
                     ELSE NVL(C.GR_AMT - C.GI_AMT,0) / NVL(C.GR_QTY - C.GI_QTY,0) END MOVING_AVG_PRC
                    ,C.CT_SALE_QTY
                    ,C.CT_SALE_AMT
                    ,C.CT_SALE_BASE_AMT
                    ,C.WKS_SALE_QTY
                    ,C.WKS_SALE_AMT
                    ,C.WKS_SALE_BASE_AMT
                    ,C.STRGE_MOVE_GI_QTY
                    ,C.STRGE_MOVE_GI_BASE_AMT
                    ,C.INT_RCV_GI_QTY
                    ,C.INT_RCV_GI_AMT
                    ,C.INT_RCV_GI_BASE_AMT
                    ,C.OBT_GI_QTY
                    ,C.OBT_GI_AMT
                    ,C.OBT_GI_BASE_AMT
                    ,C.LOSS_GI_QTY
                    ,C.LOSS_GI_BASE_AMT
                    ,C.ETC_GI_QTY
                    ,C.ETC_GI_AMT
                    ,C.ETC_GI_BASE_AMT
                    ,NVL(F.PSNT_MM_DDLN_STOCK_QTY,0) AS PSNT_MM_DDLN_STOCK_QTY
                    ,NVL(F.PSNT_MM_DDLN_STOCK_AMT,0) AS PSNT_MM_DDLN_STOCK_AMT
                    ,CASE WHEN NVL(F.PSNT_MM_DDLN_STOCK_QTY,0) = 0 THEN 0
                     ELSE ROUND(NVL(F.PSNT_MM_DDLN_STOCK_AMT,0) / NVL(F.PSNT_MM_DDLN_STOCK_QTY,0),2) END PSNT_MM_DDLN_STOCK_PRC     --당월마감이동평균가격
                    ,(C.CT_SALE_QTY + C.WKS_SALE_QTY) AS  PAR_SALE_QTY                  --부품판매수량
                    ,(C.CT_SALE_BASE_AMT + C.WKS_SALE_BASE_AMT) AS PAR_SALE_BASE_AMT    --부품판매원가금액
                    ,(C.CT_SALE_AMT + C.WKS_SALE_AMT) AS PAR_SALE_AMT                   --부품판매금액
                    ,C.SER_SALE_QTY
                    ,C.SER_SALE_BASE_AMT
                    ,C.SER_SALE_AMT
            FROM (SELECT DLR_CD,PLT_CD,ITEM_CD
                    FROM PT_0301T
                   GROUP BY DLR_CD,PLT_CD,ITEM_CD) A
                 INNER JOIN PT_0201T B ON A.DLR_CD = B.DLR_CD AND A.ITEM_CD = B.ITEM_CD
                 LEFT OUTER JOIN
                (
                 SELECT  A.DLR_CD
                        ,A.PLT_CD
                        ,A.ITEM_CD
                        ,SUM(GR_QTY) AS GR_QTY
                        ,SUM(GR_AMT) AS GR_AMT
                        ,SUM(GI_QTY) AS GI_QTY
                        ,SUM(GI_AMT) AS GI_AMT
                        ,SUM(GI_BASE_AMT) AS GI_BASE_AMT
                        ,SUM(PURC_GR_QTY) AS PURC_GR_QTY
                        ,SUM(PURC_GR_AMT) AS PURC_GR_AMT
                        ,SUM(OBT_GR_QTY) AS OBT_GR_QTY
                        ,SUM(OBT_GR_AMT) AS OBT_GR_AMT
                        ,SUM(PAL_GR_QTY) AS PAL_GR_QTY
                        ,SUM(PAL_GR_AMT) AS PAL_GR_AMT
                        ,SUM(STRGE_MOVE_GR_QTY) AS STRGE_MOVE_GR_QTY
                        ,SUM(STRGE_MOVE_GR_AMT) AS STRGE_MOVE_GR_AMT
                        ,SUM(ETC_GR_QTY) AS ETC_GR_QTY
                        ,SUM(ETC_GR_AMT) AS ETC_GR_AMT
                        ,SUM(CT_SALE_QTY)  AS CT_SALE_QTY
                        ,SUM(CT_SALE_AMT)  AS CT_SALE_AMT
                        ,SUM(CT_SALE_BASE_AMT) AS CT_SALE_BASE_AMT
                        ,SUM(WKS_SALE_QTY)  AS WKS_SALE_QTY
                        ,SUM(WKS_SALE_AMT) AS WKS_SALE_AMT
                        ,SUM(WKS_SALE_BASE_AMT) AS WKS_SALE_BASE_AMT
                        ,SUM(SER_SALE_QTY)  AS SER_SALE_QTY
                        ,SUM(SER_SALE_BASE_AMT) AS SER_SALE_BASE_AMT
                        ,SUM(SER_SALE_AMT) AS SER_SALE_AMT
                        ,SUM(STRGE_MOVE_GI_QTY) AS STRGE_MOVE_GI_QTY
                        ,SUM(STRGE_MOVE_GI_BASE_AMT) AS STRGE_MOVE_GI_BASE_AMT
                        ,SUM(INT_RCV_GI_QTY) AS INT_RCV_GI_QTY
                        ,SUM(INT_RCV_GI_AMT) AS INT_RCV_GI_AMT
                        ,SUM(INT_RCV_GI_BASE_AMT) AS INT_RCV_GI_BASE_AMT
                        ,SUM(OBT_GI_QTY) AS OBT_GI_QTY
                        ,SUM(OBT_GI_AMT) AS OBT_GI_AMT
                        ,SUM(OBT_GI_BASE_AMT) AS OBT_GI_BASE_AMT
                        ,SUM(LOSS_GI_QTY ) AS LOSS_GI_QTY
                        ,SUM(LOSS_GI_BASE_AMT ) AS LOSS_GI_BASE_AMT
                        ,SUM(ETC_GI_QTY) AS ETC_GI_QTY
                        ,SUM(ETC_GI_AMT) AS ETC_GI_AMT
                        ,SUM(ETC_GI_BASE_AMT) AS ETC_GI_BASE_AMT
                   FROM
                 (
                  SELECT A.DLR_CD
                        ,A.PLT_CD
                        ,A.ITEM_CD
                        ,A.STRGE_CD
                        ,A.GR_QTY
                        ,A.GR_AMT
                        ,A.GI_QTY
                        ,A.GI_AMT
                        ,A.GI_BASE_AMT
                        ,A.PURC_GR_QTY
                        ,A.PURC_GR_AMT
                        ,A.OBT_GR_QTY
                        ,A.OBT_GR_AMT
                        ,A.PAL_GR_QTY
                        ,A.PAL_GR_AMT
                        ,A.STRGE_MOVE_GR_QTY
                        ,A.STRGE_MOVE_GR_AMT
                        ,A.ETC_GR_QTY
                        ,A.ETC_GR_AMT
                        ,A.CT_SALE_QTY
                        ,A.CT_SALE_AMT
                        ,A.CT_SALE_BASE_AMT
                        ,A.WKS_SALE_QTY
                        ,A.WKS_SALE_AMT
                        ,A.WKS_SALE_BASE_AMT
                        ,A.SER_SALE_QTY
                        ,A.SER_SALE_BASE_AMT
                        ,A.SER_SALE_AMT
                        ,A.STRGE_MOVE_GI_QTY
                        ,A.STRGE_MOVE_GI_BASE_AMT
                        ,A.INT_RCV_GI_QTY
                        ,A.INT_RCV_GI_AMT
                        ,A.INT_RCV_GI_BASE_AMT
                        ,A.OBT_GI_QTY
                        ,A.OBT_GI_AMT
                        ,A.OBT_GI_BASE_AMT
                        ,A.LOSS_GI_QTY
                        ,A.LOSS_GI_BASE_AMT
                        ,A.ETC_GI_QTY
                        ,A.ETC_GI_AMT
                        ,A.ETC_GI_BASE_AMT
                    FROM
                          (
                            SELECT   A.DLR_CD
                                    ,A.PLT_CD
                                    ,A.ITEM_CD
                                    ,A.STRGE_CD
                                    ,SUM(GR_QTY) AS GR_QTY
                                    ,SUM(GR_AMT) AS GR_AMT
                                    ,SUM(GI_QTY) AS GI_QTY
                                    ,SUM(GI_AMT) AS GI_AMT
                                    ,SUM(GI_BASE_AMT) AS GI_BASE_AMT
                                    ,SUM(PURC_GR_QTY) AS PURC_GR_QTY
                                    ,SUM(PURC_GR_AMT) AS PURC_GR_AMT
                                    ,SUM(OBT_GR_QTY) AS OBT_GR_QTY
                                    ,SUM(OBT_GR_AMT) AS OBT_GR_AMT
                                    ,SUM(PAL_GR_QTY) AS PAL_GR_QTY
                                    ,SUM(PAL_GR_AMT) AS PAL_GR_AMT
                                    ,SUM(STRGE_MOVE_GR_QTY) AS STRGE_MOVE_GR_QTY
                                    ,SUM(STRGE_MOVE_GR_AMT) AS STRGE_MOVE_GR_AMT
                                    ,SUM(ETC_GR_QTY) AS ETC_GR_QTY
                                    ,SUM(ETC_GR_AMT) AS ETC_GR_AMT
                                    ,SUM(CT_SALE_QTY)  AS CT_SALE_QTY
                                    ,SUM(CT_SALE_AMT)  AS CT_SALE_AMT
                                    ,SUM(CT_SALE_BASE_AMT) AS CT_SALE_BASE_AMT
                                    ,SUM(WKS_SALE_QTY)  AS WKS_SALE_QTY
                                    ,SUM(WKS_SALE_AMT) AS WKS_SALE_AMT
                                    ,SUM(WKS_SALE_BASE_AMT) AS WKS_SALE_BASE_AMT
                                    ,SUM(SER_SALE_QTY)  AS SER_SALE_QTY
                                    ,SUM(SER_SALE_BASE_AMT) AS SER_SALE_BASE_AMT
                                    ,SUM(SER_SALE_AMT) AS SER_SALE_AMT
                                    ,SUM(STRGE_MOVE_GI_QTY) AS STRGE_MOVE_GI_QTY
                                    ,SUM(STRGE_MOVE_GI_BASE_AMT) AS STRGE_MOVE_GI_BASE_AMT
                                    ,SUM(INT_RCV_GI_QTY) AS INT_RCV_GI_QTY
                                    ,SUM(INT_RCV_GI_AMT) AS INT_RCV_GI_AMT
                                    ,SUM(INT_RCV_GI_BASE_AMT) AS INT_RCV_GI_BASE_AMT
                                    ,SUM(OBT_GI_QTY) AS OBT_GI_QTY
                                    ,SUM(OBT_GI_AMT) AS OBT_GI_AMT
                                    ,SUM(OBT_GI_BASE_AMT) AS OBT_GI_BASE_AMT
                                    ,SUM(LOSS_GI_QTY ) AS LOSS_GI_QTY
                                    ,SUM(LOSS_GI_BASE_AMT ) AS LOSS_GI_BASE_AMT
                                    ,SUM(ETC_GI_QTY) AS ETC_GI_QTY
                                    ,SUM(ETC_GI_AMT) AS ETC_GI_AMT
                                    ,SUM(ETC_GI_BASE_AMT) AS ETC_GI_BASE_AMT
                              FROM
                                (
                                  SELECT A.DLR_CD
                                        ,A.MVT_DOC_YY_MM AS YY_MM
                                        ,A.MVT_DOC_NO
                                        ,A.MVT_TP
                                        ,B.ITEM_CD
                                        ,B.MVT_DOC_LINE_NO
                                        ,B.CANC_STMT_YN
                                        ,B.AUTO_CRE_YN
                                        ,B.PLT_CD
                                        ,B.STRGE_CD
                                        ,B.LOC_CD
                                        ,B.DEBIT_CREDIT_DSTIN_CD
                                        ,B.ITEM_QTY
                                        ,CASE WHEN A.MVT_TP IN ('01', '04', '63', '49', '59','31','33','35','36','37')
                                                THEN NVL(B.ITEM_QTY,0)
                                              WHEN A.MVT_TP IN ('21','23','25')
                                                THEN
                                                  CASE WHEN B.DEBIT_CREDIT_DSTIN_CD = 'S'
                                                         THEN NVL(B.ITEM_QTY,0)
                                                       ELSE 0
                                                   END
                                              WHEN A.MVT_TP IN ('22','24','26')
                                                THEN
                                                  CASE WHEN B.DEBIT_CREDIT_DSTIN_CD = 'S'
                                                         THEN NVL(B.ITEM_QTY,0)
                                                       ELSE 0
                                                   END
                                              WHEN  A.MVT_TP IN ('02', '03', '64', '50', '60','32','34','38')     THEN NVL(B.ITEM_QTY,0) * -1 ELSE 0 END GR_QTY   --입고수량
                                        ,CASE WHEN A.MVT_TP IN ('01', '04', '63', '49', '59','31','33','35','36','37')
                                                THEN NVL(B.PURC_AMT,0)
                                              WHEN A.MVT_TP IN ('21','23','25')
                                                THEN
                                                  CASE WHEN B.DEBIT_CREDIT_DSTIN_CD = 'S'
                                                         THEN NVL(B.PURC_AMT,0)
                                                       ELSE 0
                                                   END
                                              WHEN A.MVT_TP IN ('22','24','26')
                                                THEN
                                                  CASE WHEN B.DEBIT_CREDIT_DSTIN_CD = 'S'
                                                         THEN CASE WHEN NVL(B.PURC_AMT, 0) = 0
                                                                     THEN NVL(B.SALE_AMT, 0)
                                                                   ELSE NVL(B.PURC_AMT, 0)
                                                               END
                                                       ELSE 0
                                                   END
                                              WHEN  A.MVT_TP IN ('02', '03', '64', '50', '60','32','34','38')     THEN NVL(B.MOVING_AVG_AMT,0) * -1 ELSE 0 END GR_AMT   --입고금액
                                        ,CASE WHEN A.MVT_TP IN ('11', '14', '15','71', '74', '75', '41', '43','45','47','48','61', '65')
                                                THEN NVL(B.ITEM_QTY,0)
                                              WHEN A.MVT_TP IN ('21','23','25')
                                                THEN
                                                  CASE WHEN B.DEBIT_CREDIT_DSTIN_CD = 'H'
                                                         THEN NVL(B.ITEM_QTY,0)
                                                       ELSE 0
                                                   END
                                                WHEN A.MVT_TP IN ('22','24','26')
                                                THEN
                                                  CASE WHEN B.DEBIT_CREDIT_DSTIN_CD = 'H'
                                                         THEN NVL(B.ITEM_QTY,0)
                                                       ELSE 0
                                                   END
                                              WHEN  A.MVT_TP IN ('12', '13', '16','72', '73', '76',  '42', '44', '46','62','66')     THEN NVL(B.ITEM_QTY,0) * -1 ELSE 0 END GI_QTY   --출고수량
                                        ,CASE WHEN A.MVT_TP IN ('11', '14', '15','71', '74', '75', '41', '43','45','47','48','61', '65')
                                                THEN NVL(B.SALE_AMT,0)
                                              WHEN A.MVT_TP IN ('21','23','25')
                                                THEN
                                                  CASE WHEN B.DEBIT_CREDIT_DSTIN_CD = 'H'
                                                         THEN NVL(B.SALE_AMT,0)
                                                       ELSE 0
                                                   END
                                                WHEN A.MVT_TP IN ('22','24','26')
                                                THEN
                                                  CASE WHEN B.DEBIT_CREDIT_DSTIN_CD = 'H'
                                                         THEN CASE WHEN NVL(B.SALE_AMT, 0) = 0
                                                                     THEN NVL(B.PURC_AMT, 0)
                                                                   ELSE NVL(B.SALE_AMT, 0)
                                                               END
                                                       ELSE 0
                                                   END
                                              WHEN  A.MVT_TP IN ('12', '13', '16','72', '73', '76', '42', '44', '46','62','66')     THEN NVL(B.SALE_AMT,0) * -1 ELSE 0 END GI_AMT   --출고금액
                                        ,CASE WHEN A.MVT_TP IN ('11', '14', '15','71', '74', '75', '41', '43','45','47','48','61', '65')
                                                THEN NVL(B.MOVING_AVG_AMT,0)
                                              WHEN A.MVT_TP IN ('21','23','25')
                                                THEN
                                                  CASE WHEN B.DEBIT_CREDIT_DSTIN_CD = 'H'
                                                         THEN NVL(B.MOVING_AVG_AMT,0)
                                                       ELSE 0
                                                   END
                                                WHEN A.MVT_TP IN ('22','24','26')
                                                THEN
                                                  CASE WHEN B.DEBIT_CREDIT_DSTIN_CD = 'H'
                                                         THEN NVL(B.MOVING_AVG_AMT,0)
                                                       ELSE 0
                                                   END
                                              WHEN  A.MVT_TP IN ('12', '13', '16','72', '73', '76', '42', '44', '46','62','66')     THEN NVL(B.MOVING_AVG_AMT,0) * -1 ELSE 0 END GI_BASE_AMT   --출고원가
                                        ,CASE WHEN A.MVT_TP IN ('01', '04')     THEN NVL(B.ITEM_QTY,0) WHEN  A.MVT_TP IN ('02', '03')     THEN NVL(B.ITEM_QTY,0) * -1 ELSE 0 END PURC_GR_QTY   --구매입고수량
                                        ,CASE WHEN A.MVT_TP IN ('01', '04')     THEN NVL(B.PURC_AMT,0) WHEN  A.MVT_TP IN ('02', '03')     THEN NVL(B.MOVING_AVG_AMT,0) * -1 ELSE 0 END PURC_GR_AMT  --구매입고금액
                                        ,CASE WHEN A.MVT_TP IN ('63')           THEN NVL(B.ITEM_QTY,0) WHEN  A.MVT_TP IN ('64')           THEN NVL(B.ITEM_QTY,0) * -1 ELSE 0 END OBT_GR_QTY   --조달입고수량
                                        ,CASE WHEN A.MVT_TP IN ('63')           THEN NVL(B.PURC_AMT,0) WHEN  A.MVT_TP IN ('64')           THEN NVL(B.MOVING_AVG_AMT,0) * -1 ELSE 0 END OBT_GR_AMT  --조달입고금액
                                        ,CASE WHEN A.MVT_TP IN ('49','59')      THEN NVL(B.ITEM_QTY,0) WHEN  A.MVT_TP IN ('50','60')      THEN NVL(B.ITEM_QTY,0) * -1 ELSE 0 END PAL_GR_QTY   --손익입고수량
                                        ,CASE WHEN A.MVT_TP IN ('49','59')      THEN NVL(B.PURC_AMT,0) WHEN  A.MVT_TP IN ('50','60')      THEN NVL(B.MOVING_AVG_AMT,0) * -1 ELSE 0 END PAL_GR_AMT  --손익입고금액
                                        ,CASE WHEN A.MVT_TP IN ('21','23','25')
                                                THEN
                                                  CASE WHEN B.DEBIT_CREDIT_DSTIN_CD = 'S'
                                                         THEN NVL(B.ITEM_QTY,0)
                                                       ELSE 0
                                                   END
                                              WHEN A.MVT_TP IN ('22','24','26')
                                                THEN
                                                  CASE WHEN B.DEBIT_CREDIT_DSTIN_CD = 'S'
                                                         THEN NVL(B.ITEM_QTY,0)
                                                       ELSE 0
                                                   END
                                              ELSE 0
                                         END STRGE_MOVE_GR_QTY   --창고이동입고수량
                                        ,CASE WHEN A.MVT_TP IN ('21','23','25')
                                                THEN
                                                  CASE WHEN B.DEBIT_CREDIT_DSTIN_CD = 'S'
                                                         THEN NVL(B.PURC_AMT,0)
                                                       ELSE 0
                                                   END
                                              WHEN A.MVT_TP IN ('22','24','26')
                                                THEN
                                                  CASE WHEN B.DEBIT_CREDIT_DSTIN_CD = 'S'
                                                         THEN CASE WHEN NVL(B.PURC_AMT, 0) = 0
                                                                     THEN NVL(B.SALE_AMT, 0)
                                                                   ELSE NVL(B.PURC_AMT, 0)
                                                               END
                                                       ELSE 0
                                                   END
                                              ELSE 0
                                         END STRGE_MOVE_GR_AMT  --창고이동입고금액
                                         --33,34,35,36,37,38
                                        ,CASE WHEN A.MVT_TP IN ('31','33','35','36','37')      THEN NVL(B.ITEM_QTY,0) WHEN  A.MVT_TP IN ('32','34','38')      THEN NVL(B.ITEM_QTY,0) * -1 ELSE 0 END ETC_GR_QTY   --기타입고수량[33:기타입고,35:차입입고,36:차출반환입고,37:내부수령, 34:기타입고취소, 38:내부수령취소]
                                        ,CASE WHEN A.MVT_TP IN ('31','33','35','36','37')      THEN NVL(B.PURC_AMT,0) WHEN  A.MVT_TP IN ('32','34','38')      THEN NVL(B.MOVING_AVG_AMT,0) * -1 ELSE 0 END ETC_GR_AMT  --기타입고금액
                                        ,NVL(D.SALE_TP,'03') AS SALE_TP
                                         ,CASE WHEN A.MVT_TP IN ('71', '74', '75')
                                                    THEN
                                                      CASE WHEN NVL(D.SALE_TP,'01') = '01'
                                                             THEN NVL(B.ITEM_QTY,0)
                                                           ELSE 0
                                                       END
                                                  WHEN  A.MVT_TP IN ('72', '73', '76')
                                                    THEN
                                                      CASE WHEN NVL(D.SALE_TP,'01') = '01'
                                                             THEN NVL(B.ITEM_QTY,0) * -1
                                                           ELSE 0
                                                       END
                                                  ELSE 0
                                              END CT_SALE_QTY   --COUNTER판매수량
                                            ,CASE WHEN A.MVT_TP IN ('71', '74', '75')
                                                    THEN
                                                       CASE WHEN NVL(D.SALE_TP,'01') = '01'
                                                             THEN NVL(B.SALE_AMT,0)
                                                           ELSE 0
                                                       END
                                                  WHEN A.MVT_TP IN ('72', '73', '76')
                                                    THEN
                                                       CASE WHEN NVL(D.SALE_TP,'01') = '01'
                                                             THEN NVL(B.SALE_AMT,0) * -1
                                                           ELSE 0
                                                       END
                                                  ELSE 0
                                             END CT_SALE_AMT  --COUNTER판매금액
                                            ,CASE WHEN A.MVT_TP IN ('71', '74', '75')
                                                    THEN
                                                      CASE WHEN NVL(D.SALE_TP,'01') = '01'
                                                             THEN NVL(B.MOVING_AVG_AMT,0)
                                                           ELSE 0
                                                       END
                                                  WHEN  A.MVT_TP IN ('72', '73', '76')
                                                    THEN
                                                      CASE WHEN NVL(D.SALE_TP,'01') = '01'
                                                             THEN NVL(B.MOVING_AVG_AMT,0) * -1
                                                           ELSE 0
                                                       END
                                                  ELSE 0
                                             END CT_SALE_BASE_AMT  --COUNTER원가금액
                                              ,CASE WHEN A.MVT_TP IN ('71', '74', '75')
                                                    THEN
                                                      CASE WHEN NVL(D.SALE_TP,'01') = '02'
                                                             THEN NVL(B.ITEM_QTY,0)
                                                           ELSE 0
                                                       END
                                                  WHEN  A.MVT_TP IN ('72', '73', '76')
                                                    THEN
                                                      CASE WHEN NVL(D.SALE_TP,'01') = '02'
                                                             THEN NVL(B.ITEM_QTY,0) * -1
                                                           ELSE 0
                                                       END
                                                  ELSE 0
                                              END WKS_SALE_QTY   --WOKSHOP판매수량
                                            ,CASE WHEN A.MVT_TP IN ('71', '74', '75')
                                                    THEN
                                                       CASE WHEN NVL(D.SALE_TP,'01') = '02'
                                                             THEN NVL(B.SALE_AMT,0)
                                                           ELSE 0
                                                       END
                                                  WHEN A.MVT_TP IN ('72', '73', '76')
                                                    THEN
                                                       CASE WHEN NVL(D.SALE_TP,'01') = '02'
                                                             THEN NVL(B.SALE_AMT,0) * -1
                                                           ELSE 0
                                                       END
                                                  ELSE 0
                                             END WKS_SALE_AMT  --WOKSHOP판매금액
                                            ,CASE WHEN A.MVT_TP IN ('71', '74', '75')
                                                    THEN
                                                      CASE WHEN NVL(D.SALE_TP,'01') = '02'
                                                             THEN NVL(B.MOVING_AVG_AMT,0)
                                                           ELSE 0
                                                       END
                                                  WHEN  A.MVT_TP IN ('72', '73', '76')
                                                    THEN
                                                      CASE WHEN NVL(D.SALE_TP,'01') = '02'
                                                             THEN NVL(B.MOVING_AVG_AMT,0) * -1
                                                           ELSE 0
                                                       END
                                                  ELSE 0
                                             END WKS_SALE_BASE_AMT  --WOKSHOP판매원가금액
                                             ,CASE WHEN A.MVT_TP IN ('11','14','15')
                                                    THEN
                                                      CASE WHEN NVL(D.SALE_TP,'01') = '01'
                                                             THEN NVL(B.ITEM_QTY,0)
                                                           ELSE 0
                                                       END
                                                  WHEN  A.MVT_TP IN ('12','13','16')
                                                    THEN
                                                      CASE WHEN NVL(D.SALE_TP,'01') = '01'
                                                             THEN NVL(B.ITEM_QTY,0) * -1
                                                           ELSE 0
                                                       END
                                                  ELSE 0
                                              END SER_SALE_QTY   --정비판매수량
                                            ,CASE WHEN A.MVT_TP IN ('11','14','15')
                                                    THEN
                                                       CASE WHEN NVL(D.SALE_TP,'01') = '01'
                                                             THEN NVL(B.SALE_AMT,0)
                                                           ELSE 0
                                                       END
                                                  WHEN A.MVT_TP IN ('12','13','16')
                                                    THEN
                                                       CASE WHEN NVL(D.SALE_TP,'01') = '01'
                                                             THEN NVL(B.SALE_AMT,0) * -1
                                                           ELSE 0
                                                       END
                                                  ELSE 0
                                             END SER_SALE_AMT  --정비판매금액
                                            ,CASE WHEN A.MVT_TP IN ('11','14','15')
                                                    THEN
                                                      CASE WHEN NVL(D.SALE_TP,'01') = '01'
                                                             THEN NVL(B.MOVING_AVG_AMT,0)
                                                           ELSE 0
                                                       END
                                                  WHEN  A.MVT_TP IN ('12','13','16')
                                                    THEN
                                                      CASE WHEN NVL(D.SALE_TP,'01') = '01'
                                                             THEN NVL(B.MOVING_AVG_AMT,0) * -1
                                                           ELSE 0
                                                       END
                                                  ELSE 0
                                             END SER_SALE_BASE_AMT  --정비판매원가금액
                                        ,CASE WHEN A.MVT_TP IN ('21','23','25')
                                                THEN
                                                  CASE WHEN B.DEBIT_CREDIT_DSTIN_CD = 'H'
                                                         THEN NVL(B.ITEM_QTY,0)
                                                       ELSE 0
                                                   END
                                                WHEN A.MVT_TP IN ('22','24','26')
                                                THEN
                                                  CASE WHEN B.DEBIT_CREDIT_DSTIN_CD = 'H'
                                                         THEN NVL(B.ITEM_QTY,0)
                                                       ELSE 0
                                                   END
                                              ELSE 0
                                         END STRGE_MOVE_GI_QTY   --창고이동출고수량
                                         ,CASE WHEN A.MVT_TP IN ('21','23','25')
                                                THEN
                                                  CASE WHEN B.DEBIT_CREDIT_DSTIN_CD = 'H'
                                                         THEN NVL(B.MOVING_AVG_AMT,0)
                                                       ELSE 0
                                                   END
                                               WHEN A.MVT_TP IN ('22','24','26')
                                                THEN
                                                  CASE WHEN B.DEBIT_CREDIT_DSTIN_CD = 'H'
                                                         THEN NVL(B.MOVING_AVG_AMT,0)
                                                       ELSE 0
                                                   END
                                              ELSE 0
                                         END STRGE_MOVE_GI_BASE_AMT  --창고이동출고원가금액
                                        ,CASE WHEN A.MVT_TP IN ('41')      THEN NVL(B.ITEM_QTY,0)       WHEN  A.MVT_TP IN ('42')      THEN NVL(B.ITEM_QTY,0) * -1       ELSE 0 END INT_RCV_GI_QTY   --내부출고수량
                                        ,CASE WHEN A.MVT_TP IN ('41')      THEN NVL(B.SALE_AMT,0)       WHEN  A.MVT_TP IN ('42')      THEN NVL(B.SALE_AMT,0) * -1       ELSE 0 END INT_RCV_GI_AMT  --내부출고금액
                                        ,CASE WHEN A.MVT_TP IN ('41')      THEN NVL(B.MOVING_AVG_AMT,0) WHEN  A.MVT_TP IN ('42')      THEN NVL(B.MOVING_AVG_AMT,0) * -1 ELSE 0 END INT_RCV_GI_BASE_AMT  --내부출고원가고금액
                                        ,CASE WHEN A.MVT_TP IN ('61')      THEN NVL(B.ITEM_QTY,0)       WHEN  A.MVT_TP IN ('62')      THEN NVL(B.ITEM_QTY,0) * -1       ELSE 0 END OBT_GI_QTY   --조달출고수량
                                        ,CASE WHEN A.MVT_TP IN ('61')      THEN NVL(B.SALE_AMT,0)       WHEN  A.MVT_TP IN ('62')      THEN NVL(B.SALE_AMT,0) * -1       ELSE 0 END OBT_GI_AMT  --조달출고금액
                                        ,CASE WHEN A.MVT_TP IN ('61')      THEN NVL(B.MOVING_AVG_AMT,0) WHEN  A.MVT_TP IN ('62')      THEN NVL(B.MOVING_AVG_AMT,0) * -1 ELSE 0 END OBT_GI_BASE_AMT  --조달출고원가고금액
                                        ,CASE WHEN A.MVT_TP IN ('43','45','65')      THEN NVL(B.ITEM_QTY,0)       WHEN  A.MVT_TP IN ('44','46','66')      THEN NVL(B.ITEM_QTY,0) * -1       ELSE 0 END LOSS_GI_QTY   --손실출고수량
                                        ,CASE WHEN A.MVT_TP IN ('43','45','65')      THEN NVL(B.MOVING_AVG_AMT,0) WHEN  A.MVT_TP IN ('44','46','66')      THEN NVL(B.MOVING_AVG_AMT,0) * -1 ELSE 0 END LOSS_GI_BASE_AMT  --손실출고원가고금액
                                        ,CASE WHEN A.MVT_TP IN ('47','48')      THEN NVL(B.ITEM_QTY,0)       ELSE 0 END ETC_GI_QTY   --기타출고수량
                                        ,CASE WHEN A.MVT_TP IN ('47','48')      THEN NVL(B.SALE_AMT,0)       ELSE 0 END ETC_GI_AMT  --기타출고금액
                                        ,CASE WHEN A.MVT_TP IN ('47','48')      THEN NVL(B.MOVING_AVG_AMT,0) ELSE 0 END ETC_GI_BASE_AMT  --기타출고원가고금액
                                FROM PT_0311T A
                                        INNER JOIN PT_0312T B
                                                ON A.DLR_CD = B.DLR_CD
                                               AND A.MVT_DOC_YY_MM = B.MVT_DOC_YY_MM
                                               AND A.MVT_DOC_NO    = B.MVT_DOC_NO
                                        INNER JOIN PT_0201T C
                                           ON B.DLR_CD  = C.DLR_CD
                                          AND B.ITEM_CD = C.ITEM_CD
                                        LEFT OUTER JOIN (
                                                SELECT   A.DLR_CD
                                                        ,A.PAR_SALE_ORD_NO
                                                        ,A.SALE_TP
                                                        ,B.PAR_SALE_ORD_LINE_NO
                                                        ,B.ITEM_CD
                                                  FROM   DMSDB.PT_0521T A    --부품판매헤더정보
                                                           INNER JOIN DMSDB.PT_0522T B    --부품판매품목정보
                                                              ON A.DLR_CD          = B.DLR_CD
                                                             AND A.PAR_SALE_ORD_NO = B.PAR_SALE_ORD_NO
                                                WHERE    A.DLR_CD = #{sDlrCd}
                                               ) D
                                             ON A.DLR_CD          = D.DLR_CD
                                            AND B.REF_DOC_NO      = D.PAR_SALE_ORD_NO
                                            AND B.REF_DOC_LINE_NO = D.PAR_SALE_ORD_LINE_NO
                                WHERE  A.DLR_CD = #{sDlrCd}
                                 AND  A.MVT_DOC_YY_MM between #{sAccYyMmFr} and #{sAccYyMmTo}
                                <if test='sItemCd != null and sItemCd != ""'>
                                    AND B.ITEM_CD LIKE '%'||#{sItemCd}||'%'
                                </if>
                                <if test='sItemNm != null and sItemNm != ""'>
                                    AND C.ITEM_NM LIKE '%'||#{sItemNm}||'%'
                                </if>
                                <if test='sStrgeCd != null and sStrgeCd != ""'>
                                    AND B.STRGE_CD = #{sStrgeCd}
                                </if>        <!-- 창고코드 -->
                                <if test='sItemDstinCd != null and sItemDstinCd != ""'>
                                    AND C.ITEM_DSTIN_CD = #{sItemDstinCd}
                                </if>        <!-- 품목유형 -->
                                <if test='sCarlineCd != null and sCarlineCd != ""'>
                                    AND C.CARLINE_CD = #{sCarlineCd}
                                </if>        <!-- 차종 -->
                                <if test='sModelCd != null and sModelCd != ""'>
                                    AND C.CARLINE_CD = #{sModelCd}
                                </if>        <!-- 모델코드 -->
                                AND C.ITEM_DSTIN_CD NOT IN  ('20','04')
                                AND A.MVT_TP NOT IN ('23','24')  --예류 및 예류 취소는 마감에서 제외한다.
                                ) A
                                GROUP BY  A.DLR_CD
                                          ,A.PLT_CD
                                          ,A.STRGE_CD
                                          ,A.ITEM_CD
                             ) A
                     ) A
                     GROUP BY A.DLR_CD
                        ,A.PLT_CD
                        ,A.ITEM_CD
               ) C
               ON A.DLR_CD       = C.DLR_CD
              AND A.PLT_CD       = C.PLT_CD
              AND A.ITEM_CD      = C.ITEM_CD
               LEFT OUTER JOIN PT_0211T D
                  ON B.DLR_CD = D.DLR_CD
                 AND B.BP_CD  = D.BP_CD
               LEFT OUTER JOIN (
                     SELECT DLR_CD,PLT_CD,ITEM_CD
                           ,SUM(NVL(PRE_MM_DDLN_STOCK_QTY,0)) AS PRE_MM_DDLN_STOCK_QTY
                           ,SUM(NVL(PRE_MM_DDLN_STOCK_AMT,0)) AS PRE_MM_DDLN_STOCK_AMT
                       FROM PT_0901T
                      WHERE DLR_CD = #{sDlrCd}
                        AND YY_MM = TO_CHAR(TO_DATE(#{sAccYyMmFr}||'01','YYYYMMDD'),'YYYYMM')
                       GROUP BY DLR_CD,PLT_CD,ITEM_CD) E  --기초재고
                   ON A.DLR_CD    = E.DLR_CD
                  AND A.PLT_CD    = E.PLT_CD
                  AND A.ITEM_CD   = E.ITEM_CD
               LEFT OUTER JOIN (
                     SELECT DLR_CD,PLT_CD,ITEM_CD
                           ,SUM(NVL(PSNT_MM_DDLN_STOCK_QTY,0)) AS PSNT_MM_DDLN_STOCK_QTY
                           ,SUM(NVL(PSNT_MM_DDLN_STOCK_AMT,0)) AS PSNT_MM_DDLN_STOCK_AMT
                       FROM PT_0901T
                      WHERE DLR_CD = #{sDlrCd}
                        AND YY_MM = TO_CHAR(TO_DATE(#{sAccYyMmTo}||'01','YYYYMMDD'),'YYYYMM')
                        GROUP BY DLR_CD,PLT_CD,ITEM_CD) F  --기말재고
                   ON A.DLR_CD    = F.DLR_CD
                  AND A.PLT_CD    = F.PLT_CD
                  AND A.ITEM_CD   = F.ITEM_CD
                LEFT OUTER JOIN (
                     SELECT DLR_CD,PLT_CD,ITEM_CD
                           ,SUM(NVL(PSNT_MM_DDLN_STOCK_QTY,0)) AS PSNT_MM_DDLN_STOCK_QTY
                           ,SUM(NVL(PSNT_MM_DDLN_STOCK_AMT,0)) AS PSNT_MM_DDLN_STOCK_AMT
                       FROM PT_0901T
                      WHERE DLR_CD = #{sDlrCd}
                        AND YY_MM = TO_CHAR(ADD_MONTHS(TO_DATE(#{sAccYyMmFr}||'01','YYYYMMDD'),-1),'YYYYMM')
                        GROUP BY DLR_CD,PLT_CD,ITEM_CD) G  --기초재고(검색 조건 시작점이 현재월인경우)
                   ON A.DLR_CD    = G.DLR_CD
                  AND A.PLT_CD    = G.PLT_CD
                  AND A.ITEM_CD   = G.ITEM_CD
               WHERE B.ITEM_DSTIN_CD NOT IN  ('20','04')
               <if test='sItemCd != null and sItemCd != ""'>
                    AND A.ITEM_CD LIKE '%'||#{sItemCd}||'%'
               </if>
               <if test='sItemNm != null and sItemNm != ""'>
                   AND B.ITEM_NM LIKE '%'||#{sItemNm}||'%'
               </if>
               <if test='sItemDstinCd != null and sItemDstinCd != ""'>
                   AND B.ITEM_DSTIN_CD = #{sItemDstinCd}
               </if>        <!-- 품목유형 -->
               <if test='sCarlineCd != null and sCarlineCd != ""'>
                   AND B.CARLINE_CD = #{sCarlineCd}
               </if>        <!-- 차종 -->
               <if test='sModelCd != null and sModelCd != ""'>
                   AND B.CARLINE_CD = #{sModelCd}
               </if>        <!-- 모델코드 -->
               ) A
    </select>

    <!-- 입고재고현황 조회한다. -->
    <select id="selectStockDdlnGrGiByCondition" resultType="StockDdlnItemVO" parameterType="StockDdlnSearchVO">
    /* [chn.bhmc.dms.par.stm.service.dao.StockDdlnDao.selectStockDdlnGrGiByCondition] */
    SELECT A.*
       FROM
         (
            SELECT
                    ROW_NUMBER() OVER(ORDER BY T1.DLR_CD, T1.STRGE_CD) AS RNUM
                    ,T1.DLR_CD
                    ,T1.STRGE_CD
                    ,SUM(T1.PRE_MM_DDLN_STOCK_QTY) AS PRE_MM_DDLN_STOCK_QTY
                    ,SUM(T1.PRE_MM_DDLN_STOCK_AMT) AS PRE_MM_DDLN_STOCK_AMT
                    ,SUM(T1.GR_QTY) AS GR_QTY
                    ,SUM(T1.GR_AMT) AS GR_AMT
                    ,SUM(T1.GI_QTY) AS GI_QTY
                    ,SUM(T1.GI_AMT) AS GI_AMT
                    ,SUM(T1.GI_BASE_AMT) AS GI_BASE_AMT
                    ,SUM(T1.PURC_GR_QTY) AS PURC_GR_QTY
                    ,SUM(T1.PURC_GR_AMT) AS PURC_GR_AMT
                    ,SUM(T1.OBT_GR_QTY) AS OBT_GR_QTY
                    ,SUM(T1.OBT_GR_AMT) AS OBT_GR_AMT
                    ,SUM(T1.PAL_GR_QTY) AS PAL_GR_QTY
                    ,SUM(T1.PAL_GR_AMT) AS PAL_GR_AMT
                    ,SUM(T1.STRGE_MOVE_GR_QTY) AS STRGE_MOVE_GR_QTY
                    ,SUM(T1.STRGE_MOVE_GR_AMT) AS STRGE_MOVE_GR_AMT
                    ,SUM(T1.ETC_GR_QTY) AS ETC_GR_QTY
                    ,SUM(T1.ETC_GR_AMT) AS ETC_GR_AMT
                    ,SUM(T1.MOVING_AVG_PRC) AS MOVING_AVG_PRC
                    ,SUM(T1.CT_SALE_QTY) AS CT_SALE_QTY
                    ,SUM(T1.CT_SALE_AMT) AS CT_SALE_AMT
                    ,SUM(T1.CT_SALE_BASE_AMT) AS CT_SALE_BASE_AMT
                    ,SUM(T1.WKS_SALE_QTY) AS WKS_SALE_QTY
                    ,SUM(T1.WKS_SALE_AMT) AS WKS_SALE_AMT
                    ,SUM(T1.WKS_SALE_BASE_AMT) AS WKS_SALE_BASE_AMT
                    ,SUM(T1.STRGE_MOVE_GI_QTY) AS STRGE_MOVE_GI_QTY
                    ,SUM(T1.STRGE_MOVE_GI_BASE_AMT) AS STRGE_MOVE_GI_BASE_AMT
                    ,SUM(T1.INT_RCV_GI_QTY) AS INT_RCV_GI_QTY
                    ,SUM(T1.INT_RCV_GI_AMT) AS INT_RCV_GI_AMT
                    ,SUM(T1.INT_RCV_GI_BASE_AMT) AS INT_RCV_GI_BASE_AMT
                    ,SUM(T1.OBT_GI_QTY) AS OBT_GI_QTY
                    ,SUM(T1.OBT_GI_AMT) AS OBT_GI_AMT
                    ,SUM(T1.OBT_GI_BASE_AMT) AS OBT_GI_BASE_AMT
                    ,SUM(T1.LOSS_GI_QTY) AS LOSS_GI_QTY
                    ,SUM(T1.LOSS_GI_BASE_AMT) AS LOSS_GI_BASE_AMT
                    ,SUM(T1.ETC_GI_QTY) AS ETC_GI_QTY
                    ,SUM(T1.ETC_GI_AMT) AS ETC_GI_AMT
                    ,SUM(T1.ETC_GI_BASE_AMT) AS ETC_GI_BASE_AMT
                    ,SUM(T1.PSNT_MM_DDLN_STOCK_QTY) AS PSNT_MM_DDLN_STOCK_QTY
                    ,SUM(T1.PSNT_MM_DDLN_STOCK_PRC) AS PSNT_MM_DDLN_STOCK_PRC     --당월마감이동평균가격
                    ,SUM(T1.PSNT_MM_DDLN_STOCK_AMT) AS PSNT_MM_DDLN_STOCK_AMT
                    ,SUM(T1.PAR_SALE_QTY) AS  PAR_SALE_QTY                  --부품판매수량
                    ,SUM(T1.PAR_SALE_BASE_AMT) AS PAR_SALE_BASE_AMT    --부품판매원가금액
                    ,SUM(T1.PAR_SALE_AMT) AS PAR_SALE_AMT                   --부품판매금액
                    ,SUM(T1.SER_SALE_QTY) AS SER_SALE_QTY
                    ,SUM(T1.SER_SALE_BASE_AMT) AS SER_SALE_BASE_AMT
                    ,SUM(T1.SER_SALE_AMT) AS SER_SALE_AMT
                    ,SUM(T1.GR_MOVING_AVG_AMT) AS GR_MOVING_AVG_AMT
                    ,SUM(T1.GR_MOVING_AVG_TAX_DDCT_AMT) AS GR_MOVING_AVG_TAX_DDCT_AMT
                    ,SUM(T1.GI_MOVING_AVG_TAX_DDCT_AMT) AS GI_MOVING_AVG_TAX_DDCT_AMT
       FROM
         (
            SELECT   A.DLR_CD
                    ,A.STRGE_CD
                    ,CASE WHEN TO_CHAR(TO_DATE(#{sAccYyMmFr}||'01','YYYYMMDD'),'YYYYMM') = TO_CHAR(SYSDATE,'YYYYMM') THEN NVL(F.PSNT_MM_DDLN_STOCK_QTY,0) ELSE NVL(D.PRE_MM_DDLN_STOCK_QTY,0) END  PRE_MM_DDLN_STOCK_QTY
                    ,CASE WHEN TO_CHAR(TO_DATE(#{sAccYyMmFr}||'01','YYYYMMDD'),'YYYYMM') = TO_CHAR(SYSDATE,'YYYYMM') THEN NVL(F.PSNT_MM_DDLN_STOCK_AMT,0) ELSE NVL(D.PRE_MM_DDLN_STOCK_AMT,0) END  PRE_MM_DDLN_STOCK_AMT
                    ,NVL(C.GR_QTY,0) AS GR_QTY
                    ,NVL(C.GR_AMT,0) AS GR_AMT
                    ,NVL(C.GI_QTY,0) AS GI_QTY
                    ,NVL(C.GI_AMT,0) AS GI_AMT
                    ,NVL(C.GI_BASE_AMT,0) AS GI_BASE_AMT
                    ,NVL(C.PURC_GR_QTY,0) AS PURC_GR_QTY
                    ,NVL(C.PURC_GR_AMT,0) AS PURC_GR_AMT
                    ,NVL(C.OBT_GR_QTY,0) AS OBT_GR_QTY
                    ,NVL(C.OBT_GR_AMT,0) AS OBT_GR_AMT
                    ,NVL(C.PAL_GR_QTY,0) AS PAL_GR_QTY
                    ,NVL(C.PAL_GR_AMT,0) AS PAL_GR_AMT
                    ,NVL(C.STRGE_MOVE_GR_QTY,0) AS STRGE_MOVE_GR_QTY
                    ,NVL(C.STRGE_MOVE_GR_AMT,0) AS STRGE_MOVE_GR_AMT
                    ,NVL(C.ETC_GR_QTY,0) AS ETC_GR_QTY
                    ,NVL(C.ETC_GR_AMT,0) AS ETC_GR_AMT
                    ,NVL(E.MOVING_AVG_PRC,0) AS MOVING_AVG_PRC
                    ,NVL(C.CT_SALE_QTY,0) AS CT_SALE_QTY
                    ,NVL(C.CT_SALE_AMT,0) AS CT_SALE_AMT
                    ,NVL(C.CT_SALE_BASE_AMT,0) AS CT_SALE_BASE_AMT
                    ,NVL(C.WKS_SALE_QTY,0) AS WKS_SALE_QTY
                    ,NVL(C.WKS_SALE_AMT,0) AS WKS_SALE_AMT
                    ,NVL(C.WKS_SALE_BASE_AMT,0) AS WKS_SALE_BASE_AMT
                    ,NVL(C.STRGE_MOVE_GI_QTY,0) AS STRGE_MOVE_GI_QTY
                    ,NVL(C.STRGE_MOVE_GI_BASE_AMT,0) AS STRGE_MOVE_GI_BASE_AMT
                    ,NVL(C.INT_RCV_GI_QTY,0) AS INT_RCV_GI_QTY
                    ,NVL(C.INT_RCV_GI_AMT,0) AS INT_RCV_GI_AMT
                    ,NVL(C.INT_RCV_GI_BASE_AMT,0) AS INT_RCV_GI_BASE_AMT
                    ,NVL(C.OBT_GI_QTY,0) AS OBT_GI_QTY
                    ,NVL(C.OBT_GI_AMT,0) AS OBT_GI_AMT
                    ,NVL(C.OBT_GI_BASE_AMT,0) AS OBT_GI_BASE_AMT
                    ,NVL(C.LOSS_GI_QTY,0) AS LOSS_GI_QTY
                    ,NVL(C.LOSS_GI_BASE_AMT,0) AS LOSS_GI_BASE_AMT
                    ,NVL(C.ETC_GI_QTY,0) AS ETC_GI_QTY
                    ,NVL(C.ETC_GI_AMT,0) AS ETC_GI_AMT
                    ,NVL(C.ETC_GI_BASE_AMT,0) AS ETC_GI_BASE_AMT
                    ,NVL(G.PSNT_MM_DDLN_STOCK_QTY,0) AS PSNT_MM_DDLN_STOCK_QTY
                    ,NVL(H.PSNT_MM_DDLN_MOVE_AVG_PRC, 0) AS PSNT_MM_DDLN_STOCK_PRC     --당월마감이동평균가격
                    ,NVL(G.PSNT_MM_DDLN_STOCK_AMT,0) AS PSNT_MM_DDLN_STOCK_AMT
                    ,NVL(C.PAR_SALE_QTY,0) AS  PAR_SALE_QTY --부품판매수량
                    ,NVL(C.PAR_SALE_BASE_AMT,0) AS PAR_SALE_BASE_AMT    --부품판매원가금액
                    ,NVL(C.PAR_SALE_AMT,0) AS PAR_SALE_AMT --부품판매금액
                    ,NVL(C.SER_SALE_QTY,0) AS SER_SALE_QTY
                    ,NVL(C.SER_SALE_BASE_AMT,0) AS SER_SALE_BASE_AMT
                    ,NVL(C.SER_SALE_AMT,0) AS SER_SALE_AMT
                    ,NVL(C.GR_MOVING_AVG_AMT,0) AS GR_MOVING_AVG_AMT
                    ,NVL(C.GR_MOVING_AVG_TAX_DDCT_AMT,0) AS GR_MOVING_AVG_TAX_DDCT_AMT
                    ,NVL(C.GI_MOVING_AVG_TAX_DDCT_AMT,0) AS GI_MOVING_AVG_TAX_DDCT_AMT
                FROM PT_0301T A
                     INNER JOIN PT_0201T B
                       ON A.DLR_CD = B.DLR_CD
                      AND A.ITEM_CD = B.ITEM_CD
                     LEFT OUTER JOIN   (
                            SELECT  A.DLR_CD
                                    ,A.PLT_CD
                                    ,A.STRGE_CD
                                    ,A.ITEM_CD
                                    ,A.GR_QTY
                                    ,A.GR_AMT
                                    ,A.GI_QTY
                                    ,A.GI_AMT
                                    ,A.GI_BASE_AMT
                                    ,A.PURC_GR_QTY
                                    ,A.PURC_GR_AMT
                                    ,A.OBT_GR_QTY
                                    ,A.OBT_GR_AMT
                                    ,A.PAL_GR_QTY
                                    ,A.PAL_GR_AMT
                                    ,A.STRGE_MOVE_GR_QTY
                                    ,A.STRGE_MOVE_GR_AMT
                                    ,A.ETC_GR_QTY
                                    ,A.ETC_GR_AMT
                                    ,A.CT_SALE_QTY
                                    ,A.CT_SALE_AMT
                                    ,A.CT_SALE_BASE_AMT
                                    ,A.WKS_SALE_QTY
                                    ,A.WKS_SALE_AMT
                                    ,A.WKS_SALE_BASE_AMT
                                    ,A.STRGE_MOVE_GI_QTY
                                    ,A.STRGE_MOVE_GI_BASE_AMT
                                    ,A.INT_RCV_GI_QTY
                                    ,A.INT_RCV_GI_AMT
                                    ,A.INT_RCV_GI_BASE_AMT
                                    ,A.OBT_GI_QTY
                                    ,A.OBT_GI_AMT
                                    ,A.OBT_GI_BASE_AMT
                                    ,A.LOSS_GI_QTY
                                    ,A.LOSS_GI_BASE_AMT
                                    ,A.ETC_GI_QTY
                                    ,A.ETC_GI_AMT
                                    ,A.ETC_GI_BASE_AMT
                                    ,(A.CT_SALE_QTY + A.WKS_SALE_QTY) AS  PAR_SALE_QTY                  --부품판매수량
                                    ,(A.CT_SALE_BASE_AMT + A.WKS_SALE_BASE_AMT) AS PAR_SALE_BASE_AMT    --부품판매원가금액
                                    ,(A.CT_SALE_AMT + A.WKS_SALE_AMT) AS PAR_SALE_AMT                   --부품판매금액
                                    ,A.SER_SALE_QTY
                                    ,A.SER_SALE_BASE_AMT
                                    ,A.SER_SALE_AMT
                                    ,NVL(A.GR_MOVING_AVG_AMT,0) AS GR_MOVING_AVG_AMT
                                    ,NVL(A.GR_MOVING_AVG_TAX_DDCT_AMT,0) AS GR_MOVING_AVG_TAX_DDCT_AMT
                                    ,NVL(A.GI_MOVING_AVG_TAX_DDCT_AMT,0) AS GI_MOVING_AVG_TAX_DDCT_AMT
                              FROM
                                (
                                    SELECT   A.DLR_CD
                                            ,A.PLT_CD
                                            ,A.STRGE_CD
                                            ,A.ITEM_CD
                                            ,SUM(GR_QTY) AS GR_QTY
                                            ,SUM(GR_AMT) AS GR_AMT
                                            ,SUM(GI_QTY) AS GI_QTY
                                            ,SUM(GI_AMT) AS GI_AMT
                                            ,SUM(GI_BASE_AMT) AS GI_BASE_AMT
                                            ,SUM(PURC_GR_QTY) AS PURC_GR_QTY
                                            ,SUM(PURC_GR_AMT) AS PURC_GR_AMT
                                            ,SUM(OBT_GR_QTY) AS OBT_GR_QTY
                                            ,SUM(OBT_GR_AMT) AS OBT_GR_AMT
                                            ,SUM(PAL_GR_QTY) AS PAL_GR_QTY
                                            ,SUM(PAL_GR_AMT) AS PAL_GR_AMT
                                            ,SUM(STRGE_MOVE_GR_QTY) AS STRGE_MOVE_GR_QTY
                                            ,SUM(STRGE_MOVE_GR_AMT) AS STRGE_MOVE_GR_AMT
                                            ,SUM(ETC_GR_QTY) AS ETC_GR_QTY
                                            ,SUM(ETC_GR_AMT) AS ETC_GR_AMT
                                            ,SUM(CT_SALE_QTY)  AS CT_SALE_QTY
                                            ,SUM(CT_SALE_AMT)  AS CT_SALE_AMT
                                            ,SUM(CT_SALE_BASE_AMT) AS CT_SALE_BASE_AMT
                                            ,SUM(WKS_SALE_QTY)  AS WKS_SALE_QTY
                                            ,SUM(WKS_SALE_AMT) AS WKS_SALE_AMT
                                            ,SUM(WKS_SALE_BASE_AMT) AS WKS_SALE_BASE_AMT
                                            ,SUM(SER_SALE_QTY)  AS SER_SALE_QTY
                                            ,SUM(SER_SALE_BASE_AMT) AS SER_SALE_BASE_AMT
                                            ,SUM(SER_SALE_AMT) AS SER_SALE_AMT
                                            ,SUM(STRGE_MOVE_GI_QTY) AS STRGE_MOVE_GI_QTY
                                            ,SUM(STRGE_MOVE_GI_BASE_AMT) AS STRGE_MOVE_GI_BASE_AMT
                                            ,SUM(INT_RCV_GI_QTY) AS INT_RCV_GI_QTY
                                            ,SUM(INT_RCV_GI_AMT) AS INT_RCV_GI_AMT
                                            ,SUM(INT_RCV_GI_BASE_AMT) AS INT_RCV_GI_BASE_AMT
                                            ,SUM(OBT_GI_QTY) AS OBT_GI_QTY
                                            ,SUM(OBT_GI_AMT) AS OBT_GI_AMT
                                            ,SUM(OBT_GI_BASE_AMT) AS OBT_GI_BASE_AMT
                                            ,SUM(LOSS_GI_QTY ) AS LOSS_GI_QTY
                                            ,SUM(LOSS_GI_BASE_AMT ) AS LOSS_GI_BASE_AMT
                                            ,SUM(ETC_GI_QTY) AS ETC_GI_QTY
                                            ,SUM(ETC_GI_AMT) AS ETC_GI_AMT
                                            ,SUM(ETC_GI_BASE_AMT) AS ETC_GI_BASE_AMT
                                            ,SUM(GR_MOVING_AVG_AMT) AS GR_MOVING_AVG_AMT
                                            ,SUM(GR_MOVING_AVG_TAX_DDCT_AMT) AS GR_MOVING_AVG_TAX_DDCT_AMT
                                            ,SUM(GI_MOVING_AVG_TAX_DDCT_AMT) AS GI_MOVING_AVG_TAX_DDCT_AMT
                                      FROM
                                        (
                                          SELECT A.DLR_CD
                                                ,A.MVT_DOC_YY_MM AS YY_MM
                                                ,A.MVT_DOC_NO
                                                ,A.MVT_TP
                                                ,B.ITEM_CD
                                                ,B.MVT_DOC_LINE_NO
                                                ,B.CANC_STMT_YN
                                                ,B.AUTO_CRE_YN
                                                ,B.PLT_CD
                                                ,B.STRGE_CD
                                                ,B.LOC_CD
                                                ,B.DEBIT_CREDIT_DSTIN_CD
                                                ,B.ITEM_QTY
                                                ,CASE WHEN A.MVT_TP IN ('01', '04', '63', '49', '59','31','33','35','36','37')
                                                        THEN NVL(B.ITEM_QTY,0)
                                                      WHEN A.MVT_TP IN ('21','23','25')
                                                        THEN
                                                          CASE WHEN B.DEBIT_CREDIT_DSTIN_CD = 'S'
                                                                 THEN NVL(B.ITEM_QTY,0)
                                                               ELSE 0
                                                           END
                                                      WHEN A.MVT_TP IN ('22','24','26')
                                                        THEN
                                                          CASE WHEN B.DEBIT_CREDIT_DSTIN_CD = 'S'
                                                                 THEN NVL(B.ITEM_QTY,0)
                                                               ELSE 0
                                                           END
                                                      WHEN  A.MVT_TP IN ('02', '03', '64', '50', '60','32','34','38')     THEN NVL(B.ITEM_QTY,0) * -1 ELSE 0 END GR_QTY   --입고수량
                                                ,CASE WHEN A.MVT_TP IN ('01', '04', '63', '49', '59','31','33','35','36','37')
                                                        THEN NVL(B.PURC_AMT,0)
                                                      WHEN A.MVT_TP IN ('21','23','25')
                                                        THEN
                                                          CASE WHEN B.DEBIT_CREDIT_DSTIN_CD = 'S'
                                                                 THEN NVL(B.PURC_AMT,0)
                                                               ELSE 0
                                                           END
                                                      WHEN A.MVT_TP IN ('22','24','26')
                                                        THEN
                                                          CASE WHEN B.DEBIT_CREDIT_DSTIN_CD = 'S'
                                                                 THEN CASE WHEN NVL(B.PURC_AMT, 0) = 0
                                                                             THEN NVL(B.SALE_AMT, 0)
                                                                           ELSE NVL(B.PURC_AMT, 0)
                                                                       END
                                                               ELSE 0
                                                           END
                                                      WHEN  A.MVT_TP IN ('02', '03', '64', '50','32', '60','34','38')     THEN NVL(B.MOVING_AVG_AMT,0) * -1 ELSE 0 END GR_AMT   --입고금액
                                                ,CASE WHEN A.MVT_TP IN ('11', '14', '15','71', '74', '75', '41', '43','45','47','48','61', '65')
                                                        THEN NVL(B.ITEM_QTY,0)
                                                      WHEN A.MVT_TP IN ('21','23','25')
                                                        THEN
                                                          CASE WHEN B.DEBIT_CREDIT_DSTIN_CD = 'H'
                                                                 THEN NVL(B.ITEM_QTY,0)
                                                               ELSE 0
                                                           END
                                                        WHEN A.MVT_TP IN ('22','24','26')
                                                        THEN
                                                          CASE WHEN B.DEBIT_CREDIT_DSTIN_CD = 'H'
                                                                 THEN NVL(B.ITEM_QTY,0)
                                                               ELSE 0
                                                           END
                                                      WHEN  A.MVT_TP IN ('12', '13', '16','72', '73', '76',  '42', '44', '46','62','66')     THEN NVL(B.ITEM_QTY,0) * -1 ELSE 0 END GI_QTY   --출고수량
                                                ,CASE WHEN A.MVT_TP IN ('11', '14', '15','71', '74', '75', '41', '43','45','47','48','61', '65')
                                                        THEN NVL(B.SALE_AMT,0)
                                                      WHEN A.MVT_TP IN ('21','23','25')
                                                        THEN
                                                          CASE WHEN B.DEBIT_CREDIT_DSTIN_CD = 'H'
                                                                 THEN NVL(B.SALE_AMT, 0)
                                                               ELSE 0
                                                           END
                                                        WHEN A.MVT_TP IN ('22','24','26')
                                                        THEN
                                                          CASE WHEN B.DEBIT_CREDIT_DSTIN_CD = 'H'
                                                                 THEN CASE WHEN NVL(B.SALE_AMT, 0) = 0
                                                                             THEN NVL(B.PURC_AMT, 0)
                                                                           ELSE NVL(B.SALE_AMT, 0)
                                                                       END
                                                               ELSE 0
                                                           END
                                                      WHEN  A.MVT_TP IN ('12', '13', '16','72', '73', '76', '42', '44', '46','62','66')     THEN NVL(B.SALE_AMT,0) * -1 ELSE 0 END GI_AMT   --출고금액
                                                ,CASE WHEN A.MVT_TP IN ('11', '14', '15','71', '74', '75', '41', '43','45','47','48','61', '65')
                                                        THEN NVL(B.MOVING_AVG_AMT,0)
                                                      WHEN A.MVT_TP IN ('21','23','25')
                                                        THEN
                                                          CASE WHEN B.DEBIT_CREDIT_DSTIN_CD = 'H'
                                                                 THEN NVL(B.MOVING_AVG_AMT,0)
                                                               ELSE 0
                                                           END
                                                        WHEN A.MVT_TP IN ('22','24','26')
                                                        THEN
                                                          CASE WHEN B.DEBIT_CREDIT_DSTIN_CD = 'H'
                                                                 THEN NVL(B.MOVING_AVG_AMT,0)
                                                               ELSE 0
                                                           END
                                                      WHEN  A.MVT_TP IN ('12', '13', '16','72', '73', '76', '42', '44', '46','62','66')     THEN NVL(B.MOVING_AVG_AMT,0) * -1 ELSE 0 END GI_BASE_AMT   --출고원가
                                                ,CASE WHEN A.MVT_TP IN ('01', '04')     THEN NVL(B.ITEM_QTY,0) WHEN  A.MVT_TP IN ('02', '03')     THEN NVL(B.ITEM_QTY,0) * -1 ELSE 0 END PURC_GR_QTY   --구매입고수량
                                                /*   2019-07-03	update by ZQH  CC：R19061201619 修改内容是按照 报表--进销存汇总报表  将PURC_AMT 字段 更改为 MOVING_AVG_AMT
                                                ,CASE WHEN A.MVT_TP IN ('01', '04')     THEN NVL(B.PURC_AMT,0) WHEN  A.MVT_TP IN ('02', '03')     THEN NVL(B.PURC_AMT,0) * -1 ELSE 0 END PURC_GR_AMT  --구매입고금액
                                                */
                                                ,CASE WHEN A.MVT_TP IN ('01', '04')     THEN NVL(B.PURC_AMT,0) WHEN  A.MVT_TP IN ('02', '03')     THEN NVL(B.MOVING_AVG_AMT,0) * -1 ELSE 0 END PURC_GR_AMT  --구매입고금액
                                                ,CASE WHEN A.MVT_TP IN ('63')           THEN NVL(B.ITEM_QTY,0) WHEN  A.MVT_TP IN ('64')           THEN NVL(B.ITEM_QTY,0) * -1 ELSE 0 END OBT_GR_QTY   --조달입고수량

                                                /*  2019-07-03	update by ZQH  CC：R19061201619 修改内容是按照 报表--进销存汇总报表  将PURC_AMT 字段 更改为 MOVING_AVG_AMT
                                                ,CASE WHEN A.MVT_TP IN ('63')           THEN NVL(B.PURC_AMT,0) WHEN  A.MVT_TP IN ('64')           THEN NVL(B.PURC_AMT,0) * -1 ELSE 0 END OBT_GR_AMT  --조달입고금액
                                                */
                                                ,CASE WHEN A.MVT_TP IN ('63')           THEN NVL(B.PURC_AMT,0) WHEN  A.MVT_TP IN ('64')           THEN NVL(B.MOVING_AVG_AMT,0) * -1 ELSE 0 END OBT_GR_AMT
                                                ,CASE WHEN A.MVT_TP IN ('49','59')      THEN NVL(B.ITEM_QTY,0) WHEN  A.MVT_TP IN ('50','60')      THEN NVL(B.ITEM_QTY,0) * -1 ELSE 0 END PAL_GR_QTY   --손익입고수량
                                                ,CASE WHEN A.MVT_TP IN ('49','59')      THEN NVL(B.PURC_AMT,0) WHEN  A.MVT_TP IN ('50','60')      THEN NVL(B.MOVING_AVG_AMT,0) * -1 ELSE 0 END PAL_GR_AMT  --손익입고금액
                                                ,CASE WHEN A.MVT_TP IN ('21','23','25')
                                                        THEN
                                                          CASE WHEN B.DEBIT_CREDIT_DSTIN_CD = 'S'
                                                                 THEN NVL(B.ITEM_QTY,0)
                                                               ELSE 0
                                                           END
                                                      WHEN A.MVT_TP IN ('22','24','26')
                                                        THEN
                                                          CASE WHEN B.DEBIT_CREDIT_DSTIN_CD = 'S'
                                                                 THEN NVL(B.ITEM_QTY,0)
                                                               ELSE 0
                                                           END
                                                      ELSE 0
                                                 END STRGE_MOVE_GR_QTY   --창고이동입고수량
                                                ,CASE WHEN A.MVT_TP IN ('21','23','25')
                                                        THEN
                                                          CASE WHEN B.DEBIT_CREDIT_DSTIN_CD = 'S'
                                                                 THEN NVL(B.PURC_AMT,0)
                                                               ELSE 0
                                                           END
                                                      WHEN A.MVT_TP IN ('22','24','26')
                                                        THEN
                                                          CASE WHEN B.DEBIT_CREDIT_DSTIN_CD = 'S'
                                                                 THEN CASE WHEN NVL(B.PURC_AMT, 0) = 0
                                                                             THEN NVL(B.SALE_AMT, 0)
                                                                           ELSE NVL(B.PURC_AMT, 0)
                                                                       END
                                                               ELSE 0
                                                           END
                                                      ELSE 0
                                                 END STRGE_MOVE_GR_AMT  --창고이동입고금액
                                                 --33,34,35,36,37,38
                                                ,CASE WHEN A.MVT_TP IN ('31','33','35','36','37')      THEN NVL(B.ITEM_QTY,0) WHEN  A.MVT_TP IN ('32','34','38')      THEN NVL(B.ITEM_QTY,0) * -1 ELSE 0 END ETC_GR_QTY   --기타입고수량[33:기타입고,35:차입입고,36:차출반환입고,37:내부수령, 34:기타입고취소, 38:내부수령취소]
                                                ,CASE WHEN A.MVT_TP IN ('31','33','35','36','37')      THEN NVL(B.PURC_AMT,0) WHEN  A.MVT_TP IN ('32','34','38')      THEN NVL(B.MOVING_AVG_AMT,0) * -1 ELSE 0 END ETC_GR_AMT  --기타입고금액
                                                ,NVL(D.SALE_TP,'03') AS SALE_TP
                                                 ,CASE WHEN A.MVT_TP IN ('71', '74', '75')
                                                            THEN
                                                              CASE WHEN NVL(D.SALE_TP,'01') = '01'
                                                                     THEN NVL(B.ITEM_QTY,0)
                                                                   ELSE 0
                                                               END
                                                          WHEN  A.MVT_TP IN ('72', '73', '76')
                                                            THEN
                                                              CASE WHEN NVL(D.SALE_TP,'01') = '01'
                                                                     THEN NVL(B.ITEM_QTY,0) * -1
                                                                   ELSE 0
                                                               END
                                                          ELSE 0
                                                      END CT_SALE_QTY   --COUNTER판매수량
                                                    ,CASE WHEN A.MVT_TP IN ('71', '74', '75')
                                                            THEN
                                                               CASE WHEN NVL(D.SALE_TP,'01') = '01'
                                                                     THEN NVL(B.SALE_AMT,0)
                                                                   ELSE 0
                                                               END
                                                          WHEN A.MVT_TP IN ('72', '73', '76')
                                                            THEN
                                                               CASE WHEN NVL(D.SALE_TP,'01') = '01'
                                                                     THEN NVL(B.SALE_AMT,0) * -1
                                                                   ELSE 0
                                                               END
                                                          ELSE 0
                                                     END CT_SALE_AMT  --COUNTER판매금액
                                                    ,CASE WHEN A.MVT_TP IN ('71', '74', '75')
                                                            THEN
                                                              CASE WHEN NVL(D.SALE_TP,'01') = '01'
                                                                     THEN NVL(B.MOVING_AVG_AMT,0)
                                                                   ELSE 0
                                                               END
                                                          WHEN  A.MVT_TP IN ('72', '73', '76')
                                                            THEN
                                                              CASE WHEN NVL(D.SALE_TP,'01') = '01'
                                                                     THEN NVL(B.MOVING_AVG_AMT,0) * -1
                                                                   ELSE 0
                                                               END
                                                          ELSE 0
                                                     END CT_SALE_BASE_AMT  --COUNTER원가금액
                                                      ,CASE WHEN A.MVT_TP IN ('71', '74', '75')
                                                            THEN
                                                              CASE WHEN NVL(D.SALE_TP,'01') = '02'
                                                                     THEN NVL(B.ITEM_QTY,0)
                                                                   ELSE 0
                                                               END
                                                          WHEN  A.MVT_TP IN ('72', '73', '76')
                                                            THEN
                                                              CASE WHEN NVL(D.SALE_TP,'01') = '02'
                                                                     THEN NVL(B.ITEM_QTY,0) * -1
                                                                   ELSE 0
                                                               END
                                                          ELSE 0
                                                      END WKS_SALE_QTY   --WOKSHOP판매수량
                                                    ,CASE WHEN A.MVT_TP IN ('71', '74', '75')
                                                            THEN
                                                               CASE WHEN NVL(D.SALE_TP,'01') = '02'
                                                                     THEN NVL(B.SALE_AMT,0)
                                                                   ELSE 0
                                                               END
                                                          WHEN A.MVT_TP IN ('72', '73', '76')
                                                            THEN
                                                               CASE WHEN NVL(D.SALE_TP,'01') = '02'
                                                                     THEN NVL(B.SALE_AMT,0) * -1
                                                                   ELSE 0
                                                               END
                                                          ELSE 0
                                                     END WKS_SALE_AMT  --WOKSHOP판매금액
                                                    ,CASE WHEN A.MVT_TP IN ('71', '74', '75')
                                                            THEN
                                                              CASE WHEN NVL(D.SALE_TP,'01') = '02'
                                                                     THEN NVL(B.MOVING_AVG_AMT,0)
                                                                   ELSE 0
                                                               END
                                                          WHEN  A.MVT_TP IN ('72', '73', '76')
                                                            THEN
                                                              CASE WHEN NVL(D.SALE_TP,'01') = '02'
                                                                     THEN NVL(B.MOVING_AVG_AMT,0) * -1
                                                                   ELSE 0
                                                               END
                                                          ELSE 0
                                                     END WKS_SALE_BASE_AMT  --WOKSHOP판매원가금액
                                                     ,CASE WHEN A.MVT_TP IN ('11','14','15')
                                                            THEN
                                                              CASE WHEN NVL(D.SALE_TP,'01') = '01'
                                                                     THEN NVL(B.ITEM_QTY,0)
                                                                   ELSE 0
                                                               END
                                                          WHEN  A.MVT_TP IN ('12','13','16')
                                                            THEN
                                                              CASE WHEN NVL(D.SALE_TP,'01') = '01'
                                                                     THEN NVL(B.ITEM_QTY,0) * -1
                                                                   ELSE 0
                                                               END
                                                          ELSE 0
                                                      END SER_SALE_QTY   --정비판매수량
                                                    ,CASE WHEN A.MVT_TP IN ('11','14','15')
                                                            THEN
                                                               CASE WHEN NVL(D.SALE_TP,'01') = '01'
                                                                     THEN NVL(B.SALE_AMT,0)
                                                                   ELSE 0
                                                               END
                                                          WHEN A.MVT_TP IN ('12','13','16')
                                                            THEN
                                                               CASE WHEN NVL(D.SALE_TP,'01') = '01'
                                                                     THEN NVL(B.SALE_AMT,0) * -1
                                                                   ELSE 0
                                                               END
                                                          ELSE 0
                                                     END SER_SALE_AMT  --정비판매금액
                                                    ,CASE WHEN A.MVT_TP IN ('11','14','15')
                                                            THEN
                                                              CASE WHEN NVL(D.SALE_TP,'01') = '01'
                                                                     THEN NVL(B.MOVING_AVG_AMT,0)
                                                                   ELSE 0
                                                               END
                                                          WHEN  A.MVT_TP IN ('12','13','16')
                                                            THEN
                                                              CASE WHEN NVL(D.SALE_TP,'01') = '01'
                                                                     THEN NVL(B.MOVING_AVG_AMT,0) * -1
                                                                   ELSE 0
                                                               END
                                                          ELSE 0
                                                     END SER_SALE_BASE_AMT  --정비판매원가금액
                                                ,CASE WHEN A.MVT_TP IN ('21','23','25')
                                                        THEN
                                                          CASE WHEN B.DEBIT_CREDIT_DSTIN_CD = 'H'
                                                                 THEN NVL(B.ITEM_QTY,0)
                                                               ELSE 0
                                                           END
                                                        WHEN A.MVT_TP IN ('22','24','26')
                                                        THEN
                                                          CASE WHEN B.DEBIT_CREDIT_DSTIN_CD = 'H'
                                                                 THEN NVL(B.ITEM_QTY,0)
                                                               ELSE 0
                                                           END
                                                      ELSE 0
                                                 END STRGE_MOVE_GI_QTY   --창고이동출고수량
                                                 ,CASE WHEN A.MVT_TP IN ('21','23','25')
                                                        THEN
                                                          CASE WHEN B.DEBIT_CREDIT_DSTIN_CD = 'H'
                                                                 THEN NVL(B.MOVING_AVG_AMT,0)
                                                               ELSE 0
                                                           END
                                                       WHEN A.MVT_TP IN ('22','24','26')
                                                        THEN
                                                          CASE WHEN B.DEBIT_CREDIT_DSTIN_CD = 'H'
                                                                 THEN NVL(B.MOVING_AVG_AMT,0)
                                                               ELSE 0
                                                           END
                                                      ELSE 0
                                                 END STRGE_MOVE_GI_BASE_AMT  --창고이동출고원가금액
                                                ,CASE WHEN A.MVT_TP IN ('41')      THEN NVL(B.ITEM_QTY,0)       WHEN  A.MVT_TP IN ('42')      THEN NVL(B.ITEM_QTY,0) * -1       ELSE 0 END INT_RCV_GI_QTY   --내부출고수량
                                                ,CASE WHEN A.MVT_TP IN ('41')      THEN NVL(B.SALE_AMT,0)       WHEN  A.MVT_TP IN ('42')      THEN NVL(B.SALE_AMT,0) * -1       ELSE 0 END INT_RCV_GI_AMT  --내부출고금액
                                                ,CASE WHEN A.MVT_TP IN ('41')      THEN NVL(B.MOVING_AVG_AMT,0) WHEN  A.MVT_TP IN ('42')      THEN NVL(B.MOVING_AVG_AMT,0) * -1 ELSE 0 END INT_RCV_GI_BASE_AMT  --내부출고원가고금액
                                                ,CASE WHEN A.MVT_TP IN ('61')      THEN NVL(B.ITEM_QTY,0)       WHEN  A.MVT_TP IN ('62')      THEN NVL(B.ITEM_QTY,0) * -1       ELSE 0 END OBT_GI_QTY   --조달출고수량
                                                ,CASE WHEN A.MVT_TP IN ('61')      THEN NVL(B.SALE_AMT,0)       WHEN  A.MVT_TP IN ('62')      THEN NVL(B.SALE_AMT,0) * -1       ELSE 0 END OBT_GI_AMT  --조달출고금액
                                                ,CASE WHEN A.MVT_TP IN ('61')      THEN NVL(B.MOVING_AVG_AMT,0) WHEN  A.MVT_TP IN ('62')      THEN NVL(B.MOVING_AVG_AMT,0) * -1 ELSE 0 END OBT_GI_BASE_AMT  --조달출고원가고금액
                                                ,CASE WHEN A.MVT_TP IN ('43','45','65')      THEN NVL(B.ITEM_QTY,0)       WHEN  A.MVT_TP IN ('44','46','66')      THEN NVL(B.ITEM_QTY,0) * -1       ELSE 0 END LOSS_GI_QTY   --손실출고수량
                                                ,CASE WHEN A.MVT_TP IN ('43','45','65')      THEN NVL(B.MOVING_AVG_AMT,0) WHEN  A.MVT_TP IN ('44','46','66')      THEN NVL(B.MOVING_AVG_AMT,0) * -1 ELSE 0 END LOSS_GI_BASE_AMT  --손실출고원가고금액
                                                ,CASE WHEN A.MVT_TP IN ('47','48')      THEN NVL(B.ITEM_QTY,0)       ELSE 0 END ETC_GI_QTY   --기타출고수량
                                                ,CASE WHEN A.MVT_TP IN ('47','48')      THEN NVL(B.SALE_AMT,0)       ELSE 0 END ETC_GI_AMT  --기타출고금액
                                                ,CASE WHEN A.MVT_TP IN ('47','48')      THEN NVL(B.MOVING_AVG_AMT,0) ELSE 0 END ETC_GI_BASE_AMT  --기타출고원가고금액
                                                ,CASE WHEN A.MVT_TP IN ('01','04','63','49','59','31','33','35','36','37')
                                                        THEN NVL(B.MOVING_AVG_AMT,0)
                                                      WHEN A.MVT_TP IN ('21','23','25')
                                                        THEN
                                                          CASE WHEN B.DEBIT_CREDIT_DSTIN_CD = 'S'
                                                                 THEN NVL(B.MOVING_AVG_AMT,0)
                                                               ELSE 0
                                                           END
                                                      WHEN A.MVT_TP IN ('22','24','26')
                                                        THEN
                                                          CASE WHEN B.DEBIT_CREDIT_DSTIN_CD = 'S'
                                                                 THEN NVL(B.MOVING_AVG_AMT,0)
                                                               ELSE 0
                                                           END
                                                      WHEN  A.MVT_TP IN ('02','03','64','50','60','32','34','38') THEN NVL(B.MOVING_AVG_AMT,0) * -1 ELSE 0 END GR_MOVING_AVG_AMT -- 입고이동금액
                                                ,CASE WHEN A.MVT_TP IN ('01','04','63','49','59','31','33','35','36','37')
                                                        THEN NVL(B.MOVING_AVG_TAX_DDCT_AMT,0)
                                                      WHEN A.MVT_TP IN ('21','23','25')
                                                        THEN
                                                          CASE WHEN B.DEBIT_CREDIT_DSTIN_CD = 'S'
                                                                 THEN NVL(B.MOVING_AVG_TAX_DDCT_AMT,0)
                                                               ELSE 0
                                                           END
                                                      WHEN A.MVT_TP IN ('22','24','26')
                                                        THEN
                                                          CASE WHEN B.DEBIT_CREDIT_DSTIN_CD = 'S'
                                                                 THEN NVL(B.MOVING_AVG_TAX_DDCT_AMT,0)
                                                               ELSE 0
                                                           END
                                                      WHEN  A.MVT_TP IN ('02','03','64','50','60','32','34','38') THEN NVL(B.MOVING_AVG_TAX_DDCT_AMT,0) * -1 ELSE 0 END GR_MOVING_AVG_TAX_DDCT_AMT -- 입고이동금액(세금제외)
                                                ,CASE WHEN A.MVT_TP IN ('11','14','15','71','74','75','41','43','45','47','48','61','65')
                                                        THEN NVL(B.MOVING_AVG_TAX_DDCT_AMT,0)
                                                      WHEN A.MVT_TP IN ('21','23','25')
                                                        THEN
                                                          CASE WHEN B.DEBIT_CREDIT_DSTIN_CD = 'H'
                                                                 THEN NVL(B.MOVING_AVG_TAX_DDCT_AMT,0)
                                                               ELSE 0
                                                           END
                                                        WHEN A.MVT_TP IN ('22','24','26')
                                                        THEN
                                                          CASE WHEN B.DEBIT_CREDIT_DSTIN_CD = 'H'
                                                                 THEN NVL(B.MOVING_AVG_TAX_DDCT_AMT,0)
                                                               ELSE 0
                                                           END
                                                      WHEN  A.MVT_TP IN ('12','13','16','72','73','76','42','44','46','62','66') THEN NVL(B.MOVING_AVG_TAX_DDCT_AMT,0) * -1 ELSE 0 END GI_MOVING_AVG_TAX_DDCT_AMT
                                        FROM PT_0311T A
                                                INNER JOIN PT_0312T B
                                                        ON A.DLR_CD = B.DLR_CD
                                                       AND A.MVT_DOC_YY_MM = B.MVT_DOC_YY_MM
                                                       AND A.MVT_DOC_NO    = B.MVT_DOC_NO
                                                INNER JOIN PT_0201T C
                                                   ON B.DLR_CD  = C.DLR_CD
                                                  AND B.ITEM_CD = C.ITEM_CD
                                                LEFT OUTER JOIN (
                                                        SELECT   A.DLR_CD
                                                                ,A.PAR_SALE_ORD_NO
                                                                ,A.SALE_TP
                                                                ,B.PAR_SALE_ORD_LINE_NO
                                                                ,B.ITEM_CD
                                                          FROM   DMSDB.PT_0521T A    --부품판매헤더정보
                                                                   INNER JOIN DMSDB.PT_0522T B    --부품판매품목정보
                                                                      ON A.DLR_CD          = B.DLR_CD
                                                                     AND A.PAR_SALE_ORD_NO = B.PAR_SALE_ORD_NO
                                                        WHERE    A.DLR_CD = #{sDlrCd}
                                                       ) D
                                                     ON A.DLR_CD          = D.DLR_CD
                                                    AND B.REF_DOC_NO      = D.PAR_SALE_ORD_NO
                                                    AND B.REF_DOC_LINE_NO = D.PAR_SALE_ORD_LINE_NO
                                        WHERE  A.DLR_CD = #{sDlrCd}
                                        AND  A.MVT_TP NOT IN ('23','24')  --예류 및 예류 취소는 마감에서 제외한다.
                                        AND  A.MVT_DOC_YY_MM between #{sAccYyMmFr} and #{sAccYyMmTo}
                                        <if test='sItemCd != null and sItemCd != ""'>
                                            AND B.ITEM_CD LIKE '%'||#{sItemCd}||'%'
                                        </if>
                                        <if test='sItemNm != null and sItemNm != ""'>
                                            AND C.ITEM_NM LIKE '%'||#{sItemNm}||'%'
                                        </if>
                                        <if test='sStrgeCd != null and sStrgeCd != ""'>
                                            AND B.STRGE_CD = #{sStrgeCd}
                                        </if>        <!-- 창고코드 -->
                                        <if test='sItemDstinCd != null and sItemDstinCd != ""'>
                                            AND C.ITEM_DSTIN_CD = #{sItemDstinCd}
                                        </if>        <!-- 품목유형 -->
                                        AND C.ITEM_DSTIN_CD NOT IN ('20','04')
                                         ) A
                                       GROUP BY  A.DLR_CD
                                                ,A.PLT_CD
                                                ,A.STRGE_CD
                                                ,A.ITEM_CD
                                     ) A
                                ) C
                             ON A.DLR_CD = C.DLR_CD
                            AND A.PLT_CD = C.PLT_CD
                            AND A.STRGE_CD = C.STRGE_CD
                            AND A.ITEM_CD = C.ITEM_CD
                        LEFT OUTER JOIN PT_0901T D
                             ON A.DLR_CD    = D.DLR_CD
                            AND A.PLT_CD    = D.PLT_CD
                            AND A.STRGE_CD  = D.STRGE_CD
                            AND D.YY_MM      = TO_CHAR(TO_DATE(#{sAccYyMmFr}||'01','YYYYMMDD'),'YYYYMM')
                            AND A.ITEM_CD   = D.ITEM_CD
                        LEFT OUTER JOIN PT_0208T E
                             ON A.DLR_CD   = E.DLR_CD
                            AND A.STRGE_CD = E.STRGE_CD
                            AND A.ITEM_CD  = E.ITEM_CD
                        LEFT OUTER JOIN PT_0901T F  --기초재고(검색 조건 시작점이 현재월인경우)
                             ON A.DLR_CD    = F.DLR_CD
                            AND A.PLT_CD    = F.PLT_CD
                            AND A.STRGE_CD  = F.STRGE_CD
                            AND F.YY_MM     = TO_CHAR(ADD_MONTHS(TO_DATE(#{sAccYyMmFr}||'01','YYYYMMDD'),-1),'YYYYMM')
                            AND A.ITEM_CD   = F.ITEM_CD
                        LEFT OUTER JOIN PT_0901T G  --기말재고
                             ON A.DLR_CD    = G.DLR_CD
                            AND A.PLT_CD    = G.PLT_CD
                            AND A.STRGE_CD  = G.STRGE_CD
                            AND G.YY_MM      = TO_CHAR(TO_DATE(#{sAccYyMmTo}||'01','YYYYMMDD'),'YYYYMM')
                            AND A.ITEM_CD   = G.ITEM_CD
                         LEFT OUTER JOIN PT_0902T H  --TO에 대한 이평가
                             ON A.DLR_CD   = H.DLR_CD
                            AND A.PLT_CD   = H.PLT_CD
                            AND A.STRGE_CD = H.STRGE_CD
                            AND A.ITEM_CD  = H.ITEM_CD
                            AND H.YY_MM    = #{sAccYyMmTo}
                                --GROUP BY C.DLR_CD, C.STRGE_CD
                          WHERE B.ITEM_DSTIN_CD NOT IN ('20','04')
                          <if test='sStrgeCd != null and sStrgeCd != ""'>
                              AND A.STRGE_CD = #{sStrgeCd}
                          </if>        <!-- 창고코드 -->
                          ) T1
          GROUP BY T1.DLR_CD, T1.STRGE_CD
          ) A
           <where>
             <if test='firstIndex != -1 and lastIndex != -1'>
                     A.RNUM <![CDATA[<=]]> #{lastIndex}
                 AND A.RNUM <![CDATA[>]]> #{firstIndex}
             </if>
          </where>
    </select>

    <!-- 입고재고현황 조회한다. -->
    <select id="selectStockDdlnGrGiByConditionCnt" resultType="int" parameterType="StockDdlnSearchVO">
    /* [chn.bhmc.dms.par.stm.service.dao.StockDdlnDao.selectStockDdlnGrGiByConditionCnt] */
    SELECT COUNT(*)
    FROM (
        SELECT
                    ROW_NUMBER() OVER(ORDER BY T1.DLR_CD, T1.STRGE_CD) AS RNUM
                    ,T1.DLR_CD
                    ,T1.STRGE_CD
                    ,SUM(T1.PRE_MM_DDLN_STOCK_QTY) AS PRE_MM_DDLN_STOCK_QTY
                    ,SUM(T1.PRE_MM_DDLN_STOCK_AMT) AS PRE_MM_DDLN_STOCK_AMT
                    ,SUM(T1.GR_QTY) AS GR_QTY
                    ,SUM(T1.GR_AMT) AS GR_AMT
                    ,SUM(T1.GI_QTY) AS GI_QTY
                    ,SUM(T1.GI_AMT) AS GI_AMT
                    ,SUM(T1.GI_BASE_AMT) AS GI_BASE_AMT
                    ,SUM(T1.PURC_GR_QTY) AS PURC_GR_QTY
                    ,SUM(T1.PURC_GR_AMT) AS PURC_GR_AMT
                    ,SUM(T1.OBT_GR_QTY) AS OBT_GR_QTY
                    ,SUM(T1.OBT_GR_AMT) AS OBT_GR_AMT
                    ,SUM(T1.PAL_GR_QTY) AS PAL_GR_QTY
                    ,SUM(T1.PAL_GR_AMT) AS PAL_GR_AMT
                    ,SUM(T1.STRGE_MOVE_GR_QTY) AS STRGE_MOVE_GR_QTY
                    ,SUM(T1.STRGE_MOVE_GR_AMT) AS STRGE_MOVE_GR_AMT
                    ,SUM(T1.ETC_GR_QTY) AS ETC_GR_QTY
                    ,SUM(T1.ETC_GR_AMT) AS ETC_GR_AMT
                    ,SUM(T1.MOVING_AVG_PRC) AS MOVING_AVG_PRC
                    ,SUM(T1.CT_SALE_QTY) AS CT_SALE_QTY
                    ,SUM(T1.CT_SALE_AMT) AS CT_SALE_AMT
                    ,SUM(T1.CT_SALE_BASE_AMT) AS CT_SALE_BASE_AMT
                    ,SUM(T1.WKS_SALE_QTY) AS WKS_SALE_QTY
                    ,SUM(T1.WKS_SALE_AMT) AS WKS_SALE_AMT
                    ,SUM(T1.WKS_SALE_BASE_AMT) AS WKS_SALE_BASE_AMT
                    ,SUM(T1.STRGE_MOVE_GI_QTY) AS STRGE_MOVE_GI_QTY
                    ,SUM(T1.STRGE_MOVE_GI_BASE_AMT) AS STRGE_MOVE_GI_BASE_AMT
                    ,SUM(T1.INT_RCV_GI_QTY) AS INT_RCV_GI_QTY
                    ,SUM(T1.INT_RCV_GI_AMT) AS INT_RCV_GI_AMT
                    ,SUM(T1.INT_RCV_GI_BASE_AMT) AS INT_RCV_GI_BASE_AMT
                    ,SUM(T1.OBT_GI_QTY) AS OBT_GI_QTY
                    ,SUM(T1.OBT_GI_AMT) AS OBT_GI_AMT
                    ,SUM(T1.OBT_GI_BASE_AMT) AS OBT_GI_BASE_AMT
                    ,SUM(T1.LOSS_GI_QTY) AS LOSS_GI_QTY
                    ,SUM(T1.LOSS_GI_BASE_AMT) AS LOSS_GI_BASE_AMT
                    ,SUM(T1.ETC_GI_QTY) AS ETC_GI_QTY
                    ,SUM(T1.ETC_GI_AMT) AS ETC_GI_AMT
                    ,SUM(T1.ETC_GI_BASE_AMT) AS ETC_GI_BASE_AMT
                    ,SUM(T1.PSNT_MM_DDLN_STOCK_QTY) AS PSNT_MM_DDLN_STOCK_QTY
                    ,SUM(T1.PSNT_MM_DDLN_STOCK_PRC) AS PSNT_MM_DDLN_STOCK_PRC     --당월마감이동평균가격
                    ,SUM(T1.PSNT_MM_DDLN_STOCK_AMT) AS PSNT_MM_DDLN_STOCK_AMT
                    ,SUM(T1.PAR_SALE_QTY) AS  PAR_SALE_QTY                  --부품판매수량
                    ,SUM(T1.PAR_SALE_BASE_AMT) AS PAR_SALE_BASE_AMT    --부품판매원가금액
                    ,SUM(T1.PAR_SALE_AMT) AS PAR_SALE_AMT                   --부품판매금액
                    ,SUM(T1.SER_SALE_QTY) AS SER_SALE_QTY
                    ,SUM(T1.SER_SALE_BASE_AMT) AS SER_SALE_BASE_AMT
                    ,SUM(T1.SER_SALE_AMT) AS SER_SALE_AMT
       FROM
         (
            SELECT   A.DLR_CD
                    ,A.STRGE_CD
                    ,CASE WHEN TO_CHAR(TO_DATE(#{sAccYyMmFr}||'01','YYYYMMDD'),'YYYYMM') = TO_CHAR(SYSDATE,'YYYYMM') THEN NVL(F.PSNT_MM_DDLN_STOCK_QTY,0) ELSE NVL(D.PRE_MM_DDLN_STOCK_QTY,0) END  PRE_MM_DDLN_STOCK_QTY
                    ,CASE WHEN TO_CHAR(TO_DATE(#{sAccYyMmFr}||'01','YYYYMMDD'),'YYYYMM') = TO_CHAR(SYSDATE,'YYYYMM') THEN NVL(F.PSNT_MM_DDLN_STOCK_AMT,0) ELSE NVL(D.PRE_MM_DDLN_STOCK_AMT,0) END  PRE_MM_DDLN_STOCK_AMT
                    ,NVL(C.GR_QTY,0) AS GR_QTY
                    ,NVL(C.GR_AMT,0) AS GR_AMT
                    ,NVL(C.GI_QTY,0) AS GI_QTY
                    ,NVL(C.GI_AMT,0) AS GI_AMT
                    ,NVL(C.GI_BASE_AMT,0) AS GI_BASE_AMT
                    ,NVL(C.PURC_GR_QTY,0) AS PURC_GR_QTY
                    ,NVL(C.PURC_GR_AMT,0) AS PURC_GR_AMT
                    ,NVL(C.OBT_GR_QTY,0) AS OBT_GR_QTY
                    ,NVL(C.OBT_GR_AMT,0) AS OBT_GR_AMT
                    ,NVL(C.PAL_GR_QTY,0) AS PAL_GR_QTY
                    ,NVL(C.PAL_GR_AMT,0) AS PAL_GR_AMT
                    ,NVL(C.STRGE_MOVE_GR_QTY,0) AS STRGE_MOVE_GR_QTY
                    ,NVL(C.STRGE_MOVE_GR_AMT,0) AS STRGE_MOVE_GR_AMT
                    ,NVL(C.ETC_GR_QTY,0) AS ETC_GR_QTY
                    ,NVL(C.ETC_GR_AMT,0) AS ETC_GR_AMT
                    ,NVL(E.MOVING_AVG_PRC,0) AS MOVING_AVG_PRC
                    ,NVL(C.CT_SALE_QTY,0) AS CT_SALE_QTY
                    ,NVL(C.CT_SALE_AMT,0) AS CT_SALE_AMT
                    ,NVL(C.CT_SALE_BASE_AMT,0) AS CT_SALE_BASE_AMT
                    ,NVL(C.WKS_SALE_QTY,0) AS WKS_SALE_QTY
                    ,NVL(C.WKS_SALE_AMT,0) AS WKS_SALE_AMT
                    ,NVL(C.WKS_SALE_BASE_AMT,0) AS WKS_SALE_BASE_AMT
                    ,NVL(C.STRGE_MOVE_GI_QTY,0) AS STRGE_MOVE_GI_QTY
                    ,NVL(C.STRGE_MOVE_GI_BASE_AMT,0) AS STRGE_MOVE_GI_BASE_AMT
                    ,NVL(C.INT_RCV_GI_QTY,0) AS INT_RCV_GI_QTY
                    ,NVL(C.INT_RCV_GI_AMT,0) AS INT_RCV_GI_AMT
                    ,NVL(C.INT_RCV_GI_BASE_AMT,0) AS INT_RCV_GI_BASE_AMT
                    ,NVL(C.OBT_GI_QTY,0) AS OBT_GI_QTY
                    ,NVL(C.OBT_GI_AMT,0) AS OBT_GI_AMT
                    ,NVL(C.OBT_GI_BASE_AMT,0) AS OBT_GI_BASE_AMT
                    ,NVL(C.LOSS_GI_QTY,0) AS LOSS_GI_QTY
                    ,NVL(C.LOSS_GI_BASE_AMT,0) AS LOSS_GI_BASE_AMT
                    ,NVL(C.ETC_GI_QTY,0) AS ETC_GI_QTY
                    ,NVL(C.ETC_GI_AMT,0) AS ETC_GI_AMT
                    ,NVL(C.ETC_GI_BASE_AMT,0) AS ETC_GI_BASE_AMT
                    ,NVL(G.PSNT_MM_DDLN_STOCK_QTY,0) AS PSNT_MM_DDLN_STOCK_QTY
                    ,NVL(H.PSNT_MM_DDLN_MOVE_AVG_PRC, 0) AS PSNT_MM_DDLN_STOCK_PRC     --당월마감이동평균가격
                    ,NVL(G.PSNT_MM_DDLN_STOCK_AMT,0) AS PSNT_MM_DDLN_STOCK_AMT
                    ,NVL(C.PAR_SALE_QTY,0) AS  PAR_SALE_QTY --부품판매수량
                    ,NVL(C.PAR_SALE_BASE_AMT,0) AS PAR_SALE_BASE_AMT    --부품판매원가금액
                    ,NVL(C.PAR_SALE_AMT,0) AS PAR_SALE_AMT --부품판매금액
                    ,NVL(C.SER_SALE_QTY,0) AS SER_SALE_QTY
                    ,NVL(C.SER_SALE_BASE_AMT,0) AS SER_SALE_BASE_AMT
                    ,NVL(C.SER_SALE_AMT,0) AS SER_SALE_AMT
                FROM PT_0301T A
                     INNER JOIN PT_0201T B
                       ON A.DLR_CD = B.DLR_CD
                      AND A.ITEM_CD = B.ITEM_CD
                     LEFT OUTER JOIN   (
                            SELECT  A.DLR_CD
                                    ,A.PLT_CD
                                    ,A.STRGE_CD
                                    ,A.ITEM_CD
                                    ,A.GR_QTY
                                    ,A.GR_AMT
                                    ,A.GI_QTY
                                    ,A.GI_AMT
                                    ,A.GI_BASE_AMT
                                    ,A.PURC_GR_QTY
                                    ,A.PURC_GR_AMT
                                    ,A.OBT_GR_QTY
                                    ,A.OBT_GR_AMT
                                    ,A.PAL_GR_QTY
                                    ,A.PAL_GR_AMT
                                    ,A.STRGE_MOVE_GR_QTY
                                    ,A.STRGE_MOVE_GR_AMT
                                    ,A.ETC_GR_QTY
                                    ,A.ETC_GR_AMT
                                    ,A.CT_SALE_QTY
                                    ,A.CT_SALE_AMT
                                    ,A.CT_SALE_BASE_AMT
                                    ,A.WKS_SALE_QTY
                                    ,A.WKS_SALE_AMT
                                    ,A.WKS_SALE_BASE_AMT
                                    ,A.STRGE_MOVE_GI_QTY
                                    ,A.STRGE_MOVE_GI_BASE_AMT
                                    ,A.INT_RCV_GI_QTY
                                    ,A.INT_RCV_GI_AMT
                                    ,A.INT_RCV_GI_BASE_AMT
                                    ,A.OBT_GI_QTY
                                    ,A.OBT_GI_AMT
                                    ,A.OBT_GI_BASE_AMT
                                    ,A.LOSS_GI_QTY
                                    ,A.LOSS_GI_BASE_AMT
                                    ,A.ETC_GI_QTY
                                    ,A.ETC_GI_AMT
                                    ,A.ETC_GI_BASE_AMT
                                    ,(A.CT_SALE_QTY + A.WKS_SALE_QTY) AS  PAR_SALE_QTY                  --부품판매수량
                                    ,(A.CT_SALE_BASE_AMT + A.WKS_SALE_BASE_AMT) AS PAR_SALE_BASE_AMT    --부품판매원가금액
                                    ,(A.CT_SALE_AMT + A.WKS_SALE_AMT) AS PAR_SALE_AMT                   --부품판매금액
                                    ,A.SER_SALE_QTY
                                    ,A.SER_SALE_BASE_AMT
                                    ,A.SER_SALE_AMT
                              FROM
                                (
                                    SELECT   A.DLR_CD
                                            ,A.PLT_CD
                                            ,A.STRGE_CD
                                            ,A.ITEM_CD
                                            ,SUM(GR_QTY) AS GR_QTY
                                            ,SUM(GR_AMT) AS GR_AMT
                                            ,SUM(GI_QTY) AS GI_QTY
                                            ,SUM(GI_AMT) AS GI_AMT
                                            ,SUM(GI_BASE_AMT) AS GI_BASE_AMT
                                            ,SUM(PURC_GR_QTY) AS PURC_GR_QTY
                                            ,SUM(PURC_GR_AMT) AS PURC_GR_AMT
                                            ,SUM(OBT_GR_QTY) AS OBT_GR_QTY
                                            ,SUM(OBT_GR_AMT) AS OBT_GR_AMT
                                            ,SUM(PAL_GR_QTY) AS PAL_GR_QTY
                                            ,SUM(PAL_GR_AMT) AS PAL_GR_AMT
                                            ,SUM(STRGE_MOVE_GR_QTY) AS STRGE_MOVE_GR_QTY
                                            ,SUM(STRGE_MOVE_GR_AMT) AS STRGE_MOVE_GR_AMT
                                            ,SUM(ETC_GR_QTY) AS ETC_GR_QTY
                                            ,SUM(ETC_GR_AMT) AS ETC_GR_AMT
                                            ,SUM(CT_SALE_QTY)  AS CT_SALE_QTY
                                            ,SUM(CT_SALE_AMT)  AS CT_SALE_AMT
                                            ,SUM(CT_SALE_BASE_AMT) AS CT_SALE_BASE_AMT
                                            ,SUM(WKS_SALE_QTY)  AS WKS_SALE_QTY
                                            ,SUM(WKS_SALE_AMT) AS WKS_SALE_AMT
                                            ,SUM(WKS_SALE_BASE_AMT) AS WKS_SALE_BASE_AMT
                                            ,SUM(SER_SALE_QTY)  AS SER_SALE_QTY
                                            ,SUM(SER_SALE_BASE_AMT) AS SER_SALE_BASE_AMT
                                            ,SUM(SER_SALE_AMT) AS SER_SALE_AMT
                                            ,SUM(STRGE_MOVE_GI_QTY) AS STRGE_MOVE_GI_QTY
                                            ,SUM(STRGE_MOVE_GI_BASE_AMT) AS STRGE_MOVE_GI_BASE_AMT
                                            ,SUM(INT_RCV_GI_QTY) AS INT_RCV_GI_QTY
                                            ,SUM(INT_RCV_GI_AMT) AS INT_RCV_GI_AMT
                                            ,SUM(INT_RCV_GI_BASE_AMT) AS INT_RCV_GI_BASE_AMT
                                            ,SUM(OBT_GI_QTY) AS OBT_GI_QTY
                                            ,SUM(OBT_GI_AMT) AS OBT_GI_AMT
                                            ,SUM(OBT_GI_BASE_AMT) AS OBT_GI_BASE_AMT
                                            ,SUM(LOSS_GI_QTY ) AS LOSS_GI_QTY
                                            ,SUM(LOSS_GI_BASE_AMT ) AS LOSS_GI_BASE_AMT
                                            ,SUM(ETC_GI_QTY) AS ETC_GI_QTY
                                            ,SUM(ETC_GI_AMT) AS ETC_GI_AMT
                                            ,SUM(ETC_GI_BASE_AMT) AS ETC_GI_BASE_AMT
                                      FROM
                                        (
                                          SELECT A.DLR_CD
                                                ,A.MVT_DOC_YY_MM AS YY_MM
                                                ,A.MVT_DOC_NO
                                                ,A.MVT_TP
                                                ,B.ITEM_CD
                                                ,B.MVT_DOC_LINE_NO
                                                ,B.CANC_STMT_YN
                                                ,B.AUTO_CRE_YN
                                                ,B.PLT_CD
                                                ,B.STRGE_CD
                                                ,B.LOC_CD
                                                ,B.DEBIT_CREDIT_DSTIN_CD
                                                ,B.ITEM_QTY
                                                ,CASE WHEN A.MVT_TP IN ('01', '04', '63', '49', '59','31','33','35','36','37')
                                                        THEN NVL(B.ITEM_QTY,0)
                                                      WHEN A.MVT_TP IN ('21','23','25')
                                                        THEN
                                                          CASE WHEN B.DEBIT_CREDIT_DSTIN_CD = 'S'
                                                                 THEN NVL(B.ITEM_QTY,0)
                                                               ELSE 0
                                                           END
                                                      WHEN A.MVT_TP IN ('22','24','26')
                                                        THEN
                                                          CASE WHEN B.DEBIT_CREDIT_DSTIN_CD = 'S'
                                                                 THEN NVL(B.ITEM_QTY,0)
                                                               ELSE 0
                                                           END
                                                      WHEN  A.MVT_TP IN ('02', '03', '64', '50', '60','32','34','38')     THEN NVL(B.ITEM_QTY,0) * -1 ELSE 0 END GR_QTY   --입고수량
                                                ,CASE WHEN A.MVT_TP IN ('01', '04', '63', '49', '59','31','33','35','36','37')
                                                        THEN NVL(B.PURC_AMT,0)
                                                      WHEN A.MVT_TP IN ('21','23','25')
                                                        THEN
                                                          CASE WHEN B.DEBIT_CREDIT_DSTIN_CD = 'S'
                                                                 THEN NVL(B.PURC_AMT,0)
                                                               ELSE 0
                                                           END
                                                      WHEN A.MVT_TP IN ('22','24','26')
                                                        THEN
                                                          CASE WHEN B.DEBIT_CREDIT_DSTIN_CD = 'S'
                                                                 THEN CASE WHEN NVL(B.PURC_AMT, 0) = 0
                                                                             THEN NVL(B.SALE_AMT, 0)
                                                                           ELSE NVL(B.PURC_AMT, 0)
                                                                       END
                                                               ELSE 0
                                                           END
                                                      WHEN  A.MVT_TP IN ('02', '03', '64', '50','32', '60','34','38')     THEN NVL(B.MOVING_AVG_AMT,0) * -1 ELSE 0 END GR_AMT   --입고금액
                                                ,CASE WHEN A.MVT_TP IN ('11', '14', '15','71', '74', '75', '41', '43','45','47','48','61', '65')
                                                        THEN NVL(B.ITEM_QTY,0)
                                                      WHEN A.MVT_TP IN ('21','23','25')
                                                        THEN
                                                          CASE WHEN B.DEBIT_CREDIT_DSTIN_CD = 'H'
                                                                 THEN NVL(B.ITEM_QTY,0)
                                                               ELSE 0
                                                           END
                                                        WHEN A.MVT_TP IN ('22','24','26')
                                                        THEN
                                                          CASE WHEN B.DEBIT_CREDIT_DSTIN_CD = 'H'
                                                                 THEN NVL(B.ITEM_QTY,0)
                                                               ELSE 0
                                                           END
                                                      WHEN  A.MVT_TP IN ('12', '13', '16','72', '73', '76',  '42', '44', '46','62','66')     THEN NVL(B.ITEM_QTY,0) * -1 ELSE 0 END GI_QTY   --출고수량
                                                ,CASE WHEN A.MVT_TP IN ('11', '14', '15','71', '74', '75', '41', '43','45','47','48','61', '65')
                                                        THEN NVL(B.SALE_AMT,0)
                                                      WHEN A.MVT_TP IN ('21','23','25')
                                                        THEN
                                                          CASE WHEN B.DEBIT_CREDIT_DSTIN_CD = 'H'
                                                                 THEN NVL(B.SALE_AMT,0)
                                                               ELSE 0
                                                           END
                                                        WHEN A.MVT_TP IN ('22','24','26')
                                                        THEN
                                                          CASE WHEN B.DEBIT_CREDIT_DSTIN_CD = 'H'
                                                                 THEN CASE WHEN NVL(B.SALE_AMT, 0) = 0
                                                                             THEN NVL(B.PURC_AMT, 0)
                                                                           ELSE NVL(B.SALE_AMT, 0)
                                                                       END
                                                               ELSE 0
                                                           END
                                                      WHEN  A.MVT_TP IN ('12', '13', '16','72', '73', '76', '42', '44', '46','62','66')     THEN NVL(B.SALE_AMT,0) * -1 ELSE 0 END GI_AMT   --출고금액
                                                ,CASE WHEN A.MVT_TP IN ('11', '14', '15','71', '74', '75', '41', '43','45','47','48','61', '65')
                                                        THEN NVL(B.MOVING_AVG_AMT,0)
                                                      WHEN A.MVT_TP IN ('21','23','25')
                                                        THEN
                                                          CASE WHEN B.DEBIT_CREDIT_DSTIN_CD = 'H'
                                                                 THEN NVL(B.MOVING_AVG_AMT,0)
                                                               ELSE 0
                                                           END
                                                        WHEN A.MVT_TP IN ('22','24','26')
                                                        THEN
                                                          CASE WHEN B.DEBIT_CREDIT_DSTIN_CD = 'H'
                                                                 THEN NVL(B.MOVING_AVG_AMT,0)
                                                               ELSE 0
                                                           END
                                                      WHEN  A.MVT_TP IN ('12', '13', '16','72', '73', '76', '42', '44', '46','62','66')     THEN NVL(B.MOVING_AVG_AMT,0) * -1 ELSE 0 END GI_BASE_AMT   --출고원가
                                                ,CASE WHEN A.MVT_TP IN ('01', '04')     THEN NVL(B.ITEM_QTY,0) WHEN  A.MVT_TP IN ('02', '03')     THEN NVL(B.ITEM_QTY,0) * -1 ELSE 0 END PURC_GR_QTY   --구매입고수량
                                                ,CASE WHEN A.MVT_TP IN ('01', '04')     THEN NVL(B.PURC_AMT,0) WHEN  A.MVT_TP IN ('02', '03')     THEN NVL(B.MOVING_AVG_AMT,0) * -1 ELSE 0 END PURC_GR_AMT  --구매입고금액
                                                ,CASE WHEN A.MVT_TP IN ('63')           THEN NVL(B.ITEM_QTY,0) WHEN  A.MVT_TP IN ('64')           THEN NVL(B.ITEM_QTY,0) * -1 ELSE 0 END OBT_GR_QTY   --조달입고수량
                                                ,CASE WHEN A.MVT_TP IN ('63')           THEN NVL(B.PURC_AMT,0) WHEN  A.MVT_TP IN ('64')           THEN NVL(B.MOVING_AVG_AMT,0) * -1 ELSE 0 END OBT_GR_AMT  --조달입고금액
                                                ,CASE WHEN A.MVT_TP IN ('49','59')      THEN NVL(B.ITEM_QTY,0) WHEN  A.MVT_TP IN ('50','60')      THEN NVL(B.ITEM_QTY,0) * -1 ELSE 0 END PAL_GR_QTY   --손익입고수량
                                                ,CASE WHEN A.MVT_TP IN ('49','59')      THEN NVL(B.PURC_AMT,0) WHEN  A.MVT_TP IN ('50','60')      THEN NVL(B.MOVING_AVG_AMT,0) * -1 ELSE 0 END PAL_GR_AMT  --손익입고금액
                                                ,CASE WHEN A.MVT_TP IN ('21','23','25')
                                                        THEN
                                                          CASE WHEN B.DEBIT_CREDIT_DSTIN_CD = 'S'
                                                                 THEN NVL(B.ITEM_QTY,0)
                                                               ELSE 0
                                                           END
                                                      WHEN A.MVT_TP IN ('22','24','26')
                                                        THEN
                                                          CASE WHEN B.DEBIT_CREDIT_DSTIN_CD = 'S'
                                                                 THEN NVL(B.ITEM_QTY,0)
                                                               ELSE 0
                                                           END
                                                      ELSE 0
                                                 END STRGE_MOVE_GR_QTY   --창고이동입고수량
                                                ,CASE WHEN A.MVT_TP IN ('21','23','25')
                                                        THEN
                                                          CASE WHEN B.DEBIT_CREDIT_DSTIN_CD = 'S'
                                                                 THEN NVL(B.PURC_AMT,0)
                                                               ELSE 0
                                                           END
                                                      WHEN A.MVT_TP IN ('22','24','26')
                                                        THEN
                                                          CASE WHEN B.DEBIT_CREDIT_DSTIN_CD = 'S'
                                                                 THEN CASE WHEN NVL(B.PURC_AMT, 0) = 0
                                                                             THEN NVL(B.SALE_AMT, 0)
                                                                           ELSE NVL(B.PURC_AMT, 0)
                                                                       END
                                                               ELSE 0
                                                           END
                                                      ELSE 0
                                                 END STRGE_MOVE_GR_AMT  --창고이동입고금액
                                                 --33,34,35,36,37,38
                                                ,CASE WHEN A.MVT_TP IN ('31','33','35','36','37')      THEN NVL(B.ITEM_QTY,0) WHEN  A.MVT_TP IN ('32','34','38')      THEN NVL(B.ITEM_QTY,0) * -1 ELSE 0 END ETC_GR_QTY   --기타입고수량[33:기타입고,35:차입입고,36:차출반환입고,37:내부수령, 34:기타입고취소, 38:내부수령취소]
                                                ,CASE WHEN A.MVT_TP IN ('31','33','35','36','37')      THEN NVL(B.PURC_AMT,0) WHEN  A.MVT_TP IN ('32','34','38')      THEN NVL(B.MOVING_AVG_AMT,0) * -1 ELSE 0 END ETC_GR_AMT  --기타입고금액
                                                ,NVL(D.SALE_TP,'03') AS SALE_TP
                                                 ,CASE WHEN A.MVT_TP IN ('71', '74', '75')
                                                            THEN
                                                              CASE WHEN NVL(D.SALE_TP,'01') = '01'
                                                                     THEN NVL(B.ITEM_QTY,0)
                                                                   ELSE 0
                                                               END
                                                          WHEN  A.MVT_TP IN ('72', '73', '76')
                                                            THEN
                                                              CASE WHEN NVL(D.SALE_TP,'01') = '01'
                                                                     THEN NVL(B.ITEM_QTY,0) * -1
                                                                   ELSE 0
                                                               END
                                                          ELSE 0
                                                      END CT_SALE_QTY   --COUNTER판매수량
                                                    ,CASE WHEN A.MVT_TP IN ('71', '74', '75')
                                                            THEN
                                                               CASE WHEN NVL(D.SALE_TP,'01') = '01'
                                                                     THEN NVL(B.SALE_AMT,0)
                                                                   ELSE 0
                                                               END
                                                          WHEN A.MVT_TP IN ('72', '73', '76')
                                                            THEN
                                                               CASE WHEN NVL(D.SALE_TP,'01') = '01'
                                                                     THEN NVL(B.SALE_AMT,0) * -1
                                                                   ELSE 0
                                                               END
                                                          ELSE 0
                                                     END CT_SALE_AMT  --COUNTER판매금액
                                                    ,CASE WHEN A.MVT_TP IN ('71', '74', '75')
                                                            THEN
                                                              CASE WHEN NVL(D.SALE_TP,'01') = '01'
                                                                     THEN NVL(B.MOVING_AVG_AMT,0)
                                                                   ELSE 0
                                                               END
                                                          WHEN  A.MVT_TP IN ('72', '73', '76')
                                                            THEN
                                                              CASE WHEN NVL(D.SALE_TP,'01') = '01'
                                                                     THEN NVL(B.MOVING_AVG_AMT,0) * -1
                                                                   ELSE 0
                                                               END
                                                          ELSE 0
                                                     END CT_SALE_BASE_AMT  --COUNTER원가금액
                                                      ,CASE WHEN A.MVT_TP IN ('71', '74', '75')
                                                            THEN
                                                              CASE WHEN NVL(D.SALE_TP,'01') = '02'
                                                                     THEN NVL(B.ITEM_QTY,0)
                                                                   ELSE 0
                                                               END
                                                          WHEN  A.MVT_TP IN ('72', '73', '76')
                                                            THEN
                                                              CASE WHEN NVL(D.SALE_TP,'01') = '02'
                                                                     THEN NVL(B.ITEM_QTY,0) * -1
                                                                   ELSE 0
                                                               END
                                                          ELSE 0
                                                      END WKS_SALE_QTY   --WOKSHOP판매수량
                                                    ,CASE WHEN A.MVT_TP IN ('71', '74', '75')
                                                            THEN
                                                               CASE WHEN NVL(D.SALE_TP,'01') = '02'
                                                                     THEN NVL(B.SALE_AMT,0)
                                                                   ELSE 0
                                                               END
                                                          WHEN A.MVT_TP IN ('72', '73', '76')
                                                            THEN
                                                               CASE WHEN NVL(D.SALE_TP,'01') = '02'
                                                                     THEN NVL(B.SALE_AMT,0) * -1
                                                                   ELSE 0
                                                               END
                                                          ELSE 0
                                                     END WKS_SALE_AMT  --WOKSHOP판매금액
                                                    ,CASE WHEN A.MVT_TP IN ('71', '74', '75')
                                                            THEN
                                                              CASE WHEN NVL(D.SALE_TP,'01') = '02'
                                                                     THEN NVL(B.MOVING_AVG_AMT,0)
                                                                   ELSE 0
                                                               END
                                                          WHEN  A.MVT_TP IN ('72', '73', '76')
                                                            THEN
                                                              CASE WHEN NVL(D.SALE_TP,'01') = '02'
                                                                     THEN NVL(B.MOVING_AVG_AMT,0) * -1
                                                                   ELSE 0
                                                               END
                                                          ELSE 0
                                                     END WKS_SALE_BASE_AMT  --WOKSHOP판매원가금액
                                                     ,CASE WHEN A.MVT_TP IN ('11','14','15')
                                                            THEN
                                                              CASE WHEN NVL(D.SALE_TP,'01') = '01'
                                                                     THEN NVL(B.ITEM_QTY,0)
                                                                   ELSE 0
                                                               END
                                                          WHEN  A.MVT_TP IN ('12','13','16')
                                                            THEN
                                                              CASE WHEN NVL(D.SALE_TP,'01') = '01'
                                                                     THEN NVL(B.ITEM_QTY,0) * -1
                                                                   ELSE 0
                                                               END
                                                          ELSE 0
                                                      END SER_SALE_QTY   --정비판매수량
                                                    ,CASE WHEN A.MVT_TP IN ('11','14','15')
                                                            THEN
                                                               CASE WHEN NVL(D.SALE_TP,'01') = '01'
                                                                     THEN NVL(B.SALE_AMT,0)
                                                                   ELSE 0
                                                               END
                                                          WHEN A.MVT_TP IN ('12','13','16')
                                                            THEN
                                                               CASE WHEN NVL(D.SALE_TP,'01') = '01'
                                                                     THEN NVL(B.SALE_AMT,0) * -1
                                                                   ELSE 0
                                                               END
                                                          ELSE 0
                                                     END SER_SALE_AMT  --정비판매금액
                                                    ,CASE WHEN A.MVT_TP IN ('11','14','15')
                                                            THEN
                                                              CASE WHEN NVL(D.SALE_TP,'01') = '01'
                                                                     THEN NVL(B.MOVING_AVG_AMT,0)
                                                                   ELSE 0
                                                               END
                                                          WHEN  A.MVT_TP IN ('12','13','16')
                                                            THEN
                                                              CASE WHEN NVL(D.SALE_TP,'01') = '01'
                                                                     THEN NVL(B.MOVING_AVG_AMT,0) * -1
                                                                   ELSE 0
                                                               END
                                                          ELSE 0
                                                     END SER_SALE_BASE_AMT  --정비판매원가금액
                                                ,CASE WHEN A.MVT_TP IN ('21','23','25')
                                                        THEN
                                                          CASE WHEN B.DEBIT_CREDIT_DSTIN_CD = 'H'
                                                                 THEN NVL(B.ITEM_QTY,0)
                                                               ELSE 0
                                                           END
                                                        WHEN A.MVT_TP IN ('22','24','26')
                                                        THEN
                                                          CASE WHEN B.DEBIT_CREDIT_DSTIN_CD = 'H'
                                                                 THEN NVL(B.ITEM_QTY,0)
                                                               ELSE 0
                                                           END
                                                      ELSE 0
                                                 END STRGE_MOVE_GI_QTY   --창고이동출고수량
                                                 ,CASE WHEN A.MVT_TP IN ('21','23','25')
                                                        THEN
                                                          CASE WHEN B.DEBIT_CREDIT_DSTIN_CD = 'H'
                                                                 THEN NVL(B.MOVING_AVG_AMT,0)
                                                               ELSE 0
                                                           END
                                                       WHEN A.MVT_TP IN ('22','24','26')
                                                        THEN
                                                          CASE WHEN B.DEBIT_CREDIT_DSTIN_CD = 'H'
                                                                 THEN NVL(B.MOVING_AVG_AMT,0)
                                                               ELSE 0
                                                           END
                                                      ELSE 0
                                                 END STRGE_MOVE_GI_BASE_AMT  --창고이동출고원가금액
                                                ,CASE WHEN A.MVT_TP IN ('41')      THEN NVL(B.ITEM_QTY,0)       WHEN  A.MVT_TP IN ('42')      THEN NVL(B.ITEM_QTY,0) * -1       ELSE 0 END INT_RCV_GI_QTY   --내부출고수량
                                                ,CASE WHEN A.MVT_TP IN ('41')      THEN NVL(B.SALE_AMT,0)       WHEN  A.MVT_TP IN ('42')      THEN NVL(B.SALE_AMT,0) * -1       ELSE 0 END INT_RCV_GI_AMT  --내부출고금액
                                                ,CASE WHEN A.MVT_TP IN ('41')      THEN NVL(B.MOVING_AVG_AMT,0) WHEN  A.MVT_TP IN ('42')      THEN NVL(B.MOVING_AVG_AMT,0) * -1 ELSE 0 END INT_RCV_GI_BASE_AMT  --내부출고원가고금액
                                                ,CASE WHEN A.MVT_TP IN ('61')      THEN NVL(B.ITEM_QTY,0)       WHEN  A.MVT_TP IN ('62')      THEN NVL(B.ITEM_QTY,0) * -1       ELSE 0 END OBT_GI_QTY   --조달출고수량
                                                ,CASE WHEN A.MVT_TP IN ('61')      THEN NVL(B.SALE_AMT,0)       WHEN  A.MVT_TP IN ('62')      THEN NVL(B.SALE_AMT,0) * -1       ELSE 0 END OBT_GI_AMT  --조달출고금액
                                                ,CASE WHEN A.MVT_TP IN ('61')      THEN NVL(B.MOVING_AVG_AMT,0) WHEN  A.MVT_TP IN ('62')      THEN NVL(B.MOVING_AVG_AMT,0) * -1 ELSE 0 END OBT_GI_BASE_AMT  --조달출고원가고금액
                                                ,CASE WHEN A.MVT_TP IN ('43','45','65')      THEN NVL(B.ITEM_QTY,0)       WHEN  A.MVT_TP IN ('44','46','66')      THEN NVL(B.ITEM_QTY,0) * -1       ELSE 0 END LOSS_GI_QTY   --손실출고수량
                                                ,CASE WHEN A.MVT_TP IN ('43','45','65')      THEN NVL(B.MOVING_AVG_AMT,0) WHEN  A.MVT_TP IN ('44','46','66')      THEN NVL(B.MOVING_AVG_AMT,0) * -1 ELSE 0 END LOSS_GI_BASE_AMT  --손실출고원가고금액
                                                ,CASE WHEN A.MVT_TP IN ('47','48')      THEN NVL(B.ITEM_QTY,0)       ELSE 0 END ETC_GI_QTY   --기타출고수량
                                                ,CASE WHEN A.MVT_TP IN ('47','48')      THEN NVL(B.SALE_AMT,0)       ELSE 0 END ETC_GI_AMT  --기타출고금액
                                                ,CASE WHEN A.MVT_TP IN ('47','48')      THEN NVL(B.MOVING_AVG_AMT,0) ELSE 0 END ETC_GI_BASE_AMT  --기타출고원가고금액
                                        FROM PT_0311T A
                                                INNER JOIN PT_0312T B
                                                        ON A.DLR_CD = B.DLR_CD
                                                       AND A.MVT_DOC_YY_MM = B.MVT_DOC_YY_MM
                                                       AND A.MVT_DOC_NO    = B.MVT_DOC_NO
                                                INNER JOIN PT_0201T C
                                                   ON B.DLR_CD  = C.DLR_CD
                                                  AND B.ITEM_CD = C.ITEM_CD
                                                LEFT OUTER JOIN (
                                                        SELECT   A.DLR_CD
                                                                ,A.PAR_SALE_ORD_NO
                                                                ,A.SALE_TP
                                                                ,B.PAR_SALE_ORD_LINE_NO
                                                                ,B.ITEM_CD
                                                          FROM   DMSDB.PT_0521T A    --부품판매헤더정보
                                                                   INNER JOIN DMSDB.PT_0522T B    --부품판매품목정보
                                                                      ON A.DLR_CD          = B.DLR_CD
                                                                     AND A.PAR_SALE_ORD_NO = B.PAR_SALE_ORD_NO
                                                        WHERE    A.DLR_CD = #{sDlrCd}
                                                       ) D
                                                     ON A.DLR_CD          = D.DLR_CD
                                                    AND B.REF_DOC_NO      = D.PAR_SALE_ORD_NO
                                                    AND B.REF_DOC_LINE_NO = D.PAR_SALE_ORD_LINE_NO
                                        WHERE  A.DLR_CD = #{sDlrCd}
                                        AND  A.MVT_TP NOT IN ('23','24')  --예류 및 예류 취소는 마감에서 제외한다.
                                        AND  A.MVT_DOC_YY_MM between #{sAccYyMmFr} and #{sAccYyMmTo}
                                        <if test='sItemCd != null and sItemCd != ""'>
                                            AND B.ITEM_CD LIKE '%'||#{sItemCd}||'%'
                                        </if>
                                        <if test='sItemNm != null and sItemNm != ""'>
                                            AND C.ITEM_NM LIKE '%'||#{sItemNm}||'%'
                                        </if>
                                        <if test='sStrgeCd != null and sStrgeCd != ""'>
                                            AND B.STRGE_CD = #{sStrgeCd}
                                        </if>        <!-- 창고코드 -->
                                        <if test='sItemDstinCd != null and sItemDstinCd != ""'>
                                            AND C.ITEM_DSTIN_CD = #{sItemDstinCd}
                                        </if>        <!-- 품목유형 -->
                                        AND C.ITEM_DSTIN_CD NOT IN ('20','04')
                                         ) A
                                       GROUP BY  A.DLR_CD
                                                ,A.PLT_CD
                                                ,A.STRGE_CD
                                                ,A.ITEM_CD
                                     ) A
                                ) C
                             ON A.DLR_CD = C.DLR_CD
                            AND A.PLT_CD = C.PLT_CD
                            AND A.STRGE_CD = C.STRGE_CD
                            AND A.ITEM_CD = C.ITEM_CD
                        LEFT OUTER JOIN PT_0901T D
                             ON A.DLR_CD    = D.DLR_CD
                            AND A.PLT_CD    = D.PLT_CD
                            AND A.STRGE_CD  = D.STRGE_CD
                            AND D.YY_MM      = TO_CHAR(TO_DATE(#{sAccYyMmFr}||'01','YYYYMMDD'),'YYYYMM')
                            AND A.ITEM_CD   = D.ITEM_CD
                        LEFT OUTER JOIN PT_0208T E
                             ON A.DLR_CD   = E.DLR_CD
                            AND A.STRGE_CD = E.STRGE_CD
                            AND A.ITEM_CD  = E.ITEM_CD
                        LEFT OUTER JOIN PT_0901T F  --기초재고(검색 조건 시작점이 현재월인경우)
                             ON A.DLR_CD    = F.DLR_CD
                            AND A.PLT_CD    = F.PLT_CD
                            AND A.STRGE_CD  = F.STRGE_CD
                            AND F.YY_MM     = TO_CHAR(ADD_MONTHS(TO_DATE(#{sAccYyMmFr}||'01','YYYYMMDD'),-1),'YYYYMM')
                            AND A.ITEM_CD   = F.ITEM_CD
                        LEFT OUTER JOIN PT_0901T G  --기말재고
                             ON A.DLR_CD    = G.DLR_CD
                            AND A.PLT_CD    = G.PLT_CD
                            AND A.STRGE_CD  = G.STRGE_CD
                            AND G.YY_MM      = TO_CHAR(TO_DATE(#{sAccYyMmTo}||'01','YYYYMMDD'),'YYYYMM')
                            AND A.ITEM_CD   = G.ITEM_CD
                         LEFT OUTER JOIN PT_0902T H  --TO에 대한 이평가
                             ON A.DLR_CD   = H.DLR_CD
                            AND A.PLT_CD   = H.PLT_CD
                            AND A.STRGE_CD = H.STRGE_CD
                            AND A.ITEM_CD  = H.ITEM_CD
                            AND H.YY_MM    = #{sAccYyMmTo}
                                --GROUP BY C.DLR_CD, C.STRGE_CD
                         WHERE B.ITEM_DSTIN_CD NOT IN ('20','04')
                          <if test='sStrgeCd != null and sStrgeCd != ""'>
                              AND A.STRGE_CD = #{sStrgeCd}
                          </if>        <!-- 창고코드 -->
                          ) T1
          GROUP BY T1.DLR_CD, T1.STRGE_CD
    )
    </select>

    <!-- 월마감 수동 호출 -->
    <update id="executeManualParMmDdlnLoopDlrCdProcedure" parameterType="StockDdlnSearchVO" statementType="CALLABLE">
        {CALL SP_PAR_MM_DDLN_LOOP_DLRCD(
              'DMS Program'
            , #{sRegUsrId, mode=IN, jdbcType=VARCHAR}
            ,'Y'
            , #{sAccYyMm, mode=IN, jdbcType=VARCHAR}
            , #{sDlrCd, mode=IN, jdbcType=VARCHAR}
        )}
    </update>
</mapper>