<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="chn.bhmc.dms.bat.par.ism.service.dao.BatchPartsIssueReadyActionDAO">

    <!-- 부품요청상세 정보 목록을 조회한다. -->
    <select id="selectIssueReqDetailResvsBatByCondition" parameterType="BatIssueReqSearchVO" resultType="BatIssueReqDetailVO">
        /* [chn.bhmc.dms.bat.par.service.dao.BatchPartsIssueReadyActionDAO.selectIssueReqDetailResvsBatByCondition] */
        SELECT * FROM (
            SELECT ROWNUM AS RNUM, T1.* FROM (
                SELECT
                    A.DLR_CD
                    ,A.PAR_REQ_DOC_NO
                    ,A.PAR_REQ_DOC_LINE_NO
                    ,A.PAR_REQ_STAT_CD
                    ,G.PURC_REQ_NO
                    ,A.CANC_YN
                    ,A.PAR_GI_TP
                    ,A.RO_DOC_NO
                    ,A.RO_LINE_NO
                    ,A.RESV_DOC_NO
                    ,A.RESV_DOC_LINE_NO
                    ,B.GI_STRGE_CD AS GR_STRGE_CD
                    ,NVL(A.GI_STRGE_CD,B.GI_STRGE_CD) AS GI_STRGE_CD
                    ,NVL(A.GI_LOC_CD,B.LOC_CD) AS GI_LOC_CD
                    ,A.ITEM_CD AS DB_ITEM_CD
                    ,A.ITEM_CD
                    ,I.RETL_PRC AS ITEM_PRC
                    ,(I.RETL_PRC * A.END_QTY) AS ITEM_AMT
                    ,(I.RETL_PRC * A.END_QTY) - (I.PURC_PRC * A.END_QTY * FN_GET_VAT(null,'ALL')) AS TAX_DDCT_AMT
                    ,(I.RETL_PRC * A.END_QTY * FN_GET_VAT(null,'ALL')) AS TAX_AMT
                    ,A.REQ_QTY
                    ,NVL(B.STOCK_UNIT_CD,'EA') AS UNIT_CD
                    ,A.END_QTY
                    ,A.REQ_STRGE_CD
                    ,A.REG_DT
                    ,A.REG_USR_ID
                    ,A.UPDT_DT
                    ,A.UPDT_USR_ID
                    ,B.ITEM_NM
                    ,NVL(C.AVLB_STOCK_QTY,0) + NVL(C.RESV_STOCK_QTY,0) - NVL(C.BORROW_QTY,0) + NVL(C.RENT_QTY,0) AS TOT_STOCK_QTY
                    ,NVL(C.AVLB_STOCK_QTY,0) AS AVLB_STOCK_QTY
                    ,NVL(C.RESV_STOCK_QTY,0) AS RESV_STOCK_QTY
                    ,NVL(C.CLAM_STOCK_QTY,0) AS CLAM_STOCK_QTY
                    ,NVL(C.GR_SCHE_QTY,0) AS GR_SCHE_QTY
                    ,NVL(C.GI_SCHE_QTY,0) AS GI_SCHE_QTY
                    ,CASE WHEN A.PAR_GI_TP = 'SR' AND NVL(A.READY_STAT_CD, '01') != '01' THEN A.END_QTY
                          WHEN A.PAR_GI_TP = 'SP' AND NVL(A.READY_STAT_CD, '01') = '01' THEN 0
                          WHEN A.PAR_GI_TP = 'SP' AND NVL(A.READY_STAT_CD, '01') != '01' THEN A.END_QTY
                          WHEN A.PAR_GI_TP = 'OT' AND NVL(A.READY_STAT_CD, '01') != '01' THEN A.END_QTY
                    ELSE A.REQ_QTY
                    END AS RESV_QTY
                    ,A.REG_DT AS PURC_REQ_DT
                    ,NVL(F.GI_DOC_NO,'-') AS GI_DOC_NO
                    ,'01' AS GI_DOC_TP
                    ,'01' AS GI_DOC_STAT_CD
                    ,F.MVT_DOC_YY_MM
                    ,F.MVT_DOC_NO
                    ,F.MVT_DOC_LINE_NO
                    ,H.CUST_CD
                    ,H.CUST_NM
                    ,H.SER_PRSN_ID
                    ,H.VIN_NO
                    ,H.CAR_NO
                    ,'Y' AS DB_YN
                    ,F.GI_STAT_CD
                    ,F.RECEIVE_ID
                    ,F.GI_DT
                    ,F.RECEIVE_DT
                    ,F.RETURN_ID
                    ,F.RETURN_DT
                    ,F.CANC_ID
                    ,F.CANC_DT
                    ,F.GI_CAU_NM
                    ,A.ETC_GI_TP
                    ,A.PKG_ITEM_CD
                    ,CASE WHEN A.PAR_REQ_STAT_CD = '03' THEN A.END_QTY
                    ELSE 0
                    END AS RETURN_PARTS_QTY
                    ,NVL(NVL(J.MOVING_AVG_PRC, B.MOVING_AVG_PRC),0) AS MOVING_AVG_PRC
                    ,A.REQ_QTY * NVL(NVL(J.MOVING_AVG_PRC, B.MOVING_AVG_PRC),0) AS MOVING_AVG_AMT
                    ,NVL(A.READY_STAT_CD ,'01') AS READY_STAT_CD
                    ,A.READY_DOC_NO
                    ,A.READY_REMARK
                    ,A.READY_USR_ID
                    ,A.READY_REG_DT
                    ,A.BORROW_DOC_NO
                    ,A.BORROW_LINE_NO
                    ,A.BORROW_TP
                    ,A.BORROW_STAT_CD
                    ,A.BORROW_QTY
                    ,A.BORROW_USR_ID
                    ,A.BORROW_REG_DT
                    ,A.ETC_RV_DOC_NO
                    ,A.ETC_RV_LINE_NO
                    ,A.ETC_RV_STAT_CD
                    ,A.ETC_RV_QTY
                    ,A.ETC_RV_PRSN_ID
                    ,A.ETC_RV_REG_DT
                FROM PT_0502T A
                LEFT JOIN PT_0201T B ON A.DLR_CD = B.DLR_CD AND A.ITEM_CD = B.ITEM_CD
                LEFT JOIN PT_0301T C ON A.DLR_CD = C.DLR_CD AND A.ITEM_CD = C.ITEM_CD AND A.GI_STRGE_CD = C.STRGE_CD
                LEFT JOIN PT_0302T D ON A.DLR_CD = D.DLR_CD AND A.ITEM_CD = D.ITEM_CD AND A.GI_STRGE_CD = D.STRGE_CD AND A.RESV_DOC_NO = D.RESV_DOC_NO AND A.RESV_DOC_LINE_NO = D.RESV_DOC_LINE_NO
                LEFT JOIN PT_0512T F ON A.DLR_CD = F.DLR_CD AND A.PAR_REQ_DOC_NO = F.PAR_REQ_DOC_NO AND A.RO_LINE_NO = F.RO_DOC_LINE_NO
                LEFT JOIN PT_0411T G ON A.DLR_CD = G.DLR_CD AND A.RO_DOC_NO = G.REF_DOC_NO AND A.RO_LINE_NO = G.REF_DOC_LINE_NO AND A.ITEM_CD = G.ITEM_CD
                LEFT JOIN PT_0501T H ON A.DLR_CD = H.DLR_CD AND A.PAR_REQ_DOC_NO = H.PAR_REQ_DOC_NO
                LEFT OUTER JOIN (
                    SELECT
                        DLR_CD
                        ,STRGE_CD
                        ,ITEM_CD
                        ,MAX(PRC_TP) AS PRC_TP
                        ,MAX(LINE_NO) AS LINE_NO
                        ,MAX(NVL(SALE_PRC_AMT,0)) AS PURC_PRC
                        ,MAX(NVL(RETL_PRC,0)) AS RETL_PRC
                    FROM PT_0214T
                    WHERE DLR_CD = #{sDlrCd}
                    AND DEL_YN != 'Y'
                    GROUP BY DLR_CD, STRGE_CD, ITEM_CD
                ) I ON A.DLR_CD = I.DLR_CD AND A.REQ_STRGE_CD = I.STRGE_CD AND A.ITEM_CD= I.ITEM_CD
                LEFT OUTER JOIN PT_0208T J ON A.DLR_CD = J.DLR_CD AND A.REQ_STRGE_CD = J.STRGE_CD AND A.ITEM_CD = J.ITEM_CD
                WHERE A.DLR_CD = #{sDlrCd}
                <if test='sReadyStatCd != null and sReadyStatCd != ""'>
                    <choose>
                        <when test='@org.apache.commons.lang3.StringUtils@contains(sReadyStatCd,"RE01")'>
                             AND A.READY_STAT_CD IN ('01','02','03','05','06')
                        </when>
                        <when test='@org.apache.commons.lang3.StringUtils@contains(sReadyStatCd,"RE02")'>
                             AND A.READY_STAT_CD IN ('02','03','05','06')
                        </when>
                        <when test='@org.apache.commons.lang3.StringUtils@contains(sReadyStatCd,"RE03")'>
                             AND A.READY_STAT_CD IN ('01','03')
                        </when>
                        <otherwise>
                             AND A.READY_STAT_CD = #{sReadyStatCd}
                        </otherwise>
                    </choose>
                </if>
                <if test='sItemCd != null and sItemCd != ""'>
                    AND A.ITEM_CD = #{sItemCd}
                </if>
                <if test='sParGiTp != null and sParGiTp != ""'>
                    AND A.PAR_GI_TP = #{sParGiTp}
                </if>
                AND A.PAR_GI_TP IN ('SR','SP','OT')<!-- 예류만 -->
                AND TRUNC(SYSDATE - A.READY_REG_DT) <![CDATA[>=]]> 0 <!-- 예류기간이 현재시간보다 작은 것 -->
                AND EXISTS (SELECT *
                              FROM (SELECT B.MVT_TP
                                            ,A.*
                                       FROM PT_0312T A
                                              INNER JOIN PT_0311T B
                                                ON A.DLR_CD = B.DLR_CD
                                               AND A.MVT_DOC_YY_MM = B.MVT_DOC_YY_MM
                                               AND A.MVT_DOC_NO = B.MVT_DOC_NO
                                              INNER JOIN PT_0102T C
                                                ON B.DLR_CD = C.DLR_CD
                                               AND B.MVT_TP = C.MVT_TP
                                      WHERE B.MVT_TP = '23') EX
                              WHERE  A.DLR_CD = EX.DLR_CD
                                AND  A.PAR_REQ_DOC_NO = EX.REF_DOC_NO
                                AND  A.PAR_REQ_DOC_LINE_NO = EX.REF_DOC_LINE_NO
                             )
            ) T1
            WHERE T1.END_QTY <![CDATA[<=]]> T1.RESV_STOCK_QTY
        )
    </select>

    <!-- 부품요청헤더 정보를 수정한다. -->
    <update id="updateIssueReqBat" parameterType="BatIssueReqVO">
    /* [chn.bhmc.dms.bat.par.service.dao.BatchPartsIssueReadyActionDAO.updateIssueReq] */
        /* [chn.bhmc.dms.par.ism.service.dao.IssueReqDAO.updateIssueReq] */
        UPDATE PT_0501T SET
            UPDT_DT = SYSDATE
            ,UPDT_USR_ID = #{ updtUsrId }
            ,CANC_YN = #{ cancYn }
            ,READY_STAT_CD = #{ readyStatCd }
        WHERE DLR_CD = #{dlrCd}
        AND PAR_REQ_DOC_NO = #{parReqDocNo}
    </update>
    <!-- 구매요청상세 정보를 수정한다. -->
    <update id="updateIssueReqDetailBat" parameterType="BatIssueReqDetailVO">
        /* [chn.bhmc.dms.bat.par.service.dao.BatchPartsIssueReadyActionDAO.updateIssueReqDetail] */
        UPDATE PT_0502T SET
            UPDT_DT = SYSDATE
            ,UPDT_USR_ID = #{ updtUsrId }
            ,CANC_YN = #{ cancYn }
            ,READY_STAT_CD = #{ readyStatCd }
            ,READY_CANC_USR_ID = #{ readyCancUsrId }
            ,READY_CANC_REMARK = #{ readyCancRemark }
            ,READY_CANC_REG_DT = SYSDATE
        WHERE DLR_CD = #{dlrCd}
        AND PAR_REQ_DOC_NO = #{parReqDocNo}
        AND PAR_REQ_DOC_LINE_NO = #{parReqDocLineNo}
        AND PAR_GI_TP = #{parGiTp}
        AND ITEM_CD = #{itemCd}

    </update>

    <!-- 수불유형 정보를 조회한다. -->
    <select id="selectMovementTypeBatByKey" parameterType="map" resultType="BatMovementTypeVO">
        /* [chn.bhmc.dms.bat.par.service.dao.BatchPartsIssueReadyActionDAO.selectMovementTypeByKey] */
        SELECT
            A.DLR_CD                    <!-- 딜러코드 -->
            ,A.MVT_TP                   <!-- 수불유형-->
            ,A.MVT_TP_NM                <!-- 수불유형명-->
            ,A.BASE_MVT_TP_YN           <!-- 기본수불유형여부-->
            ,A.CEN_MVT_YN               <!-- 센터수불여부-->
            ,A.STRGE_MVT_YN             <!-- 창고수불여부-->
            ,A.MVT_GR_GI_TP             <!-- 수불입출고유형-->
            ,A.STOCK_CALC_TP            <!-- 재고정산유형-->
            ,A.COMBI_MVT_TP             <!-- 상대수불유형-->
            ,A.CANC_MVT_YN              <!-- 취소수불여부-->
            ,A.PROCESS_TP               <!-- 프로세스 유형-->
            ,A.COST_CEN_REQS_YN         <!-- 코스트센터 필수여부-->
            ,A.MVT_REASON_REQS_YN       <!-- 수불사유필수여부 -->
            ,A.USE_YN                   <!-- USE_YN -->
            ,A.DMND_ANALYZE_YN          <!-- 수요분석여부 -->
            ,A.OTHER_GR_YN              <!-- 기타입고여부 -->
            ,A.OTHER_GI_YN              <!-- 기타출고여부 -->
            ,A.STOCK_STAT_CD            <!-- 재고상태코드 -->
            ,A.RECT_GR_GI_DT_UPDT_YN    <!-- 최근입출고일자수정여부 -->
            ,A.REMARK                   <!-- 비고-->
            ,A.REG_USR_ID               <!-- 등록자ID-->
            ,A.REG_DT                   <!-- 등록일자-->
            ,A.UPDT_USR_ID              <!-- 수정자ID-->
            ,A.UPDT_DT                  <!-- 수정일자 -->
        FROM PT_0102T A
        WHERE A.DLR_CD = #{dlrCd}
        AND A.MVT_TP = #{mvtTp}
    </select>

    <!-- 상대수불유형 정보를 조회한다. -->
    <select id="selectCombiMovementTypeByKey" parameterType="map" resultType="BatMovementTypeVO">
        /* [chn.bhmc.dms.bat.par.service.dao.BatchPartsIssueReadyActionDAO.selectCombiMovementTypeByKey] */
        SELECT
            A.DLR_CD
            ,A.MVT_TP
            ,A.MVT_TP_NM
            ,A.BASE_MVT_TP_YN
            ,A.CEN_MVT_YN
            ,A.STRGE_MVT_YN
            ,A.MVT_GR_GI_TP
            ,A.STOCK_CALC_TP
            ,A.COMBI_MVT_TP
            ,A.CANC_MVT_YN
            ,A.PROCESS_TP
            ,A.COST_CEN_REQS_YN
            ,A.MVT_REASON_REQS_YN
            ,A.USE_YN
            ,A.DMND_ANALYZE_YN
            ,A.OTHER_GR_YN
            ,A.OTHER_GI_YN
            ,A.STOCK_STAT_CD
            ,A.RECT_GR_GI_DT_UPDT_YN
            ,A.REMARK
            ,A.REG_USR_ID
            ,A.REG_DT
            ,A.UPDT_USR_ID
            ,A.UPDT_DT
        FROM   PT_0102T A
        WHERE  A.DLR_CD = #{dlrCd}
          AND  A.COMBI_MVT_TP = #{mvtTp}
    </select>

    <!-- 수불문서 정보를 추가한다. -->
    <insert id="insertMvtDocBat" parameterType="BatMvtDocVO">
    /* [chn.bhmc.dms.bat.par.service.dao.BatchPartsIssueReadyActionDAO.insertMvtDocBat] */
    INSERT INTO PT_0311T (
        DLR_CD              <!-- 딜러코드 -->
        ,MVT_DOC_YY_MM      <!-- 수불문서번호년월일자 -->
        ,MVT_DOC_NO         <!-- 수불문서번호 -->
        ,STMT_PROC_DT       <!-- 전표처리일자 -->
        ,SYS_PROC_DT        <!-- 시스템처리일자 -->
        ,MVT_TP             <!-- 수불유형 -->
        ,BIZ_AREA_CD        <!-- 사업장코드 -->
        ,BP_CD              <!-- 거래처코드 -->
        ,CUST_NO            <!-- 고객번호 -->
        ,STMT_TXT           <!-- 전표텍스트 -->
        ,REG_USR_ID
        ,REG_DT
    ) VALUES (
         #{dlrCd}
        ,#{mvtDocYyMm}
        ,#{mvtDocNo}
        ,sysdate
        ,sysdate
        ,#{mvtTp}
        ,#{bizAreaCd}
        ,#{bpCd}
        ,#{custNo}
        ,#{stmtTxt}
        ,#{regUsrId}
        ,sysdate
    )

    </insert>

    <!-- 수불문서품목 정보를 추가한다. -->
    <insert id="insertMvtDocItemBat" parameterType="BatMvtDocVO">
    /* [chn.bhmc.dms.bat.par.service.dao.BatchPartsIssueReadyActionDAO.insertMvtDocItem] */
    INSERT INTO PT_0312T (
        DLR_CD
        ,MVT_DOC_YY_MM              <!-- 수불문서년월일자 -->
        ,MVT_DOC_NO                 <!-- 수불문서번호 -->
        ,MVT_DOC_LINE_NO            <!-- 수불문서라인번호 -->
        ,CANC_STMT_YN               <!-- 취소전표여부 -->
        ,AUTO_CRE_YN                <!-- 자동생성여부 -->
        ,PLT_CD                     <!-- 센터코드 -->
        ,STRGE_CD                   <!-- 창고코드 -->
        ,LOC_CD                     <!-- 위치코드 -->
        ,DEBIT_CREDIT_DSTIN_CD      <!-- 차변대변구분코드 -->
        ,ITEM_CD                    <!-- 부품코드 -->
        ,ITEM_QTY                   <!-- 부품수량 -->
        ,ITEM_UNIT_CD               <!-- 부품단위 -->
        ,REF_DOC_TP                 <!-- 참조문서유형 -->
        ,REF_DOC_NO                 <!-- 참조문서번호 -->
        ,REF_DOC_LINE_NO            <!-- 참조문서라인번호 -->
        ,CANC_MVT_DOC_NO            <!-- 취소수불문서번호 -->
        ,CANC_MVT_DOC_YY_MM         <!-- 취소수불문서년월일자 -->
        ,CANC_MVT_DOC_LINE_NO       <!-- 취소수불라인번호 -->
        ,CURR_CD                    <!-- 통화코드 -->
        ,STD_PRC                    <!-- 표준단가 -->
        ,STD_AMT                    <!-- 표준금액 -->
        ,SALE_PRC                   <!-- 판매단가 -->
        ,SALE_TAX_DDCT_PRC          <!-- 판매단가(세금미포함) -->
        ,SALE_AMT                   <!-- 판매금액 -->
        ,SALE_TAX_DDCT_AMT          <!-- 판매금액(세금미포함) -->
        ,MOVING_AVG_PRC             <!-- 이동평균단가 -->
        ,MOVING_AVG_TAX_DDCT_PRC    <!-- 이동평균단가(세금미포함) -->
        ,MOVING_AVG_AMT             <!-- 이동평균금액 -->
        ,MOVING_AVG_TAX_DDCT_AMT    <!-- 이동평균금액(세금미포함) -->
        ,PURC_PRC                   <!-- 구매단가 -->
        ,PURC_TAX_DDCT_PRC          <!-- 구매단가(세금미포함) -->
        ,PURC_AMT                   <!-- 구매금액 -->
        ,PURC_TAX_DDCT_AMT          <!-- 구매금액(세금미포함) -->
        ,DDLN_YN                    <!-- 마감여부 -->
        ,MVT_REASON_CONT            <!-- 수불사유내용 -->
        ,STMT_TXT                   <!-- 전표텍스트 -->
        ,REG_USR_ID
        ,REG_DT
    ) VALUES (
         #{dlrCd}
        ,#{mvtDocYyMm}
        ,#{mvtDocNo}
        ,#{mvtDocLineNo}
        ,#{cancStmtYn}
        ,#{autoCreYn}
        ,#{pltCd}
        ,#{strgeCd}
        ,#{locCd}
        ,#{debitCreditDstinCd}
        ,#{itemCd}
        ,#{itemQty}
        ,NVL(#{itemUnitCd},'EA')
        ,#{refDocTp}
        ,#{refDocNo}
        ,#{refDocLineNo}
        ,#{cancMvtDocNo}
        ,#{cancMvtDocYyMm}
        ,#{cancMvtDocLineNo}
        ,NVL(#{currCd},'CNY')
        ,round(NVL(#{stdPrc},0),2)
        ,round(NVL(#{stdAmt},0),2)
        ,round(NVL(#{salePrc},0),2)
        ,round(NVL(#{saleTaxDdctPrc},0),2)
        ,round(NVL(#{saleAmt},0),2)
        ,round(NVL(#{saleTaxDdctAmt},0),2)
        ,round(NVL(#{movingAvgPrc},0),2)
        ,round(NVL(#{movingAvgTaxDdctPrc},0),2)
        ,round(NVL(#{movingAvgAmt},0),2)
        ,round(NVL(#{movingAvgTaxDdctAmt},0),2)
        ,round(NVL(#{purcPrc},0),2)
        ,round(NVL(#{purcTaxDdctPrc},0),2)
        ,round(NVL(#{purcAmt},0),2)
        ,round(NVL(#{purcTaxDdctAmt},0),2)
        ,#{ddlnYn}
        ,#{mvtReasonCont}
        ,#{stmtTxt}
        ,#{regUsrId}
        ,sysdate
    )

    </insert>

    <!-- 재고정보를 조회한다. -->
    <select id="selectStockInOutBatByKey" resultType="BatStockInOutVO">
    /* [chn.bhmc.dms.bat.par.service.dao.BatchPartsIssueReadyActionDAO.selectStockInOutByKey] */
        SELECT
            A.DLR_CD
            ,A.PLT_CD
            ,A.STRGE_CD
            ,A.ITEM_CD
            ,B.ITEM_NM
            ,B.BRAND_CD
            ,B.STOCK_UNIT_CD
            ,NVL(A.AVLB_STOCK_QTY,0) + NVL(A.RESV_STOCK_QTY,0) - NVL(A.BORROW_QTY,0) + NVL(A.RENT_QTY,0) AS STOCK_QTY
            ,NVL(A.AVLB_STOCK_QTY,0) AS AVLB_STOCK_QTY
            ,NVL(A.RESV_STOCK_QTY,0) AS RESV_STOCK_QTY
            ,NVL(A.CLAM_STOCK_QTY,0) AS CLAM_STOCK_QTY
            ,NVL(A.GR_SCHE_QTY,0) AS GR_SCHE_QTY
            ,NVL(A.GI_SCHE_QTY,0) AS GI_SCHE_QTY
            ,A.REG_USR_ID
            ,A.REG_DT
            ,A.UPDT_USR_ID
            ,A.UPDT_DT
            ,A.STOCK_LOCK_YN
            ,NVL(A.BORROW_QTY,0) AS BORROW_QTY
            ,NVL(A.RENT_QTY,0) AS RENT_QTY
            ,NVL(A.STOCK_AMT,0) AS STOCK_AMT
            ,NVL(A.STOCK_TAX_DDCT_AMT,0) AS STOCK_TAX_DDCT_AMT
            ,B.BP_CD
            ,C.BP_NM
            ,C.BP_EN_NM
            ,B.ETC1
            ,B.ETC2
            ,B.ETC_CD1
            ,B.ETC_CD2
            ,B.END_YN
            ,(
                SELECT
                    MAX(K1.PURC_PRC)
                FROM (
                    SELECT
                        T1.ITEM_CD
                        ,T1.DLR_CD
                        ,LAST_VALUE(T1.PURC_PRC) OVER(PARTITION BY T1.ITEM_CD ORDER BY T2.PURC_REG_DT ASC ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS PURC_PRC
                    FROM PT_0422T T1
                    INNER JOIN PT_0421T T2 ON T1.DLR_CD = T2.DLR_CD AND T1.PURC_ORD_NO = T2.PURC_ORD_NO
                ) K1
                GROUP BY K1.ITEM_CD, K1.DLR_CD
                HAVING K1.DLR_CD = A.DLR_CD AND K1.ITEM_CD = A.ITEM_CD
            ) AS PURC_PRC
            ,(SELECT NVL(MOVING_AVG_PRC, B.MOVING_AVG_PRC) FROM PT_0208T WHERE DLR_CD = A.DLR_CD AND STRGE_CD = A.STRGE_CD AND ITEM_CD = A.ITEM_CD) AS MOVING_AVG_PRC
            ,NVL(A.STOCK_AMT,0) AS STOCK_AMT
            ,B.LAST_GR_DT
        FROM PT_0301T A
        LEFT JOIN PT_0201T B ON A.DLR_CD = B.DLR_CD AND A.ITEM_CD = B.ITEM_CD
        LEFT JOIN PT_0211T C ON A.DLR_CD = C.DLR_CD AND B.BP_CD  = C.BP_CD
        WHERE A.DLR_CD = #{dlrCd}
        AND A.PLT_CD = #{pltCd}
        AND A.STRGE_CD = #{strgeCd}
        AND A.ITEM_CD = #{itemCd}

    </select>
    <!-- 현재고 정보를 추가한다. -->
    <insert id="insertStockInOutBat" parameterType="BatStockInOutVO">
    /* [chn.bhmc.dms.bat.par.service.dao.BatchPartsIssueReadyActionDAO.insertStockInOut] */
        INSERT INTO PT_0301T (
            DLR_CD
            ,PLT_CD             <!-- 센터코드 -->
            ,STRGE_CD           <!-- 창고코드 -->
            ,ITEM_CD            <!-- 부품코드 -->
            ,AVLB_STOCK_QTY     <!-- 실재고량(가용) -->
            ,RESV_STOCK_QTY     <!-- 예류재고량(예약) -->
            ,CLAM_STOCK_QTY     <!-- 보류재고량 -->
            ,GR_SCHE_QTY        <!-- 입고예정수량 -->
            ,GI_SCHE_QTY        <!-- 출고예정수량 -->
            ,BORROW_QTY         <!-- 차입수량(차용) -->
            ,RENT_QTY           <!-- 대여수량(차출수량) -->
            ,REG_USR_ID
            ,REG_DT
        ) VALUES (
            #{dlrCd}
            ,#{pltCd}
            ,#{strgeCd}
            ,#{itemCd}
            ,NVL(#{avlbStockQty},0)
            ,NVL(#{resvStockQty},0)
            ,NVL(#{clamStockQty},0)
            ,NVL(#{grScheQty},0)
            ,NVL(#{giScheQty},0)
            ,NVL(#{borrowQty},0)
            ,NVL(#{rentQty},0)
            ,#{regUsrId}
            ,sysdate
        )
    </insert>
    <!-- 현재고의 재고정보를 수정한다. -->
    <update id="updateStockInOutBat" parameterType="BatStockInOutVO">
    /* [chn.bhmc.dms.bat.par.service.dao.BatchPartsIssueReadyActionDAO.updateStockInOut] */
        UPDATE PT_0301T SET
            AVLB_STOCK_QTY = NVL(#{avlbStockQty},0)     <!-- 실재고량(가용) -->
            ,RESV_STOCK_QTY = NVL(#{resvStockQty},0)    <!-- 예류재고량 -->
            ,CLAM_STOCK_QTY = NVL(#{clamStockQty},0)    <!-- 보류재고량 -->
            ,BORROW_QTY = NVL(#{borrowQty},0)           <!-- 차입재고량 -->
            ,RENT_QTY = NVL(#{rentQty},0)               <!-- 대여재고량(차출) -->
            ,STOCK_AMT = NVL(#{stockAmt},0)             <!-- 재고금액 -->
            ,STOCK_TAX_DDCT_AMT = NVL(#{stockTaxDdctAmt},0)             <!-- 재고금액(세금미포함) -->
            ,UPDT_USR_ID = #{regUsrId}
            ,UPDT_DT = sysdate
        WHERE DLR_CD = #{dlrCd}
        AND PLT_CD = #{pltCd}
        AND STRGE_CD = #{strgeCd}
        AND ITEM_CD = #{itemCd}
    </update>

    <!-- 수불품목 참조번호에 해당하는 정보를 조회한다. -->
    <select id="selectMvtDocItemByRefInfo" resultType="BatMvtDocItemVO">
    /* [chn.bhmc.dms.bat.par.service.dao.BatchPartsIssueReadyActionDAO.selectMvtDocItemByRefInfo] */
    SELECT
        A.DLR_CD
        ,A.MVT_DOC_YY_MM
        ,A.MVT_DOC_NO
        ,A.MVT_DOC_LINE_NO
        ,A.CANC_STMT_YN
        ,A.AUTO_CRE_YN
        ,A.PLT_CD
        ,A.STRGE_CD
        ,A.LOC_CD
        ,A.DEBIT_CREDIT_DSTIN_CD
        ,A.ITEM_CD
        ,A.ITEM_QTY
        ,A.ITEM_UNIT_CD
        ,A.REF_DOC_TP
        ,A.REF_DOC_NO
        ,A.REF_DOC_LINE_NO
        ,A.CANC_MVT_DOC_NO
        ,A.CANC_MVT_DOC_YY_MM
        ,A.CANC_MVT_DOC_LINE_NO
        ,A.CURR_CD
        ,A.STD_PRC
        ,A.STD_AMT
        ,A.SALE_PRC
        ,A.SALE_TAX_DDCT_PRC
        ,A.SALE_AMT
        ,A.SALE_TAX_DDCT_AMT
        ,A.MOVING_AVG_PRC
        ,A.MOVING_AVG_TAX_DDCT_PRC
        ,A.MOVING_AVG_AMT
        ,A.MOVING_AVG_TAX_DDCT_AMT
        ,A.PURC_PRC
        ,A.PURC_TAX_DDCT_PRC
        ,A.PURC_AMT
        ,A.PURC_TAX_DDCT_AMT
        ,A.DDLN_YN
        ,A.MVT_REASON_CONT
        ,A.STMT_TXT
        ,A.REG_USR_ID
        ,A.REG_DT
        ,A.UPDT_USR_ID
        ,A.UPDT_DT
    FROM PT_0312T A
    WHERE A.DLR_CD = #{dlrCd}
    AND A.MVT_DOC_NO = #{refDocNo}
    AND A.MVT_DOC_LINE_NO = #{refDocLineNo}

    </select>

    <!-- 시스템 딜러 정보를 조회한다. -->
    <select id="selectSysOwnerDealerByCondition" parameterType="map" resultType="BatSysOwnerDealerVO">
        /* [chn.bhmc.dms.bat.par.service.dao.BatchPartsIssueReadyActionDAO.selectSysOwnerDealerByCondition] */
        SELECT
            DLR_CD
            ,DLR_NM
            ,SYS_OWNER_YN
        FROM CM_0101T
        WHERE SYS_OWNER_YN = #{sysOwnerYn}
        OR USE_CENTER_DMS_YN = 'Y'
    </select>

    <!-- 수불문서 키를 조회한다. -->
    <select id="selectMvtDocNoBatByKey" resultType="BatMvtDocVO">
    /* [chn.bhmc.dms.bat.par.service.dao.BatchPartsIssueReadyActionDAO.selectMvtDocNoBatByKey] */
        SELECT
            'MD'||TO_CHAR(SYSDATE,'yyyyMM')||LPAD(COUNT(0)+1,8,'0') AS MVT_DOC_NO
            ,TO_CHAR(SYSDATE,'yyyyMM') AS MVT_DOC_YY_MM
        FROM PT_0311T
        WHERE MVT_DOC_YY_MM LIKE TO_CHAR(SYSDATE,'yyyyMM')
        AND DLR_CD = #{dlrCd}

    </select>


</mapper>