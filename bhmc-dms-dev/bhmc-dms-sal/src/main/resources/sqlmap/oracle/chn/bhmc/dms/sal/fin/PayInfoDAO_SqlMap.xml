<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="chn.bhmc.dms.sal.fin.service.dao.PayInfoDAO">

    <!-- 목록 갯수  -->
    <select id="selectPayInfosByConditionCnt" parameterType="PayInfoSearchVO" resultType="int">
    /* [chn.bhmc.dms.sal.fin.service.dao.PayInfoDAO.selectPayInfosByConditionCnt] */
        SELECT COUNT(1)
          FROM (
                SELECT A.*
                     , (
                         SELECT Z.CONTRACT_STAT_CD
                           FROM SA_0201T Z
                          WHERE Z.DLR_CD = A.DLR_CD
                            AND Z.CONTRACT_NO = A.JOB_CONTRACT_NO
                       ) AS CONTRACT_STAT_CD
                     , (
                         SELECT CONTRACT_STAT_CD
                           FROM SA_0261T Z
                          WHERE Z.DLR_CD = A.DLR_CD
                            AND Z.GOODS_CONTRACT_NO = A.JOB_CONTRACT_NO
                       ) AS GOODS_STAT_CD
                     , (
                         SELECT Z.INC_STAT
                           FROM SA_0216T Z
                          WHERE Z.DLR_CD = A.DLR_CD
                            AND Z.INC_NO = A.JOB_CONTRACT_NO
                       )  AS INC_STAT_CD
                     ,(
                        SELECT Z.BEFORE_STAT_CD
                          FROM SA_0209T Z
                         WHERE Z.DLR_CD = A.DLR_CD
                            AND Z.BEFORE_NO = A.JOB_CONTRACT_NO
                      )  AS BEFORE_STAT_CD
                  FROM SA_0451T A
                 LEFT OUTER JOIN (
                                   SELECT DLR_CD, FIN_DOC_NO, MAX(RCT_DT) AS RCT_DT
                                        , MAX(PAY_EMP_NO) AS PAY_EMP_NO
                                     FROM SA_0452T
                                    WHERE 1=1
                                    <if test='sRctFromDt != null'>
                                      AND RCT_DT <![CDATA[ >= ]]> TRUNC(#{sRctFromDt},'DD')
                                    </if>
                                    <if test='sRctToDt != null'>
                                      AND RCT_DT <![CDATA[ < ]]> TRUNC(#{sRctToDt},'DD')+1
                                    </if>
                                    GROUP BY DLR_CD, FIN_DOC_NO
                                   ) B
                    ON A.DLR_CD = B.DLR_CD
                   AND A.FIN_DOC_NO = B.FIN_DOC_NO
                 WHERE 1 = 1
                 <if test='sDlrCd != null and sDlrCd != ""'>
                   AND A.DLR_CD = #{sDlrCd}
                 </if>
                 <if test='sFinDocNo != null and sFinDocNo != ""'>
                   AND A.FIN_DOC_NO = #{sFinDocNo}
                 </if>
                 <if test='sRctFromDt != null'>
                   AND B.RCT_DT <![CDATA[>=]]> TRUNC(#{sRctFromDt},'DD')
                 </if>
                 <if test='sRctToDt != null'>
                   AND B.RCT_DT <![CDATA[<]]> TRUNC(#{sRctToDt},'DD')+1
                 </if>
                 <if test='sVinNo != null and sVinNo != ""'>
                   AND A.VIN_NO LIKE '%'||UPPER(#{sVinNo})||'%'
                 </if>
                 <if test='sJobContractNo != null and sJobContractNo != ""'>
                     <choose>
                       <when test='@org.apache.commons.lang3.StringUtils@contains(sJobContractNo,"*")'>
                         <bind name='sJobContractNo' value='@org.apache.commons.lang3.StringUtils@replace(sJobContractNo, "*", "%")' />
                           AND A.JOB_CONTRACT_NO LIKE #{sJobContractNo}
                       </when>
                       <otherwise>
                           AND A.JOB_CONTRACT_NO LIKE '%'||#{sJobContractNo}||'%'
                       </otherwise>
                     </choose>
                 </if>
                 <if test='sCustNm != null and sCustNm != ""'>
                   AND A.CUST_NM LIKE '%'||#{sCustNm}||'%'
                 </if>
                 <if test='sCustNo != null and sCustNo != ""'>
                   AND A.CUST_NO = #{sCustNo}
                 </if>
                 <if test='sPaymentTp != null and sPaymentTp != ""'>
                   AND A.PAYMENT_TP = #{sPaymentTp}
                 </if>
                 <if test='sPayEmpNo != null and sPayEmpNo != ""'>
                   AND B.PAY_EMP_NO = #{sPayEmpNo}
                 </if>
                 <if test='sJobTp != null and sJobTp != ""'>
                   AND A.JOB_TP = #{sJobTp}
                 </if>
                 <if test='sCompFromDt != null'>
                     AND A.COMP_DT <![CDATA[>=]]> TRUNC(#{sCompFromDt},'DD')
                 </if>
                 <if test='sCompToDt != null'>
                     AND A.COMP_DT <![CDATA[<]]> TRUNC(#{sCompToDt},'DD')+1
                 </if>
            ) T1
         <where>
            <if test='sDelYn != null and sDelYn == "Y"'>
              (    (T1.JOB_TP = 'C' AND T1.CONTRACT_STAT_CD NOT IN ('90', '91'))
                OR (T1.JOB_TP = 'G' AND T1.GOODS_STAT_CD NOT IN ('50', '60'))
                OR (T1.JOB_TP = 'I' AND T1.INC_STAT_CD NOT IN ('90', '91'))
                OR (T1.JOB_TP = 'B' AND T1.BEFORE_STAT_CD NOT IN ('90', '91'))
               )
            </if>
         </where>
    </select>
    <!-- 목록조회 -->
    <select id="selectPayInfosByCondition" parameterType="PayInfoSearchVO" resultType="PayInfoVO">
    /* [chn.bhmc.dms.sal.fin.service.dao.PayInfoDAO.selectPayInfosByCondition] */
        SELECT * FROM (
            SELECT ROWNUM AS RNUM
                 , CASE WHEN T1.job_tp = 'C' THEN CONTRACT_STAT_CD
                        WHEN T1.job_tp = 'G' THEN GOODS_STAT_CD
                        WHEN T1.job_tp = 'I' THEN INC_STAT_CD
                        WHEN T1.job_tp = 'B' THEN BEFORE_STAT_CD
                        ELSE ''
                     END AS JOB_STAT_CD
                 , CASE WHEN T1.job_tp = 'C' THEN FN_GET_CMMCD_NM('SAL002', T1.CONTRACT_STAT_CD, #{sLangCd})
                        WHEN T1.job_tp = 'G' THEN FN_GET_CMMCD_NM('SAL185', T1.GOODS_STAT_CD, #{sLangCd})
                        WHEN T1.job_tp = 'I' THEN FN_GET_CMMCD_NM('SAL177', T1.INC_STAT_CD, #{sLangCd})
                        WHEN T1.job_tp = 'B' THEN FN_GET_CMMCD_NM('SAL208', T1.BEFORE_STAT_CD, #{sLangCd})
                        ELSE ''
                     END AS JOB_STAT_NM
                 , CASE WHEN T1.PAY_CUST IS NOT NULL THEN T1.PAY_CUST
                        ELSE T1.CUST_NM
                    END  AS PAY_CUST_NM
                 , T1.*
              FROM (
                SELECT A.DLR_CD
                     , A.FIN_DOC_NO
                     , A.JOB_CONTRACT_NO
                     , A.VIN_NO
                     , A.JOB_TP
                     , ( SELECT Z2.CMM_CD_NM
                           FROM (SELECT A.CMM_CD
                                      , NVL(B.CMM_CD_TXT, A.CMM_CD_NM) AS CMM_CD_NM
                                  FROM CM_0303T A
                                  LEFT OUTER JOIN CM_0304T B
                                        ON A.CMM_GRP_CD = B.CMM_GRP_CD
                                       AND A.CMM_CD = B.CMM_CD
                                       AND B.LANG_CD = #{sLangCd}
                                 WHERE A.CMM_GRP_CD = 'SAL174'   /*관련업무*/
                                   AND A.USE_YN = 'Y'
                                 ) Z2
                         WHERE A.JOB_TP = Z2.CMM_CD
                       ) AS JOB_TP_NM
                     , (
                         SELECT Z.CONTRACT_STAT_CD
                           FROM SA_0201T Z
                          WHERE Z.DLR_CD = A.DLR_CD
                            AND Z.CONTRACT_NO = A.JOB_CONTRACT_NO
                       ) AS CONTRACT_STAT_CD
                     , (
                         SELECT CONTRACT_STAT_CD
                           FROM SA_0261T Z
                          WHERE Z.DLR_CD = A.DLR_CD
                            AND Z.GOODS_CONTRACT_NO = A.JOB_CONTRACT_NO
                       ) AS GOODS_STAT_CD
                     , (
                         SELECT Z.INC_STAT
                           FROM SA_0216T Z
                          WHERE Z.DLR_CD = A.DLR_CD
                            AND Z.INC_NO = A.JOB_CONTRACT_NO
                       )  AS INC_STAT_CD
                     ,(
                        SELECT Z.BEFORE_STAT_CD
                          FROM SA_0209T Z
                         WHERE Z.DLR_CD = A.DLR_CD
                            AND Z.BEFORE_NO = A.JOB_CONTRACT_NO
                      )  AS BEFORE_STAT_CD
                     , A.CUST_NO
                     , A.CUST_NM
                     , (SELECT T1.CUST_NM
                          from SA_0452T T1
                             , (
                                 SELECT DLR_CD
                                      , FIN_DOC_NO
                                      , MAX(SEQ) AS SEQ
                                   FROM SA_0452T
                                  WHERE CUST_NM IS NOT NULL
                                  GROUP BY DLR_CD, FIN_DOC_NO
                               ) T2
                         WHERE T1.DLR_CD = T2.DLR_CD
                           AND T1.FIN_DOC_NO = T2.FIN_DOC_NO
                           AND T1.SEQ = T2.SEQ
                           AND T1.DLR_CD = A.DLR_CD
                           AND T1.FIN_DOC_NO = A.FIN_DOC_NO
                       ) AS PAY_CUST
                     , A.REAL_PAY_AMT   --발생금액
                     , A.TOT_PAY_AMT    --기결산금액
                     , A.TOT_DC_AMT     --할인금액
                     , A.RECV_AMT       --미수금액
                     , A.OVER_AMT       --초과금액
                     , A.RECP_YN        --영수증필요여부
                     , ( SELECT Z2.CMM_CD_NM
                           FROM (SELECT A.CMM_CD
                                      , NVL(B.CMM_CD_TXT, A.CMM_CD_NM) AS CMM_CD_NM
                                  FROM CM_0303T A
                                  LEFT OUTER JOIN CM_0304T B
                                        ON A.CMM_GRP_CD = B.CMM_GRP_CD
                                       AND A.CMM_CD = B.CMM_CD
                                       AND B.LANG_CD = #{sLangCd}
                                 WHERE A.CMM_GRP_CD = 'COM020'
                                   AND A.USE_YN = 'Y'
                                 ) Z2
                         WHERE A.RECP_YN = Z2.CMM_CD
                       ) AS RECP_YN_NM
                     , CASE WHEN A.JOB_TP = 'C' THEN C.RECP_DT
                            ELSE NULL
                        END AS RECP_DT    --영수증발행일시
                     , A.PAYMENT_TP
                     , ( SELECT Z2.CMM_CD_NM
                           FROM (SELECT A.CMM_CD
                                      , NVL(B.CMM_CD_TXT, A.CMM_CD_NM) AS CMM_CD_NM
                                  FROM CM_0303T A
                                  LEFT OUTER JOIN CM_0304T B
                                        ON A.CMM_GRP_CD = B.CMM_GRP_CD
                                       AND A.CMM_CD = B.CMM_CD
                                       AND B.LANG_CD = #{sLangCd}
                                 WHERE A.CMM_GRP_CD = 'SAL173'
                                   AND A.USE_YN = 'Y'
                                 ) Z2
                         WHERE A.PAYMENT_TP = Z2.CMM_CD
                       ) AS PAYMENT_TP_NM
                     , A.COMP_DT        --완료일시
                     , B.RCT_DT
                     , A.REAL_CAR_AMT
                     , A.GOODS_AMT
                     , A.INC_AMT
                     , A.FINC_AMT
                     , A.SBST_AMT
                     , A.DC_AMT
                     , A.POINT_AMT
                     , A.AAP_AMT
                     , A.RESERV_CONT_AMT
                     , (
                         SELECT MAX(F.MEMBERSHIP_NO) AS MEMBERSHIP_NO
                           FROM SA_0452T F
                           LEFT OUTER JOIN SA_0452T G
                             ON F.DLR_CD = G.DLR_CD
                            AND F.FIN_DOC_NO = G.FIN_DOC_NO
                            AND F.SEQ = G.CANCLE_SEQ
                            AND NVL(G.CANCLE_SEQ, 0) != 0
                          WHERE F.DLR_CD = A.DLR_CD
                            AND F.FIN_DOC_NO = A.FIN_DOC_NO
                            AND F.COL_TP = '01'
                            AND NVL(G.CANCLE_SEQ, 0) = 0
                          GROUP BY F.DLR_CD, F.FIN_DOC_NO
                       ) AS MEMBERSHIP_NO
                     , A.UPDT_DT
                     , A.REG_DT
                     ,(SELECT Z.USR_NM
                         FROM SA_0201T X
                            , CM_0801T Z
                        WHERE X.SALE_EMP_NO = Z.USR_ID(+)
                          AND X.DLR_CD = A.DLR_CD
                          AND X.CONTRACT_NO = A.JOB_CONTRACT_NO
                          AND A.JOB_TP = 'C'
                      ) SALE_EMP_NM
                  FROM SA_0451T A
                 LEFT OUTER JOIN (
                                   SELECT DLR_CD, FIN_DOC_NO, MAX(RCT_DT) AS RCT_DT
                                        , MAX(PAY_EMP_NO) AS PAY_EMP_NO
                                     FROM SA_0452T
                                    WHERE 1=1
                                    <if test='sRctFromDt != null'>
                                      AND RCT_DT <![CDATA[>=]]> TRUNC(#{sRctFromDt},'DD')
                                    </if>
                                    <if test='sRctToDt != null'>
                                      AND RCT_DT <![CDATA[<]]> TRUNC(#{sRctToDt},'DD')+1
                                    </if>
                                    GROUP BY DLR_CD, FIN_DOC_NO
                                   ) B
                    ON A.DLR_CD = B.DLR_CD
                   AND A.FIN_DOC_NO = B.FIN_DOC_NO
                  LEFT OUTER JOIN (
                                    SELECT A.*
                                      FROM SA_0452T A
                                         , (
                                              SELECT A.DLR_CD
                                                   , A.FIN_DOC_NO
                                                   , MAX(A.SEQ) AS SEQ
                                                FROM SA_0452T A
                                                   , (
                                                        SELECT A.*
                                                          FROM SA_0452T A
                                                             , SA_0452T B
                                                         WHERE A.DLR_CD = B.DLR_CD
                                                           AND A.FIN_DOC_NO = B.FIN_DOC_NO
                                                           AND A.SEQ = B.CANCLE_SEQ
                                                           AND NVL(B.CANCLE_SEQ, 0) != 0
                                                   ) B     /* 환불 내역 */
                                               WHERE A.DLR_CD = B.DLR_CD(+)
                                                 AND A.FIN_DOC_NO = B.FIN_DOC_NO(+)
                                                 AND A.SEQ = B.SEQ(+)
                                                 AND B.SEQ IS NULL               -- 환불건 제외
                                                 AND A.RECP_DT IS NOT NULL
                                                 AND A.COL_TP = '01'            -- 수납
                                               GROUP BY A.DLR_CD, A.FIN_DOC_NO
                                           ) B
                                     WHERE A.DLR_CD = B.DLR_CD
                                       AND A.FIN_DOC_NO = B.FIN_DOC_NO
                                       AND A.SEQ = B.SEQ
                                  ) C   --  환불건을 제외한 최종차수의 수납내역
                    ON A.DLR_CD = C.DLR_CD
                   AND A.FIN_DOC_NO = C.FIN_DOC_NO
                 WHERE 1 = 1
                 <if test='sDlrCd != null and sDlrCd != ""'>
                   AND A.DLR_CD = #{sDlrCd}
                 </if>
                 <if test='sFinDocNo != null and sFinDocNo != ""'>
                   AND A.FIN_DOC_NO = #{sFinDocNo}
                 </if>
                 <if test='sRctFromDt != null'>
                   AND B.RCT_DT <![CDATA[>=]]> TRUNC(#{sRctFromDt},'DD')
                 </if>
                 <if test='sRctToDt != null'>
                   AND B.RCT_DT <![CDATA[<]]> TRUNC(#{sRctToDt},'DD')+1
                 </if>
                 <if test='sVinNo != null and sVinNo != ""'>
                   AND A.VIN_NO LIKE '%'||UPPER(#{sVinNo})||'%'
                 </if>
                 <if test='sJobContractNo != null and sJobContractNo != ""'>
                     <choose>
                       <when test='@org.apache.commons.lang3.StringUtils@contains(sJobContractNo,"*")'>
                         <bind name='sJobContractNo' value='@org.apache.commons.lang3.StringUtils@replace(sJobContractNo, "*", "%")' />
                           AND A.JOB_CONTRACT_NO LIKE #{sJobContractNo}
                       </when>
                       <otherwise>
                           AND A.JOB_CONTRACT_NO LIKE '%'||#{sJobContractNo}||'%'
                       </otherwise>
                     </choose>
                 </if>
                 <if test='sCustNm != null and sCustNm != ""'>
                   AND A.CUST_NM LIKE '%'||#{sCustNm}||'%'
                 </if>
                 <if test='sCustNo != null and sCustNo != ""'>
                   AND A.CUST_NO = #{sCustNo}
                 </if>
                 <if test='sPaymentTp != null and sPaymentTp != ""'>
                   AND A.PAYMENT_TP = #{sPaymentTp}
                 </if>
                 <if test='sPayEmpNo != null and sPayEmpNo != ""'>
                   AND B.PAY_EMP_NO = #{sPayEmpNo}
                 </if>
                 <if test='sJobTp != null and sJobTp != ""'>
                   AND A.JOB_TP = #{sJobTp}
                 </if>
                 <if test='sCompFromDt != null'>
                     AND A.COMP_DT <![CDATA[>=]]> TRUNC(#{sCompFromDt},'DD')
                 </if>
                 <if test='sCompToDt != null'>
                     AND A.COMP_DT <![CDATA[<]]> TRUNC(#{sCompToDt},'DD')+1
                 </if>
             ORDER BY
                <choose>
                    <when test='sort != null'>
                        <foreach item="item" index="index" collection="sort" open="" separator="," close="">
                            <choose>
                                <when test='item.field == "finDocNo"'>A.FIN_DOC_NO <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                                <when test='item.field == "jobContractNo"'>A.JOB_CONTRACT_NO <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                                <when test='item.field == "vinNo"'>A.VIN_NO <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                                <when test='item.field == "jobTp"'>A.JOB_TP <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                                <when test='item.field == "jobTpNm"'>JOB_TP_NM <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                                <when test='item.field == "custNo"'>A.CUST_NO <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                                <when test='item.field == "custNm"'>A.CUST_NM <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                                <when test='item.field == "payCust"'>PAY_CUST <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                                <when test='item.field == "realPayAmt"'>A.REAL_PAY_AMT <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                                <when test='item.field == "totPayAmt"'>A.TOT_PAY_AMT <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                                <when test='item.field == "totDcAmt"'>A.TOT_DC_AMT <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                                <when test='item.field == "recvAmt"'>A.RECV_AMT <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                                <when test='item.field == "overAmt"'>A.OVER_AMT <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                                <when test='item.field == "recpYn"'>A.RECP_YN <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                                <when test='item.field == "recpYnNm"'>RECP_YN_NM <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                                <when test='item.field == "paymentTp"'>A.PAYMENT_TP <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                                <when test='item.field == "paymentTpNm"'>PAYMENT_TP_NM <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                                <when test='item.field == "compDtFormat"'>A.COMP_DT <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                                <when test='item.field == "payCustNm"'>CASE WHEN PAY_CUST IS NOT NULL THEN PAY_CUST ELSE CUST_NM END<choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                                <when test='item.field == "recpYnNm"'>RECP_YN_NM <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                                <when test='item.field == "recpDt"'>RECP_DT <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                                <when test='item.field == "updtDt"'>A.UPDT_DT <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                                <when test='item.field == "regDtFormat"'>A.REG_DT <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                                <when test='item.field == "saleEmpNm"'>SALE_EMP_NM <choose><when test='item.dir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose></when>
                                <otherwise>
                                    A.FIN_DOC_NO DESC
                                </otherwise>
                            </choose>
                        </foreach>
                    </when>
                    <otherwise>
                        A.FIN_DOC_NO DESC
                    </otherwise>
                </choose>
            ) T1
            WHERE 1 = 1
                <if test='firstIndex != -1 and lastIndex != -1'>
                  AND ROWNUM <![CDATA[<=]]> #{lastIndex}
                </if>
                <if test='sDelYn != null and sDelYn == "Y"'>
                  AND (    (T1.JOB_TP = 'C' AND T1.CONTRACT_STAT_CD NOT IN ('90', '91'))
                        OR (T1.JOB_TP = 'G' AND T1.GOODS_STAT_CD NOT IN ('50', '60'))
                        OR (T1.JOB_TP = 'I' AND T1.INC_STAT_CD NOT IN ('90', '91'))
                        OR (T1.JOB_TP = 'B' AND T1.BEFORE_STAT_CD NOT IN ('90', '91'))
                      )
                </if>
        )
        <where>
            <if test='firstIndex != -1 and lastIndex != -1'>
                RNUM > #{firstIndex}
            </if>
        </where>
    </select>

    <!-- Detail 목록 갯수  -->
    <select id="selectPayInfoDetailsByConditionCnt" parameterType="PayInfoSearchVO" resultType="int">
    /* [chn.bhmc.dms.sal.fin.service.dao.PayInfoDAO.selectPayInfoDetailsByConditionCnt] */
        SELECT COUNT(*)
          FROM SA_0452T A
         WHERE 1=1
         <if test='sDlrCd != null and sDlrCd != ""'>
           AND A.DLR_CD = #{sDlrCd}
         </if>
         <if test='sFinDocNo != null and sFinDocNo != ""'>
           AND A.FIN_DOC_NO  = #{sFinDocNo}
         </if>
    </select>

    <!-- Detail 목록조회 -->
    <select id="selectPayInfoDetailsByCondition" parameterType="PayInfoSearchVO" resultType="PayInfoDetailVO">
    /* [chn.bhmc.dms.sal.fin.service.dao.PayInfoDAO.selectPayInfoDetailsByCondition] */
        SELECT ROWNUM AS RNUM
             , A.DLR_CD             --딜러코드
             , A.FIN_DOC_NO         --수납문서번호
             , A.SEQ                --순번
             , DECODE(NVL(A.CANCLE_SEQ, 0), 0, A.SEQ, A.CANCLE_SEQ) AS RSEQ
             , DECODE(NVL(TO_CHAR(B.CANCLE_SEQ), '0'), '0', 'N', 'Y') AS CAN_YN
             , A.COL_TP             --입출금여부
             , ( SELECT Z2.CMM_CD_NM
                   FROM (SELECT A.CMM_CD
                              , NVL(B.CMM_CD_TXT, A.CMM_CD_NM) AS CMM_CD_NM
                          FROM CM_0303T A
                          LEFT OUTER JOIN CM_0304T B
                                ON A.CMM_GRP_CD = B.CMM_GRP_CD
                               AND A.CMM_CD = B.CMM_CD
                               AND B.LANG_CD = #{sLangCd}
                         WHERE A.CMM_GRP_CD = 'SAL011'
                           AND A.USE_YN = 'Y'
                         ) Z2
                 WHERE A.COL_TP = Z2.CMM_CD
               ) AS COL_TP_NM
             , A.RCT_DT             --수납일자
             , DECODE(NVL(A.RECP_SEQ, 'N'), 'N', 'N', 'Y') AS RECP_YN
             , ( SELECT Z2.CMM_CD_NM
                   FROM (SELECT A.CMM_CD
                              , NVL(B.CMM_CD_TXT, A.CMM_CD_NM) AS CMM_CD_NM
                          FROM CM_0303T A
                          LEFT OUTER JOIN CM_0304T B
                                ON A.CMM_GRP_CD = B.CMM_GRP_CD
                               AND A.CMM_CD = B.CMM_CD
                               AND B.LANG_CD = #{sLangCd}
                         WHERE A.CMM_GRP_CD = 'COM020'
                           AND A.USE_YN = 'Y'
                         ) Z2
                 WHERE DECODE(NVL(A.RECP_SEQ, 'N'), 'N', 'N', 'Y') = Z2.CMM_CD
               ) AS RECP_YN_NM
             , A.RECP_DT
             , A.RECP_SEQ
             , A.RCT_TP             --수납방식
             , ( SELECT Z2.CMM_CD_NM
                   FROM (SELECT A.CMM_CD
                              , NVL(B.CMM_CD_TXT, A.CMM_CD_NM) AS CMM_CD_NM
                          FROM CM_0303T A
                          LEFT OUTER JOIN CM_0304T B
                                ON A.CMM_GRP_CD = B.CMM_GRP_CD
                               AND A.CMM_CD = B.CMM_CD
                               AND B.LANG_CD = #{sLangCd}
                         WHERE A.CMM_GRP_CD = 'SAL172'
                           -- AND A.USE_YN = 'Y'
                         ) Z2
                 WHERE A.RCT_TP = Z2.CMM_CD
               ) AS RCT_TP_NM
             , A.BANK_TP            --은행정보
             , ( SELECT Z2.CMM_CD_NM
                   FROM (SELECT A.CMM_CD
                              , NVL(B.CMM_CD_TXT, A.CMM_CD_NM) AS CMM_CD_NM
                          FROM CM_0303T A
                          LEFT OUTER JOIN CM_0304T B
                                ON A.CMM_GRP_CD = B.CMM_GRP_CD
                               AND A.CMM_CD = B.CMM_CD
                               AND B.LANG_CD = #{sLangCd}
                         WHERE A.CMM_GRP_CD = 'SAL179'
                           AND A.USE_YN = 'Y'
                         ) Z2
                 WHERE A.BANK_TP = Z2.CMM_CD
               ) AS BANK_TP_NM
             , A.CUST_NM            --입금자
             , A.PAY_AMT            --정산금액(입/출금액)
             , CASE WHEN A.RCT_TP = '13' THEN A.DISCOUNT_AMT
                            ELSE null
                        END AS DISCOUNT_AMT --优惠金额 by wushibin
             , CASE WHEN A.RCT_TP = '13' THEN A.RECEIVED_AMT
                            ELSE A.PAY_AMT
                        END AS RECEIVED_AMT --实收金额 by wushibin
             , A.DC_AMT             --할인금액
             , A.PAY_EMP_NO         --정산인
             , (SELECT USR_NM
                  FROM CM_0801T
                 WHERE USR_ID = A.PAY_EMP_NO
               ) AS PAY_EMP_NM
             , A.CANCLE_SEQ         --환불번호
             , A.REMARK             --비고
             , A.PAY_TP             --정산유형
             , ( SELECT Z2.CMM_CD_NM
                   FROM (SELECT A.CMM_CD
                              , NVL(B.CMM_CD_TXT, A.CMM_CD_NM) AS CMM_CD_NM
                          FROM CM_0303T A
                          LEFT OUTER JOIN CM_0304T B
                                ON A.CMM_GRP_CD = B.CMM_GRP_CD
                               AND A.CMM_CD = B.CMM_CD
                               AND B.LANG_CD = #{sLangCd}
                         WHERE A.CMM_GRP_CD = 'SAL194'
                           AND A.USE_YN = 'Y'
                         ) Z2
                 WHERE A.PAY_TP = Z2.CMM_CD
               ) AS PAY_TP_NM
             , A.REG_USR_ID         --등록자ID
             , A.REG_DT             --등록일자
             , A.UPDT_USR_ID        --수정자ID
             , A.UPDT_DT            --수정일자
             , A.TRADE_ID
        FROM SA_0452T A
        LEFT OUTER JOIN SA_0452T B
          ON A.DLR_CD = B.DLR_CD
         AND A.FIN_DOC_NO = B.FIN_DOC_NO
         AND A.SEQ = B.CANCLE_SEQ
         AND NVL(B.CANCLE_SEQ, 0) != 0
       WHERE 1=1
       <if test='sDlrCd != null and sDlrCd != ""'>
         AND A.DLR_CD = #{sDlrCd}
       </if>
       <if test='sFinDocNo != null and sFinDocNo != ""'>
         AND A.FIN_DOC_NO  = #{sFinDocNo}
       </if>
       <if test='sSeqList != null'>
         AND A.SEQ IN
         <foreach item="item" index="index" collection="sSeqList" open="(" separator="," close=")" >
           #{item}
         </foreach>
       </if>
       ORDER BY RSEQ DESC, A.SEQ ASC
    </select>


    <!-- 수납헤더 정보를 생성한다. -->
    <insert id="insertPayInfoHeader" parameterType="PayInfoVO">
        INSERT INTO SA_0451T    --수납헤더
        (
          DLR_CD                 --딜러코드
         ,FIN_DOC_NO             --수납문서번호
         ,JOB_TP                 --관련업무
         ,JOB_CONTRACT_NO        --관련업무계약번호
         ,VIN_NO                 --VIN번호
         ,COMP_YN                --정산여부(완성여부)
         ,COMP_DT                --정산완료일
         ,CUST_TP                --고객유형
         ,CUST_NO                --고객번호
         ,CUST_NM                --고객이름
         ,MANAGE_EMP_NO          --판매인번호
         ,PAYMENT_TP             --지불상태
         ,REAL_PAY_AMT           --발생금액
         ,TOT_PAY_AMT            --최종정산금액
         ,TOT_DC_AMT             --할인금액
         ,PRO_AMT                --처리금액(에누리)
         ,RECV_AMT               --미수금액
         ,OVER_AMT               --초과금액
         ,RECP_YN                --영수증 필요여부
         ,RECP_DT                --영수증 출력일자
         ,REAL_CAR_AMT           --(계약)실제차량금액
         ,GOODS_AMT              --(계약)용품가격
         ,INC_AMT                --(계약)보험료
         ,FINC_AMT               --(계약)금융가격
         ,SBST_AMT               --(계약)중고차치환
         ,AAP_AMT                --(계약)대행료
         ,DC_AMT                 --(계약)할인가격
         ,POINT_AMT              --(계약)포인트금액
         ,RESERV_CONT_AMT        --(계약)예판가
         ,REG_USR_ID             --등록자ID
         ,REG_DT                 --등록일자
         ,UPDT_USR_ID            --수정자ID
         ,UPDT_DT                --수정일자
        )
        VALUES
        (
          #{dlrCd}                 --딜러코드
         , (SELECT 'F' || TO_CHAR(SYSDATE, 'YYYYMM') || LPAD(TO_CHAR(NVL(SUBSTR(MAX(FIN_DOC_NO),8,14), 0)+1), 7, '0' ) FROM SA_0451T WHERE DLR_CD = #{dlrCd} AND SUBSTR(FIN_DOC_NO, 2, 6) = TO_CHAR(SYSDATE, 'YYYYMM') )
         ,#{jobTp}                 --관련업무
         ,#{jobContractNo}         --관련업무계약번호
         ,#{vinNo}                 --VIN번호
         ,'N'                      --정산여부(완성여부)
         ,#{compDt}                --정산완료일
         ,#{custTp}                --고객유형
         ,#{custNo}                --고객번호
         ,#{custNm}                --고객이름
         ,#{manageEmpNo}           --판매인번호
         ,#{paymentTp}             --지불상태
         ,#{realPayAmt}            --발생금액
         ,#{totPayAmt}             --최종정산금액
         ,#{totDcAmt}              --할인금액
         ,#{proAmt}                --처리금액(에누리)
         ,#{recvAmt}               --미수금액
         ,#{overAmt}               --초과금액
         ,#{recpYn}                --영수증 필요여부
         ,#{recpDt}                --영수증 출력일자
         ,#{realCarAmt}            --(계약)실제차량금액
         ,#{goodsAmt}              --(계약)용품가격
         ,#{incAmt}                --(계약)보험료
         ,#{fincAmt}               --(계약)금융가격
         ,#{sbstAmt}               --(계약)중고차치환
         ,#{aapAmt}                --(계약)대행료
         ,#{dcAmt}                 --(계약)할인가격
         ,#{pointAmt}              --(계약)포인트금액
         ,#{reservContAmt}         --(계약)예판가
         ,#{regUsrId}              --등록자ID
         ,SYSDATE
         ,#{updtUsrId}             --수정자ID
         ,SYSDATE
        )
    </insert>

    <!-- 수납헤더 정보를 저장한다. -->
    <update id="updatePayInfoHeader" parameterType="PayInfoVO">
        UPDATE SA_0451T    --수납헤더
           SET VIN_NO          = #{vinNo}                 --VIN번호
           <if test='compYn != null and compYn != ""'>
             , COMP_YN         = #{compYn}                --정산여부(완성여부)
           </if>
           <if test='compDt != null'>
             , COMP_DT         = #{compDt}                --정산완료일
           </if>
             , CUST_TP         = #{custTp}                --고객유형
             , CUST_NO         = #{custNo}                --고객번호
             , CUST_NM         = #{custNm}                --고객이름
             , MANAGE_EMP_NO   = #{manageEmpNo}           --판매인번호
             , PAYMENT_TP      = #{paymentTp}             --지불상태
             , TOT_PAY_AMT     = (SELECT NVL(MAX(SUM(CASE WHEN COL_TP = '01' THEN PAY_AMT
                                                 ELSE PAY_AMT * -1
                                             END
                                           )),0) AS TOT_PAY_AMT
                                   FROM SA_0452T
                                  WHERE DLR_CD = #{dlrCd}
                                    AND FIN_DOC_NO = #{finDocNo}
                                  GROUP BY DLR_CD, FIN_DOC_NO
                                 )
             , TOT_DC_AMT      = (SELECT NVL(MAX(SUM(DC_AMT)), 0) AS TOT_DC_AMT
                                   FROM SA_0452T
                                  WHERE DLR_CD = #{dlrCd}
                                    AND FIN_DOC_NO = #{finDocNo}
                                  GROUP BY DLR_CD, FIN_DOC_NO
                                 )

             , RECV_AMT        = (SELECT CASE WHEN NVL(A.REAL_PAY_AMT,0) - NVL(B.TOT_AMT,0) > 0 THEN NVL(A.REAL_PAY_AMT,0) - NVL(B.TOT_AMT,0)
                                              ELSE 0
                                         END  AS RECV_AMT
                                    FROM SA_0451T A
                                     , (
                                        SELECT DLR_CD
                                             , FIN_DOC_NO
                                             , SUM(CASE WHEN COL_TP = '01' THEN PAY_AMT
                                                        ELSE PAY_AMT * -1
                                                    END ) AS TOT_AMT
                                          FROM SA_0452T
                                         GROUP BY DLR_CD, FIN_DOC_NO
                                         ) B
                                   WHERE A.DLR_CD = B.DLR_CD(+)
                                     AND A.FIN_DOC_NO = B.FIN_DOC_NO(+)
                                     AND A.DLR_CD = #{dlrCd}
                                     AND A.FIN_DOC_NO = #{finDocNo}
                                 )
             , OVER_AMT        = (SELECT CASE WHEN NVL(A.REAL_PAY_AMT,0) - NVL(B.TOT_AMT,0) <![CDATA[<]]> 0 THEN NVL(A.REAL_PAY_AMT,0) - NVL(B.TOT_AMT,0)
                                            ELSE 0
                                         END AS OVER_AMT
                                  FROM SA_0451T A
                                     , (
                                        SELECT DLR_CD
                                             , FIN_DOC_NO
                                             , SUM(CASE WHEN COL_TP = '01' THEN PAY_AMT
                                                        ELSE PAY_AMT * -1
                                                    END ) AS TOT_AMT
                                          FROM SA_0452T
                                         GROUP BY DLR_CD, FIN_DOC_NO
                                         ) B
                                   WHERE A.DLR_CD = B.DLR_CD(+)
                                     AND A.FIN_DOC_NO = B.FIN_DOC_NO(+)
                                     AND A.DLR_CD = #{dlrCd}
                                     AND A.FIN_DOC_NO = #{finDocNo}
                                 )

             , REAL_PAY_AMT    = #{realPayAmt}            --발생금액
             , PRO_AMT         = #{proAmt}                --처리금액(에누리)

           <if test='recpYn != null and recpYn != ""'>
             , RECP_YN         = #{recpYn}                --영수증 필요여부
           </if>
           <if test='recpDt != null'>
             , RECP_DT         = #{recpDt}                --영수증 출력일자
           </if>
             , REAL_CAR_AMT    = #{realCarAmt}            --(계약)실제차량금액
             , GOODS_AMT       = #{goodsAmt}              --(계약)용품가격
             , INC_AMT         = #{incAmt}                --(계약)보험료
             , FINC_AMT         = #{fincAmt}              --(계약)금융가격
             , SBST_AMT         = #{sbstAmt}              --(계약)중고차치환
             , AAP_AMT         = #{aapAmt}                --(계약)대행료
             , DC_AMT         = #{dcAmt}                  --(계약)할인가격
             , POINT_AMT         = #{pointAmt}             --(계약)포인트금액
             , RESERV_CONT_AMT = #{reservContAmt}         --(계약)예판가

             , UPDT_USR_ID     = #{updtUsrId}             --수정자ID
             , UPDT_DT         = SYSDATE
          WHERE 1 = 1
            AND DLR_CD          = #{dlrCd}                 --딜러코드
            AND FIN_DOC_NO      = #{finDocNo}
            AND JOB_TP          = #{jobTp}                 --관련업무
            AND JOB_CONTRACT_NO = #{jobContractNo}         --관련업무계약번호
    </update>

    <!-- 수납처리한다. -->
    <insert id="insertPayInfoDetail" parameterType="PayInfoDetailVO">
        INSERT
          INTO SA_0452T    --수납DETAIL
        (
                DLR_CD             --딜러코드
              , FIN_DOC_NO         --수납문서번호
              , SEQ                --순번
              , COL_TP             --입출금여부
              , RCT_DT             --수납일자
              , RCT_TP             --수납방식
              , BANK_TP            --은행정보
              , CUST_NM            --입금자
              , PAY_AMT            --정산금액(입/출금액)
              , DC_AMT             --할인금액
              , PAY_EMP_NO         --정산인
              , CANCLE_SEQ         --환불번호
              , REMARK             --비고
              , RECP_SEQ           --영수증발행번호
              , RECP_DT            --영수증발행일
              , PAY_TP             --정산유형
              , POINT_RULE
              , POINT_VAL
              , MEMBERSHIP_NO
              , MEMBERSHIP_CARD_NO
              , MEMBERSHIP_POINT_USE_MAX_POINT
              , REG_USR_ID         --등록자ID
              , REG_DT             --등록일자
              , UPDT_USR_ID        --수정자ID
              , UPDT_DT            --수정일자
              , TRADE_ID           --pos订单id by wushibin
              , DISCOUNT_AMT       --优惠金额
              , RECEIVED_AMT       --实收金额
        )
        VALUES
        (
               #{dlrCd}             --딜러코드
             , #{finDocNo}          --수납문서번호
             , (SELECT NVL(MAX(SEQ), 0)+1 FROM SA_0452T WHERE DLR_CD = #{dlrCd} AND FIN_DOC_NO = #{finDocNo})
             , #{colTp}             --입출금여부
             , #{rctDt}             --수납일자
             , #{rctTp}             --수납방식
             , #{bankTp}            --은행정보
             , #{custNm}            --입금자
             , #{payAmt}            --정산금액(입/출금액)
             , #{dcAmt}             --할인금액
             , #{regUsrId}          --정산인
             , #{cancleSeq}         --환불번호
             , #{remark}            --비고
             , #{recpSeq}           --영수증발행번호
             , #{recpDt}            --영수증발행일
             , #{payTp}             --정산유형
             , #{pointRule}
             , #{pointVal}
             , #{membershipNo}
             , #{membershipCardNo}
             , #{membershipPointUseMaxPoint}
             , #{regUsrId}          --등록자ID
             , SYSDATE             --등록일자
             , #{updtUsrId}         --수정자ID
             , SYSDATE            --수정일자
             , #{tradeId}            --pos下单id
             , #{discountAmt}            --优惠金额
             , #{receivedAmt}            --实收金额
        )
        <selectKey resultType="int" keyProperty="seq" order="AFTER">
            SELECT MAX(SEQ) AS seq FROM SA_0452T WHERE DLR_CD = #{dlrCd} AND FIN_DOC_NO = #{finDocNo}
        </selectKey>
    </insert>

    <!-- 수납여부를 UPDATE -->
    <update id="updatePayInfoTotHeader" parameterType="PayInfoDetailVO">
         UPDATE SA_0451T    --수납헤더
            SET UPDT_USR_ID     = #{updtUsrId}             --수정자ID
              , UPDT_DT         = SYSDATE
           <if test='compYn != null and compYn != ""'>
             , COMP_YN         = #{compYn}                --정산여부(완성여부)
           </if>
           <if test='compYn != null and compYn == "Y"'>
             , COMP_DT         = SYSDATE
           </if>
           <if test='compYn != null and compYn == "N"'>
             , COMP_DT         = NULL
           </if>
           <if test='paymentTp != null and paymentTp != ""'>
             , PAYMENT_TP      = #{paymentTp}
           </if>
             , TOT_PAY_AMT     = (SELECT NVL(MAX(SUM(CASE WHEN COL_TP = '01' THEN PAY_AMT
                                                 ELSE PAY_AMT * -1
                                             END
                                           )),0) AS TOT_PAY_AMT
                                   FROM SA_0452T
                                  WHERE DLR_CD = #{dlrCd}
                                    AND FIN_DOC_NO = #{finDocNo}
                                  GROUP BY DLR_CD, FIN_DOC_NO
                                 )
             , TOT_DC_AMT      = (SELECT NVL(MAX(SUM(DC_AMT)), 0) AS TOT_DC_AMT
                                   FROM SA_0452T
                                  WHERE DLR_CD = #{dlrCd}
                                    AND FIN_DOC_NO = #{finDocNo}
                                  GROUP BY DLR_CD, FIN_DOC_NO
                                 )
            <if test='proAmt != null and proAmt != ""'>
             , PRO_AMT = #{proAmt}
            </if>
             , RECV_AMT        = (SELECT CASE WHEN NVL(A.REAL_PAY_AMT,0) - NVL(B.TOT_AMT,0) > 0 THEN NVL(A.REAL_PAY_AMT,0) - NVL(B.TOT_AMT,0)
                                              ELSE 0
                                         END  AS RECV_AMT
                                    FROM SA_0451T A
                                     , (
                                        SELECT DLR_CD
                                             , FIN_DOC_NO
                                             , SUM(CASE WHEN COL_TP = '01' THEN PAY_AMT
                                                        ELSE PAY_AMT * -1
                                                    END ) AS TOT_AMT
                                          FROM SA_0452T
                                         GROUP BY DLR_CD, FIN_DOC_NO
                                         ) B
                                   WHERE A.DLR_CD = B.DLR_CD(+)
                                     AND A.FIN_DOC_NO = B.FIN_DOC_NO(+)
                                     AND A.DLR_CD = #{dlrCd}
                                     AND A.FIN_DOC_NO = #{finDocNo}
                                 )
             , OVER_AMT        = (SELECT CASE WHEN NVL(A.REAL_PAY_AMT,0) - NVL(B.TOT_AMT,0) <![CDATA[<]]> 0 THEN NVL(A.REAL_PAY_AMT,0) - NVL(B.TOT_AMT,0)
                                            ELSE 0
                                         END AS OVER_AMT
                                  FROM SA_0451T A
                                     , (
                                        SELECT DLR_CD
                                             , FIN_DOC_NO
                                             , SUM(CASE WHEN COL_TP = '01' THEN PAY_AMT
                                                        ELSE PAY_AMT * -1
                                                    END ) AS TOT_AMT
                                          FROM SA_0452T
                                         GROUP BY DLR_CD, FIN_DOC_NO
                                         ) B
                                   WHERE A.DLR_CD = B.DLR_CD(+)
                                     AND A.FIN_DOC_NO = B.FIN_DOC_NO(+)
                                     AND A.DLR_CD = #{dlrCd}
                                     AND A.FIN_DOC_NO = #{finDocNo}
                                 )
           <if test='recpYn != null and recpYn != ""'>
             , RECP_YN         = #{recpYn}
           </if>
           <if test='recpDt != null'>
             , RECP_DT         = SYSDATE
           </if>
          WHERE DLR_CD          = #{dlrCd}                 --딜러코드
          <if test='finDocNo != null and finDocNo != ""'>
            AND FIN_DOC_NO = #{finDocNo}
          </if>
    </update>

    <!-- 수납 취소 대상을 조회한다. -->
    <select id="selectCancelPayInfoSerch" parameterType="PayInfoVO" resultType="PayInfoDetailVO">
        SELECT A.*
          FROM SA_0452T A       -- 수납이력
             , SA_0452T B       -- 취소수납이력
         WHERE A.DLR_CD = B.DLR_CD(+)
           AND A.FIN_DOC_NO = B.FIN_DOC_NO(+)
           AND A.SEQ = B.CANCLE_SEQ(+)
           AND A.DLR_CD = #{dlrCd}
           AND A.FIN_DOC_NO = #{finDocNo}
           AND NVL(A.CANCLE_SEQ, 0) = 0
           AND NVL(B.CANCLE_SEQ, 0) = 0
    </select>

    <!-- 환불처리를 한다. -->
    <insert id="reFundPayInfo" parameterType="PayInfoDetailVO">
        INSERT
          INTO SA_0452T
            SELECT #{dlrCd}
                 , #{finDocNo}
                 , (SELECT NVL(MAX(SEQ), 0)+1 FROM SA_0452T WHERE DLR_CD = #{dlrCd} AND FIN_DOC_NO = #{finDocNo}) AS SEQ
                 , #{colTp}
                 <!-- ,  TO_DATE(SYSDATE, 'YYYY-MM-DD')  修改收款管理退款时间hhmm不为00:00  by wushibin-->
                 , #{rctDt}
                 <!-- , RCT_TP bywushibin 20200310 注释掉换下面执行-->
                 , #{rctTp}
                 , BANK_TP
                 , CUST_NM
                 , PAY_AMT
                 , DC_AMT
                 , PAY_EMP_NO
                 , SEQ
                 , REMARK
                 , #{regUsrId}
                 , SYSDATE
                 , #{updtUsrId}
                 , SYSDATE
                 , RECP_SEQ
                 , RECP_DT
                 , PAY_TP
                 , POINT_RULE
                 , POINT_VAL
                 , PUBLI_NO
                 , MEMBERSHIP_NO
                 , MEMBERSHIP_CARD_NO
                 , MEMBERSHIP_POINT_USE_MAX_POINT
                 , TRADE_ID
                 , DISCOUNT_AMT --优惠金额
                 , RECEIVED_AMT --实收金额
              FROM SA_0452T
             WHERE DLR_CD = #{dlrCd}
               AND FIN_DOC_NO = #{finDocNo}
               AND SEQ  = #{seq}
    </insert>

    <!-- 수납헤더를 지운다.(예판,보험 기능) -->
    <delete id="deltePayinfoHeader" parameterType="PayInfoVO">
       DELETE
         FROM SA_0451T
        WHERE DLR_CD = #{dlrCd}
          AND FIN_DOC_NO = #{finDocNo}
    </delete>
    <!-- 수납헤더를 지운다.(예판,보험 기능) -->
    <delete id="deltePayinfoDetail" parameterType="PayInfoVO">
       DELETE
         FROM SA_0452T
        WHERE DLR_CD = #{dlrCd}
          AND FIN_DOC_NO = #{finDocNo}
    </delete>


    <!-- 수납관리 header 상세정보를 조회한다. -->
    <select id="selectPayInfosByKey" parameterType="PayInfoSearchVO" resultType="PayInfoVO">
    /* [chn.bhmc.dms.sal.fin.service.dao.PayInfoDAO.selectPayInfosByKey] */
                SELECT A.DLR_CD
                     , A.FIN_DOC_NO
                     , A.JOB_CONTRACT_NO
                     , A.VIN_NO
                     , A.JOB_TP
                     , ( SELECT Z2.CMM_CD_NM
                           FROM (SELECT A.CMM_CD
                                      , NVL(B.CMM_CD_TXT, A.CMM_CD_NM) AS CMM_CD_NM
                                  FROM CM_0303T A
                                  LEFT OUTER JOIN CM_0304T B
                                        ON A.CMM_GRP_CD = B.CMM_GRP_CD
                                       AND A.CMM_CD = B.CMM_CD
                                       AND B.LANG_CD = #{sLangCd}
                                 WHERE A.CMM_GRP_CD = 'SAL174'   /*관련업무*/
                                   AND A.USE_YN = 'Y'
                                 ) Z2
                         WHERE A.JOB_TP = Z2.CMM_CD
                       ) AS JOB_TP_NM
                     , (
                         SELECT Z.CONTRACT_STAT_CD
                           FROM SA_0201T Z
                          WHERE Z.DLR_CD = A.DLR_CD
                            AND Z.CONTRACT_NO = A.JOB_CONTRACT_NO
                       ) AS CONTRACT_STAT_CD
                     , (
                         SELECT CONTRACT_STAT_CD
                           FROM SA_0261T Z
                          WHERE Z.DLR_CD = A.DLR_CD
                            AND Z.GOODS_CONTRACT_NO = A.JOB_CONTRACT_NO
                       ) AS GOODS_STAT_CD
                     , (
                         SELECT Z.INC_STAT
                           FROM SA_0216T Z
                          WHERE Z.DLR_CD = A.DLR_CD
                            AND Z.INC_NO = A.JOB_CONTRACT_NO
                       )  AS INC_STAT_CD
                     ,(
                        SELECT Z.BEFORE_STAT_CD
                          FROM SA_0209T Z
                         WHERE Z.DLR_CD = A.DLR_CD
                            AND Z.BEFORE_NO = A.JOB_CONTRACT_NO
                      )  AS BEFORE_STAT_CD
                     , A.CUST_NO
                     , A.CUST_NM
                     , (SELECT T1.CUST_NM
                          from SA_0452T T1
                             , (
                                 SELECT DLR_CD
                                      , FIN_DOC_NO
                                      , MAX(SEQ) AS SEQ
                                   FROM SA_0452T
                                  WHERE CUST_NM IS NOT NULL
                                  GROUP BY DLR_CD, FIN_DOC_NO
                               ) T2
                         WHERE T1.DLR_CD = T2.DLR_CD
                           AND T1.FIN_DOC_NO = T2.FIN_DOC_NO
                           AND T1.SEQ = T2.SEQ
                           AND T1.DLR_CD = A.DLR_CD
                           AND T1.FIN_DOC_NO = A.FIN_DOC_NO
                       ) AS PAY_CUST
                     , A.REAL_PAY_AMT   --발생금액
                     , A.TOT_PAY_AMT    --기결산금액
                     , A.TOT_DC_AMT     --할인금액
                     , A.RECV_AMT       --미수금액
                     , A.OVER_AMT       --초과금액
                     , A.RECP_YN        --영수증필요여부
                     , ( SELECT Z2.CMM_CD_NM
                           FROM (SELECT A.CMM_CD
                                      , NVL(B.CMM_CD_TXT, A.CMM_CD_NM) AS CMM_CD_NM
                                  FROM CM_0303T A
                                  LEFT OUTER JOIN CM_0304T B
                                        ON A.CMM_GRP_CD = B.CMM_GRP_CD
                                       AND A.CMM_CD = B.CMM_CD
                                       AND B.LANG_CD = #{sLangCd}
                                 WHERE A.CMM_GRP_CD = 'COM020'
                                   AND A.USE_YN = 'Y'
                                 ) Z2
                         WHERE A.RECP_YN = Z2.CMM_CD
                       ) AS RECP_YN_NM
                     , CASE WHEN A.JOB_TP = 'C' THEN C.RECP_DT
                            ELSE NULL
                        END AS RECP_DT    --영수증발행일시
                     , A.PAYMENT_TP
                     , ( SELECT Z2.CMM_CD_NM
                           FROM (SELECT A.CMM_CD
                                      , NVL(B.CMM_CD_TXT, A.CMM_CD_NM) AS CMM_CD_NM
                                  FROM CM_0303T A
                                  LEFT OUTER JOIN CM_0304T B
                                        ON A.CMM_GRP_CD = B.CMM_GRP_CD
                                       AND A.CMM_CD = B.CMM_CD
                                       AND B.LANG_CD = #{sLangCd}
                                 WHERE A.CMM_GRP_CD = 'SAL173'
                                   AND A.USE_YN = 'Y'
                                 ) Z2
                         WHERE A.PAYMENT_TP = Z2.CMM_CD
                       ) AS PAYMENT_TP_NM
                     , A.COMP_DT        --완료일시
                     , A.REAL_CAR_AMT
                     , A.GOODS_AMT
                     , A.INC_AMT
                     , A.FINC_AMT
                     , A.SBST_AMT
                     , A.DC_AMT
                     , A.POINT_AMT
                     , A.AAP_AMT
                     , A.RESERV_CONT_AMT
                     , (
                         SELECT MAX(F.MEMBERSHIP_NO) AS MEMBERSHIP_NO
                           FROM SA_0452T F
                           LEFT OUTER JOIN SA_0452T G
                             ON F.DLR_CD = G.DLR_CD
                            AND F.FIN_DOC_NO = G.FIN_DOC_NO
                            AND F.SEQ = G.CANCLE_SEQ
                            AND NVL(G.CANCLE_SEQ, 0) != 0
                          WHERE F.DLR_CD = A.DLR_CD
                            AND F.FIN_DOC_NO = A.FIN_DOC_NO
                            AND F.COL_TP = '01'
                            AND NVL(G.CANCLE_SEQ, 0) = 0
                          GROUP BY F.DLR_CD, F.FIN_DOC_NO
                       ) AS MEMBERSHIP_NO
                     , A.UPDT_DT
                     , A.REG_DT
                  FROM SA_0451T A
                 LEFT OUTER JOIN (
                                   SELECT DLR_CD, FIN_DOC_NO, MAX(RCT_DT) AS RCT_DT
                                        , MAX(PAY_EMP_NO) AS PAY_EMP_NO
                                     FROM SA_0452T
                                    WHERE 1=1
                                    GROUP BY DLR_CD, FIN_DOC_NO
                                   ) B
                    ON A.DLR_CD = B.DLR_CD
                   AND A.FIN_DOC_NO = B.FIN_DOC_NO
                  LEFT OUTER JOIN (
                                    SELECT A.*
                                      FROM SA_0452T A
                                         , (
                                              SELECT A.DLR_CD
                                                   , A.FIN_DOC_NO
                                                   , MAX(A.SEQ) AS SEQ
                                                FROM SA_0452T A
                                                   , (
                                                        SELECT A.*
                                                          FROM SA_0452T A
                                                             , SA_0452T B
                                                         WHERE A.DLR_CD = B.DLR_CD
                                                           AND A.FIN_DOC_NO = B.FIN_DOC_NO
                                                           AND A.SEQ = B.CANCLE_SEQ
                                                           AND NVL(B.CANCLE_SEQ, 0) != 0
                                                   ) B     /* 환불 내역 */
                                               WHERE A.DLR_CD = B.DLR_CD(+)
                                                 AND A.FIN_DOC_NO = B.FIN_DOC_NO(+)
                                                 AND A.SEQ = B.SEQ(+)
                                                 AND B.SEQ IS NULL               -- 환불건 제외
                                                 AND A.RECP_DT IS NOT NULL
                                                 AND A.COL_TP = '01'            -- 수납
                                               GROUP BY A.DLR_CD, A.FIN_DOC_NO
                                           ) B
                                     WHERE A.DLR_CD = B.DLR_CD
                                       AND A.FIN_DOC_NO = B.FIN_DOC_NO
                                       AND A.SEQ = B.SEQ
                                  ) C   --  환불건을 제외한 최종차수의 수납내역
                    ON A.DLR_CD = C.DLR_CD
                   AND A.FIN_DOC_NO = C.FIN_DOC_NO
                 WHERE 1 = 1
                   AND A.DLR_CD = #{sDlrCd}
                 <if test='sFinDocNo != null and sFinDocNo != ""'>
                   AND A.FIN_DOC_NO = #{sFinDocNo}
                 </if>
                 <if test='sJobContractNo != null and sJobContractNo != ""'>
                           AND A.JOB_CONTRACT_NO = #{sJobContractNo}
                 </if>
    </select>

    <!-- 기동차 영수증 조회 -->
    <select id="selectReceiptSearchByKey" parameterType="PayInfoSearchVO" resultType="PayInfoVO">
    /* [chn.bhmc.dms.sal.fin.service.dao.PayInfoDAO.selectReceiptSearchByKey] */
        SELECT A.CONTRACT_NO AS JOB_CONTRACT_NO
             , A.DLR_CD
             , B.RECEIPT_NO
             , B.RECEIPT_ISS_DT
          FROM SA_0201T A
         INNER JOIN SA_0501T B
            ON A.DLR_CD = B.DLR_CD
           AND A.VIN_NO = B.VIN_NO
           AND B.RECEIPT_NO IS NOT NULL
         WHERE 1 = 1
           AND A.DLR_CD = #{sDlrCd}
           AND A.CONTRACT_NO = #{sJobContractNo}
    </select>

</mapper>