<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--
    SQL File Name : MobMainDAO_SqlMap.xml
    Description : 모바일 메인화면  데이터처리
    author Kang Seok Han
    since 2017. 5. 18.
    version 1.0
    Modification Information
       since          author              description
    ===========    =============    ===========================
    2017. 05. 18.  Kang Seok Han    최초 생성
-->

<mapper namespace="chn.bhmc.dms.mob.cmm.service.dao.MobMainDAO">

    <!-- 일별,차종별 소매판매 차트 출력용 데이터 ResultMap -->
    <resultMap id="chartDataResultMap" type="map">
        <result property="category" column="CATEGORY" javaType="java.lang.String" jdbcType="VARCHAR" />
        <result property="value" column="VALUE" javaType="java.lang.Integer" jdbcType="INTEGER" />
    </resultMap>

    <!-- 월별 서비스생산액 차트출력용 데이터 ResultMap -->
    <resultMap id="calcTotAmtResultMap" type="map">
        <result property="category" column="CATEGORY" javaType="java.lang.String" jdbcType="VARCHAR" />
        <result property="prevYear" column="PREV_YEAR" javaType="java.lang.Double" jdbcType="NUMERIC" />
        <result property="currYear" column="CURR_YEAR" javaType="java.lang.Double" jdbcType="NUMERIC" />
    </resultMap>

    <!-- 월별 판매수량을 조회한다. -->
    <select id="selectSalesCount" parameterType="map" resultType="int">
        /* [chn.bhmc.dms.mob.cmm.service.dao.MobMainDAO.selectSalesCount */
        SELECT COUNT(*) AS VALUE
        FROM (
            SELECT
                ROW_NUMBER() OVER(PARTITION BY A.KMVIN ORDER BY TO_DATE(A.KMTRDY || A.KMTRTM, 'YYYYMMDD HH24MISS') DESC) AS RNUM
            FROM SA_0301T A, SA_0121T B
            WHERE
                A.KMVIN = B.VIN_NO
                AND B.DLR_CD = A.KMDELR
                AND A.KMDELR = #{dlrCd}
                AND SUBSTR(A.KMTRDY,1,6) = #{yyyymm}
                <if test='kmoptList != null and kmoptList.size > 0'>
                    AND A.KMOPT IN
                    <foreach item="kmopt" index="index" collection="kmoptList" open="(" separator="," close=")">
                        #{kmopt}
                    </foreach>
                </if>
        )T1
        WHERE RNUM = 1
    </select>

    <!-- 기간별 소매판매 수량을 조회한다. -->
    <select id="selectCustSalesCount" parameterType="map" resultType="int">
        /* [chn.bhmc.dms.mob.cmm.service.dao.MobMainDAO.selectCustSalesCount */
        SELECT COUNT(*) AS VALUE
        FROM SA_0121T
        WHERE 1 = 1
            AND ORD_DLR_CD = #{dlrCd}
            AND CAR_STAT_CD = '70'
            AND NCAR_DSTIN_CD = 'N'
            AND CUST_SALE_DT <![CDATA[>=]]> #{startCustSaleDt}
            AND CUST_SALE_DT <![CDATA[<]]> #{endCustSaleDt}+1
    </select>

    <!--
            일별 소매판매 수량 조회.
            일별 소매판매 차트 출력용 데이터
    -->
    <select id="selectDailyCustSalesList" parameterType="string" resultMap="chartDataResultMap">
        /* [chn.bhmc.dms.mob.cmm.service.dao.MobMainDAO.selectDailyCustSalesList */
        SELECT
            T1.DD AS CATEGORY
            ,NVL(T2.CNT, 0) AS VALUE
        FROM (
            SELECT LEVEL AS DD
            FROM (
                SELECT SUBSTR(TO_CHAR(LAST_DAY(TO_DATE(#{yyyymm},'YYYYMM')) ,'YYYYMMDD') ,7,2) AS DD
                FROM DUAL
            ) CONNECT BY LEVEL <![CDATA[<=]]> DD
        ) T1 LEFT JOIN (
            SELECT TO_CHAR(CUST_SALE_DT, 'DD') AS DD, COUNT(*) AS CNT
            FROM SA_0121T
            WHERE 1 = 1
                AND ORD_DLR_CD = #{dlrCd}
                AND CAR_STAT_CD = '70'
                AND NCAR_DSTIN_CD = 'N'
                AND CUST_SALE_DT <![CDATA[>=]]> TO_DATE(#{yyyymm},'YYYYMM')
                AND CUST_SALE_DT <![CDATA[<]]> LAST_DAY(TO_DATE(#{yyyymm},'YYYYMM'))+1
            GROUP BY TO_CHAR(CUST_SALE_DT, 'DD')
        ) T2 ON T1.DD = T2.DD
        ORDER BY T1.DD ASC
    </select>

    <!--
            차종별 소매판매 수량 조회
            차종별 소매판매 차트 출력용 데이터
    -->
    <select id="selectCustSalesListByCarline" parameterType="string" resultMap="chartDataResultMap">
        /* [chn.bhmc.dms.mob.cmm.service.dao.MobMainDAO.selectCustSalesListByCarline */
        SELECT
            FN_GET_CARLINE_NM(CARLINE_CD) AS CATEGORY,
            COUNT(*) AS VALUE
        FROM SA_0121T
        WHERE 1 = 1
            AND ORD_DLR_CD = #{dlrCd}
            AND CAR_STAT_CD = '70'
            AND NCAR_DSTIN_CD = 'N'
            AND CUST_SALE_DT <![CDATA[>=]]> TO_DATE(#{yyyymm},'YYYYMM')
            AND CUST_SALE_DT <![CDATA[<]]> LAST_DAY(TO_DATE(#{yyyymm},'YYYYMM'))+1
        GROUP BY CARLINE_CD
    </select>

    <!--
            전시장 방문자수 조회
    -->
    <select id="selectVisitCount" parameterType="map" resultType="int">
        /* [chn.bhmc.dms.mob.cmm.service.dao.MobMainDAO.selectVisitCount */
        SELECT COUNT(*)
        FROM CR_0214T
        WHERE 1 = 1
            AND DLR_CD = #{dlrCd}
            AND VSIT_DT <![CDATA[>=]]> #{startVsitDt}
            AND VSIT_DT <![CDATA[<]]> #{endVsitDt}+1
    </select>

    <!--
            판매기회 수량 조회
    -->
    <select id="selectLeadCount" parameterType="map" resultType="int">
        /* [chn.bhmc.dms.mob.cmm.service.dao.MobMainDAO.selectLeadCount */
        SELECT COUNT(*)
        FROM CR_0211T
        WHERE 1 = 1
            AND DLR_CD = #{dlrCd}
            AND LEAD_STAT_CD IN
            <foreach item="leadStatCd" index="index" collection="leadStatCdList" open="(" separator="," close=")">
                #{leadStatCd}
            </foreach>
            <if test='befLeadStatCd != null and befLeadStatCd != ""'>
            AND BEF_LEAD_STAT_CD = #{befLeadStatCd}
            </if>
    </select>

    <!--
            판매기회 당일 예약수
    -->
    <select id="selectReservedLeadCount" parameterType="map" resultType="int">
        /* [chn.bhmc.dms.mob.cmm.service.dao.MobMainDAO.selectReservedLeadCount */
        SELECT COUNT(*)
        FROM CR_0211T
        WHERE
            DLR_CD = #{dlrCd}
            AND VSIT_RESV_DT <![CDATA[>=]]> #{startVsitResvDt}
            AND VSIT_RESV_DT <![CDATA[<]]> #{endVsitResvDt}+1
    </select>

    <!--
            판매기회 예약후 당일 방문수
    -->
    <select id="selectVisitReservedLeadCount" parameterType="map" resultType="int">
        /* [chn.bhmc.dms.mob.cmm.service.dao.MobMainDAO.selectVisitReservedLeadCount */
        SELECT COUNT(*)
        FROM CR_0211T
        WHERE
            DLR_CD = #{dlrCd}
            AND VSIT_RESV_DT IS NOT NULL
            AND VSIT_DT <![CDATA[>=]]> #{startVsitDt}
            AND VSIT_DT <![CDATA[<]]> #{endVsitDt}+1
    </select>

    <!--
            제조사클레임 목록수 조회
    -->
    <select id="selectOutstandingVocClaimCount" parameterType="string" resultType="int">
        /* [chn.bhmc.dms.mob.cmm.service.dao.MobMainDAO.selectOutstandingVocClaimCount */
        SELECT COUNT(*)
        FROM CR_0601T
        WHERE 1 = 1
            AND DLR_CD = #{value}
            AND VOC_TP_CD = '02'
            AND VOC_STAT_CD NOT IN ('06','07')
            AND BHMC_YN = 'Y'
    </select>

    <!--
            진행중인 캠페인 목록수 조회
    -->
    <select id="selectOutstandingCampaignCount" parameterType="string" resultType="int">
        /* [chn.bhmc.dms.mob.cmm.service.dao.MobMainDAO.selectOutstandingCampaignCount */
        SELECT COUNT(*)
        FROM CR_0701T
        WHERE 1 = 1
            AND DLR_CD = #{value}
            AND STAT_CD = '03'
            AND CR_END_TP = 'N'
            AND START_DT <![CDATA[<=]]> SYSDATE
            AND END_DT <![CDATA[>=]]> TO_DATE(TO_CHAR(SYSDATE, 'YYYYMMDD'))
    </select>

    <!-- 장면금액,재고금액 조회 -->
    <select id="selectStockInOutAmtSummary" parameterType="string" resultType="map">
        /* [chn.bhmc.dms.mob.cmm.service.dao.MobMainDAO.selectStockInOutAmtSummary */
        SELECT
             NVL(SUM((NVL(A.AVLB_STOCK_QTY,0) + NVL(A.RESV_STOCK_QTY,0) - NVL(A.BORROW_QTY,0) + NVL(A.RENT_QTY,0)) * (NVL(F.MOVING_AVG_PRC, B.MOVING_AVG_PRC))), 0) AS STOCK_AMT
            ,NVL(SUM((NVL(A.AVLB_STOCK_QTY,0)) * (NVL(F.MOVING_AVG_PRC, B.MOVING_AVG_PRC))), 0) AS STOCK_AVLB_AMT
        FROM PT_0301T A
        INNER JOIN CM_0104T I ON A.DLR_CD = I.DLR_CD AND A.PLT_CD = I.PLT_CD AND A.STRGE_CD = I.STRGE_CD
        LEFT JOIN PT_0201T B ON A.DLR_CD  = B.DLR_CD AND A.ITEM_CD = B.ITEM_CD
        LEFT JOIN PT_0208T F ON A.DLR_CD = F.DLR_CD AND A.STRGE_CD = F.STRGE_CD AND A.ITEM_CD = F.ITEM_CD
        WHERE
            A.DLR_CD = #{dlrCd}
            AND B.ITEM_DSTIN_CD != '20'
    </select>

    <!-- 부품 입고금액 조회 -->
    <select id="selectItemGrAmt" parameterType="map" resultType="double">
        /* [chn.bhmc.dms.mob.cmm.service.dao.MobMainDAO.selectItemGrAmt */
        SELECT
            NVL(SUM(NVL(T1.PURC_AMT, T1.MOVING_AVG_AMT)), 0) AS VALUE
        FROM
        (
            SELECT
                A.MOVING_AVG_AMT
                ,CASE WHEN C.STOCK_CALC_TP = '-' THEN
                    CASE WHEN A.PURC_PRC = 0 THEN A.MOVING_AVG_PRC * A.ITEM_QTY * -1
                    ELSE NVL(A.PURC_PRC, A.MOVING_AVG_PRC) * A.ITEM_QTY * -1
                    END
                ELSE
                    CASE WHEN A.PURC_PRC = 0 THEN A.MOVING_AVG_PRC * A.ITEM_QTY
                    ELSE NVL(A.PURC_PRC, A.MOVING_AVG_PRC) * A.ITEM_QTY
                    END
                END PURC_AMT
            FROM PT_0312T A
            INNER JOIN PT_0311T B ON A.DLR_CD = B.DLR_CD AND A.MVT_DOC_YY_MM = B.MVT_DOC_YY_MM AND A.MVT_DOC_NO = B.MVT_DOC_NO
            INNER JOIN PT_0102T C ON B.DLR_CD = C.DLR_CD AND B.MVT_TP = C.MVT_TP
            LEFT JOIN PT_0201T D ON A.DLR_CD = D.DLR_CD AND A.ITEM_CD = D.ITEM_CD
            WHERE A.DLR_CD = #{dlrCd}
            AND (C.MVT_GR_GI_TP = 'R' or (C.MVT_GR_GI_TP = 'T' AND A.DEBIT_CREDIT_DSTIN_CD = 'S'))
            AND B.STMT_PROC_DT <![CDATA[>=]]> #{startGrDt}
            AND B.STMT_PROC_DT <![CDATA[<]]> #{endGrDt} + 1
            AND D.ITEM_DSTIN_CD != '20'     <!-- 용품제외 -->
        )T1
    </select>

    <!-- 부품 출고금액 조회 -->
    <select id="selectItemGiAmt" parameterType="map" resultType="double">
        /* [chn.bhmc.dms.mob.cmm.service.dao.MobMainDAO.selectItemGiAmt */
        SELECT
            NVL(SUM(NVL(T1.SALE_AMT, T1.MOVING_AVG_AMT)), 0) AS VALUE
        FROM
        (
            SELECT
            CASE WHEN B.MVT_TP = '21' THEN
                    CASE WHEN A.DEBIT_CREDIT_DSTIN_CD = 'H' THEN NVL(A.SALE_AMT,0)
                         ELSE 0
                    END
                 WHEN B.MVT_TP = '22' THEN
                    CASE WHEN A.DEBIT_CREDIT_DSTIN_CD = 'S' THEN NVL(A.SALE_AMT,0) * -1
                         ELSE 0
                    END
                ELSE
                    CASE WHEN C.STOCK_CALC_TP = '+' THEN A.SALE_AMT * -1
                         ELSE A.SALE_AMT
                    END
            END SALE_AMT
            ,A.MOVING_AVG_PRC
            ,CASE WHEN B.MVT_TP = '21' THEN
                    CASE WHEN A.DEBIT_CREDIT_DSTIN_CD = 'H' THEN NVL(A.MOVING_AVG_AMT,0)
                         ELSE 0
                    END
                  WHEN B.MVT_TP = '22' THEN
                    CASE WHEN A.DEBIT_CREDIT_DSTIN_CD = 'S' THEN NVL(A.MOVING_AVG_AMT,0) * -1
                         ELSE 0
                    END
                  ELSE
                    CASE WHEN C.STOCK_CALC_TP = '+' THEN A.MOVING_AVG_AMT * -1
                    ELSE A.MOVING_AVG_AMT
                    END
            END MOVING_AVG_AMT
            FROM PT_0312T A
            INNER JOIN PT_0311T B ON A.DLR_CD = B.DLR_CD AND A.MVT_DOC_YY_MM = B.MVT_DOC_YY_MM AND A.MVT_DOC_NO = B.MVT_DOC_NO
            INNER JOIN PT_0102T C ON B.DLR_CD = C.DLR_CD AND B.MVT_TP = C.MVT_TP
            LEFT JOIN PT_0201T D ON A.DLR_CD = D.DLR_CD AND A.ITEM_CD = D.ITEM_CD
            WHERE
                A.DLR_CD = #{dlrCd}
                AND (C.MVT_GR_GI_TP = 'I' or C.MVT_GR_GI_TP = 'T')
                AND B.STMT_PROC_DT <![CDATA[>=]]> #{startGiDt}
                AND B.STMT_PROC_DT <![CDATA[<]]> #{endGiDt} + 1
            AND D.ITEM_DSTIN_CD != '20'     <!-- 용품제외 -->
            AND B.MVT_TP NOT IN ('23','24')
        )T1
    </select>

    <!-- 부품 판매금액 조회 -->
    <select id="selectItemSalesAmt" parameterType="map" resultType="double">
        /* [chn.bhmc.dms.mob.cmm.service.dao.MobMainDAO.selectItemSalesAmt */
        SELECT
            NVL(SUM(NVL(T1.SALE_AMT, T1.MOVING_AVG_AMT)), 0) AS VALUE
        FROM
        (
            SELECT
                CASE WHEN B.MVT_TP = '21' THEN
                    CASE WHEN A.DEBIT_CREDIT_DSTIN_CD = 'H' THEN NVL(A.SALE_AMT,0)
                         ELSE 0
                    END
                 WHEN B.MVT_TP = '22' THEN
                    CASE WHEN A.DEBIT_CREDIT_DSTIN_CD = 'S' THEN NVL(A.SALE_AMT,0) * -1
                         ELSE 0
                    END
                ELSE
                    CASE WHEN C.STOCK_CALC_TP = '+' THEN A.SALE_AMT * -1
                         ELSE A.SALE_AMT
                    END
            END SALE_AMT
            ,A.MOVING_AVG_PRC
            ,CASE WHEN B.MVT_TP = '21' THEN
                    CASE WHEN A.DEBIT_CREDIT_DSTIN_CD = 'H' THEN NVL(A.MOVING_AVG_AMT,0)
                         ELSE 0
                    END
                  WHEN B.MVT_TP = '22' THEN
                    CASE WHEN A.DEBIT_CREDIT_DSTIN_CD = 'S' THEN NVL(A.MOVING_AVG_AMT,0) * -1
                         ELSE 0
                    END
                  ELSE
                    CASE WHEN C.STOCK_CALC_TP = '+' THEN A.MOVING_AVG_AMT * -1
                    ELSE A.MOVING_AVG_AMT
                    END
            END MOVING_AVG_AMT
            FROM PT_0312T A
            INNER JOIN PT_0311T B ON A.DLR_CD = B.DLR_CD AND A.MVT_DOC_YY_MM = B.MVT_DOC_YY_MM AND A.MVT_DOC_NO = B.MVT_DOC_NO
            INNER JOIN PT_0102T C ON B.DLR_CD = C.DLR_CD AND B.MVT_TP = C.MVT_TP
            LEFT JOIN PT_0201T D ON A.DLR_CD = D.DLR_CD AND A.ITEM_CD = D.ITEM_CD
            WHERE
                A.DLR_CD = #{dlrCd}
                AND (C.MVT_GR_GI_TP = 'I' or C.MVT_GR_GI_TP = 'T')
                AND B.STMT_PROC_DT <![CDATA[>=]]> #{startGiDt}
                AND B.STMT_PROC_DT <![CDATA[<]]> #{endGiDt} + 1
            AND B.MVT_TP IN ('71', '73')    <!-- 수불유형 : 판매출고, 판매출고반품 -->
            AND D.ITEM_DSTIN_CD != '20'     <!-- 용품제외 -->
        )T1
    </select>

    <!-- 구매오더 수량 조회 -->
    <select id="selectPurcharsOrderCount" parameterType="map" resultType="int">
        /* [chn.bhmc.dms.mob.cmm.service.dao.MobMainDAO.selectPurcharsOrderCount */
        SELECT COUNT(*)
        FROM PT_0421T
        WHERE
            DLR_CD = #{dlrCd}
            AND PURC_ORD_STAT_CD = #{purcOrdStatCd}
    </select>

    <!-- 선수금 사용금액 조회 -->
    <select id="selectUsedAmtReceivedInAdvanced" parameterType="string" resultType="double">
        /* [chn.bhmc.dms.mob.cmm.service.dao.MobMainDAO.selectUsedAmtReceivedInAdvanced] */
        SELECT NVL(SUM(CALC_AMT), 0) AS VALUE
        FROM PT_0701T
        WHERE DLR_CD = #{dlrCd}
    </select>

    <!-- 정비위탁대차 수량 조회 -->
    <select id="selectRepairOrderCount" parameterType="map" resultType="int">
        /* [chn.bhmc.dms.mob.cmm.service.dao.MobMainDAO.selectRepairOrderCount] */
        SELECT COUNT(*)
        FROM SE_0300T
        WHERE
            DLR_CD = #{dlrCd}
            AND RO_DT <![CDATA[>=]]> #{startRoDt}
            AND RO_DT <![CDATA[<]]> #{endRoDt}+1
            AND RO_STAT_CD != '06'
    </select>

    <!-- 정비생산액 조회 -->
    <select id="selectCalcTotAmt" parameterType="map" resultType="double">
        /* [chn.bhmc.dms.mob.cmm.service.dao.MobMainDAO.selectCalcTotAmt] */
        SELECT NVL(SUM(NVL(T2.PAYM_AMT, 0)), 0) AS VALUE
        FROM VW_SER_AMT_SUMMARY T1
        INNER JOIN SE_0530T T2 ON
            T1.DLR_CD = T2.DLR_CD
            AND T1.CALC_DOC_NO = T2.CALC_DOC_NO
        WHERE
            T1.DLR_CD = #{dlrCd}
            AND T1.CALC_DT <![CDATA[>=]]> #{startCalcDt}
            AND T1.CALC_DT <![CDATA[<]]> #{endCalcDt}+1
            AND T1.CALC_STAT_CD != '07'
            AND T1.CALC_CANC_YN = 'N'
    </select>

    <!-- 정비매출 조회 -->
    <select id="selectCalcSales" parameterType="map" resultType="double">
        /* [chn.bhmc.dms.mob.cmm.service.dao.MobMainDAO.selectCalcTotAmt] */
        SELECT NVL(SUM(NVL(PAYM_AMT,0)) - SUM(NVL(MOVING_AVG_AMT, 0)),0) AS CALC_TOTAMT_EXCLUDE_ITEMPRICE
        FROM (
            SELECT PAYM_AMT, 0 AS MOVING_AVG_AMT, PRE_MM
            FROM (SELECT
                   (SELECT SUM(NVL(PAYM_AMT, 0)) FROM SE_0530T WHERE DLR_CD = #{dlrCd} AND CALC_DOC_NO = CA.CALC_DOC_NO) AS PAYM_AMT
                   ,(SELECT SUM(NVL(MOVING_AVG_AMT, 0)) FROM SE_0160T WHERE PREFIX_ID = 'RO' AND DLR_CD = #{dlrCd} AND DOC_NO = CA.RO_DOC_NO) AS MOVING_AVG_AMT
                   ,CA.DLR_CD
                   ,CA.CALC_DT
                   ,CA.CALC_STAT_CD
                   ,CA.CALC_CANC_YN
                   ,TO_CHAR(CA.CALC_DT, 'MM') AS PRE_MM
                FROM SE_0500T CA
                WHERE
                    DLR_CD = #{dlrCd}
                    AND CALC_DT <![CDATA[>=]]> #{startCalcDt}
                    AND CALC_DT <![CDATA[<]]> #{endCalcDt}+1
                    AND CALC_STAT_CD = '00'
                    AND SER_PAR_DSTIN_CD = 'SER'
                    AND CALC_CANC_YN = 'N')

            UNION ALL

            SELECT 0 AS PAYM_AMT, C.MOVING_AVG_AMT, A.PRE_MM
            FROM (SELECT
                   (SELECT SUM(NVL(PAYM_AMT, 0)) FROM SE_0530T WHERE DLR_CD = #{dlrCd} AND CALC_DOC_NO = CA.CALC_DOC_NO) AS PAYM_AMT
                   ,(SELECT SUM(NVL(MOVING_AVG_AMT, 0)) FROM SE_0160T WHERE PREFIX_ID = 'RO' AND DLR_CD = #{dlrCd} AND DOC_NO = CA.RO_DOC_NO) AS MOVING_AVG_AMT
                   ,CA.DLR_CD
                   ,CA.CALC_DT
                   ,CA.CALC_STAT_CD
                   ,CA.CALC_CANC_YN
                   ,CA.RO_DOC_NO
                   ,TO_CHAR(CA.CALC_DT, 'MM') AS PRE_MM
                FROM SE_0500T CA
                WHERE
                    DLR_CD = #{dlrCd}
                    AND CALC_DT <![CDATA[>=]]> #{startCalcDt}
                    AND CALC_DT <![CDATA[<]]> #{endCalcDt}+1
                    AND CALC_STAT_CD = '00'
                    AND SER_PAR_DSTIN_CD = 'SER'
                    AND CALC_CANC_YN = 'N') A
            INNER JOIN PT_0502T B
            ON A.DLR_CD = B.DLR_CD
            AND A.RO_DOC_NO = B.RO_DOC_NO
            INNER JOIN PT_0312T C
            ON A.DLR_CD = B.DLR_CD
            AND B.PAR_REQ_DOC_NO = C.REF_DOC_NO
            AND B.PAR_REQ_DOC_LINE_NO = C.REF_DOC_LINE_NO
            WHERE PAR_GI_TP = 'RO'
        )
    </select>

    <!--
            월별 서비스생산액 데이터 조회
            월별 서비스생산액 차트출력용 데이터 조회
    -->
    <select id="selectMonthlyCalcTotAmtList" parameterType="map" resultMap="calcTotAmtResultMap">
        /* [chn.bhmc.dms.mob.cmm.service.dao.MobMainDAO.selectMonthlyCalcTotAmtList] */
        SELECT
            V2.MM AS CATEGORY
            ,NVL(V1.PREV_YEAR, 0) AS PREV_YEAR
            ,NVL(V1.CURR_YEAR, 0) AS CURR_YEAR
        FROM (
            SELECT
                 SUM(CASE WHEN YYYY = #{prevYyyy} THEN PAYM_AMT ELSE 0 END) AS PREV_YEAR
                ,SUM(CASE WHEN YYYY = #{currYyyy} THEN PAYM_AMT ELSE 0 END) AS CURR_YEAR
                ,PRE_MM
            FROM (
                SELECT TO_CHAR(CALC_DT, 'YYYY') AS YYYY, NVL(T2.PAYM_AMT, 0) AS PAYM_AMT, PRE_MM
                FROM VW_SER_AMT_SUMMARY T1
                INNER JOIN SE_0530T T2 ON
                    T1.DLR_CD = T2.DLR_CD
                    AND T1.CALC_DOC_NO = T2.CALC_DOC_NO
                WHERE
                    T1.DLR_CD = #{dlrCd}
                    AND T1.CALC_DT <![CDATA[>=]]> TO_DATE(#{prevYyyy}||'0101', 'YYYYMMDD')
                    AND T1.CALC_DT <![CDATA[<]]> TO_DATE(#{currYyyy}||'1231', 'YYYYMMDD')+1
                    AND T1.CALC_STAT_CD != '07'
                    AND T1.CALC_CANC_YN = 'N'
            ) K1
            GROUP BY K1.PRE_MM
        ) V1 RIGHT JOIN (
            SELECT LPAD(LEVEL,2,'0') AS MM
            FROM (
                SELECT 12 AS MM
                FROM DUAL
            ) CONNECT BY LEVEL <![CDATA[<=]]> MM
        ) V2 ON V1.PRE_MM = V2.MM
        ORDER BY V2.MM ASC
    </select>

    <!-- 정비금액집계정보 조회 -->
    <select id="selectRepairOrderAmtSummary" parameterType="map" resultType="map">
        /* [chn.bhmc.dms.mob.cmm.service.dao.MobMainDAO.selectRepairOrderAmtSummary] */
        SELECT
            COUNT(CALC_DOC_NO) AS CALC_DOC_CNT                          <!-- 서비스정산대차 -->
            ,ROUND(
                CASE
                WHEN COUNT(CALC_DOC_NO ) > 0
                THEN SUM(PAYM_AMT) / COUNT(CALC_DOC_NO)
                ELSE 0 END, 2
            ) AS CALC_DOC_AVG_AMT                                       <!-- 한대차생산액 -->
            ,ROUND(
                CASE
                WHEN COUNT(DISTINCT(VIN_NO)) > 0
                THEN SUM(PAYM_AMT) / COUNT(DISTINCT(VIN_NO))
                ELSE 0 END, 2
            ) AS CALC_VIN_AVG_AMT                                       <!-- 한대당생산액 -->
        FROM (SELECT
                   (SELECT SUM(NVL(PAYM_AMT, 0)) FROM SE_0530T WHERE DLR_CD = #{dlrCd} AND CALC_DOC_NO = CA.CALC_DOC_NO) AS PAYM_AMT
                   ,CA.DLR_CD
                   ,CA.VIN_NO
                   ,CA.CALC_DT
                   ,CA.CALC_DOC_NO
                   ,CA.CALC_STAT_CD
                   ,CA.CALC_CANC_YN
                FROM SE_0500T CA
                WHERE
                    DLR_CD = #{dlrCd}
                    AND CALC_DT <![CDATA[>=]]> #{startCalcDt}
                    AND CALC_DT <![CDATA[<]]> #{endCalcDt}+1
                    AND CALC_STAT_CD = '00'
                    AND SER_PAR_DSTIN_CD = 'SER'
                    AND CALC_CANC_YN = 'N')
    </select>

    <!--
            당월 차종별 서비스 정산 대차 데이터 조회
            당월 차종별 서비스 정산 대차 차트출력용 데이터 조회
    -->
    <select id="selectCalcDocListByCarline" parameterType="map" resultMap="chartDataResultMap">
        /* [chn.bhmc.dms.mob.cmm.service.dao.MobMainDAO.selectCalcDocListByCarline] */
        SELECT
            CARLINE_CD AS CATEGORY
            ,COUNT(CALC_DOC_NO) AS VALUE
        FROM VW_SER_AMT_SUMMARY
        WHERE
            DLR_CD = #{dlrCd}
            AND CALC_DT <![CDATA[>=]]> #{startCalcDt}
            AND CALC_DT <![CDATA[<]]> #{endCalcDt}+1
            AND CALC_STAT_CD != '07'
            AND CALC_CANC_YN = 'N'
        GROUP BY CARLINE_CD
    </select>

    <!--
            당월 수리유형별 서비스 정산 대차 데이터 조회
            당월 수리유형별 서비스 정산 대차 차트출력용 데이터 조회
    -->
    <select id="selectCalcDocListByRepairOrderType" parameterType="map" resultMap="chartDataResultMap">
        /* [chn.bhmc.dms.mob.cmm.service.dao.MobMainDAO.selectCalcDocListByRepairOrderType] */
        SELECT
            FN_GET_CMMCD_NM('SER031', RO_TP, #{langCd}) AS CATEGORY
            ,COUNT(CALC_DOC_NO) AS VALUE
        FROM VW_SER_AMT_SUMMARY
        WHERE
            DLR_CD = #{dlrCd}
            AND CALC_DT <![CDATA[>=]]> #{startCalcDt}
            AND CALC_DT <![CDATA[<]]> #{endCalcDt}+1
            AND CALC_STAT_CD != '07'
            AND CALC_CANC_YN = 'N'
        GROUP BY RO_TP
    </select>

</mapper>