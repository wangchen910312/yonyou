<?xml version="1.0" encoding="UTF-8"?>
<WorkBook xmlVersion="20151125" releaseVersion="8.0.0">
<TableDataMap>
<TableData name="selectSerTotCarLineNmDs" class="com.fr.data.impl.DBTableData">
<Parameters>
<Parameter>
<Attributes name="sStartYyMmDd"/>
<O>
<![CDATA[20170501]]></O>
</Parameter>
<Parameter>
<Attributes name="sCarlineCd"/>
<O>
<![CDATA[]]></O>
</Parameter>
<Parameter>
<Attributes name="sEndYyMmDd"/>
<O>
<![CDATA[20170530]]></O>
</Parameter>
<Parameter>
<Attributes name="sFosterTp"/>
<O>
<![CDATA[]]></O>
</Parameter>
<Parameter>
<Attributes name="sDlrCd"/>
<O>
<![CDATA[D0103]]></O>
</Parameter>
<Parameter>
<Attributes name="sDlrRoTp"/>
<O>
<![CDATA[]]></O>
</Parameter>
</Parameters>
<Attributes maxMemRowCount="-1"/>
<Connection class="com.fr.data.impl.NameDatabaseConnection">
<DatabaseName>
<![CDATA[BHDMS]]></DatabaseName>
</Connection>
<Query>
<![CDATA[-- 서비스종합리포트 : 차종별
SELECT CARLINE_NM
       ,NVL(COL01, 0) AS COL01
       ,NVL(COL02, 0) AS COL02
       ,NVL(COL03, 0) AS COL03
       ,NVL(COL04, 0) AS COL04
       ,NVL(COL05, 0) AS COL05
       ,NVL(COL06, 0) AS COL06
       ,NVL(COL07, 0) AS COL07
       ,NVL(COL08, 0) AS COL08
       ,NVL(COL09, 0) AS COL09
       ,NVL(COL10, 0) AS COL10
       ,NVL(COL11, 0) AS COL11
       ,NVL(COL12, 0) AS COL12
       ,NVL(COL13, 0) AS COL13
       ,NVL(COL14, 0) AS COL14
       ,NVL(COL15, 0) AS COL15
       ,NVL(COL16, 0) AS COL16
       ,NVL(COL17, 0) AS COL17
       ,NVL(COL18, 0) AS COL18
       ,NVL(COL19, 0) AS COL19
       ,NVL(COL20, 0) AS COL20
       ,NVL(COL21, 0) AS COL21
       ,NVL(COL22, 0) AS COL22
       ,NVL(COL23, 0) AS COL23
       ,NVL(COL24, 0) AS COL24
       ,NVL(COL25, 0) AS COL25
       ,NVL(COL26, 0) AS COL26
       ,NVL(COL27, 0) AS COL27
       ,NVL(COL28, 0) AS COL28
       ,NVL(COL29, 0) AS COL29
       ,NVL(COL30, 0) AS COL30
FROM (
    SELECT CARLINE_CD
           ,CASE WHEN CARLINE_CD IS NOT NULL
                 THEN NVL(FN_GET_CARLINE_NM(CARLINE_CD), 'No Name')
                 ELSE 'Other Car' END AS CARLINE_NM
           ,COLUMN_NM
           ,COLUMN_VAL
    FROM (
        WITH T1 AS (
            SELECT *
            FROM (
                SELECT (SELECT CARLINE_CD FROM SA_0121T WHERE VIN_NO = CA.VIN_NO AND ROWNUM = 1) AS CARLINE_CD
                       ,(SELECT SUM(NVL(PAYM_AMT, 0)) FROM SE_0530T WHERE DLR_CD = '${sDlrCd}' AND CALC_DOC_NO = CA.CALC_DOC_NO) AS PAYM_AMT
                       ,CA.DLR_CD
                       ,CA.VIN_NO
                       ,CA.RO_DOC_NO
                       ,CA.RO_TP
                       ,CA.CALC_DT
                       ,CA.CALC_DOC_NO
                       ,CA.CALC_STAT_CD
                       ,CA.CALC_CANC_YN
                       ,NVL(CA.LBR_CALC_AMT        ,0) AS LBR_CALC_AMT            --공임정산금액
                       ,NVL(CA.LBR_DC_RATE         ,0) AS LBR_DC_RATE             --공임할인율
                       ,NVL(CA.LBR_DC_AMT          ,0) AS LBR_DC_AMT              --공임할인금액
                       ,NVL(CA.LBR_BM_POINT_USE_AMT,0) AS LBR_BM_POINT_USE_AMT    --공임BM포인트사용금액
                       ,NVL(CA.LBR_BM_CUPN_USE_AMT ,0) AS LBR_BM_CUPN_USE_AMT     --공임BM쿠폰사용금액
                       ,NVL(CA.LBR_POINT_USE_AMT   ,0) AS LBR_POINT_USE_AMT       --공임포인트사용금액
                       ,NVL(CA.LBR_ETC_DC_AMT      ,0) AS LBR_ETC_DC_AMT          --공임기타할인금액
                       ,NVL(CA.LBR_CALC_SUM_AMT    ,0) AS LBR_CALC_SUM_AMT        --공임정산합계금액
                       ,NVL(CA.PAR_CALC_AMT        ,0) AS PAR_CALC_AMT            --부품정산금액
                       ,NVL(CA.PAR_DC_RATE         ,0) AS PAR_DC_RATE             --부품할인율
                       ,NVL(CA.PAR_DC_AMT          ,0) AS PAR_DC_AMT              --부품할인금액
                       ,NVL(CA.PAR_BM_POINT_USE_AMT,0) AS PAR_BM_POINT_USE_AMT    --부품BM포인트사용금액
                       ,NVL(CA.PAR_BM_CUPN_USE_AMT ,0) AS PAR_BM_CUPN_USE_AMT     --부품BM쿠폰사용금액
                       ,NVL(CA.PAR_POINT_USE_AMT   ,0) AS PAR_POINT_USE_AMT       --부품포인트사용금액
                       ,NVL(CA.PAR_ETC_DC_AMT      ,0) AS PAR_ETC_DC_AMT          --부품기타할인금액
                       ,NVL(CA.PAR_CALC_SUM_AMT    ,0) AS PAR_CALC_SUM_AMT        --부품정산합계금액
                       ,NVL(CA.ETC_CALC_AMT        ,0) AS ETC_CALC_AMT            --기타정산금액
                       ,NVL(CA.ETC_DC_RATE         ,0) AS ETC_DC_RATE             --기타할인율
                       ,NVL(CA.ETC_DC_AMT          ,0) AS ETC_DC_AMT              --기타할인금액
                       ,NVL(CA.ETC_BM_POINT_USE_AMT,0) AS ETC_BM_POINT_USE_AMT    --기타BM포인트사용금액
                       ,NVL(CA.ETC_BM_CUPN_USE_AMT ,0) AS ETC_BM_CUPN_USE_AMT     --기타BM쿠폰사용금액
                       ,NVL(CA.ETC_POINT_USE_AMT   ,0) AS ETC_POINT_USE_AMT       --기타포인트사용금액
                       ,NVL(CA.ETC_OTHER_DC_AMT    ,0) AS ETC_OTHER_DC_AMT        --기타다른할인금액
                       ,NVL(CA.ETC_CALC_SUM_AMT    ,0) AS ETC_CALC_SUM_AMT        --기타정산합계금액
                       ,NVL(CA.CALC_TOT_AMT        ,0) AS CALC_TOT_AMT            --정산총금액
                       ,NVL(CA.DC_TOT_RATE         ,0) AS DC_TOT_RATE             --할인총율
                       ,NVL(CA.DC_TOT_AMT          ,0) AS DC_TOT_AMT              --할인총금액
                       ,NVL(CA.BM_POINT_TOT_AMT    ,0) AS BM_POINT_TOT_AMT        --BM포인트총금액
                       ,NVL(CA.BM_CUPN_TOT_AMT     ,0) AS BM_CUPN_TOT_AMT         --BM쿠폰총금액
                       ,NVL(CA.POINT_TOT_AMT       ,0) AS POINT_TOT_AMT           --포인트총금액
                       ,NVL(CA.ETC_TOT_AMT         ,0) AS ETC_TOT_AMT             --기타총금액
                       ,NVL(CA.LAST_CALC_TOT_AMT   ,0) AS LAST_CALC_TOT_AMT       --최종정산총금액
                       ,TO_CHAR(CA.CALC_DT, 'MM') AS PRE_MM
                       ,(SELECT DLR_RO_TP FROM SE_0300T WHERE DLR_CD = CA.DLR_CD AND RO_DOC_NO = CA.RO_DOC_NO) AS DLR_RO_TP
                FROM SE_0500T CA
                WHERE CA.DLR_CD = '${sDlrCd}'
                AND CA.CALC_CANC_YN = 'N'
                AND CA.CALC_STAT_CD = '00'
                AND CA.SER_PAR_DSTIN_CD = 'SER'
                AND TO_CHAR(CA.CALC_DT, 'YYYYMMDD') BETWEEN '${sStartYyMmDd}' AND '${sEndYyMmDd}'
                ${IF(LEN(sFosterTp) <= 0,""," AND NVL(CA.RO_TP, 'NONE')='" + sFosterTp + "'")}   --위탁유형
            )
            WHERE 1=1
            ${IF(LEN(sDlrRoTp) <= 0,""," AND NVL(DLR_RO_TP, 'NONE')='" + sDlrRoTp + "'")}
        )
        SELECT 'COL01' AS COLUMN_NM, COUNT(DISTINCT(VIN_NO)) COLUMN_VAL, CARLINE_CD
        FROM (
            SELECT PRE.DLR_CD
                   ,PRE.DIAG_DOC_NO
                   ,PRE.VIN_NO
                   ,(SELECT CARLINE_CD FROM SA_0121T WHERE VIN_NO = PRE.VIN_NO AND ROWNUM = 1) AS CARLINE_CD
            FROM SE_0200T PRE
            WHERE DLR_CD = '${sDlrCd}'
            AND TO_CHAR(PRE_CHK_DT,'YYYYMMDD') BETWEEN '${sStartYyMmDd}' AND '${sEndYyMmDd}'
            AND DIAG_STAT_CD != 'C'
        )
        GROUP BY CARLINE_CD     --사전점검대수

        UNION ALL

        SELECT 'COL02' AS COLUMN_NM, COUNT(DIAG_DOC_NO) COLUMN_VAL, CARLINE_CD
        FROM (
            SELECT PRE.DLR_CD
                   ,PRE.DIAG_DOC_NO
                   ,PRE.VIN_NO
                   ,(SELECT CARLINE_CD FROM SA_0121T WHERE VIN_NO = PRE.VIN_NO AND ROWNUM = 1) AS CARLINE_CD
            FROM SE_0200T PRE
            WHERE DLR_CD = '${sDlrCd}'
            AND TO_CHAR(PRE_CHK_DT,'YYYYMMDD') BETWEEN '${sStartYyMmDd}' AND '${sEndYyMmDd}'
            AND DIAG_STAT_CD != 'C'
        )
        GROUP BY CARLINE_CD          --사전점검대차

        UNION ALL

        SELECT 'COL03' AS COLUMN_NM, COUNT(DISTINCT(VIN_NO)) COLUMN_VAL, CARLINE_CD        --RO 대수
        FROM (
            SELECT * FROM (
                SELECT DLR_CD
                       ,RO_DOC_NO
                       ,VIN_NO
                       ,(SELECT CARLINE_CD FROM SA_0121T WHERE VIN_NO = RO.VIN_NO AND ROWNUM = 1) AS CARLINE_CD
                       ,TO_CHAR(RO_DT,'MM') AS PRE_MM
                       ,RO_TP
                       ,DLR_RO_TP
                FROM SE_0300T RO
                WHERE DLR_CD = '${sDlrCd}'
                AND TO_CHAR(RO_DT,'YYYYMMDD') BETWEEN '${sStartYyMmDd}' AND '${sEndYyMmDd}'
                AND RO_STAT_CD != '06'
                ${IF(LEN(sFosterTp) <= 0,""," AND NVL(RO.RO_TP, 'NONE')='" + sFosterTp + "'")}
                ${IF(LEN(sDlrRoTp) <= 0,""," AND NVL(DLR_RO_TP, 'NONE')='" + sDlrRoTp + "'")}
            )
            WHERE 1=1
            ${IF(LEN(sCarlineCd) <= 0,""," AND NVL(CARLINE_CD, 'NONE')='" + sCarlineCd + "'")}
        )
        GROUP BY CARLINE_CD

        UNION ALL

        SELECT 'COL04' AS COLUMN_NM, COUNT(RO_DOC_NO) COLUMN_VAL, CARLINE_CD               --RO 대차
        FROM (
            SELECT * FROM (
                SELECT DLR_CD
                       ,RO_DOC_NO
                       ,VIN_NO
                       ,(SELECT CARLINE_CD FROM SA_0121T WHERE VIN_NO = RO.VIN_NO AND ROWNUM = 1) AS CARLINE_CD
                       ,TO_CHAR(RO_DT,'MM') AS PRE_MM
                       ,RO_TP
                       ,DLR_RO_TP
                FROM SE_0300T RO
                WHERE DLR_CD = '${sDlrCd}'
                AND TO_CHAR(RO_DT,'YYYYMMDD') BETWEEN '${sStartYyMmDd}' AND '${sEndYyMmDd}'
                AND RO_STAT_CD != '06'
                ${IF(LEN(sFosterTp) <= 0,""," AND NVL(RO_TP, 'NONE')='" + sFosterTp + "'")}
                ${IF(LEN(sDlrRoTp) <= 0,""," AND NVL(DLR_RO_TP, 'NONE')='" + sDlrRoTp + "'")}
            )
            WHERE 1=1
            ${IF(LEN(sCarlineCd) <= 0,""," AND NVL(CARLINE_CD, 'NONE')='" + sCarlineCd + "'")}
        )
        GROUP BY CARLINE_CD

        UNION ALL

        SELECT 'COL05' AS COLUMN_NM, COUNT(DISTINCT(VIN_NO)) COLUMN_VAL, CARLINE_CD       --RO 취소 대수
        FROM (
            SELECT * FROM (
                SELECT DLR_CD
                       ,RO_DOC_NO
                       ,VIN_NO
                       ,(SELECT CARLINE_CD FROM SA_0121T WHERE VIN_NO = RO.VIN_NO AND ROWNUM = 1) AS CARLINE_CD
                       ,TO_CHAR(RO_DT,'MM') AS PRE_MM
                       ,RO_TP
                       ,DLR_RO_TP
                FROM SE_0300T RO
                WHERE DLR_CD = '${sDlrCd}'
                AND TO_CHAR(RO_DT,'YYYYMMDD') BETWEEN '${sStartYyMmDd}' AND '${sEndYyMmDd}'
                AND RO_STAT_CD = '06'
                ${IF(LEN(sFosterTp) <= 0,""," AND NVL(RO_TP, 'NONE')='" + sFosterTp + "'")}
                ${IF(LEN(sDlrRoTp) <= 0,""," AND NVL(DLR_RO_TP, 'NONE')='" + sDlrRoTp + "'")}
            )
            WHERE 1=1
            ${IF(LEN(sCarlineCd) <= 0,""," AND NVL(CARLINE_CD, 'NONE')='" + sCarlineCd + "'")}
        )
        GROUP BY CARLINE_CD

        UNION ALL

        SELECT 'COL06' AS COLUMN_NM, COUNT(RO_DOC_NO) COLUMN_VAL, CARLINE_CD             --RO 취소 대차
        FROM (
            SELECT * FROM (
                SELECT DLR_CD
                       ,RO_DOC_NO
                       ,VIN_NO
                       ,(SELECT CARLINE_CD FROM SA_0121T WHERE VIN_NO = RO.VIN_NO AND ROWNUM = 1) AS CARLINE_CD
                       ,TO_CHAR(RO_DT,'MM') AS PRE_MM
                       ,RO_TP
                       ,DLR_RO_TP
                FROM SE_0300T RO
                WHERE DLR_CD = '${sDlrCd}'
                AND TO_CHAR(RO_DT,'YYYYMMDD') BETWEEN '${sStartYyMmDd}' AND '${sEndYyMmDd}'
                AND RO_STAT_CD = '06'
                ${IF(LEN(sFosterTp) <= 0,""," AND NVL(RO_TP, 'NONE')='" + sFosterTp + "'")}
                ${IF(LEN(sDlrRoTp) <= 0,""," AND NVL(DLR_RO_TP, 'NONE')='" + sDlrRoTp + "'")}
            )
            WHERE 1=1
            ${IF(LEN(sCarlineCd) <= 0,""," AND NVL(CARLINE_CD, 'NONE')='" + sCarlineCd + "'")}
        )
        GROUP BY CARLINE_CD

        UNION ALL

        SELECT 'COL07' AS COLUMN_NM, COUNT(DISTINCT(VIN_NO)) COLUMN_VAL, CARLINE_CD     --정산완료  대수
        FROM(
            SELECT *
            FROM (
                SELECT VIN_NO
                       ,TO_CHAR(RO_DT, 'MM') AS PRE_MM
                       ,(SELECT CARLINE_CD FROM SA_0121T WHERE VIN_NO = RO.VIN_NO AND ROWNUM = 1) AS CARLINE_CD
                       ,RO_TP
                       ,DLR_RO_TP
                FROM SE_0300T RO
                WHERE DLR_CD = '${sDlrCd}'
                AND RO_STAT_CD = '00'
                AND TO_CHAR(RO_DT,'YYYYMMDD') BETWEEN '${sStartYyMmDd}' AND '${sEndYyMmDd}'
                ${IF(LEN(sFosterTp) <= 0,""," AND NVL(RO_TP, 'NONE')='" + sFosterTp + "'")}   --위탁유형
                ${IF(LEN(sDlrRoTp) <= 0,""," AND NVL(DLR_RO_TP, 'NONE')='" + sDlrRoTp + "'")}
            )
            WHERE 1=1
            ${IF(LEN(sCarlineCd) <= 0,""," AND NVL(CARLINE_CD, 'NONE')='" + sCarlineCd + "'")}
        )
        GROUP BY CARLINE_CD

        UNION ALL

        SELECT 'COL08' AS COLUMN_NM, COUNT(DISTINCT(RO_DOC_NO)) COLUMN_VAL, CARLINE_CD        --정산완료  대차
        FROM (
            SELECT *
            FROM (
                SELECT VIN_NO
                       ,RO_DOC_NO
                       ,TO_CHAR(RO_DT, 'MM') AS PRE_MM
                       ,(SELECT CARLINE_CD FROM SA_0121T WHERE VIN_NO = RO.VIN_NO AND ROWNUM = 1) AS CARLINE_CD
                       ,RO_TP
                       ,DLR_RO_TP
                FROM SE_0300T RO
                WHERE DLR_CD = '${sDlrCd}'
                AND RO_STAT_CD = '00'
                AND TO_CHAR(RO_DT,'YYYYMMDD') BETWEEN '${sStartYyMmDd}' AND '${sEndYyMmDd}'
                ${IF(LEN(sFosterTp) <= 0,""," AND NVL(RO_TP, 'NONE')='" + sFosterTp + "'")}   --위탁유형
                ${IF(LEN(sDlrRoTp) <= 0,""," AND NVL(DLR_RO_TP, 'NONE')='" + sDlrRoTp + "'")}
            )
            WHERE 1=1
            ${IF(LEN(sCarlineCd) <= 0,""," AND NVL(CARLINE_CD, 'NONE')='" + sCarlineCd + "'")}
        )
        GROUP BY CARLINE_CD

        UNION ALL

        SELECT 'COL09' AS COLUMN_NM, COUNT(DISTINCT(VIN_NO)) COLUMN_VAL, CARLINE_CD    --수납완료  대차
        FROM (
            SELECT *
            FROM (
                SELECT RO.VIN_NO
                       ,TO_CHAR(RO.RO_DT, 'MM') AS PRE_MM
                       ,(SELECT CARLINE_CD FROM SA_0121T WHERE VIN_NO = RO.VIN_NO AND ROWNUM = 1) AS CARLINE_CD
                       ,RO.RO_TP
                       ,RO.DLR_RO_TP
                FROM SE_0300T RO INNER JOIN SE_0550T RCV
                ON RO.DLR_CD = RCV.DLR_CD
                AND RO.RO_DOC_NO = RCV.RO_DOC_NO
                WHERE RO.DLR_CD = '${sDlrCd}'
                AND RO.RO_STAT_CD != '06'
                AND RCV.RCV_STAT_CD = 'F'
                AND TO_CHAR(RO.RO_DT,'YYYYMMDD') BETWEEN '${sStartYyMmDd}' AND '${sEndYyMmDd}'
                ${IF(LEN(sFosterTp) <= 0,""," AND NVL(RO.RO_TP, 'NONE')='" + sFosterTp + "'")}   --위탁유형
                ${IF(LEN(sDlrRoTp) <= 0,""," AND NVL(DLR_RO_TP, 'NONE')='" + sDlrRoTp + "'")}
            )
            WHERE 1=1
            ${IF(LEN(sCarlineCd) <= 0,""," AND NVL(CARLINE_CD, 'NONE')='" + sCarlineCd + "'")}
        )
        GROUP BY CARLINE_CD

        UNION ALL

        SELECT 'COL10' AS COLUMN_NM, COUNT(RO_DOC_NO) COLUMN_VAL, CARLINE_CD      --수납완료  대수
        FROM (
            SELECT *
            FROM (
                SELECT RO.VIN_NO
                       ,RO.RO_DOC_NO
                       ,TO_CHAR(RO_DT, 'MM') AS PRE_MM
                       ,(SELECT CARLINE_CD FROM SA_0121T WHERE VIN_NO = RO.VIN_NO AND ROWNUM = 1) AS CARLINE_CD
                       ,RO.RO_TP
                       ,DLR_RO_TP
                FROM SE_0300T RO INNER JOIN SE_0550T RCV
                ON RO.DLR_CD = RCV.DLR_CD
                AND RO.RO_DOC_NO = RCV.RO_DOC_NO
                WHERE RO.DLR_CD = '${sDlrCd}'
                AND RO.RO_STAT_CD != '06'
                AND RCV.RCV_STAT_CD = 'F'
                AND TO_CHAR(RO.RO_DT,'YYYYMMDD') BETWEEN '${sStartYyMmDd}' AND '${sEndYyMmDd}'
                ${IF(LEN(sFosterTp) <= 0,""," AND NVL(RO.RO_TP, 'NONE')='" + sFosterTp + "'")}   --위탁유형
                ${IF(LEN(sDlrRoTp) <= 0,""," AND NVL(DLR_RO_TP, 'NONE')='" + sDlrRoTp + "'")}
            )
            WHERE 1=1
            ${IF(LEN(sCarlineCd) <= 0,""," AND NVL(CARLINE_CD, 'NONE')='" + sCarlineCd + "'")}
        )
        GROUP BY CARLINE_CD

        UNION ALL

        SELECT 'COL11' AS COLUMN_NM, COUNT(DISTINCT(VIN_NO)) COLUMN_VAL, CARLINE_CD        --정산  대수
        FROM T1
        GROUP BY CARLINE_CD

        UNION ALL

        SELECT 'COL12' AS COLUMN_NM, COUNT(CALC_DOC_NO) COLUMN_VAL, CARLINE_CD              --정산  대차
        FROM T1
        GROUP BY CARLINE_CD

        UNION ALL

        SELECT 'COL13' AS COLUMN_NM, SUM(NVL(B.PAYM_AMT,0)) COLUMN_VAL, CARLINE_CD          --수리생산액 (합계)
        FROM T1 A, SE_0530T B
        WHERE A.DLR_CD = B.DLR_CD
        AND A.CALC_DOC_NO = B.CALC_DOC_NO
        GROUP BY CARLINE_CD

        UNION ALL

        SELECT 'COL14' AS COLUMN_NM, SUM(NVL(B.PAYM_AMT,0)) COLUMN_VAL, CARLINE_CD         --수리생산액 (비보증)
        FROM T1 A, SE_0530T B
        WHERE A.DLR_CD = B.DLR_CD
        AND A.CALC_DOC_NO = B.CALC_DOC_NO
        AND RO_TP != '02'
        GROUP BY CARLINE_CD

        UNION ALL

        SELECT 'COL15' AS COLUMN_NM, SUM(NVL(B.PAYM_AMT,0)) COLUMN_VAL, CARLINE_CD           --수리생산액 (보증)
        FROM T1 A, SE_0530T B
        WHERE A.DLR_CD = B.DLR_CD
        AND A.CALC_DOC_NO = B.CALC_DOC_NO
        AND RO_TP = '02'
        GROUP BY CARLINE_CD

        UNION ALL

        SELECT 'COL16' AS COLUMN_NM, SUM(MOVING_AVG_AMT) COLUMN_VAL, CARLINE_CD          --부품원가 (합계)
        FROM (
            SELECT MOVING_AVG_AMT, CARLINE_CD, A.DLR_CD, A.RO_DOC_NO
            FROM T1 A LEFT OUTER JOIN
            (SELECT (POS_AMT - NEG_AMT) AS MOVING_AVG_AMT, DLR_CD, RO_DOC_NO
               FROM (
                   SELECT NVL(SUM(DECODE(PAR_REQ_STAT_CD, 02, T2.MOVING_AVG_AMT)), 0) AS POS_AMT
                          , NVL(SUM(DECODE(PAR_REQ_STAT_CD, 03, ABS(T2.MOVING_AVG_AMT))), 0) AS NEG_AMT
                          , T2.DLR_CD, T2.RO_DOC_NO
                     FROM SE_0160T T1
                    INNER JOIN PT_0502T T2
                       ON T1.DLR_CD = T2.DLR_CD
                      AND T1.DOC_NO = T2.RO_DOC_NO
                      AND T1.LINE_NO = T2.RO_LINE_NO
                      AND T1.ITEM_CD = T2.ITEM_CD
                    WHERE T1.DLR_CD = '${sDlrCd}'
                      AND PREFIX_ID = 'RO'
                      AND PAR_GI_TP = 'RO'
                      GROUP BY T2.DLR_CD, T2.RO_DOC_NO
                   )
            ) F2
            ON A.DLR_CD = F2.DLR_CD
            AND A.RO_DOC_NO = F2.RO_DOC_NO
        )
        GROUP BY CARLINE_CD

        UNION ALL

        SELECT 'COL17' AS COLUMN_NM, SUM(MOVING_AVG_AMT) COLUMN_VAL, CARLINE_CD          --부품원가 (비보증)
        FROM (
            SELECT MOVING_AVG_AMT, CARLINE_CD, A.DLR_CD, A.RO_DOC_NO
            FROM T1 A LEFT OUTER JOIN
            (SELECT (POS_AMT - NEG_AMT) AS MOVING_AVG_AMT, DLR_CD, RO_DOC_NO
               FROM (
                   SELECT NVL(SUM(DECODE(PAR_REQ_STAT_CD, 02, T2.MOVING_AVG_AMT)), 0) AS POS_AMT
                          , NVL(SUM(DECODE(PAR_REQ_STAT_CD, 03, ABS(T2.MOVING_AVG_AMT))), 0) AS NEG_AMT
                          , T2.DLR_CD, T2.RO_DOC_NO
                     FROM SE_0160T T1
                    INNER JOIN PT_0502T T2
                       ON T1.DLR_CD = T2.DLR_CD
                      AND T1.DOC_NO = T2.RO_DOC_NO
                      AND T1.LINE_NO = T2.RO_LINE_NO
                      AND T1.ITEM_CD = T2.ITEM_CD
                    WHERE T1.DLR_CD = '${sDlrCd}'
                      AND PREFIX_ID = 'RO'
                      AND PAR_GI_TP = 'RO'
                      GROUP BY T2.DLR_CD, T2.RO_DOC_NO
                   )
            ) F2
            ON A.DLR_CD = F2.DLR_CD
            AND A.RO_DOC_NO = F2.RO_DOC_NO
            WHERE A.RO_TP != '02'
        )
        GROUP BY CARLINE_CD

        UNION ALL

        SELECT 'COL18' AS COLUMN_NM, SUM(MOVING_AVG_AMT) COLUMN_VAL, CARLINE_CD          --부품원가 (보증)
        FROM (
            SELECT MOVING_AVG_AMT, CARLINE_CD, A.DLR_CD, A.RO_DOC_NO
            FROM T1 A LEFT OUTER JOIN
            (SELECT (POS_AMT - NEG_AMT) AS MOVING_AVG_AMT, DLR_CD, RO_DOC_NO
               FROM (
                   SELECT NVL(SUM(DECODE(PAR_REQ_STAT_CD, 02, T2.MOVING_AVG_AMT)), 0) AS POS_AMT
                          , NVL(SUM(DECODE(PAR_REQ_STAT_CD, 03, ABS(T2.MOVING_AVG_AMT))), 0) AS NEG_AMT
                          , T2.DLR_CD, T2.RO_DOC_NO
                     FROM SE_0160T T1
                    INNER JOIN PT_0502T T2
                       ON T1.DLR_CD = T2.DLR_CD
                      AND T1.DOC_NO = T2.RO_DOC_NO
                      AND T1.LINE_NO = T2.RO_LINE_NO
                      AND T1.ITEM_CD = T2.ITEM_CD
                    WHERE T1.DLR_CD = '${sDlrCd}'
                      AND PREFIX_ID = 'RO'
                      AND PAR_GI_TP = 'RO'
                      GROUP BY T2.DLR_CD, T2.RO_DOC_NO
                   )
            ) F2
            ON A.DLR_CD = F2.DLR_CD
            AND A.RO_DOC_NO = F2.RO_DOC_NO
            WHERE A.RO_TP = '02'
        )
        GROUP BY CARLINE_CD

        UNION ALL

        SELECT 'COL19' AS COLUMN_NM, SUM(PAYM_AMT) - SUM(NVL(MOVING_AVG_AMT, 0)) COLUMN_VAL, CARLINE_CD --수리총이윤 (합계)
        FROM (
            SELECT PAYM_AMT, 0 AS MOVING_AVG_AMT, CARLINE_CD
            FROM T1

            UNION ALL

            SELECT 0 AS PAYM_AMT, MOVING_AVG_AMT, CARLINE_CD
            FROM (
                SELECT MOVING_AVG_AMT, A.CARLINE_CD, A.DLR_CD, A.RO_DOC_NO
                FROM T1 A LEFT OUTER JOIN
                (SELECT (POS_AMT - NEG_AMT) AS MOVING_AVG_AMT, DLR_CD, RO_DOC_NO
                   FROM (
                       SELECT NVL(SUM(DECODE(PAR_REQ_STAT_CD, 02, T2.MOVING_AVG_AMT)), 0) AS POS_AMT
                              , NVL(SUM(DECODE(PAR_REQ_STAT_CD, 03, ABS(T2.MOVING_AVG_AMT))), 0) AS NEG_AMT
                              , T2.DLR_CD, T2.RO_DOC_NO
                         FROM SE_0160T T1
                        INNER JOIN PT_0502T T2
                           ON T1.DLR_CD = T2.DLR_CD
                          AND T1.DOC_NO = T2.RO_DOC_NO
                          AND T1.LINE_NO = T2.RO_LINE_NO
                          AND T1.ITEM_CD = T2.ITEM_CD
                        WHERE T1.DLR_CD = '${sDlrCd}'
                          AND PREFIX_ID = 'RO'
                          AND PAR_GI_TP = 'RO'
                          GROUP BY T2.DLR_CD, T2.RO_DOC_NO
                       )
                ) F2
                ON A.DLR_CD = F2.DLR_CD
                AND A.RO_DOC_NO = F2.RO_DOC_NO
            )
        )
        GROUP BY CARLINE_CD

        UNION ALL

        SELECT 'COL20' AS COLUMN_NM, SUM(PAYM_AMT) - SUM(NVL(MOVING_AVG_AMT, 0)) COLUMN_VAL, CARLINE_CD  --수리총이윤 (비보증)
        FROM (
            SELECT PAYM_AMT, 0 AS MOVING_AVG_AMT, CARLINE_CD
            FROM T1
            WHERE RO_TP != '02'

            UNION ALL

            SELECT 0 AS PAYM_AMT, MOVING_AVG_AMT, CARLINE_CD
            FROM (
                SELECT MOVING_AVG_AMT, A.CARLINE_CD, A.DLR_CD, A.RO_DOC_NO
                FROM T1 A LEFT OUTER JOIN
                (SELECT (POS_AMT - NEG_AMT) AS MOVING_AVG_AMT, DLR_CD, RO_DOC_NO
                   FROM (
                       SELECT NVL(SUM(DECODE(PAR_REQ_STAT_CD, 02, T2.MOVING_AVG_AMT)), 0) AS POS_AMT
                              , NVL(SUM(DECODE(PAR_REQ_STAT_CD, 03, ABS(T2.MOVING_AVG_AMT))), 0) AS NEG_AMT
                              , T2.DLR_CD, T2.RO_DOC_NO
                         FROM SE_0160T T1
                        INNER JOIN PT_0502T T2
                           ON T1.DLR_CD = T2.DLR_CD
                          AND T1.DOC_NO = T2.RO_DOC_NO
                          AND T1.LINE_NO = T2.RO_LINE_NO
                          AND T1.ITEM_CD = T2.ITEM_CD
                        WHERE T1.DLR_CD = '${sDlrCd}'
                          AND PREFIX_ID = 'RO'
                          AND PAR_GI_TP = 'RO'
                          GROUP BY T2.DLR_CD, T2.RO_DOC_NO
                       )
                ) F2
                ON A.DLR_CD = F2.DLR_CD
                AND A.RO_DOC_NO = F2.RO_DOC_NO
                WHERE A.RO_TP != '02'
            )
        )
        GROUP BY CARLINE_CD

        UNION ALL

        SELECT 'COL21' AS COLUMN_NM, SUM(PAYM_AMT) - SUM(NVL(MOVING_AVG_AMT, 0)) COLUMN_VAL, CARLINE_CD --수리총이윤 (보증)
        FROM (
            SELECT PAYM_AMT, 0 AS MOVING_AVG_AMT, CARLINE_CD
            FROM T1
            WHERE RO_TP = '02'

            UNION ALL

            SELECT 0 AS PAYM_AMT, MOVING_AVG_AMT, CARLINE_CD
            FROM (
                SELECT MOVING_AVG_AMT, A.CARLINE_CD, A.DLR_CD, A.RO_DOC_NO
                FROM T1 A LEFT OUTER JOIN
                (SELECT (POS_AMT - NEG_AMT) AS MOVING_AVG_AMT, DLR_CD, RO_DOC_NO
                   FROM (
                       SELECT NVL(SUM(DECODE(PAR_REQ_STAT_CD, 02, T2.MOVING_AVG_AMT)), 0) AS POS_AMT
                              , NVL(SUM(DECODE(PAR_REQ_STAT_CD, 03, ABS(T2.MOVING_AVG_AMT))), 0) AS NEG_AMT
                              , T2.DLR_CD, T2.RO_DOC_NO
                         FROM SE_0160T T1
                        INNER JOIN PT_0502T T2
                           ON T1.DLR_CD = T2.DLR_CD
                          AND T1.DOC_NO = T2.RO_DOC_NO
                          AND T1.LINE_NO = T2.RO_LINE_NO
                          AND T1.ITEM_CD = T2.ITEM_CD
                        WHERE T1.DLR_CD = '${sDlrCd}'
                          AND PREFIX_ID = 'RO'
                          AND PAR_GI_TP = 'RO'
                          GROUP BY T2.DLR_CD, T2.RO_DOC_NO
                       )
                ) F2
                ON A.DLR_CD = F2.DLR_CD
                AND A.RO_DOC_NO = F2.RO_DOC_NO
                WHERE A.RO_TP = '02'
            )
        )
        GROUP BY CARLINE_CD

        UNION ALL

        SELECT 'COL22' AS COLUMN_NM
               ,ROUND((SUM(PAYM_AMT) - SUM(NVL(MOVING_AVG_AMT, 0)))/SUM(NULLIF(PAYM_AMT, 0)), 2) COLUMN_VAL
               ,CARLINE_CD
        FROM (
            SELECT PAYM_AMT, 0 AS MOVING_AVG_AMT, CARLINE_CD
            FROM T1

            UNION ALL

            SELECT 0 AS PAYM_AMT, MOVING_AVG_AMT, CARLINE_CD
            FROM (
                SELECT MOVING_AVG_AMT, A.CARLINE_CD, A.DLR_CD, A.RO_DOC_NO
                FROM T1 A LEFT OUTER JOIN
                (SELECT (POS_AMT - NEG_AMT) AS MOVING_AVG_AMT, DLR_CD, RO_DOC_NO
                   FROM (
                       SELECT NVL(SUM(DECODE(PAR_REQ_STAT_CD, 02, T2.MOVING_AVG_AMT)), 0) AS POS_AMT
                              , NVL(SUM(DECODE(PAR_REQ_STAT_CD, 03, ABS(T2.MOVING_AVG_AMT))), 0) AS NEG_AMT
                              , T2.DLR_CD, T2.RO_DOC_NO
                         FROM SE_0160T T1
                        INNER JOIN PT_0502T T2
                           ON T1.DLR_CD = T2.DLR_CD
                          AND T1.DOC_NO = T2.RO_DOC_NO
                          AND T1.LINE_NO = T2.RO_LINE_NO
                          AND T1.ITEM_CD = T2.ITEM_CD
                        WHERE T1.DLR_CD = '${sDlrCd}'
                          AND PREFIX_ID = 'RO'
                          AND PAR_GI_TP = 'RO'
                          GROUP BY T2.DLR_CD, T2.RO_DOC_NO
                       )
                ) F2
                ON A.DLR_CD = F2.DLR_CD
                AND A.RO_DOC_NO = F2.RO_DOC_NO
            )
        )
        GROUP BY CARLINE_CD --수리종이윤 율(합계)

        UNION ALL

        SELECT 'COL23' AS COLUMN_NM
               ,ROUND((SUM(PAYM_AMT) - SUM(NVL(MOVING_AVG_AMT, 0)))/SUM(NULLIF(PAYM_AMT, 0)), 2) COLUMN_VAL
               ,CARLINE_CD
        FROM (
            SELECT PAYM_AMT, 0 AS MOVING_AVG_AMT, CARLINE_CD
            FROM T1
            WHERE RO_TP != '02'

            UNION ALL

            SELECT 0 AS PAYM_AMT, MOVING_AVG_AMT, CARLINE_CD
            FROM (
                SELECT MOVING_AVG_AMT, A.CARLINE_CD, A.DLR_CD, A.RO_DOC_NO
                FROM T1 A LEFT OUTER JOIN
                (SELECT (POS_AMT - NEG_AMT) AS MOVING_AVG_AMT, DLR_CD, RO_DOC_NO
                   FROM (
                       SELECT NVL(SUM(DECODE(PAR_REQ_STAT_CD, 02, T2.MOVING_AVG_AMT)), 0) AS POS_AMT
                              , NVL(SUM(DECODE(PAR_REQ_STAT_CD, 03, ABS(T2.MOVING_AVG_AMT))), 0) AS NEG_AMT
                              , T2.DLR_CD, T2.RO_DOC_NO
                         FROM SE_0160T T1
                        INNER JOIN PT_0502T T2
                           ON T1.DLR_CD = T2.DLR_CD
                          AND T1.DOC_NO = T2.RO_DOC_NO
                          AND T1.LINE_NO = T2.RO_LINE_NO
                          AND T1.ITEM_CD = T2.ITEM_CD
                        WHERE T1.DLR_CD = '${sDlrCd}'
                          AND PREFIX_ID = 'RO'
                          AND PAR_GI_TP = 'RO'
                          GROUP BY T2.DLR_CD, T2.RO_DOC_NO
                       )
                ) F2
                ON A.DLR_CD = F2.DLR_CD
                AND A.RO_DOC_NO = F2.RO_DOC_NO
                WHERE A.RO_TP != '02'
            )
        )
        GROUP BY CARLINE_CD --수리종이윤 율(비보증)

        UNION ALL

        SELECT 'COL24' AS COLUMN_NM
               ,ROUND((SUM(PAYM_AMT) - SUM(NVL(MOVING_AVG_AMT, 0)))/SUM(NULLIF(PAYM_AMT, 0)), 2) COLUMN_VAL
               ,CARLINE_CD
        FROM (
            SELECT PAYM_AMT, 0 AS MOVING_AVG_AMT, CARLINE_CD
            FROM T1
            WHERE RO_TP = '02'

            UNION ALL

            SELECT 0 AS PAYM_AMT, MOVING_AVG_AMT, CARLINE_CD
            FROM (
                SELECT MOVING_AVG_AMT, A.CARLINE_CD, A.DLR_CD, A.RO_DOC_NO
                FROM T1 A LEFT OUTER JOIN
                (SELECT (POS_AMT - NEG_AMT) AS MOVING_AVG_AMT, DLR_CD, RO_DOC_NO
                   FROM (
                       SELECT NVL(SUM(DECODE(PAR_REQ_STAT_CD, 02, T2.MOVING_AVG_AMT)), 0) AS POS_AMT
                              , NVL(SUM(DECODE(PAR_REQ_STAT_CD, 03, ABS(T2.MOVING_AVG_AMT))), 0) AS NEG_AMT
                              , T2.DLR_CD, T2.RO_DOC_NO
                         FROM SE_0160T T1
                        INNER JOIN PT_0502T T2
                           ON T1.DLR_CD = T2.DLR_CD
                          AND T1.DOC_NO = T2.RO_DOC_NO
                          AND T1.LINE_NO = T2.RO_LINE_NO
                          AND T1.ITEM_CD = T2.ITEM_CD
                        WHERE T1.DLR_CD = '${sDlrCd}'
                          AND PREFIX_ID = 'RO'
                          AND PAR_GI_TP = 'RO'
                          GROUP BY T2.DLR_CD, T2.RO_DOC_NO
                       )
                ) F2
                ON A.DLR_CD = F2.DLR_CD
                AND A.RO_DOC_NO = F2.RO_DOC_NO
                WHERE A.RO_TP = '02'
            )
        )
        GROUP BY CARLINE_CD --수리종이윤 율(보증)

        UNION ALL

        SELECT 'COL25' AS COLUMN_NM
               ,ROUND(CASE WHEN COUNT(DISTINCT(VIN_NO))  > 0
                           THEN SUM(PAYM_AMT)/COUNT(DISTINCT(VIN_NO))
                           ELSE 0 END,2)  COLUMN_VAL
               ,CARLINE_CD
        FROM T1
        GROUP BY CARLINE_CD --한대수수리생산액 (합계)

        UNION ALL

        SELECT 'COL26' AS COLUMN_NM
               ,ROUND(CASE WHEN COUNT(CALC_DOC_NO )  > 0
                           THEN SUM(PAYM_AMT)/COUNT(CALC_DOC_NO)
                           ELSE 0 END,2)  COLUMN_VAL
               ,CARLINE_CD
        FROM T1
        GROUP BY CARLINE_CD --한대차수리생산액 (합계)

        UNION ALL

        SELECT 'COL27' AS COLUMN_NM
               ,ROUND(CASE WHEN COUNT(DISTINCT(VIN_NO))  > 0
                           THEN SUM(PAYM_AMT)/COUNT(DISTINCT(VIN_NO))
                           ELSE 0 END,2)  COLUMN_VAL
               ,CARLINE_CD
        FROM T1
        WHERE RO_TP != '02'
        GROUP BY CARLINE_CD --한대수수리생산액 (비보증)

        UNION ALL

        SELECT 'COL28' AS COLUMN_NM
               ,ROUND(CASE WHEN COUNT(CALC_DOC_NO )  > 0
                           THEN SUM(PAYM_AMT)/COUNT(CALC_DOC_NO)
                           ELSE 0 END,2)  COLUMN_VAL
               ,CARLINE_CD
        FROM T1
        WHERE RO_TP != '02'
        GROUP BY CARLINE_CD --한대차수리생산액 (비보증)

        UNION ALL

        SELECT 'COL29' AS COLUMN_NM
               ,ROUND(CASE WHEN COUNT(DISTINCT(VIN_NO))  > 0
                           THEN SUM(PAYM_AMT)/COUNT(DISTINCT(VIN_NO))
                           ELSE 0 END,2)  COLUMN_VAL
               ,CARLINE_CD
        FROM T1
        WHERE RO_TP = '02'
        GROUP BY CARLINE_CD --한대수수리생산액 (보증)

        UNION ALL

        SELECT 'COL30' AS COLUMN_NM
               ,ROUND(CASE WHEN COUNT(CALC_DOC_NO )  > 0
                           THEN SUM(PAYM_AMT)/COUNT(CALC_DOC_NO)
                           ELSE 0 END,2)  COLUMN_VAL
               ,CARLINE_CD
        FROM T1
        WHERE RO_TP = '02'
        GROUP BY CARLINE_CD --한대차수리생산액 (보증)
    )
)PIVOT(
      SUM(COLUMN_VAL)
      FOR COLUMN_NM IN(
        'COL01' AS "COL01"
        ,'COL02' AS "COL02"
        ,'COL03' AS "COL03"
        ,'COL04' AS "COL04"
        ,'COL05' AS "COL05"
        ,'COL06' AS "COL06"
        ,'COL07' AS "COL07"
        ,'COL08' AS "COL08"
        ,'COL09' AS "COL09"
        ,'COL10' AS "COL10"
        ,'COL11' AS "COL11"
        ,'COL12' AS "COL12"
        ,'COL13' AS "COL13"
        ,'COL14' AS "COL14"
        ,'COL15' AS "COL15"
        ,'COL16' AS "COL16"
        ,'COL17' AS "COL17"
        ,'COL18' AS "COL18"
        ,'COL19' AS "COL19"
        ,'COL20' AS "COL20"
        ,'COL21' AS "COL21"
        ,'COL22' AS "COL22"
        ,'COL23' AS "COL23"
        ,'COL24' AS "COL24"
        ,'COL25' AS "COL25"
        ,'COL26' AS "COL26"
        ,'COL27' AS "COL27"
        ,'COL28' AS "COL28"
        ,'COL29' AS "COL29"
        ,'COL30' AS "COL30"
      )
) ORDER BY CARLINE_CD; ]]></Query>
</TableData>
</TableDataMap>
<Report class="com.fr.report.worksheet.WorkSheet" name="sheet1">
<ReportPageAttr>
<HR F="0" T="0"/>
<FR/>
<HC/>
<FC/>
<UPFCR COLUMN="false" ROW="true"/>
</ReportPageAttr>
<ColumnPrivilegeControl/>
<RowPrivilegeControl/>
<RowHeight defaultValue="723900">
<![CDATA[1152000,1152000,1152000,1152000,723900,723900,723900,723900,723900,723900,723900]]></RowHeight>
<ColumnWidth defaultValue="2743200">
<![CDATA[5040000,5760000,5760000,5760000,5760000,5760000,5760000,5760000,5760000,5760000,5760000,5760000,5760000,5760000,5760000,5760000,5760000,5760000,5760000,5760000,5760000,5760000,5760000,5760000,5760000,5760000,5760000,5760000,5760000,5760000,5760000,2743200]]></ColumnWidth>
<CellElementList>
<C c="0" r="0" s="0">
<O>
<![CDATA[数据名称]]></O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="1" r="0" s="0">
<O>
<![CDATA[接车检查台数]]></O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="2" r="0" s="0">
<O>
<![CDATA[接车检查台次]]></O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="3" r="0" s="0">
<O>
<![CDATA[维修委托台数]]></O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="4" r="0" s="0">
<O>
<![CDATA[维修委托台次]]></O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="5" r="0" s="0">
<O>
<![CDATA[取消委托台数]]></O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="6" r="0" s="0">
<O>
<![CDATA[取消委托台次]]></O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="7" r="0" s="0">
<O>
<![CDATA[结算完成台数]]></O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="8" r="0" s="0">
<O>
<![CDATA[结算完成台次]]></O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="9" r="0" s="0">
<O>
<![CDATA[付款完成台数]]></O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="10" r="0" s="0">
<O>
<![CDATA[付款完成台次]]></O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="11" r="0" s="0">
<O>
<![CDATA[服务结算台数]]></O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="12" r="0" s="0">
<O>
<![CDATA[服务结算台次]]></O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="13" r="0" s="0">
<O>
<![CDATA[维修产值（合计）]]></O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="14" r="0" s="0">
<O>
<![CDATA[维修产值 （非保修）]]></O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="15" r="0" s="0">
<O>
<![CDATA[维修产值（保修）]]></O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="16" r="0" s="0">
<O>
<![CDATA[配件成本（合计）]]></O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="17" r="0" s="0">
<O>
<![CDATA[配件成本（非保修）]]></O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="18" r="0" s="0">
<O>
<![CDATA[配件成本（保修）]]></O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="19" r="0" s="0">
<O>
<![CDATA[维修毛利（合计）]]></O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="20" r="0" s="0">
<O>
<![CDATA[维修毛利（非保修）]]></O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="21" r="0" s="0">
<O>
<![CDATA[维修毛利（保修）]]></O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="22" r="0" s="0">
<O>
<![CDATA[维修毛利率（合计）]]></O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="23" r="0" s="0">
<O>
<![CDATA[维修毛利率（非保修）]]></O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="24" r="0" s="0">
<O>
<![CDATA[维修毛利率（保修）]]></O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="25" r="0" s="0">
<O>
<![CDATA[单台数维修产值（合计）]]></O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="26" r="0" s="0">
<O>
<![CDATA[单台次维修产值（合计）]]></O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="27" r="0" s="0">
<O>
<![CDATA[单台数维修产值（非保修）]]></O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="28" r="0" s="0">
<O>
<![CDATA[单台次维修产值（非保修）]]></O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="29" r="0" s="0">
<O>
<![CDATA[单台数维修产值（保修）]]></O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="30" r="0" s="0">
<O>
<![CDATA[单台次维修产值（保修）]]></O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="0" r="1" s="1">
<O>
<![CDATA[合计]]></O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="1" r="1" s="2">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=SUM(B4)]]></Attributes>
</O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="2" r="1" s="2">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=SUM(C4)]]></Attributes>
</O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="3" r="1" s="2">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=SUM(D4)]]></Attributes>
</O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="4" r="1" s="2">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=SUM(E4)]]></Attributes>
</O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="5" r="1" s="2">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=SUM(F4)]]></Attributes>
</O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="6" r="1" s="2">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=SUM(G4)]]></Attributes>
</O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="7" r="1" s="2">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=SUM(H4)]]></Attributes>
</O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="8" r="1" s="2">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=SUM(I4)]]></Attributes>
</O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="9" r="1" s="2">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=SUM(J4)]]></Attributes>
</O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="10" r="1" s="2">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=SUM(K4)]]></Attributes>
</O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="11" r="1" s="2">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=SUM(L4)]]></Attributes>
</O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="12" r="1" s="2">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=SUM(M4)]]></Attributes>
</O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="13" r="1" s="2">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=SUM(N4)]]></Attributes>
</O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="14" r="1" s="2">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=SUM(O4)]]></Attributes>
</O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="15" r="1" s="2">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=SUM(P4)]]></Attributes>
</O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="16" r="1" s="2">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=SUM(Q4)]]></Attributes>
</O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="17" r="1" s="2">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=SUM(R4)]]></Attributes>
</O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="18" r="1" s="2">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=SUM(S4)]]></Attributes>
</O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="19" r="1" s="2">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=SUM(T4)]]></Attributes>
</O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="20" r="1" s="2">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=SUM(U4)]]></Attributes>
</O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="21" r="1" s="2">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=SUM(V4)]]></Attributes>
</O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="22" r="1" s="2">
<PrivilegeControl/>
<Expand/>
</C>
<C c="23" r="1" s="2">
<PrivilegeControl/>
<Expand/>
</C>
<C c="24" r="1" s="2">
<PrivilegeControl/>
<Expand/>
</C>
<C c="25" r="1" s="2">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=SUM(Z4)]]></Attributes>
</O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="26" r="1" s="2">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=SUM(AA4)]]></Attributes>
</O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="27" r="1" s="2">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=SUM(AB4)]]></Attributes>
</O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="28" r="1" s="2">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=SUM(AC4)]]></Attributes>
</O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="29" r="1" s="2">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=SUM(AD4)]]></Attributes>
</O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="30" r="1" s="2">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=SUM(AE4)]]></Attributes>
</O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="0" r="2" s="1">
<O>
<![CDATA[平均]]></O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="1" r="2" s="2">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=ROUND(AVERAGE(B4), 2)]]></Attributes>
</O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="2" r="2" s="2">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=ROUND(AVERAGE(C4), 2)]]></Attributes>
</O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="3" r="2" s="2">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=ROUND(AVERAGE(D4), 2)]]></Attributes>
</O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="4" r="2" s="2">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=ROUND(AVERAGE(E4), 2)]]></Attributes>
</O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="5" r="2" s="2">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=ROUND(AVERAGE(F4), 2)]]></Attributes>
</O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="6" r="2" s="2">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=ROUND(AVERAGE(G4), 2)]]></Attributes>
</O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="7" r="2" s="2">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=ROUND(AVERAGE(H4), 2)]]></Attributes>
</O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="8" r="2" s="2">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=ROUND(AVERAGE(I4), 2)]]></Attributes>
</O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="9" r="2" s="2">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=ROUND(AVERAGE(J4), 2)]]></Attributes>
</O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="10" r="2" s="2">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=ROUND(AVERAGE(K4), 2)]]></Attributes>
</O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="11" r="2" s="2">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=ROUND(AVERAGE(L4), 2)]]></Attributes>
</O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="12" r="2" s="2">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=ROUND(AVERAGE(M4), 2)]]></Attributes>
</O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="13" r="2" s="2">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=ROUND(AVERAGE(N4), 2)]]></Attributes>
</O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="14" r="2" s="2">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=ROUND(AVERAGE(O4), 2)]]></Attributes>
</O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="15" r="2" s="2">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=ROUND(AVERAGE(P4), 2)]]></Attributes>
</O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="16" r="2" s="2">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=ROUND(AVERAGE(Q4), 2)]]></Attributes>
</O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="17" r="2" s="2">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=ROUND(AVERAGE(R4), 2)]]></Attributes>
</O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="18" r="2" s="2">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=ROUND(AVERAGE(S4), 2)]]></Attributes>
</O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="19" r="2" s="2">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=ROUND(AVERAGE(T4), 2)]]></Attributes>
</O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="20" r="2" s="2">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=ROUND(AVERAGE(U4), 2)]]></Attributes>
</O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="21" r="2" s="2">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=ROUND(AVERAGE(V4), 2)]]></Attributes>
</O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="22" r="2" s="2">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=ROUND(AVERAGE(W4), 2)]]></Attributes>
</O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="23" r="2" s="2">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=ROUND(AVERAGE(X4), 2)]]></Attributes>
</O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="24" r="2" s="2">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=ROUND(AVERAGE(Y4), 2)]]></Attributes>
</O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="25" r="2" s="2">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=ROUND(AVERAGE(Z4), 2)]]></Attributes>
</O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="26" r="2" s="2">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=ROUND(AVERAGE(AA4), 2)]]></Attributes>
</O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="27" r="2" s="2">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=ROUND(AVERAGE(AB4), 2)]]></Attributes>
</O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="28" r="2" s="2">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=ROUND(AVERAGE(AC4), 2)]]></Attributes>
</O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="29" r="2" s="2">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=ROUND(AVERAGE(AD4), 2)]]></Attributes>
</O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="30" r="2" s="2">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=ROUND(AVERAGE(AE4), 2)]]></Attributes>
</O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="0" r="3" s="3">
<O t="DSColumn">
<Attributes dsName="selectSerTotCarLineNmDs" columnName="CARLINE_NM"/>
<Complex/>
<RG class="com.fr.report.cell.cellattr.core.group.FunctionGrouper"/>
<Parameters/>
</O>
<PrivilegeControl/>
<HighlightList>
<Highlight class="com.fr.report.cell.cellattr.highlight.DefaultHighlight">
<Name>
<![CDATA[조건속성1]]></Name>
<Condition class="com.fr.data.condition.FormulaCondition">
<Formula>
<![CDATA[row() % 2 = 0]]></Formula>
</Condition>
<HighlightAction class="com.fr.report.cell.cellattr.highlight.BackgroundHighlightAction">
<Scope val="1"/>
<Background name="ColorBackground" color="-1"/>
</HighlightAction>
</Highlight>
</HighlightList>
<Expand dir="0"/>
</C>
<C c="1" r="3" s="2">
<O t="DSColumn">
<Attributes dsName="selectSerTotCarLineNmDs" columnName="COL01"/>
<Complex/>
<RG class="com.fr.report.cell.cellattr.core.group.FunctionGrouper"/>
<Parameters/>
</O>
<PrivilegeControl/>
<Expand dir="0"/>
</C>
<C c="2" r="3" s="2">
<O t="DSColumn">
<Attributes dsName="selectSerTotCarLineNmDs" columnName="COL02"/>
<Complex/>
<RG class="com.fr.report.cell.cellattr.core.group.FunctionGrouper"/>
<Parameters/>
</O>
<PrivilegeControl/>
<Expand dir="0"/>
</C>
<C c="3" r="3" s="2">
<O t="DSColumn">
<Attributes dsName="selectSerTotCarLineNmDs" columnName="COL03"/>
<Complex/>
<RG class="com.fr.report.cell.cellattr.core.group.FunctionGrouper"/>
<Parameters/>
</O>
<PrivilegeControl/>
<Expand dir="0"/>
</C>
<C c="4" r="3" s="2">
<O t="DSColumn">
<Attributes dsName="selectSerTotCarLineNmDs" columnName="COL04"/>
<Complex/>
<RG class="com.fr.report.cell.cellattr.core.group.FunctionGrouper"/>
<Parameters/>
</O>
<PrivilegeControl/>
<Expand dir="0"/>
</C>
<C c="5" r="3" s="2">
<O t="DSColumn">
<Attributes dsName="selectSerTotCarLineNmDs" columnName="COL05"/>
<Complex/>
<RG class="com.fr.report.cell.cellattr.core.group.FunctionGrouper"/>
<Parameters/>
</O>
<PrivilegeControl/>
<Expand dir="0"/>
</C>
<C c="6" r="3" s="2">
<O t="DSColumn">
<Attributes dsName="selectSerTotCarLineNmDs" columnName="COL06"/>
<Complex/>
<RG class="com.fr.report.cell.cellattr.core.group.FunctionGrouper"/>
<Parameters/>
</O>
<PrivilegeControl/>
<Expand dir="0"/>
</C>
<C c="7" r="3" s="2">
<O t="DSColumn">
<Attributes dsName="selectSerTotCarLineNmDs" columnName="COL07"/>
<Complex/>
<RG class="com.fr.report.cell.cellattr.core.group.FunctionGrouper"/>
<Parameters/>
</O>
<PrivilegeControl/>
<Expand dir="0"/>
</C>
<C c="8" r="3" s="2">
<O t="DSColumn">
<Attributes dsName="selectSerTotCarLineNmDs" columnName="COL08"/>
<Complex/>
<RG class="com.fr.report.cell.cellattr.core.group.FunctionGrouper"/>
<Parameters/>
</O>
<PrivilegeControl/>
<Expand dir="0"/>
</C>
<C c="9" r="3" s="2">
<O t="DSColumn">
<Attributes dsName="selectSerTotCarLineNmDs" columnName="COL09"/>
<Complex/>
<RG class="com.fr.report.cell.cellattr.core.group.FunctionGrouper"/>
<Parameters/>
</O>
<PrivilegeControl/>
<Expand dir="0"/>
</C>
<C c="10" r="3" s="2">
<O t="DSColumn">
<Attributes dsName="selectSerTotCarLineNmDs" columnName="COL10"/>
<Complex/>
<RG class="com.fr.report.cell.cellattr.core.group.FunctionGrouper"/>
<Parameters/>
</O>
<PrivilegeControl/>
<Expand dir="0"/>
</C>
<C c="11" r="3" s="2">
<O t="DSColumn">
<Attributes dsName="selectSerTotCarLineNmDs" columnName="COL11"/>
<Complex/>
<RG class="com.fr.report.cell.cellattr.core.group.FunctionGrouper"/>
<Parameters/>
</O>
<PrivilegeControl/>
<Expand dir="0"/>
</C>
<C c="12" r="3" s="2">
<O t="DSColumn">
<Attributes dsName="selectSerTotCarLineNmDs" columnName="COL12"/>
<Complex/>
<RG class="com.fr.report.cell.cellattr.core.group.FunctionGrouper"/>
<Parameters/>
</O>
<PrivilegeControl/>
<Expand dir="0"/>
</C>
<C c="13" r="3" s="2">
<O t="DSColumn">
<Attributes dsName="selectSerTotCarLineNmDs" columnName="COL13"/>
<Complex/>
<RG class="com.fr.report.cell.cellattr.core.group.FunctionGrouper"/>
<Parameters/>
</O>
<PrivilegeControl/>
<Expand dir="0"/>
</C>
<C c="14" r="3" s="2">
<O t="DSColumn">
<Attributes dsName="selectSerTotCarLineNmDs" columnName="COL14"/>
<Complex/>
<RG class="com.fr.report.cell.cellattr.core.group.FunctionGrouper"/>
<Parameters/>
</O>
<PrivilegeControl/>
<Expand dir="0"/>
</C>
<C c="15" r="3" s="2">
<O t="DSColumn">
<Attributes dsName="selectSerTotCarLineNmDs" columnName="COL15"/>
<Complex/>
<RG class="com.fr.report.cell.cellattr.core.group.FunctionGrouper"/>
<Parameters/>
</O>
<PrivilegeControl/>
<Expand dir="0"/>
</C>
<C c="16" r="3" s="2">
<O t="DSColumn">
<Attributes dsName="selectSerTotCarLineNmDs" columnName="COL16"/>
<Complex/>
<RG class="com.fr.report.cell.cellattr.core.group.FunctionGrouper"/>
<Parameters/>
</O>
<PrivilegeControl/>
<Expand dir="0"/>
</C>
<C c="17" r="3" s="2">
<O t="DSColumn">
<Attributes dsName="selectSerTotCarLineNmDs" columnName="COL17"/>
<Complex/>
<RG class="com.fr.report.cell.cellattr.core.group.FunctionGrouper"/>
<Parameters/>
</O>
<PrivilegeControl/>
<Expand dir="0"/>
</C>
<C c="18" r="3" s="2">
<O t="DSColumn">
<Attributes dsName="selectSerTotCarLineNmDs" columnName="COL18"/>
<Complex/>
<RG class="com.fr.report.cell.cellattr.core.group.FunctionGrouper"/>
<Parameters/>
</O>
<PrivilegeControl/>
<Expand dir="0"/>
</C>
<C c="19" r="3" s="2">
<O t="DSColumn">
<Attributes dsName="selectSerTotCarLineNmDs" columnName="COL19"/>
<Complex/>
<RG class="com.fr.report.cell.cellattr.core.group.FunctionGrouper"/>
<Parameters/>
</O>
<PrivilegeControl/>
<Expand dir="0"/>
</C>
<C c="20" r="3" s="2">
<O t="DSColumn">
<Attributes dsName="selectSerTotCarLineNmDs" columnName="COL20"/>
<Complex/>
<RG class="com.fr.report.cell.cellattr.core.group.FunctionGrouper"/>
<Parameters/>
</O>
<PrivilegeControl/>
<Expand dir="0"/>
</C>
<C c="21" r="3" s="2">
<O t="DSColumn">
<Attributes dsName="selectSerTotCarLineNmDs" columnName="COL21"/>
<Complex/>
<RG class="com.fr.report.cell.cellattr.core.group.FunctionGrouper"/>
<Parameters/>
</O>
<PrivilegeControl/>
<Expand dir="0"/>
</C>
<C c="22" r="3" s="2">
<O t="DSColumn">
<Attributes dsName="selectSerTotCarLineNmDs" columnName="COL22"/>
<Complex/>
<RG class="com.fr.report.cell.cellattr.core.group.FunctionGrouper"/>
<Parameters/>
</O>
<PrivilegeControl/>
<Expand dir="0"/>
</C>
<C c="23" r="3" s="2">
<O t="DSColumn">
<Attributes dsName="selectSerTotCarLineNmDs" columnName="COL23"/>
<Complex/>
<RG class="com.fr.report.cell.cellattr.core.group.FunctionGrouper"/>
<Parameters/>
</O>
<PrivilegeControl/>
<Expand dir="0"/>
</C>
<C c="24" r="3" s="2">
<O t="DSColumn">
<Attributes dsName="selectSerTotCarLineNmDs" columnName="COL24"/>
<Complex/>
<RG class="com.fr.report.cell.cellattr.core.group.FunctionGrouper"/>
<Parameters/>
</O>
<PrivilegeControl/>
<Expand dir="0"/>
</C>
<C c="25" r="3" s="2">
<O t="DSColumn">
<Attributes dsName="selectSerTotCarLineNmDs" columnName="COL25"/>
<Complex/>
<RG class="com.fr.report.cell.cellattr.core.group.FunctionGrouper"/>
<Parameters/>
</O>
<PrivilegeControl/>
<Expand dir="0"/>
</C>
<C c="26" r="3" s="2">
<O t="DSColumn">
<Attributes dsName="selectSerTotCarLineNmDs" columnName="COL26"/>
<Complex/>
<RG class="com.fr.report.cell.cellattr.core.group.FunctionGrouper"/>
<Parameters/>
</O>
<PrivilegeControl/>
<Expand dir="0"/>
</C>
<C c="27" r="3" s="2">
<O t="DSColumn">
<Attributes dsName="selectSerTotCarLineNmDs" columnName="COL27"/>
<Complex/>
<RG class="com.fr.report.cell.cellattr.core.group.FunctionGrouper"/>
<Parameters/>
</O>
<PrivilegeControl/>
<Expand dir="0"/>
</C>
<C c="28" r="3" s="2">
<O t="DSColumn">
<Attributes dsName="selectSerTotCarLineNmDs" columnName="COL28"/>
<Complex/>
<RG class="com.fr.report.cell.cellattr.core.group.FunctionGrouper"/>
<Parameters/>
</O>
<PrivilegeControl/>
<Expand dir="0"/>
</C>
<C c="29" r="3" s="2">
<O t="DSColumn">
<Attributes dsName="selectSerTotCarLineNmDs" columnName="COL29"/>
<Complex/>
<RG class="com.fr.report.cell.cellattr.core.group.FunctionGrouper"/>
<Parameters/>
</O>
<PrivilegeControl/>
<Expand dir="0"/>
</C>
<C c="30" r="3" s="2">
<O t="DSColumn">
<Attributes dsName="selectSerTotCarLineNmDs" columnName="COL30"/>
<Complex/>
<RG class="com.fr.report.cell.cellattr.core.group.FunctionGrouper"/>
<Parameters/>
</O>
<PrivilegeControl/>
<Expand dir="0"/>
</C>
</CellElementList>
<ReportAttrSet>
<ReportSettings headerHeight="0" footerHeight="0">
<PaperSetting orientation="1">
<PaperSize width="43200000" height="180000000"/>
<Margin top="432000" left="432000" bottom="432000" right="432000"/>
</PaperSetting>
</ReportSettings>
<Header reportPageType="0">
<Background name="NullBackground"/>
<LeftList/>
<CenterList/>
<RightList/>
</Header>
<Footer reportPageType="0">
<Background name="NullBackground"/>
<LeftList/>
<CenterList/>
<RightList/>
</Footer>
</ReportAttrSet>
<PrivilegeControl/>
</Report>
<ReportParameterAttr>
<Attributes showWindow="true" delayPlaying="true" windowPosition="1" align="0"/>
<PWTitle>
<![CDATA[매개변수]]></PWTitle>
</ReportParameterAttr>
<StyleList>
<Style horizontal_alignment="0" imageLayout="1">
<FRFont name="Microsoft YaHei UI" style="0" size="72" foreground="-1"/>
<Background name="ColorBackground" color="-11561760"/>
<Border>
<Top style="1" color="-3352093"/>
<Bottom style="1" color="-3352093"/>
<Left style="1" color="-3352093"/>
<Right style="1" color="-3352093"/>
</Border>
</Style>
<Style horizontal_alignment="0" imageLayout="1">
<FRFont name="Verdana" style="0" size="72" foreground="-10855846"/>
<Background name="ColorBackground" color="-986896"/>
<Border>
<Top style="5" color="-1"/>
<Bottom style="5" color="-1"/>
<Left style="5" color="-1"/>
<Right style="5" color="-1"/>
</Border>
</Style>
<Style horizontal_alignment="4" imageLayout="1">
<Format class="com.fr.base.CoreDecimalFormat">
<![CDATA[#,##0.00]]></Format>
<FRFont name="Verdana" style="0" size="72" foreground="-10855846"/>
<Background name="ColorBackground" color="-986896"/>
<Border>
<Top style="5" color="-1"/>
<Bottom style="5" color="-1"/>
<Left style="5" color="-1"/>
<Right style="5" color="-1"/>
</Border>
</Style>
<Style horizontal_alignment="2" imageLayout="1">
<Format class="com.fr.base.CoreDecimalFormat">
<![CDATA[#,###.00]]></Format>
<FRFont name="Verdana" style="0" size="72" foreground="-10855846"/>
<Background name="ColorBackground" color="-986896"/>
<Border>
<Top style="5" color="-1"/>
<Bottom style="5" color="-1"/>
<Left style="5" color="-1"/>
<Right style="5" color="-1"/>
</Border>
</Style>
</StyleList>
<DesignerVersion DesignerVersion="IAA"/>
<PreviewType PreviewType="0"/>
</WorkBook>
