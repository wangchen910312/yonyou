<?xml version="1.0" encoding="UTF-8"?>
<WorkBook xmlVersion="20170720" releaseVersion="9.0.0">
<TableDataMap>
<TableData name="TimeSearchDS" class="com.fr.data.impl.DBTableData">
<Parameters>
<Parameter>
<Attributes name="sCarlineCd"/>
<O>
<![CDATA[]]></O>
</Parameter>
<Parameter>
<Attributes name="sStartDt"/>
<O>
<![CDATA[2017]]></O>
</Parameter>
<Parameter>
<Attributes name="sFosterTp"/>
<O>
<![CDATA[]]></O>
</Parameter>
<Parameter>
<Attributes name="sDlrCd"/>
<O>
<![CDATA[D0103]]></O>
</Parameter>
<Parameter>
<Attributes name="sDlrRoTp"/>
<O>
<![CDATA[]]></O>
</Parameter>
</Parameters>
<Attributes maxMemRowCount="-1"/>
<Connection class="com.fr.data.impl.NameDatabaseConnection">
<DatabaseName>
<![CDATA[BHDMS]]></DatabaseName>
</Connection>
<Query>
<![CDATA[-- 서비스종합리포트 : 시간 조회
SELECT COLUMN_SEQ
       ,COLUMN_NM
       ,NVL(M1, 0) AS M1
       ,NVL(M2, 0) AS M2
       ,NVL(M3, 0) AS M3
       ,NVL(M4, 0) AS M4
       ,NVL(M5, 0) AS M5
       ,NVL(M6, 0) AS M6
       ,NVL(M7, 0) AS M7
       ,NVL(M8, 0) AS M8
       ,NVL(M9, 0) AS M9
       ,NVL(M10, 0) AS M10
       ,NVL(M11, 0) AS M11
       ,NVL(M12, 0) AS M12
FROM (
    SELECT PRE_MM, COLUMN_SEQ, COLUMN_NM, COLUMN_VAL, VAL_TYPE
    FROM (
        WITH T1 AS (
            SELECT F.CARLINE_CD
                  ,CASE WHEN F.CALC_STAT_CD = '07'
                   		THEN -1 * NVL(F.PAYM_AMT        ,0)
                   		ELSE NVL(F.PAYM_AMT        ,0) END AS PAYM_AMT
                  ,F.DLR_CD
                  ,F.VIN_NO
                  ,F.RO_DOC_NO
                  ,F.RO_TP
                  ,F.CALC_DT
                  ,F.CALC_DOC_NO
                  ,F.CALC_STAT_CD
                  ,F.CALC_CANC_YN
                  ,CASE WHEN F.CALC_STAT_CD = '07'
                    	THEN -1 * NVL(F.LBR_CALC_AMT        ,0)
                   		ELSE NVL(F.LBR_CALC_AMT        ,0) END AS LBR_CALC_AMT--工时结算金额
                  ,F.LBR_DC_RATE
                  ,CASE WHEN F.CALC_STAT_CD = '07'
                   		THEN -1 * NVL(F.LBR_DC_AMT        ,0)
                    	ELSE NVL(F.LBR_DC_AMT        ,0) END AS LBR_DC_AMT--工时优惠金额
             	  ,CASE WHEN F.CALC_STAT_CD = '07'
                   		THEN -1 * NVL(F.LBR_BM_POINT_USE_AMT        ,0)
                    	ELSE NVL(F.LBR_BM_POINT_USE_AMT        ,0) END AS LBR_BM_POINT_USE_AMT
             	  ,CASE WHEN F.CALC_STAT_CD = '07'
                   		THEN -1 * NVL(F.LBR_BM_CUPN_USE_AMT        ,0)
                    	ELSE NVL(F.LBR_BM_CUPN_USE_AMT        ,0) END AS LBR_BM_CUPN_USE_AMT
                  ,CASE WHEN F.CALC_STAT_CD = '07'
                   		THEN -1 * NVL(F.LBR_POINT_USE_AMT        ,0)
                    	ELSE NVL(F.LBR_POINT_USE_AMT        ,0) END AS LBR_POINT_USE_AMT
                  ,CASE WHEN F.CALC_STAT_CD = '07'
            			THEN -1 * NVL(F.LBR_ETC_DC_AMT        ,0)
            			ELSE NVL(F.LBR_ETC_DC_AMT        ,0) END AS LBR_ETC_DC_AMT--  工时-其他优惠金额
                 ,CASE WHEN F.CALC_STAT_CD = '07'
            			THEN -1 * NVL(F.LBR_CALC_SUM_AMT        ,0)
            			ELSE NVL(F.LBR_CALC_SUM_AMT        ,0) END AS LBR_CALC_SUM_AMT--  工时-最终结算金额
           		 ,CASE WHEN F.CALC_STAT_CD = '07'
            			THEN -1 * NVL(F.PAR_CALC_AMT        ,0)
            			ELSE NVL(F.PAR_CALC_AMT        ,0) END AS PAR_CALC_AMT   ---配件结算金额
                 ,F.PAR_DC_RATE
                 ,CASE WHEN F.CALC_STAT_CD = '07'
           			    THEN -1 * NVL(F.PAR_DC_AMT        ,0)
            		    ELSE NVL(F.PAR_DC_AMT        ,0) END AS PAR_DC_AMT   ---配件优惠金额
               	 ,CASE WHEN F.CALC_STAT_CD = '07'
           				THEN -1 * NVL(F.PAR_BM_POINT_USE_AMT        ,0)
            			ELSE NVL(F.PAR_BM_POINT_USE_AMT        ,0) END AS PAR_BM_POINT_USE_AMT   ---  配件-蓝缤积分使用金额
           		 ,CASE WHEN F.CALC_STAT_CD = '07'
           				THEN -1 * NVL(F.PAR_BM_CUPN_USE_AMT        ,0)
            			ELSE NVL(F.PAR_BM_CUPN_USE_AMT        ,0) END AS PAR_BM_CUPN_USE_AMT   ---  配件-蓝缤其他优惠金额
                 ,CASE WHEN F.CALC_STAT_CD = '07'
           				THEN -1 * NVL(F.PAR_POINT_USE_AMT        ,0)
            			ELSE NVL(F.PAR_POINT_USE_AMT        ,0) END AS PAR_POINT_USE_AMT   ---    配件-积分使用金额
           		,CASE WHEN F.CALC_STAT_CD = '07'
           				THEN -1 * NVL(F.PAR_ETC_DC_AMT        ,0)
            			ELSE NVL(F.PAR_ETC_DC_AMT        ,0) END AS PAR_ETC_DC_AMT   ---    配件-其他优惠金额
           		,CASE WHEN F.CALC_STAT_CD = '07'
           				THEN -1 * NVL(F.PAR_CALC_SUM_AMT        ,0)
            			ELSE NVL(F.PAR_CALC_SUM_AMT        ,0) END AS PAR_CALC_SUM_AMT   ---    配件-最终结算金额
           		,CASE WHEN F.CALC_STAT_CD = '07'
           				THEN -1 * NVL(F.ETC_CALC_AMT        ,0)
            			ELSE NVL(F.ETC_CALC_AMT        ,0) END AS ETC_CALC_AMT  
                ,F.ETC_DC_RATE
                ,CASE WHEN F.CALC_STAT_CD = '07'
           				THEN -1 * NVL(F.ETC_DC_AMT          ,0) 
           				ELSE NVL(F.ETC_DC_AMT        ,0) END AS ETC_DC_AMT  
           		,CASE WHEN F.CALC_STAT_CD = '07'
           				THEN -1 * NVL(F.ETC_BM_POINT_USE_AMT,0)
           				ELSE NVL(F.ETC_BM_POINT_USE_AMT        ,0) END AS ETC_BM_POINT_USE_AMT  
           		,CASE WHEN F.CALC_STAT_CD = '07'
           				THEN -1 * NVL(F.ETC_BM_CUPN_USE_AMT ,0)
           				ELSE NVL(F.ETC_BM_CUPN_USE_AMT        ,0) END AS ETC_BM_CUPN_USE_AMT  
           		,CASE WHEN F.CALC_STAT_CD = '07'
           				THEN -1 * NVL(F.ETC_POINT_USE_AMT   ,0)
           				ELSE NVL(F.ETC_POINT_USE_AMT        ,0) END AS ETC_POINT_USE_AMT  
           		,CASE WHEN F.CALC_STAT_CD = '07'
           				THEN -1 * NVL(F.ETC_OTHER_DC_AMT    ,0)
           				ELSE NVL(F.ETC_OTHER_DC_AMT        ,0) END AS ETC_OTHER_DC_AMT  
           		,CASE WHEN F.CALC_STAT_CD = '07'
           				THEN -1 * NVL(F.ETC_CALC_SUM_AMT    ,0)
           				ELSE NVL(F.ETC_CALC_SUM_AMT        ,0) END AS ETC_CALC_SUM_AMT  
           		,CASE WHEN F.CALC_STAT_CD = '07'
           				THEN -1 * NVL(F.CALC_TOT_AMT        ,0) 
						ELSE NVL(F.CALC_TOT_AMT        ,0) END AS CALC_TOT_AMT  
           		,F.DC_TOT_RATE    
           		,CASE WHEN F.CALC_STAT_CD = '07'
           				THEN -1 * NVL(F.DC_TOT_AMT          ,0) 
           				ELSE NVL(F.DC_TOT_AMT        ,0) END AS DC_TOT_AMT  
           		,CASE WHEN F.CALC_STAT_CD = '07'
           				THEN -1 * NVL(F.BM_POINT_TOT_AMT    ,0) 
           				ELSE NVL(F.BM_POINT_TOT_AMT        ,0) END AS BM_POINT_TOT_AMT
           		,CASE WHEN F.CALC_STAT_CD = '07'
           				THEN -1 * NVL(F.BM_CUPN_TOT_AMT     ,0) 
           				ELSE NVL(F.BM_CUPN_TOT_AMT        ,0) END AS BM_CUPN_TOT_AMT
           		,CASE WHEN F.CALC_STAT_CD = '07'
           				THEN -1 * NVL(F.POINT_TOT_AMT       ,0)
           				ELSE NVL(F.POINT_TOT_AMT        ,0) END AS POINT_TOT_AMT
           		,CASE WHEN F.CALC_STAT_CD = '07'
           				THEN -1 * NVL(F.ETC_TOT_AMT         ,0)
           				ELSE NVL(F.ETC_TOT_AMT        ,0) END AS ETC_TOT_AMT
           		,CASE WHEN F.CALC_STAT_CD = '07'
           				THEN -1 * NVL(F.LAST_CALC_TOT_AMT   ,0) 
           				ELSE NVL(F.LAST_CALC_TOT_AMT        ,0) END AS LAST_CALC_TOT_AMT
           		,F.PRE_MM
                ,F.DLR_RO_TP		
               FROM (
                SELECT (SELECT CARLINE_CD FROM SA_0121T WHERE VIN_NO = CA.VIN_NO AND ROWNUM = 1) AS CARLINE_CD
                       ,(SELECT SUM(NVL(PAYM_AMT, 0)) FROM SE_0530T WHERE DLR_CD = '${sDlrCd}' AND CALC_DOC_NO = CA.CALC_DOC_NO) AS PAYM_AMT
                       ,CA.DLR_CD
                       ,CA.VIN_NO
                       ,CA.RO_DOC_NO
                       ,CA.RO_TP
                       ,CA.CALC_DT
                       ,CA.CALC_DOC_NO
                       ,CA.CALC_STAT_CD
                       ,CA.CALC_CANC_YN
                       ,NVL(CA.LBR_CALC_AMT        ,0) AS LBR_CALC_AMT            --공임정산금액
                       ,NVL(CA.LBR_DC_RATE         ,0) AS LBR_DC_RATE             --공임할인율
                       ,NVL(CA.LBR_DC_AMT          ,0) AS LBR_DC_AMT              --공임할인금액
                       ,NVL(CA.LBR_BM_POINT_USE_AMT,0) AS LBR_BM_POINT_USE_AMT    --공임BM포인트사용금액
                       ,NVL(CA.LBR_BM_CUPN_USE_AMT ,0) AS LBR_BM_CUPN_USE_AMT     --공임BM쿠폰사용금액
                       ,NVL(CA.LBR_POINT_USE_AMT   ,0) AS LBR_POINT_USE_AMT       --공임포인트사용금액
                       ,NVL(CA.LBR_ETC_DC_AMT      ,0) AS LBR_ETC_DC_AMT          --공임기타할인금액
                       ,NVL(CA.LBR_CALC_SUM_AMT    ,0) AS LBR_CALC_SUM_AMT        --공임정산합계금액
                       ,NVL(CA.PAR_CALC_AMT        ,0) AS PAR_CALC_AMT            --부품정산금액
                       ,NVL(CA.PAR_DC_RATE         ,0) AS PAR_DC_RATE             --부품할인율
                       ,NVL(CA.PAR_DC_AMT          ,0) AS PAR_DC_AMT              --부품할인금액
                       ,NVL(CA.PAR_BM_POINT_USE_AMT,0) AS PAR_BM_POINT_USE_AMT    --부품BM포인트사용금액
                       ,NVL(CA.PAR_BM_CUPN_USE_AMT ,0) AS PAR_BM_CUPN_USE_AMT     --부품BM쿠폰사용금액
                       ,NVL(CA.PAR_POINT_USE_AMT   ,0) AS PAR_POINT_USE_AMT       --부품포인트사용금액
                       ,NVL(CA.PAR_ETC_DC_AMT      ,0) AS PAR_ETC_DC_AMT          --부품기타할인금액
                       ,NVL(CA.PAR_CALC_SUM_AMT    ,0) AS PAR_CALC_SUM_AMT        --부품정산합계금액
                       ,NVL(CA.ETC_CALC_AMT        ,0) AS ETC_CALC_AMT            --기타정산금액
                       ,NVL(CA.ETC_DC_RATE         ,0) AS ETC_DC_RATE             --기타할인율
                       ,NVL(CA.ETC_DC_AMT          ,0) AS ETC_DC_AMT              --기타할인금액
                       ,NVL(CA.ETC_BM_POINT_USE_AMT,0) AS ETC_BM_POINT_USE_AMT    --기타BM포인트사용금액
                       ,NVL(CA.ETC_BM_CUPN_USE_AMT ,0) AS ETC_BM_CUPN_USE_AMT     --기타BM쿠폰사용금액
                       ,NVL(CA.ETC_POINT_USE_AMT   ,0) AS ETC_POINT_USE_AMT       --기타포인트사용금액
                       ,NVL(CA.ETC_OTHER_DC_AMT    ,0) AS ETC_OTHER_DC_AMT        --기타다른할인금액
                       ,NVL(CA.ETC_CALC_SUM_AMT    ,0) AS ETC_CALC_SUM_AMT        --기타정산합계금액
                       ,NVL(CA.CALC_TOT_AMT        ,0) AS CALC_TOT_AMT            --정산총금액
                       ,NVL(CA.DC_TOT_RATE         ,0) AS DC_TOT_RATE             --할인총율
                       ,NVL(CA.DC_TOT_AMT          ,0) AS DC_TOT_AMT              --할인총금액
                       ,NVL(CA.BM_POINT_TOT_AMT    ,0) AS BM_POINT_TOT_AMT        --BM포인트총금액
                       ,NVL(CA.BM_CUPN_TOT_AMT     ,0) AS BM_CUPN_TOT_AMT         --BM쿠폰총금액
                       ,NVL(CA.POINT_TOT_AMT       ,0) AS POINT_TOT_AMT           --포인트총금액
                       ,NVL(CA.ETC_TOT_AMT         ,0) AS ETC_TOT_AMT             --기타총금액
                       ,NVL(CA.LAST_CALC_TOT_AMT   ,0) AS LAST_CALC_TOT_AMT       --최종정산총금액
                       ,TO_CHAR(CA.CALC_DT, 'MM') AS PRE_MM
                       ,(SELECT DLR_RO_TP FROM SE_0300T WHERE DLR_CD = CA.DLR_CD AND RO_DOC_NO = CA.RO_DOC_NO) AS DLR_RO_TP
                FROM SE_0500T CA
                WHERE CA.DLR_CD = '${sDlrCd}'
                --产值调整为和结算查询一致start
                --AND CA.CALC_STAT_CD = '00'
                --AND CA.CALC_CANC_YN = 'N'
                AND CA.CALC_STAT_CD NOT IN ('03', '04')
                --产值调整为和结算报表一致end
                AND CA.SER_PAR_DSTIN_CD = 'SER'
                AND TO_CHAR(CA.CALC_DT,'YYYY') = '${sStartDt}'
                ${IF(LEN(sFosterTp) <= 0,""," AND NVL(CA.RO_TP, 'NONE')='" + sFosterTp + "'")}  --위탁유형
            )F
            WHERE 1=1
            ${IF(LEN(sCarlineCd) <= 0,""," AND NVL(CARLINE_CD, 'NONE')='" + sCarlineCd + "'")}
            ${IF(LEN(sDlrRoTp) <= 0,""," AND NVL(DLR_RO_TP, 'NONE')='" + sDlrRoTp + "'")}
        )
        SELECT 1 AS COLUMN_SEQ, '接车检查台数' AS COLUMN_NM ,COUNT(DISTINCT(VIN_NO)) COLUMN_VAL, PRE_MM, 'A' AS VAL_TYPE
        FROM (
            SELECT * FROM (
                SELECT DLR_CD
                    ,DIAG_DOC_NO
                    ,VIN_NO
                    ,(SELECT CARLINE_CD FROM SA_0121T WHERE VIN_NO = PRE.VIN_NO AND ROWNUM = 1) AS CARLINE_CD
                    ,TO_CHAR(PRE_CHK_DT,'MM') AS PRE_MM
                FROM SE_0200T PRE
                WHERE DLR_CD = '${sDlrCd}'
                 AND TO_CHAR(PRE_CHK_DT,'YYYY') = '${sStartDt}'
                 AND DIAG_STAT_CD != 'C'
             )
             WHERE 1=1
             ${IF(LEN(sCarlineCd) <= 0,""," AND NVL(CARLINE_CD, 'NONE')='" + sCarlineCd + "'")}
        )
        GROUP BY PRE_MM     --사전점검대수
        UNION ALL
        SELECT 1 AS COLUMN_SEQ, '接车检查台数' AS COLUMN_NM, 0 COLUMN_VAL, '00' AS PRE_MM, 'A' AS VAL_TYPE
        FROM DUAL

        UNION ALL

        SELECT 2 AS COLUMN_SEQ, '接车检查台次' AS COLUMN_NM, COUNT(DIAG_DOC_NO) COLUMN_VAL, PRE_MM, 'A' AS VAL_TYPE
        FROM (
            SELECT * FROM (
                SELECT DLR_CD
                       ,DIAG_DOC_NO
                       ,VIN_NO
                       ,(SELECT CARLINE_CD FROM SA_0121T WHERE VIN_NO = PRE.VIN_NO AND ROWNUM = 1) AS CARLINE_CD
                       ,TO_CHAR(PRE_CHK_DT,'MM') AS PRE_MM
                FROM SE_0200T PRE
                WHERE DLR_CD = '${sDlrCd}'
                AND TO_CHAR(PRE_CHK_DT,'YYYY') = '${sStartDt}'
                AND DIAG_STAT_CD != 'C'
            )
            WHERE 1=1
            ${IF(LEN(sCarlineCd) <= 0,""," AND NVL(CARLINE_CD, 'NONE')='" + sCarlineCd + "'")}
        )
        GROUP BY PRE_MM     --사전점검대차
        UNION ALL
        SELECT 2 AS COLUMN_SEQ, '接车检查台次' AS COLUMN_NM, 0 COLUMN_VAL, '00' AS PRE_MM, 'A' AS VAL_TYPE
        FROM DUAL

        UNION ALL

        SELECT 3 AS COLUMN_SEQ, '维修委托台数' AS COLUMN_NM, COUNT(DISTINCT(VIN_NO)) COLUMN_VAL, PRE_MM, 'A' AS VAL_TYPE
        FROM (
            SELECT * FROM (
                SELECT DLR_CD
                       ,RO_DOC_NO
                       ,VIN_NO
                       ,(SELECT CARLINE_CD FROM SA_0121T WHERE VIN_NO = RO.VIN_NO AND ROWNUM = 1) AS CARLINE_CD
                       ,TO_CHAR(RO_DT,'MM') AS PRE_MM
                       ,RO_TP
                       ,DLR_RO_TP
                FROM SE_0300T RO
                WHERE DLR_CD = '${sDlrCd}'
                AND TO_CHAR(RO_DT,'YYYY') = '${sStartDt}'
                AND RO_STAT_CD != '06'
                ${IF(LEN(sFosterTp) <= 0,""," AND NVL(RO_TP, 'NONE')='" + sFosterTp + "'")}
                ${IF(LEN(sDlrRoTp) <= 0,""," AND NVL(DLR_RO_TP, 'NONE')='" + sDlrRoTp + "'")}
            )
            WHERE 1=1
            ${IF(LEN(sCarlineCd) <= 0,""," AND NVL(CARLINE_CD, 'NONE')='" + sCarlineCd + "'")}
        )
        GROUP BY PRE_MM     --정비위탁 대수
        UNION ALL
        SELECT 3 AS COLUMN_SEQ, '维修委托台数' AS COLUMN_NM, 0 COLUMN_VAL, '00' AS PRE_MM, 'A' AS VAL_TYPE
        FROM DUAL

        UNION ALL

        SELECT 4 AS COLUMN_SEQ, '维修委托台次' AS COLUMN_NM, COUNT(RO_DOC_NO) COLUMN_VAL, PRE_MM, 'A' AS VAL_TYPE
        FROM (
            SELECT * FROM (
                SELECT DLR_CD
                       ,RO_DOC_NO
                       ,VIN_NO
                       ,(SELECT CARLINE_CD FROM SA_0121T WHERE VIN_NO = RO.VIN_NO AND ROWNUM = 1) AS CARLINE_CD
                       ,TO_CHAR(RO_DT,'MM') AS PRE_MM
                       ,RO_TP
                       ,DLR_RO_TP
                FROM SE_0300T RO
                WHERE DLR_CD = '${sDlrCd}'
                AND TO_CHAR(RO_DT,'YYYY') = '${sStartDt}'
                AND RO_STAT_CD != '06'
                ${IF(LEN(sFosterTp) <= 0,""," AND NVL(RO_TP, 'NONE')='" + sFosterTp + "'")}
                ${IF(LEN(sDlrRoTp) <= 0,""," AND NVL(DLR_RO_TP, 'NONE')='" + sDlrRoTp + "'")}
            )
            WHERE 1=1
            ${IF(LEN(sCarlineCd) <= 0,""," AND NVL(CARLINE_CD, 'NONE')='" + sCarlineCd + "'")}
        )
        GROUP BY PRE_MM     --정비위탁 대차
        UNION ALL
        SELECT 4 AS COLUMN_SEQ, '维修委托台次' AS COLUMN_NM, 0 COLUMN_VAL, '00' AS PRE_MM, 'A' AS VAL_TYPE
        FROM DUAL

        UNION ALL

        SELECT 5 AS COLUMN_SEQ, '取消委托台数' AS COLUMN_NM, COUNT(DISTINCT(VIN_NO)) COLUMN_VAL, PRE_MM, 'A' AS VAL_TYPE
        FROM (
            SELECT * FROM (
                SELECT DLR_CD
                       ,RO_DOC_NO
                       ,VIN_NO
                       ,(SELECT CARLINE_CD FROM SA_0121T WHERE VIN_NO = RO.VIN_NO AND ROWNUM = 1) AS CARLINE_CD
                       ,TO_CHAR(RO_DT,'MM') AS PRE_MM
                       ,RO_TP
                       ,DLR_RO_TP
                FROM SE_0300T RO
                WHERE DLR_CD = '${sDlrCd}'
                AND TO_CHAR(RO_DT,'YYYY') = '${sStartDt}'
                AND RO_STAT_CD = '06'
                ${IF(LEN(sFosterTp) <= 0,""," AND NVL(RO_TP, 'NONE')='" + sFosterTp + "'")}
                ${IF(LEN(sDlrRoTp) <= 0,""," AND NVL(DLR_RO_TP, 'NONE')='" + sDlrRoTp + "'")}
            )
            WHERE 1=1
            ${IF(LEN(sCarlineCd) <= 0,""," AND NVL(CARLINE_CD, 'NONE')='" + sCarlineCd + "'")}
        )
        GROUP BY PRE_MM     --RO 취소 대수
        UNION ALL
        SELECT 5 AS COLUMN_SEQ, '取消委托台数' AS COLUMN_NM, 0 COLUMN_VAL, '00' AS PRE_MM, 'A' AS VAL_TYPE
        FROM DUAL

        UNION ALL

        SELECT 6 AS COLUMN_SEQ, '取消委托台次' AS COLUMN_NM, COUNT(RO_DOC_NO) COLUMN_VAL, PRE_MM, 'A' AS VAL_TYPE
        FROM (
            SELECT * FROM (
                SELECT DLR_CD
                       ,RO_DOC_NO
                       ,VIN_NO
                       ,(SELECT CARLINE_CD FROM SA_0121T WHERE VIN_NO = RO.VIN_NO AND ROWNUM = 1) AS CARLINE_CD
                       ,TO_CHAR(RO_DT,'MM') AS PRE_MM
                       ,RO_TP
                       ,DLR_RO_TP
                FROM SE_0300T RO
                WHERE DLR_CD = '${sDlrCd}'
                AND TO_CHAR(RO_DT,'YYYY') = '${sStartDt}'
                AND RO_STAT_CD = '06'
                ${IF(LEN(sFosterTp) <= 0,""," AND NVL(RO_TP, 'NONE')='" + sFosterTp + "'")}
                ${IF(LEN(sDlrRoTp) <= 0,""," AND NVL(DLR_RO_TP, 'NONE')='" + sDlrRoTp + "'")}
            )
            WHERE 1=1
            ${IF(LEN(sCarlineCd) <= 0,""," AND NVL(CARLINE_CD, 'NONE')='" + sCarlineCd + "'")}
        )
        GROUP BY PRE_MM       --RO 취소 대차
        UNION ALL
        SELECT 6 AS COLUMN_SEQ, '取消委托台次' AS COLUMN_NM, 0 COLUMN_VAL, '00' AS PRE_MM, 'A' AS VAL_TYPE
        FROM DUAL

        UNION ALL

        SELECT 7 AS COLUMN_SEQ, '    结算完成台数' AS COLUMN_NM, COUNT(DISTINCT(VIN_NO)) COLUMN_VAL, PRE_MM, 'A' AS VAL_TYPE
        FROM (
            SELECT *
            FROM (
                SELECT VIN_NO
                       ,TO_CHAR(RO_DT, 'MM') AS PRE_MM
                       ,(SELECT CARLINE_CD FROM SA_0121T WHERE VIN_NO = RO.VIN_NO AND ROWNUM = 1) AS CARLINE_CD
                       ,RO_TP
                       ,DLR_RO_TP
                FROM SE_0300T RO
                WHERE DLR_CD = '${sDlrCd}'
                AND RO_STAT_CD = '00'
                AND TO_CHAR(RO_DT, 'YYYY') = '${sStartDt}'
                ${IF(LEN(sFosterTp) <= 0,""," AND NVL(RO_TP, 'NONE')='" + sFosterTp + "'")}   --위탁유형
                ${IF(LEN(sDlrRoTp) <= 0,""," AND NVL(DLR_RO_TP, 'NONE')='" + sDlrRoTp + "'")}
            )
            WHERE 1=1
            ${IF(LEN(sCarlineCd) <= 0,""," AND NVL(CARLINE_CD, 'NONE')='" + sCarlineCd + "'")}
        )
        GROUP BY PRE_MM     --정산완료  대수
        UNION ALL
        SELECT 7 AS COLUMN_SEQ, '    结算完成台数' AS COLUMN_NM, 0 COLUMN_VAL, '00' AS PRE_MM, 'A' AS VAL_TYPE
        FROM DUAL

        UNION ALL

        SELECT 8 AS COLUMN_SEQ, '    结算完成台次' AS COLUMN_NM, COUNT(DISTINCT(RO_DOC_NO)) COLUMN_VAL, PRE_MM, 'A' AS VAL_TYPE
        FROM (
            SELECT *
            FROM (
                SELECT VIN_NO
                       ,RO_DOC_NO
                       ,TO_CHAR(RO_DT, 'MM') AS PRE_MM
                       ,(SELECT CARLINE_CD FROM SA_0121T WHERE VIN_NO = RO.VIN_NO AND ROWNUM = 1) AS CARLINE_CD
                       ,RO_TP
                       ,DLR_RO_TP
                FROM SE_0300T RO
                WHERE DLR_CD = '${sDlrCd}'
                AND RO_STAT_CD = '00'
                AND TO_CHAR(RO_DT, 'YYYY') = '${sStartDt}'
                ${IF(LEN(sFosterTp) <= 0,""," AND NVL(RO_TP, 'NONE')='" + sFosterTp + "'")}   --위탁유형
                ${IF(LEN(sDlrRoTp) <= 0,""," AND NVL(DLR_RO_TP, 'NONE')='" + sDlrRoTp + "'")}
            )
            WHERE 1=1
            ${IF(LEN(sCarlineCd) <= 0,""," AND NVL(CARLINE_CD, 'NONE')='" + sCarlineCd + "'")}
        )
        GROUP BY PRE_MM     --정산완료  대차
        UNION ALL
        SELECT 8 AS COLUMN_SEQ, '    结算完成台次' AS COLUMN_NM, 0 COLUMN_VAL, '00' AS PRE_MM, 'A' AS VAL_TYPE
        FROM DUAL

        UNION ALL

        SELECT 9 AS COLUMN_SEQ, '    付款完成台数' AS COLUMN_NM, COUNT(DISTINCT(VIN_NO)) COLUMN_VAL, PRE_MM, 'A' AS VAL_TYPE
        FROM (
            SELECT *
            FROM (
                SELECT RO.VIN_NO
                       ,TO_CHAR(RO.RO_DT, 'MM') AS PRE_MM
                       ,(SELECT CARLINE_CD FROM SA_0121T WHERE VIN_NO = RO.VIN_NO AND ROWNUM = 1) AS CARLINE_CD
                       ,RO.RO_TP
                       ,RO.DLR_RO_TP
                FROM SE_0300T RO INNER JOIN SE_0550T RCV
                ON RO.DLR_CD = RCV.DLR_CD
                AND RO.RO_DOC_NO = RCV.RO_DOC_NO
                WHERE RO.DLR_CD = '${sDlrCd}'
                AND RO.RO_STAT_CD != '06'
                AND RCV.RCV_STAT_CD = 'F'
                AND TO_CHAR(RO.RO_DT, 'YYYY') = '${sStartDt}'
                ${IF(LEN(sFosterTp) <= 0,""," AND NVL(RO.RO_TP, 'NONE')='" + sFosterTp + "'")}   --위탁유형
                ${IF(LEN(sDlrRoTp) <= 0,""," AND NVL(DLR_RO_TP, 'NONE')='" + sDlrRoTp + "'")}
            )
            WHERE 1=1
            ${IF(LEN(sCarlineCd) <= 0,""," AND NVL(CARLINE_CD, 'NONE')='" + sCarlineCd + "'")}
        )
        GROUP BY PRE_MM   --수납완료  대차
        UNION ALL
        SELECT 9 AS COLUMN_SEQ, '    付款完成台数' AS COLUMN_NM, 0 COLUMN_VAL, '00' AS PRE_MM, 'A' AS VAL_TYPE
        FROM DUAL

        UNION ALL

        SELECT 10 AS COLUMN_SEQ, '    付款完成台次' AS COLUMN_NM, COUNT(RO_DOC_NO) COLUMN_VAL, PRE_MM, 'A' AS VAL_TYPE
        FROM (
            SELECT *
            FROM (
                SELECT RO.VIN_NO
                       ,RO.RO_DOC_NO
                       ,TO_CHAR(RO_DT, 'MM') AS PRE_MM
                       ,(SELECT CARLINE_CD FROM SA_0121T WHERE VIN_NO = RO.VIN_NO AND ROWNUM = 1) AS CARLINE_CD
                       ,RO.RO_TP
                       ,RO.DLR_RO_TP
                FROM SE_0300T RO INNER JOIN SE_0550T RCV
                ON RO.DLR_CD = RCV.DLR_CD
                AND RO.RO_DOC_NO = RCV.RO_DOC_NO
                WHERE RO.DLR_CD = '${sDlrCd}'
                AND RO.RO_STAT_CD != '06'
                AND RCV.RCV_STAT_CD = 'F'
                AND TO_CHAR(RO.RO_DT, 'YYYY') = '${sStartDt}'
                ${IF(LEN(sFosterTp) <= 0,""," AND NVL(RO.RO_TP, 'NONE')='" + sFosterTp + "'")}   --위탁유형
                ${IF(LEN(sDlrRoTp) <= 0,""," AND NVL(DLR_RO_TP, 'NONE')='" + sDlrRoTp + "'")}
            )
            WHERE 1=1
            ${IF(LEN(sCarlineCd) <= 0,""," AND NVL(CARLINE_CD, 'NONE')='" + sCarlineCd + "'")}
        )
        GROUP BY PRE_MM   --수납완료  대수
        UNION ALL
        SELECT 10 AS COLUMN_SEQ, '    付款完成台次' AS COLUMN_NM, 0 COLUMN_VAL, '00' AS PRE_MM, 'A' AS VAL_TYPE
        FROM DUAL

        UNION ALL

        ---liuxueying 调整 start
        SELECT 11 AS COLUMN_SEQ, '服务结算台数' AS COLUMN_NM, COUNT(DISTINCT(VIN_NO)) COLUMN_VAL, PRE_MM, 'A' AS VAL_TYPE
        FROM (
            SELECT * FROM (
                SELECT CA.VIN_NO
                      ,(SELECT CARLINE_CD FROM SA_0121T WHERE VIN_NO = CA.VIN_NO AND ROWNUM = 1) AS CARLINE_CD
                      ,(SELECT DLR_RO_TP FROM SE_0300T WHERE DLR_CD = CA.DLR_CD AND RO_DOC_NO = CA.RO_DOC_NO) AS DLR_RO_TP
                      ,CA.CALC_DOC_NO
                      ,CA.CALC_STAT_CD
                      ,TO_CHAR(CA.CALC_DT, 'MM') AS PRE_MM
                FROM SE_0500T CA
                WHERE CA.DLR_CD = '${sDlrCd}'
                AND CA.CALC_STAT_CD = '00'
                AND CA.CALC_CANC_YN = 'N'
                AND CA.SER_PAR_DSTIN_CD = 'SER'
                AND TO_CHAR(CA.CALC_DT,'YYYY') = '${sStartDt}'
                ${IF(LEN(sFosterTp) <= 0,""," AND NVL(CA.RO_TP, 'NONE')='" + sFosterTp + "'")}  --위탁유형
            )
            WHERE 1=1
            ${IF(LEN(sCarlineCd) <= 0,""," AND NVL(CARLINE_CD, 'NONE')='" + sCarlineCd + "'")}
            ${IF(LEN(sDlrRoTp) <= 0,""," AND NVL(DLR_RO_TP, 'NONE')='" + sDlrRoTp + "'")}
        ) 
        GROUP BY PRE_MM     --정산  대수
        UNION ALL
        SELECT 11 AS COLUMN_SEQ, '服务结算台数' AS COLUMN_NM, 0 COLUMN_VAL, '00' AS PRE_MM, 'A' AS VAL_TYPE
        FROM DUAL

        UNION ALL

        SELECT 12 AS COLUMN_SEQ, '服务结算台次' AS COLUMN_NM, COUNT(CALC_DOC_NO) COLUMN_VAL, PRE_MM, 'A' AS VAL_TYPE
        FROM (
            SELECT * FROM (
                SELECT CA.CALC_DOC_NO
                	  ,(SELECT DLR_RO_TP FROM SE_0300T WHERE DLR_CD = CA.DLR_CD AND RO_DOC_NO = CA.RO_DOC_NO) AS DLR_RO_TP
                      ,(SELECT CARLINE_CD FROM SA_0121T WHERE VIN_NO = CA.VIN_NO AND ROWNUM = 1) AS CARLINE_CD
                      ,CA.CALC_STAT_CD
                      ,TO_CHAR(CA.CALC_DT, 'MM') AS PRE_MM
                FROM SE_0500T CA
                WHERE CA.DLR_CD = '${sDlrCd}'
                AND CA.CALC_STAT_CD = '00'
                AND CA.CALC_CANC_YN = 'N'
                AND CA.SER_PAR_DSTIN_CD = 'SER'
                AND TO_CHAR(CA.CALC_DT,'YYYY') = '${sStartDt}'
                ${IF(LEN(sFosterTp) <= 0,""," AND NVL(CA.RO_TP, 'NONE')='" + sFosterTp + "'")}  --위탁유형
            )
            WHERE 1=1
            ${IF(LEN(sCarlineCd) <= 0,""," AND NVL(CARLINE_CD, 'NONE')='" + sCarlineCd + "'")}
            ${IF(LEN(sDlrRoTp) <= 0,""," AND NVL(DLR_RO_TP, 'NONE')='" + sDlrRoTp + "'")}
        ) 
        GROUP BY PRE_MM     --서비스정산  대차
        UNION ALL
        SELECT 12 AS COLUMN_SEQ, '服务结算台次' AS COLUMN_NM, 0 COLUMN_VAL, '00' AS PRE_MM, 'A' AS VAL_TYPE
        FROM DUAL
		---liuxueying 调整 end
        UNION ALL

        SELECT 13 AS COLUMN_SEQ, '维修产值（合计）' AS COLUMN_NM, SUM(NVL(PAYM_AMT,0)) COLUMN_VAL, PRE_MM, 'A' AS VAL_TYPE
        FROM
            (
            SELECT * FROM (
                SELECT (SELECT CARLINE_CD FROM SA_0121T WHERE VIN_NO = CA.VIN_NO AND ROWNUM = 1) AS CARLINE_CD
                       ,(SELECT CASE WHEN CA.CALC_STAT_CD = '07'  THEN SUM(-1*NVL(PAYM_AMT, 0)) ELSE SUM(NVL(PAYM_AMT, 0)) END  FROM SE_0530T WHERE DLR_CD = CA.DLR_CD AND CALC_DOC_NO = CA.CALC_DOC_NO) AS PAYM_AMT
                       ,CA.DLR_CD
                       ,CA.VIN_NO
                       ,CA.RO_DOC_NO
                       ,CA.RO_TP
                       ,CA.CALC_DT
                       ,CA.CALC_DOC_NO
                       ,CA.CALC_STAT_CD
                       ,CA.CALC_CANC_YN
                       ,NVL(CA.LBR_CALC_AMT        ,0) AS LBR_CALC_AMT            --공임정산금액
                       ,NVL(CA.LBR_DC_RATE         ,0) AS LBR_DC_RATE             --공임할인율
                       ,NVL(CA.LBR_DC_AMT          ,0) AS LBR_DC_AMT              --공임할인금액
                       ,NVL(CA.LBR_BM_POINT_USE_AMT,0) AS LBR_BM_POINT_USE_AMT    --공임BM포인트사용금액
                       ,NVL(CA.LBR_BM_CUPN_USE_AMT ,0) AS LBR_BM_CUPN_USE_AMT     --공임BM쿠폰사용금액
                       ,NVL(CA.LBR_POINT_USE_AMT   ,0) AS LBR_POINT_USE_AMT       --공임포인트사용금액
                       ,NVL(CA.LBR_ETC_DC_AMT      ,0) AS LBR_ETC_DC_AMT          --공임기타할인금액
                       ,NVL(CA.LBR_CALC_SUM_AMT    ,0) AS LBR_CALC_SUM_AMT        --공임정산합계금액
                       ,NVL(CA.PAR_CALC_AMT        ,0) AS PAR_CALC_AMT            --부품정산금액
                       ,NVL(CA.PAR_DC_RATE         ,0) AS PAR_DC_RATE             --부품할인율
                       ,NVL(CA.PAR_DC_AMT          ,0) AS PAR_DC_AMT              --부품할인금액
                       ,NVL(CA.PAR_BM_POINT_USE_AMT,0) AS PAR_BM_POINT_USE_AMT    --부품BM포인트사용금액
                       ,NVL(CA.PAR_BM_CUPN_USE_AMT ,0) AS PAR_BM_CUPN_USE_AMT     --부품BM쿠폰사용금액
                       ,NVL(CA.PAR_POINT_USE_AMT   ,0) AS PAR_POINT_USE_AMT       --부품포인트사용금액
                       ,NVL(CA.PAR_ETC_DC_AMT      ,0) AS PAR_ETC_DC_AMT          --부품기타할인금액
                       ,NVL(CA.PAR_CALC_SUM_AMT    ,0) AS PAR_CALC_SUM_AMT        --부품정산합계금액
                       ,NVL(CA.ETC_CALC_AMT        ,0) AS ETC_CALC_AMT            --기타정산금액
                       ,NVL(CA.ETC_DC_RATE         ,0) AS ETC_DC_RATE             --기타할인율
                       ,NVL(CA.ETC_DC_AMT          ,0) AS ETC_DC_AMT              --기타할인금액
                       ,NVL(CA.ETC_BM_POINT_USE_AMT,0) AS ETC_BM_POINT_USE_AMT    --기타BM포인트사용금액
                       ,NVL(CA.ETC_BM_CUPN_USE_AMT ,0) AS ETC_BM_CUPN_USE_AMT     --기타BM쿠폰사용금액
                       ,NVL(CA.ETC_POINT_USE_AMT   ,0) AS ETC_POINT_USE_AMT       --기타포인트사용금액
                       ,NVL(CA.ETC_OTHER_DC_AMT    ,0) AS ETC_OTHER_DC_AMT        --기타다른할인금액
                       ,NVL(CA.ETC_CALC_SUM_AMT    ,0) AS ETC_CALC_SUM_AMT        --기타정산합계금액
                       ,NVL(CA.CALC_TOT_AMT        ,0) AS CALC_TOT_AMT            --정산총금액
                       ,NVL(CA.DC_TOT_RATE         ,0) AS DC_TOT_RATE             --할인총율
                       ,NVL(CA.DC_TOT_AMT          ,0) AS DC_TOT_AMT              --할인총금액
                       ,NVL(CA.BM_POINT_TOT_AMT    ,0) AS BM_POINT_TOT_AMT        --BM포인트총금액
                       ,NVL(CA.BM_CUPN_TOT_AMT     ,0) AS BM_CUPN_TOT_AMT         --BM쿠폰총금액
                       ,NVL(CA.POINT_TOT_AMT       ,0) AS POINT_TOT_AMT           --포인트총금액
                       ,NVL(CA.ETC_TOT_AMT         ,0) AS ETC_TOT_AMT             --기타총금액
                       ,NVL(CA.LAST_CALC_TOT_AMT   ,0) AS LAST_CALC_TOT_AMT       --최종정산총금액
                       ,TO_CHAR(CA.CALC_DT, 'MM') AS PRE_MM
                       ,(SELECT DLR_RO_TP FROM SE_0300T WHERE DLR_CD = CA.DLR_CD AND RO_DOC_NO = CA.RO_DOC_NO) AS DLR_RO_TP
                FROM SE_0500T CA
                WHERE CA.DLR_CD = '${sDlrCd}'
                AND (CA.CALC_STAT_CD = '00' OR  CA.CALC_STAT_CD = '07')
                AND CA.SER_PAR_DSTIN_CD = 'SER'
                AND TO_CHAR(CA.CALC_DT,'YYYY') = '${sStartDt}'
                ${IF(LEN(sFosterTp) <= 0,""," AND NVL(CA.RO_TP, 'NONE')='" + sFosterTp + "'")}  --위탁유형
            )
            WHERE 1=1
            ${IF(LEN(sCarlineCd) <= 0,""," AND NVL(CARLINE_CD, 'NONE')='" + sCarlineCd + "'")}
            ${IF(LEN(sDlrRoTp) <= 0,""," AND NVL(DLR_RO_TP, 'NONE')='" + sDlrRoTp + "'")}
        )
        GROUP BY PRE_MM     --정비생산액 (합계)
        UNION ALL
        SELECT 13 AS COLUMN_SEQ, '维修产值（合计）' AS COLUMN_NM, 0 COLUMN_VAL, '00' AS PRE_MM, 'A' AS VAL_TYPE
        FROM DUAL

        UNION ALL

        SELECT 14 AS COLUMN_SEQ, '    维修产值（非保修）' AS COLUMN_NM, SUM(PAYM_AMT) COLUMN_VAL, PRE_MM, 'A' AS VAL_TYPE
        FROM T1
        WHERE RO_TP != '02'
        GROUP BY PRE_MM    --수리생산액 (비보증)
        UNION ALL
        SELECT 14 AS COLUMN_SEQ, '    维修产值（非保修）' AS COLUMN_NM, 0 COLUMN_VAL, '00' AS PRE_MM, 'A' AS VAL_TYPE
        FROM DUAL

        UNION ALL

        SELECT 15 AS COLUMN_SEQ, '    维修产值（保修）' AS COLUMN_NM, SUM(PAYM_AMT) COLUMN_VAL, PRE_MM, 'A' AS VAL_TYPE
        FROM T1
        WHERE RO_TP = '02'
        GROUP BY PRE_MM     --수리생산액 (보증)
        UNION ALL
        SELECT 15 AS COLUMN_SEQ, '    维修产值（保修）' AS COLUMN_NM, 0 COLUMN_VAL, '00' AS PRE_MM, 'A' AS VAL_TYPE
        FROM DUAL

        UNION ALL

        SELECT 16 AS COLUMN_SEQ, '配件成本（合计）' AS COLUMN_NM, SUM(NVL(MOVING_AVG_AMT, 0)) COLUMN_VAL, PRE_MM, 'A' AS VAL_TYPE
        FROM (
            SELECT 
            	 CASE WHEN A.CALC_STAT_CD = '07'
            		THEN -1 * NVL(MOVING_AVG_AMT        ,0)
            		ELSE NVL(MOVING_AVG_AMT        ,0) END AS MOVING_AVG_AMT
               , PRE_MM
               , A.DLR_CD
               , A.RO_DOC_NO
            FROM T1 A LEFT OUTER JOIN
            (SELECT (POS_AMT - NEG_AMT) AS MOVING_AVG_AMT, DLR_CD, RO_DOC_NO
               FROM (
                   SELECT NVL(SUM(DECODE(PAR_REQ_STAT_CD, 02, T2.MOVING_AVG_AMT)), 0) AS POS_AMT
                          , NVL(SUM(DECODE(PAR_REQ_STAT_CD, 03, ABS(T2.MOVING_AVG_AMT))), 0) AS NEG_AMT
                          , T2.DLR_CD, T2.RO_DOC_NO
                     FROM SE_0160T T1
                    INNER JOIN PT_0502T T2
                       ON T1.DLR_CD = T2.DLR_CD
                      AND T1.DOC_NO = T2.RO_DOC_NO
                      AND T1.LINE_NO = T2.RO_LINE_NO
                      AND T1.ITEM_CD = T2.ITEM_CD
                    WHERE T1.DLR_CD = '${sDlrCd}'
                      AND PREFIX_ID = 'RO'
                      AND PAR_GI_TP = 'RO'
                      GROUP BY T2.DLR_CD, T2.RO_DOC_NO
                   )
            ) F2
            ON A.DLR_CD = F2.DLR_CD
            AND A.RO_DOC_NO = F2.RO_DOC_NO
        )
        GROUP BY PRE_MM     --부품원가 (합계)
        UNION ALL
        SELECT 16 AS COLUMN_SEQ, '配件成本（合计）' AS COLUMN_NM, 0 COLUMN_VAL, '00' AS PRE_MM, 'A' AS VAL_TYPE
        FROM DUAL

        UNION ALL

        SELECT 17 AS COLUMN_SEQ, '    配件成本（非保修）' AS COLUMN_NM, SUM(NVL(MOVING_AVG_AMT, 0)) COLUMN_VAL, PRE_MM, 'A' AS VAL_TYPE
        FROM (
            SELECT
             	CASE WHEN A.CALC_STAT_CD = '07'
            		THEN -1 * NVL(MOVING_AVG_AMT        ,0)
            		ELSE NVL(MOVING_AVG_AMT        ,0) END AS MOVING_AVG_AMT
              , PRE_MM
              , A.DLR_CD
              , A.RO_DOC_NO
            FROM T1 A LEFT OUTER JOIN
            (SELECT (POS_AMT - NEG_AMT) AS MOVING_AVG_AMT, DLR_CD, RO_DOC_NO
               FROM (
                   SELECT NVL(SUM(DECODE(PAR_REQ_STAT_CD, 02, T2.MOVING_AVG_AMT)), 0) AS POS_AMT
                          , NVL(SUM(DECODE(PAR_REQ_STAT_CD, 03, ABS(T2.MOVING_AVG_AMT))), 0) AS NEG_AMT
                          , T2.DLR_CD, T2.RO_DOC_NO
                     FROM SE_0160T T1
                    INNER JOIN PT_0502T T2
                       ON T1.DLR_CD = T2.DLR_CD
                      AND T1.DOC_NO = T2.RO_DOC_NO
                      AND T1.LINE_NO = T2.RO_LINE_NO
                      AND T1.ITEM_CD = T2.ITEM_CD
                    WHERE T1.DLR_CD = '${sDlrCd}'
                      AND PREFIX_ID = 'RO'
                      AND PAR_GI_TP = 'RO'
                      GROUP BY T2.DLR_CD, T2.RO_DOC_NO
                   )
            ) F2
            ON A.DLR_CD = F2.DLR_CD
            AND A.RO_DOC_NO = F2.RO_DOC_NO
            WHERE A.RO_TP != '02'
        )
        GROUP BY PRE_MM     --부품원가 (비보증)
        UNION ALL
        SELECT 17 AS COLUMN_SEQ, '    配件成本（非保修）' AS COLUMN_NM, 0 COLUMN_VAL, '00' AS PRE_MM, 'A' AS VAL_TYPE
        FROM DUAL

        UNION ALL

        SELECT 18 AS COLUMN_SEQ, '    配件成本（保修）' AS COLUMN_NM, SUM(NVL(MOVING_AVG_AMT, 0)) COLUMN_VAL, PRE_MM, 'A' AS VAL_TYPE
        FROM (
            SELECT 
             	CASE WHEN A.CALC_STAT_CD = '07'
            		THEN -1 * NVL(MOVING_AVG_AMT        ,0)
            		ELSE NVL(MOVING_AVG_AMT        ,0) END AS MOVING_AVG_AMT
           	 	, PRE_MM
            	, A.DLR_CD
            	, A.RO_DOC_NO
            FROM T1 A LEFT OUTER JOIN
            (SELECT (POS_AMT - NEG_AMT) AS MOVING_AVG_AMT, DLR_CD, RO_DOC_NO
               FROM (
                   SELECT NVL(SUM(DECODE(PAR_REQ_STAT_CD, 02, T2.MOVING_AVG_AMT)), 0) AS POS_AMT
                          , NVL(SUM(DECODE(PAR_REQ_STAT_CD, 03, ABS(T2.MOVING_AVG_AMT))), 0) AS NEG_AMT
                          , T2.DLR_CD, T2.RO_DOC_NO
                     FROM SE_0160T T1
                    INNER JOIN PT_0502T T2
                       ON T1.DLR_CD = T2.DLR_CD
                      AND T1.DOC_NO = T2.RO_DOC_NO
                      AND T1.LINE_NO = T2.RO_LINE_NO
                      AND T1.ITEM_CD = T2.ITEM_CD
                    WHERE T1.DLR_CD = '${sDlrCd}'
                      AND PREFIX_ID = 'RO'
                      AND PAR_GI_TP = 'RO'
                      GROUP BY T2.DLR_CD, T2.RO_DOC_NO
                   )
            ) F2
            ON A.DLR_CD = F2.DLR_CD
            AND A.RO_DOC_NO = F2.RO_DOC_NO
            WHERE A.RO_TP = '02'
        )
        GROUP BY PRE_MM    --부품원가 (보증)
        UNION ALL
        SELECT 18 AS COLUMN_SEQ, '    配件成本（保修）' AS COLUMN_NM, 0 COLUMN_VAL, '00' AS PRE_MM, 'A' AS VAL_TYPE
        FROM DUAL

        UNION ALL

        SELECT 19 AS COLUMN_SEQ, '维修毛利（合计）' AS COLUMN_NM, SUM(PAYM_AMT) - SUM(NVL(MOVING_AVG_AMT, 0)) COLUMN_VAL, PRE_MM, 'A' AS VAL_TYPE
        FROM (
            SELECT PAYM_AMT, 0 AS MOVING_AVG_AMT, PRE_MM
            FROM T1

            UNION ALL

            SELECT 0 AS PAYM_AMT
            , CASE WHEN F3.CALC_STAT_CD = '07'
            		THEN -1 * NVL(MOVING_AVG_AMT        ,0)
            		ELSE NVL(MOVING_AVG_AMT        ,0) END AS MOVING_AVG_AMT
            , PRE_MM
            FROM (
                SELECT MOVING_AVG_AMT, A.PRE_MM, A.DLR_CD, A.RO_DOC_NO,A.CALC_STAT_CD
                FROM T1 A LEFT OUTER JOIN
                (SELECT (POS_AMT - NEG_AMT) AS MOVING_AVG_AMT, DLR_CD, RO_DOC_NO
                   FROM (
                       SELECT NVL(SUM(DECODE(PAR_REQ_STAT_CD, 02, T2.MOVING_AVG_AMT)), 0) AS POS_AMT
                              , NVL(SUM(DECODE(PAR_REQ_STAT_CD, 03, ABS(T2.MOVING_AVG_AMT))), 0) AS NEG_AMT
                              , T2.DLR_CD, T2.RO_DOC_NO
                         FROM SE_0160T T1
                        INNER JOIN PT_0502T T2
                           ON T1.DLR_CD = T2.DLR_CD
                          AND T1.DOC_NO = T2.RO_DOC_NO
                          AND T1.LINE_NO = T2.RO_LINE_NO
                          AND T1.ITEM_CD = T2.ITEM_CD
                        WHERE T1.DLR_CD = '${sDlrCd}'
                          AND PREFIX_ID = 'RO'
                          AND PAR_GI_TP = 'RO'
                          GROUP BY T2.DLR_CD, T2.RO_DOC_NO
                       )
                ) F2
                ON A.DLR_CD = F2.DLR_CD
                AND A.RO_DOC_NO = F2.RO_DOC_NO
            )F3
        )
        GROUP BY PRE_MM     --수리총이윤 (합계)
        UNION ALL
        SELECT 19 AS COLUMN_SEQ, '维修毛利（合计）' AS COLUMN_NM, 0 COLUMN_VAL, '00' AS PRE_MM, 'A' AS VAL_TYPE
        FROM DUAL

        UNION ALL

        SELECT 20 AS COLUMN_SEQ, '    维修毛利（非保修）' AS COLUMN_NM, SUM(PAYM_AMT) - SUM(NVL(MOVING_AVG_AMT, 0)) COLUMN_VAL, PRE_MM, 'A' AS VAL_TYPE
        FROM (
            SELECT PAYM_AMT, 0 AS MOVING_AVG_AMT, PRE_MM
            FROM T1
            WHERE RO_TP != '02'

            UNION ALL

            SELECT 0 AS PAYM_AMT
            	, CASE WHEN F3.CALC_STAT_CD = '07'
            			THEN -1 * NVL(MOVING_AVG_AMT        ,0)
            			ELSE NVL(MOVING_AVG_AMT        ,0) END AS MOVING_AVG_AMT
            	, PRE_MM
            FROM (
                SELECT MOVING_AVG_AMT, A.PRE_MM, A.DLR_CD, A.RO_DOC_NO,A.CALC_STAT_CD
                FROM T1 A LEFT OUTER JOIN
                (SELECT (POS_AMT - NEG_AMT) AS MOVING_AVG_AMT, DLR_CD, RO_DOC_NO
                   FROM (
                       SELECT NVL(SUM(DECODE(PAR_REQ_STAT_CD, 02, T2.MOVING_AVG_AMT)), 0) AS POS_AMT
                              , NVL(SUM(DECODE(PAR_REQ_STAT_CD, 03, ABS(T2.MOVING_AVG_AMT))), 0) AS NEG_AMT
                              , T2.DLR_CD, T2.RO_DOC_NO
                         FROM SE_0160T T1
                        INNER JOIN PT_0502T T2
                           ON T1.DLR_CD = T2.DLR_CD
                          AND T1.DOC_NO = T2.RO_DOC_NO
                          AND T1.LINE_NO = T2.RO_LINE_NO
                          AND T1.ITEM_CD = T2.ITEM_CD
                        WHERE T1.DLR_CD = '${sDlrCd}'
                          AND PREFIX_ID = 'RO'
                          AND PAR_GI_TP = 'RO'
                          GROUP BY T2.DLR_CD, T2.RO_DOC_NO
                       )
                ) F2
                ON A.DLR_CD = F2.DLR_CD
                AND A.RO_DOC_NO = F2.RO_DOC_NO
                WHERE A.RO_TP != '02'
            )F3
        )
        GROUP BY PRE_MM     --수리총이윤 (비보증)
        UNION ALL
        SELECT 20 AS COLUMN_SEQ, '    维修毛利（非保修）' AS COLUMN_NM, 0 COLUMN_VAL, '00' AS PRE_MM, 'A' AS VAL_TYPE
        FROM DUAL

        UNION ALL

        SELECT 21 AS COLUMN_SEQ, '    维修毛利（保修）' AS COLUMN_NM, SUM(PAYM_AMT) - SUM(NVL(MOVING_AVG_AMT, 0)) COLUMN_VAL, PRE_MM, 'A' AS VAL_TYPE
        FROM (
            SELECT PAYM_AMT, 0 AS MOVING_AVG_AMT, PRE_MM
            FROM T1
            WHERE RO_TP = '02'

            UNION ALL

            SELECT 0 AS PAYM_AMT
            	, CASE WHEN F3.CALC_STAT_CD = '07'
            			THEN -1 * NVL(MOVING_AVG_AMT        ,0)
            			ELSE NVL(MOVING_AVG_AMT        ,0) END AS MOVING_AVG_AMT
            	, PRE_MM
            FROM (
                SELECT MOVING_AVG_AMT, A.PRE_MM, A.DLR_CD, A.RO_DOC_NO,A.CALC_STAT_CD
                FROM T1 A LEFT OUTER JOIN
                (SELECT (POS_AMT - NEG_AMT) AS MOVING_AVG_AMT, DLR_CD, RO_DOC_NO
                   FROM (
                       SELECT NVL(SUM(DECODE(PAR_REQ_STAT_CD, 02, T2.MOVING_AVG_AMT)), 0) AS POS_AMT
                              , NVL(SUM(DECODE(PAR_REQ_STAT_CD, 03, ABS(T2.MOVING_AVG_AMT))), 0) AS NEG_AMT
                              , T2.DLR_CD, T2.RO_DOC_NO
                         FROM SE_0160T T1
                        INNER JOIN PT_0502T T2
                           ON T1.DLR_CD = T2.DLR_CD
                          AND T1.DOC_NO = T2.RO_DOC_NO
                          AND T1.LINE_NO = T2.RO_LINE_NO
                          AND T1.ITEM_CD = T2.ITEM_CD
                        WHERE T1.DLR_CD = '${sDlrCd}'
                          AND PREFIX_ID = 'RO'
                          AND PAR_GI_TP = 'RO'
                          GROUP BY T2.DLR_CD, T2.RO_DOC_NO
                       )
                ) F2
                ON A.DLR_CD = F2.DLR_CD
                AND A.RO_DOC_NO = F2.RO_DOC_NO
                WHERE A.RO_TP = '02'
            )F3
        )
        GROUP BY PRE_MM     --수리종이윤 (보증)
        UNION ALL
        SELECT 21 AS COLUMN_SEQ, '    维修毛利（保修）' AS COLUMN_NM, 0 COLUMN_VAL, '00' AS PRE_MM, 'A' AS VAL_TYPE
        FROM DUAL

        UNION ALL

        SELECT 22 AS COLUMN_SEQ, '维修毛利率（合计）' AS COLUMN_NM
               ,CASE WHEN SUM(NULLIF(PAYM_AMT, 0)) = 0 
	                   THEN 0
                       ELSE ROUND(((SUM(PAYM_AMT) - SUM(NVL(MOVING_AVG_AMT, 0)))/SUM(NULLIF(PAYM_AMT, 0))), 2) END AS COLUMN_VAL
               ,PRE_MM
               ,'P' AS VAL_TYPE
        FROM (
            SELECT PAYM_AMT, 0 AS MOVING_AVG_AMT, PRE_MM
            FROM T1

            UNION ALL

            SELECT 0 AS PAYM_AMT
            	, CASE WHEN F3.CALC_STAT_CD = '07'
            			THEN -1 * NVL(MOVING_AVG_AMT        ,0)
            			ELSE NVL(MOVING_AVG_AMT        ,0) END AS MOVING_AVG_AMT
            	, PRE_MM
            FROM (
                SELECT MOVING_AVG_AMT, A.PRE_MM, A.DLR_CD, A.RO_DOC_NO,A.CALC_STAT_CD
                FROM T1 A LEFT OUTER JOIN
                (SELECT (POS_AMT - NEG_AMT) AS MOVING_AVG_AMT, DLR_CD, RO_DOC_NO
                   FROM (
                       SELECT NVL(SUM(DECODE(PAR_REQ_STAT_CD, 02, T2.MOVING_AVG_AMT)), 0) AS POS_AMT
                              , NVL(SUM(DECODE(PAR_REQ_STAT_CD, 03, ABS(T2.MOVING_AVG_AMT))), 0) AS NEG_AMT
                              , T2.DLR_CD, T2.RO_DOC_NO
                         FROM SE_0160T T1
                        INNER JOIN PT_0502T T2
                           ON T1.DLR_CD = T2.DLR_CD
                          AND T1.DOC_NO = T2.RO_DOC_NO
                          AND T1.LINE_NO = T2.RO_LINE_NO
                          AND T1.ITEM_CD = T2.ITEM_CD
                        WHERE T1.DLR_CD = '${sDlrCd}'
                          AND PREFIX_ID = 'RO'
                          AND PAR_GI_TP = 'RO'
                          GROUP BY T2.DLR_CD, T2.RO_DOC_NO
                       )
                ) F2
                ON A.DLR_CD = F2.DLR_CD
                AND A.RO_DOC_NO = F2.RO_DOC_NO
            )F3
        )
        GROUP BY PRE_MM     --수리종이윤 율(합계)
        UNION ALL
        SELECT 22 AS COLUMN_SEQ, '维修毛利率（合计）' AS COLUMN_NM, 0 COLUMN_VAL, '00' AS PRE_MM, 'P' AS VAL_TYPE
        FROM DUAL

        UNION ALL

        SELECT 23 AS COLUMN_SEQ, '    维修毛利率（非保修）' AS COLUMN_NM
               , CASE WHEN SUM(NULLIF(PAYM_AMT, 0)) = 0 
	                   THEN 0
                       ELSE ROUND(((SUM(PAYM_AMT) - SUM(NVL(MOVING_AVG_AMT, 0)))/SUM(NULLIF(PAYM_AMT, 0))), 2) END AS COLUMN_VAL
               ,PRE_MM
               ,'P' AS VAL_TYPE
        FROM (
            SELECT PAYM_AMT, 0 AS MOVING_AVG_AMT, PRE_MM
            FROM T1
            WHERE RO_TP != '02'

            UNION ALL

            SELECT 0 AS PAYM_AMT
            	,CASE WHEN F3.CALC_STAT_CD = '07'
            			THEN -1 * NVL(MOVING_AVG_AMT        ,0)
            			ELSE NVL(MOVING_AVG_AMT        ,0) END AS MOVING_AVG_AMT
            	, PRE_MM
            FROM (
                SELECT 
                    MOVING_AVG_AMT
                	, A.PRE_MM
                	, A.DLR_CD
                	, A.RO_DOC_NO
                	, A.CALC_STAT_CD
                FROM T1 A LEFT OUTER JOIN
                (SELECT (POS_AMT - NEG_AMT) AS MOVING_AVG_AMT, DLR_CD, RO_DOC_NO
                   FROM (
                       SELECT NVL(SUM(DECODE(PAR_REQ_STAT_CD, 02, T2.MOVING_AVG_AMT)), 0) AS POS_AMT
                              , NVL(SUM(DECODE(PAR_REQ_STAT_CD, 03, ABS(T2.MOVING_AVG_AMT))), 0) AS NEG_AMT
                              , T2.DLR_CD, T2.RO_DOC_NO
                         FROM SE_0160T T1
                        INNER JOIN PT_0502T T2
                           ON T1.DLR_CD = T2.DLR_CD
                          AND T1.DOC_NO = T2.RO_DOC_NO
                          AND T1.LINE_NO = T2.RO_LINE_NO
                          AND T1.ITEM_CD = T2.ITEM_CD
                        WHERE T1.DLR_CD = '${sDlrCd}'
                          AND PREFIX_ID = 'RO'
                          AND PAR_GI_TP = 'RO'
                          GROUP BY T2.DLR_CD, T2.RO_DOC_NO
                       )
                ) F2
                ON A.DLR_CD = F2.DLR_CD
                AND A.RO_DOC_NO = F2.RO_DOC_NO
                WHERE A.RO_TP != '02'
            )F3
        )
        GROUP BY PRE_MM     --수리종이윤 율(비보증)
        UNION ALL
        SELECT 23 AS COLUMN_SEQ, '    维修毛利率（非保修）' AS COLUMN_NM, 0 COLUMN_VAL, '00' AS PRE_MM, 'P' AS VAL_TYPE
        FROM DUAL

        UNION ALL

        SELECT 24 AS COLUMN_SEQ, '    维修毛利率（保修）' AS COLUMN_NM
               ,CASE WHEN SUM(NULLIF(PAYM_AMT, 0)) = 0 
	                   THEN 0
                           ELSE ROUND(((SUM(PAYM_AMT) - SUM(NVL(MOVING_AVG_AMT, 0)))/SUM(NULLIF(PAYM_AMT, 0))), 2) END AS COLUMN_VAL
               ,PRE_MM
               ,'P' AS VAL_TYPE
        FROM (
            SELECT PAYM_AMT, 0 AS MOVING_AVG_AMT, PRE_MM
            FROM T1
            WHERE RO_TP = '02'

            UNION ALL

            SELECT 0 AS PAYM_AMT
            	, CASE WHEN F3.CALC_STAT_CD = '07'
            			THEN -1 * NVL(MOVING_AVG_AMT        ,0)
            			ELSE NVL(MOVING_AVG_AMT        ,0) END AS MOVING_AVG_AMT
            	, PRE_MM
            FROM (
                SELECT MOVING_AVG_AMT, A.PRE_MM, A.DLR_CD, A.RO_DOC_NO,A.CALC_STAT_CD
                FROM T1 A LEFT OUTER JOIN
                (SELECT (POS_AMT - NEG_AMT) AS MOVING_AVG_AMT, DLR_CD, RO_DOC_NO
                   FROM (
                       SELECT NVL(SUM(DECODE(PAR_REQ_STAT_CD, 02, T2.MOVING_AVG_AMT)), 0) AS POS_AMT
                              , NVL(SUM(DECODE(PAR_REQ_STAT_CD, 03, ABS(T2.MOVING_AVG_AMT))), 0) AS NEG_AMT
                              , T2.DLR_CD, T2.RO_DOC_NO
                         FROM SE_0160T T1
                        INNER JOIN PT_0502T T2
                           ON T1.DLR_CD = T2.DLR_CD
                          AND T1.DOC_NO = T2.RO_DOC_NO
                          AND T1.LINE_NO = T2.RO_LINE_NO
                          AND T1.ITEM_CD = T2.ITEM_CD
                        WHERE T1.DLR_CD = '${sDlrCd}'
                          AND PREFIX_ID = 'RO'
                          AND PAR_GI_TP = 'RO'
                          GROUP BY T2.DLR_CD, T2.RO_DOC_NO
                       )
                ) F2
                ON A.DLR_CD = F2.DLR_CD
                AND A.RO_DOC_NO = F2.RO_DOC_NO
                WHERE A.RO_TP = '02'
            )F3
        )
        GROUP BY PRE_MM     --수리종이윤 율(보증)
        UNION ALL
        SELECT 24 AS COLUMN_SEQ, '    维修毛利率（保修）' AS COLUMN_NM, 0 COLUMN_VAL, '00' AS PRE_MM, 'P' AS VAL_TYPE
        FROM DUAL

        UNION ALL

        SELECT 25 AS COLUMN_SEQ, '单台数维修产值（合计）' AS COLUMN_NM
               ,ROUND(CASE WHEN COUNT(DISTINCT(VIN_NO))  > 0
                           THEN SUM(PAYM_AMT)/COUNT(DISTINCT(VIN_NO))
                           ELSE 0 END,2)  COLUMN_VAL
               ,PRE_MM
               ,'A' AS VAL_TYPE
        FROM T1
        GROUP BY PRE_MM     --한대수수리생산액(합계)
        UNION ALL
        SELECT 25 AS COLUMN_SEQ, '单台数维修产值（合计）' AS COLUMN_NM, 0 COLUMN_VAL, '00' AS PRE_MM, 'A' AS VAL_TYPE
        FROM DUAL

        UNION ALL

        SELECT 26 AS COLUMN_SEQ, '单台次维修产值（合计）' AS COLUMN_NM
               ,ROUND(CASE WHEN COUNT(CALC_DOC_NO )  > 0
                           THEN SUM(PAYM_AMT)/COUNT(CALC_DOC_NO)
                           ELSE 0 END,2)  COLUMN_VAL
               ,PRE_MM
               ,'A' AS VAL_TYPE
        FROM T1
        GROUP BY PRE_MM     --한대차수리생산액(합계)
        UNION ALL
        SELECT 26 AS COLUMN_SEQ, '单台次维修产值（合计）' AS COLUMN_NM, 0 COLUMN_VAL, '00' AS PRE_MM, 'A' AS VAL_TYPE
        FROM DUAL

        UNION ALL

        SELECT 27 AS COLUMN_SEQ, '    单台数维修产值（非保修）' AS COLUMN_NM
               ,ROUND(CASE WHEN COUNT(DISTINCT(VIN_NO))  > 0
                           THEN SUM(PAYM_AMT)/COUNT(DISTINCT(VIN_NO))
                           ELSE 0 END,2)  COLUMN_VAL
               ,PRE_MM
               ,'A' AS VAL_TYPE
        FROM T1
        WHERE RO_TP != '02'
        GROUP BY PRE_MM     --한대수수리생산액(비보증)
        UNION ALL
        SELECT 27 AS COLUMN_SEQ, '    单台数维修产值（非保修）' AS COLUMN_NM, 0 COLUMN_VAL, '00' AS PRE_MM, 'A' AS VAL_TYPE
        FROM DUAL

        UNION ALL

        SELECT 28 AS COLUMN_SEQ, '    单台次维修产值（非保修）' AS COLUMN_NM
               ,ROUND(CASE WHEN COUNT(CALC_DOC_NO )  > 0
                           THEN SUM(PAYM_AMT)/COUNT(CALC_DOC_NO)
                           ELSE 0 END,2)  COLUMN_VAL
               ,PRE_MM
               ,'A' AS VAL_TYPE
        FROM T1
        WHERE RO_TP != '02'
        GROUP BY PRE_MM     --한대차수리생산액 (비보증)
        UNION ALL
        SELECT 28 AS COLUMN_SEQ, '    单台次维修产值（非保修）' AS COLUMN_NM, 0 COLUMN_VAL, '00' AS PRE_MM, 'A' AS VAL_TYPE
        FROM DUAL

        UNION ALL

        SELECT 29 AS COLUMN_SEQ, '    单台数维修产值（保修）' AS COLUMN_NM
               ,ROUND(CASE WHEN COUNT(DISTINCT(VIN_NO))  > 0
                           THEN SUM(PAYM_AMT)/COUNT(DISTINCT(VIN_NO))
                           ELSE 0 END,2)  COLUMN_VAL
               ,PRE_MM
               ,'A' AS VAL_TYPE
        FROM T1
        WHERE RO_TP = '02'
        GROUP BY PRE_MM     --한대수수리생산액 (보증)
        UNION ALL
        SELECT 29 AS COLUMN_SEQ, '    单台数维修产值（保修）' AS COLUMN_NM, 0 COLUMN_VAL, '00' AS PRE_MM, 'A' AS VAL_TYPE
        FROM DUAL

        UNION ALL

        SELECT 30 AS COLUMN_SEQ, '    单台次维修产值（保修）' AS COLUMN_NM
               ,ROUND(CASE WHEN COUNT(CALC_DOC_NO )  > 0
                           THEN SUM(PAYM_AMT)/COUNT(CALC_DOC_NO)
                           ELSE 0 END,2)  COLUMN_VAL
               ,PRE_MM
               ,'A' AS VAL_TYPE
        FROM T1
        WHERE RO_TP = '02'
        GROUP BY PRE_MM     --한대차수리생산액 (보증)
        UNION ALL
        SELECT 30 AS COLUMN_SEQ, '    单台次维修产值（保修）' AS COLUMN_NM, 0 COLUMN_VAL, '00' AS PRE_MM, 'A' AS VAL_TYPE
        FROM DUAL
    )
)PIVOT(
    SUM(NVL(COLUMN_VAL,0))
    FOR PRE_MM IN(
        '01' AS "M1"
        ,'02' AS "M2"
        ,'03' AS "M3"
        ,'04' AS "M4"
        ,'05' AS "M5"
        ,'06' AS "M6"
        ,'07' AS "M7"
        ,'08' AS "M8"
        ,'09' AS "M9"
        ,'10' AS "M10"
        ,'11' AS "M11"
        ,'12' AS "M12"
    )
)
ORDER BY COLUMN_SEQ;]]></Query>
</TableData>
</TableDataMap>
<Report class="com.fr.report.worksheet.WorkSheet" name="sheet1">
<ReportPageAttr>
<HR F="0" T="0"/>
<FR/>
<HC/>
<FC/>
<UPFCR COLUMN="false" ROW="true"/>
</ReportPageAttr>
<ColumnPrivilegeControl/>
<RowPrivilegeControl/>
<RowHeight defaultValue="723900">
<![CDATA[1152000,1152000,723900,723900,723900,723900,723900,723900,723900,723900,723900]]></RowHeight>
<ColumnWidth defaultValue="2743200">
<![CDATA[0,6480000,4320000,4320000,4320000,4320000,4320000,4320000,4320000,4320000,4320000,4320000,4320000,4320000,4320000,4320000,2743200]]></ColumnWidth>
<CellElementList>
<C c="0" r="0">
<PrivilegeControl/>
<Expand/>
</C>
<C c="1" r="0" s="0">
<O>
<![CDATA[数据名称]]></O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="2" r="0" s="1">
<O>
<![CDATA[合计]]></O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="3" r="0" s="1">
<O>
<![CDATA[平均]]></O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="4" r="0" s="0">
<O>
<![CDATA[1月]]></O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="5" r="0" s="0">
<O>
<![CDATA[2月]]></O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="6" r="0" s="0">
<O>
<![CDATA[3月]]></O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="7" r="0" s="0">
<O>
<![CDATA[4月]]></O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="8" r="0" s="0">
<O>
<![CDATA[5月]]></O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="9" r="0" s="0">
<O>
<![CDATA[6月]]></O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="10" r="0" s="0">
<O>
<![CDATA[7月]]></O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="11" r="0" s="0">
<O>
<![CDATA[8月]]></O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="12" r="0" s="0">
<O>
<![CDATA[9月]]></O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="13" r="0" s="0">
<O>
<![CDATA[10月]]></O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="14" r="0" s="0">
<O>
<![CDATA[11月]]></O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="15" r="0" s="0">
<O>
<![CDATA[12月]]></O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="0" r="1">
<O t="DSColumn">
<Attributes dsName="TimeSearchDS" columnName="COLUMN_SEQ"/>
<Complex/>
<RG class="com.fr.report.cell.cellattr.core.group.FunctionGrouper"/>
<Parameters/>
</O>
<PrivilegeControl/>
<Expand dir="0"/>
</C>
<C c="1" r="1" s="2">
<O t="DSColumn">
<Attributes dsName="TimeSearchDS" columnName="COLUMN_NM"/>
<Complex/>
<RG class="com.fr.report.cell.cellattr.core.group.FunctionGrouper"/>
<Parameters/>
</O>
<PrivilegeControl/>
<HighlightList>
<Highlight class="com.fr.report.cell.cellattr.highlight.DefaultHighlight">
<Name>
<![CDATA[조건속성1]]></Name>
<Condition class="com.fr.data.condition.FormulaCondition">
<Formula>
<![CDATA[row() % 2 = 0]]></Formula>
</Condition>
<HighlightAction class="com.fr.report.cell.cellattr.highlight.BackgroundHighlightAction">
<Scope val="1"/>
<Background name="ColorBackground" color="-1"/>
</HighlightAction>
</Highlight>
</HighlightList>
<Expand dir="0"/>
</C>
<C c="2" r="1" s="3">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=IF(OR(A2=22,A2=23,A2=24), "", SUM(E2:P2))]]></Attributes>
</O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="3" r="1" s="3">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=ROUND(AVERAGE(E2:P2), 2)]]></Attributes>
</O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="4" r="1" s="3">
<O t="DSColumn">
<Attributes dsName="TimeSearchDS" columnName="M1"/>
<Complex/>
<RG class="com.fr.report.cell.cellattr.core.group.FunctionGrouper"/>
<Parameters/>
</O>
<PrivilegeControl/>
<Expand dir="0"/>
</C>
<C c="5" r="1" s="3">
<O t="DSColumn">
<Attributes dsName="TimeSearchDS" columnName="M2"/>
<Complex/>
<RG class="com.fr.report.cell.cellattr.core.group.FunctionGrouper"/>
<Parameters/>
</O>
<PrivilegeControl/>
<Expand dir="0"/>
</C>
<C c="6" r="1" s="3">
<O t="DSColumn">
<Attributes dsName="TimeSearchDS" columnName="M3"/>
<Complex/>
<RG class="com.fr.report.cell.cellattr.core.group.FunctionGrouper"/>
<Parameters/>
</O>
<PrivilegeControl/>
<Expand dir="0"/>
</C>
<C c="7" r="1" s="3">
<O t="DSColumn">
<Attributes dsName="TimeSearchDS" columnName="M4"/>
<Complex/>
<RG class="com.fr.report.cell.cellattr.core.group.FunctionGrouper"/>
<Parameters/>
</O>
<PrivilegeControl/>
<Expand dir="0"/>
</C>
<C c="8" r="1" s="3">
<O t="DSColumn">
<Attributes dsName="TimeSearchDS" columnName="M5"/>
<Complex/>
<RG class="com.fr.report.cell.cellattr.core.group.FunctionGrouper"/>
<Parameters/>
</O>
<PrivilegeControl/>
<Expand dir="0"/>
</C>
<C c="9" r="1" s="3">
<O t="DSColumn">
<Attributes dsName="TimeSearchDS" columnName="M6"/>
<Complex/>
<RG class="com.fr.report.cell.cellattr.core.group.FunctionGrouper"/>
<Parameters/>
</O>
<PrivilegeControl/>
<Expand dir="0"/>
</C>
<C c="10" r="1" s="3">
<O t="DSColumn">
<Attributes dsName="TimeSearchDS" columnName="M7"/>
<Complex/>
<RG class="com.fr.report.cell.cellattr.core.group.FunctionGrouper"/>
<Parameters/>
</O>
<PrivilegeControl/>
<Expand dir="0"/>
</C>
<C c="11" r="1" s="3">
<O t="DSColumn">
<Attributes dsName="TimeSearchDS" columnName="M8"/>
<Complex/>
<RG class="com.fr.report.cell.cellattr.core.group.FunctionGrouper"/>
<Parameters/>
</O>
<PrivilegeControl/>
<Expand dir="0"/>
</C>
<C c="12" r="1" s="3">
<O t="DSColumn">
<Attributes dsName="TimeSearchDS" columnName="M9"/>
<Complex/>
<RG class="com.fr.report.cell.cellattr.core.group.FunctionGrouper"/>
<Parameters/>
</O>
<PrivilegeControl/>
<Expand dir="0"/>
</C>
<C c="13" r="1" s="3">
<O t="DSColumn">
<Attributes dsName="TimeSearchDS" columnName="M10"/>
<Complex/>
<RG class="com.fr.report.cell.cellattr.core.group.FunctionGrouper"/>
<Parameters/>
</O>
<PrivilegeControl/>
<Expand dir="0"/>
</C>
<C c="14" r="1" s="3">
<O t="DSColumn">
<Attributes dsName="TimeSearchDS" columnName="M11"/>
<Complex/>
<RG class="com.fr.report.cell.cellattr.core.group.FunctionGrouper"/>
<Parameters/>
</O>
<PrivilegeControl/>
<Expand dir="0"/>
</C>
<C c="15" r="1" s="3">
<O t="DSColumn">
<Attributes dsName="TimeSearchDS" columnName="M12"/>
<Complex/>
<RG class="com.fr.report.cell.cellattr.core.group.FunctionGrouper"/>
<Parameters/>
</O>
<PrivilegeControl/>
<Expand dir="0"/>
</C>
</CellElementList>
<ReportAttrSet>
<ReportSettings headerHeight="0" footerHeight="0">
<PaperSetting orientation="1">
<PaperSize width="38880000" height="69120000"/>
<Margin top="432000" left="432000" bottom="432000" right="432000"/>
</PaperSetting>
</ReportSettings>
<Header reportPageType="0">
<Background name="NullBackground"/>
<LeftList/>
<CenterList/>
<RightList/>
</Header>
<Footer reportPageType="0">
<Background name="NullBackground"/>
<LeftList/>
<CenterList/>
<RightList/>
</Footer>
</ReportAttrSet>
<PrivilegeControl/>
</Report>
<ReportParameterAttr>
<Attributes showWindow="true" delayPlaying="true" windowPosition="1" align="0" useParamsTemplate="false"/>
<PWTitle>
<![CDATA[매개변수]]></PWTitle>
</ReportParameterAttr>
<StyleList>
<Style horizontal_alignment="0" imageLayout="1">
<FRFont name="Microsoft YaHei UI" style="0" size="72" foreground="-1"/>
<Background name="ColorBackground" color="-11561760"/>
<Border>
<Top style="1" color="-3352093"/>
<Bottom style="1" color="-3352093"/>
<Left style="1" color="-3352093"/>
<Right style="1" color="-3352093"/>
</Border>
</Style>
<Style horizontal_alignment="0" imageLayout="1">
<FRFont name="Microsoft YaHei UI" style="1" size="72" foreground="-1"/>
<Background name="ColorBackground" color="-11561760"/>
<Border>
<Top style="1" color="-3352093"/>
<Bottom style="1" color="-3352093"/>
<Left style="1" color="-3352093"/>
<Right style="1" color="-3352093"/>
</Border>
</Style>
<Style horizontal_alignment="2" imageLayout="1">
<FRFont name="Verdana" style="0" size="72" foreground="-10855846"/>
<Background name="ColorBackground" color="-986896"/>
<Border>
<Top style="5" color="-1"/>
<Bottom style="5" color="-1"/>
<Left style="5" color="-1"/>
<Right style="5" color="-1"/>
</Border>
</Style>
<Style horizontal_alignment="4" imageLayout="1">
<Format class="com.fr.base.CoreDecimalFormat">
<![CDATA[#,##0.00]]></Format>
<FRFont name="Verdana" style="0" size="72" foreground="-10855846"/>
<Background name="ColorBackground" color="-986896"/>
<Border>
<Top style="5" color="-1"/>
<Bottom style="5" color="-1"/>
<Left style="5" color="-1"/>
<Right style="5" color="-1"/>
</Border>
</Style>
</StyleList>
<DesignerVersion DesignerVersion="JAA"/>
<PreviewType PreviewType="0"/>
<TemplateID/>
<TemplateIdAttMark class="com.fr.base.iofileattr.TemplateIdAttrMark">
<TemplateIdAttMark TemplateId="da262759-92c2-40e1-b93c-9408e3c8bf07"/>
</TemplateIdAttMark>
</WorkBook>
