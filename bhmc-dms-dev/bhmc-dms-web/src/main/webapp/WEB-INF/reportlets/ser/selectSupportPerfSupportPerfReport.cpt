<?xml version="1.0" encoding="UTF-8"?>
<WorkBook xmlVersion="20170720" releaseVersion="9.0.0">
<TableDataMap>
<TableData name="ds1" class="com.fr.data.impl.DBTableData">
<Parameters>
<Parameter>
<Attributes name="sStartYyMmDd"/>
<O>
<![CDATA[20171101]]></O>
</Parameter>
<Parameter>
<Attributes name="sCarlineCd"/>
<O>
<![CDATA[]]></O>
</Parameter>
<Parameter>
<Attributes name="sEndYyMmDd"/>
<O>
<![CDATA[20171116]]></O>
</Parameter>
<Parameter>
<Attributes name="sFosterTp"/>
<O>
<![CDATA[]]></O>
</Parameter>
<Parameter>
<Attributes name="sDlrCd"/>
<O>
<![CDATA[D0119]]></O>
</Parameter>
<Parameter>
<Attributes name="sDlrRoTp"/>
<O>
<![CDATA[]]></O>
</Parameter>
</Parameters>
<Attributes maxMemRowCount="-1"/>
<Connection class="com.fr.data.impl.NameDatabaseConnection">
<DatabaseName>
<![CDATA[BHDMS]]></DatabaseName>
</Connection>
<Query>
<![CDATA[
SELECT F2.*
FROM (
    SELECT F1.*
           ,(COL01 + COL02 + COL03 + COL04 + COL05 + COL06 + COL07 + COL08 + COL09 + COL10
           + COL11 + COL12 + COL13 + COL14 + COL15 + COL16 + COL17 + COL18 + COL19 + COL20
           + COL21 + COL22 + COL23 + COL24 + COL25 + COL26 + COL27 + COL28 + COL29 + COL30
           + COL31 + COL32 + COL33 + COL34 + COL35 + COL36 + COL37 + COL38 + COL39 + COL40
           + COL41 + COL42 + COL43 + COL44 + COL45 + COL46 + COL47 + COL48 + COL49 + COL50
           + COL51 + COL52 + COL53 + COL54 + COL55 + COL56 + COL57 + COL58 + COL59 + COL60) AS TOTAL_SUM
    FROM (
        SELECT SA_ID
               ,SA_NM
               ,NVL(COL01, 0) AS COL01
               ,NVL(COL02, 0) AS COL02
               ,NVL(COL03, 0) AS COL03
               ,NVL(COL04, 0) AS COL04
               ,NVL(COL05, 0) AS COL05
               ,NVL(COL06, 0) AS COL06
               ,NVL(COL07, 0) AS COL07
               ,NVL(COL08, 0) AS COL08
               ,NVL(COL09, 0) AS COL09
               ,NVL(COL10, 0) AS COL10
               ,NVL(COL11, 0) AS COL11
               ,NVL(COL12, 0) AS COL12
               ,NVL(COL13, 0) AS COL13
               ,NVL(COL14, 0) AS COL14
               ,NVL(COL15, 0) AS COL15
               ,NVL(COL16, 0) AS COL16
               ,NVL(COL17, 0) AS COL17
               ,NVL(COL18, 0) AS COL18
               ,NVL(COL19, 0) AS COL19
               ,NVL(COL20, 0) AS COL20
               ,NVL(COL21, 0) AS COL21
               ,NVL(COL22, 0) AS COL22
               ,NVL(COL23, 0) AS COL23
               ,NVL(COL24, 0) AS COL24
               ,NVL(COL25, 0) AS COL25
               ,NVL(COL26, 0) AS COL26
               ,NVL(COL27, 0) AS COL27
               ,NVL(COL28, 0) AS COL28
               ,NVL(COL29, 0) AS COL29
               ,NVL(COL30, 0) AS COL30
               ,NVL(COL31, 0) AS COL31
               ,NVL(COL32, 0) AS COL32
               ,NVL(COL33, 0) AS COL33
               ,NVL(COL34, 0) AS COL34
               ,NVL(COL35, 0) AS COL35
               ,NVL(COL36, 0) AS COL36
               ,NVL(COL37, 0) AS COL37
               ,NVL(COL38, 0) AS COL38
               ,NVL(COL39, 0) AS COL39
               ,NVL(COL40, 0) AS COL40
               ,NVL(COL41, 0) AS COL41
               ,NVL(COL42, 0) AS COL42
               ,NVL(COL43, 0) AS COL43
               ,NVL(COL44, 0) AS COL44
               ,NVL(COL45, 0) AS COL45
               ,NVL(COL46, 0) AS COL46
               ,NVL(COL47, 0) AS COL47
               ,NVL(COL48, 0) AS COL48
               ,NVL(COL49, 0) AS COL49
               ,NVL(COL50, 0) AS COL50
               ,NVL(COL51, 0) AS COL51
               ,NVL(COL52, 0) AS COL52
               ,NVL(COL53, 0) AS COL53
               ,NVL(COL54, 0) AS COL54
               ,NVL(COL55, 0) AS COL55
               ,NVL(COL56, 0) AS COL56
               ,NVL(COL57, 0) AS COL57
               ,NVL(COL58, 0) AS COL58
               ,NVL(COL59, 0) AS COL59
               ,NVL(COL60, 0) AS COL60
               ,NVL(COL61, 0) AS COL61
               --,(NVL(COL33, 0)+NVL(COL34, 0)-NVL(COL35, 0)) AS COL62
               ,NVL(COL62, 0) AS COL62   --应收金额
        FROM (
            SELECT SA_ID
                   ,(SELECT USR_NM FROM CM_0801T WHERE DLR_CD = '${sDlrCd}' AND USR_ID =SA_ID ) AS SA_NM
                   ,COLUMN_NM
                   ,COLUMN_VAL
            FROM (
                WITH T1 AS (
                    SELECT * FROM (
                        SELECT CA.DLR_CD
                               ,CA.VIN_NO
                               ,(SELECT CARLINE_CD FROM SA_0121T WHERE VIN_NO = CA.VIN_NO AND ROWNUM = 1) AS CARLINE_CD
                               --,(SELECT SUM(NVL(PAYM_AMT, 0)) FROM SE_0530T WHERE DLR_CD = CA.DLR_CD AND CALC_DOC_NO = CA.CALC_DOC_NO) AS PAYM_AMT
                                 ,CASE WHEN CA.CALC_STAT_CD = '07'
                                THEN -1 * NVL((SELECT SUM(NVL(PAYM_AMT, 0)) FROM SE_0530T WHERE DLR_CD = CA.DLR_CD AND CALC_DOC_NO = CA.CALC_DOC_NO),0)
                                ELSE NVL((SELECT SUM(NVL(PAYM_AMT, 0)) FROM SE_0530T WHERE DLR_CD = CA.DLR_CD AND CALC_DOC_NO = CA.CALC_DOC_NO),0) END AS PAYM_AMT   --应收金额
                                
                               --,(SELECT SUM(NVL(WON_UNIT_CUT_AMT, 0)) FROM SE_0530T WHERE DLR_CD = CA.DLR_CD AND CALC_DOC_NO = CA.CALC_DOC_NO) AS WON_UNIT_CUT_AMT
                               ,CASE WHEN CA.CALC_STAT_CD = '07'
                                THEN -1 * NVL((SELECT SUM(NVL(WON_UNIT_CUT_AMT, 0)) FROM SE_0530T WHERE DLR_CD = CA.DLR_CD AND CALC_DOC_NO = CA.CALC_DOC_NO),0)
                                ELSE NVL((SELECT SUM(NVL(WON_UNIT_CUT_AMT, 0)) FROM SE_0530T WHERE DLR_CD = CA.DLR_CD AND CALC_DOC_NO = CA.CALC_DOC_NO),0) END AS WON_UNIT_CUT_AMT   --结算取整金额
                                
                               --,(SELECT SUM(NVL(DEMIC_POINT_CUT_AMT, 0)) FROM SE_0530T WHERE DLR_CD = CA.DLR_CD AND CALC_DOC_NO = CA.CALC_DOC_NO) AS DEMIC_POINT_CUT_AMT
                               ,CASE WHEN CA.CALC_STAT_CD = '07'
                                THEN -1 * NVL((SELECT SUM(NVL(DEMIC_POINT_CUT_AMT, 0)) FROM SE_0530T WHERE DLR_CD = CA.DLR_CD AND CALC_DOC_NO = CA.CALC_DOC_NO),0)
                                ELSE NVL((SELECT SUM(NVL(DEMIC_POINT_CUT_AMT, 0)) FROM SE_0530T WHERE DLR_CD = CA.DLR_CD AND CALC_DOC_NO = CA.CALC_DOC_NO),0) END AS DEMIC_POINT_CUT_AMT   --结算去零金额
                               ,CA.RO_DOC_NO
                               ,CA.RO_TP
                               ,CA.CALC_DOC_NO
                               ,CA.CALC_STAT_CD
                               ,CA.CALC_DT
                               ,CA.SER_PAR_DSTIN_CD
                               ,CA.CALC_COMP_USR_ID AS SA_ID
                               ,CA.CALC_COMP_USR_NM AS SA_NM
                               --,NVL(CA.LBR_CALC_AMT        ,0) AS LBR_CALC_AMT            --공임정산금액 
                                ,CASE WHEN CA.CALC_STAT_CD = '07'
                                THEN -1 * NVL(CA.LBR_CALC_AMT,0)
                                ELSE NVL(CA.LBR_CALC_AMT,0) END AS LBR_CALC_AMT   --工时-结算金额
                               ,NVL(CA.LBR_DC_RATE         ,0) AS LBR_DC_RATE             --공임할인율
                               --,NVL(CA.LBR_DC_AMT          ,0) AS LBR_DC_AMT            --공임할인금액
                                ,CASE WHEN CA.CALC_STAT_CD = '07'
                                THEN -1 * NVL(CA.LBR_DC_AMT,0)
                                ELSE NVL(CA.LBR_DC_AMT,0) END AS LBR_DC_AMT   --工时-优惠金额
                               --,NVL(CA.LBR_BM_POINT_USE_AMT,0) AS LBR_BM_POINT_USE_AMT    --공임BM포인트사용금액
                                ,CASE WHEN CA.CALC_STAT_CD = '07'
                                THEN -1 * NVL(CA.LBR_BM_POINT_USE_AMT,0)
                                ELSE NVL(CA.LBR_BM_POINT_USE_AMT,0) END AS LBR_BM_POINT_USE_AMT   --工时-蓝缤积分使用金额
                                
                              -- ,NVL(CA.LBR_BM_CUPN_USE_AMT ,0) AS LBR_BM_CUPN_USE_AMT     --공임BM쿠폰사용금액
                                ,CASE WHEN CA.CALC_STAT_CD = '07'
                                THEN -1 * NVL(CA.LBR_BM_CUPN_USE_AMT,0)
                                ELSE NVL(CA.LBR_BM_CUPN_USE_AMT,0) END AS LBR_BM_CUPN_USE_AMT   --工时-蓝缤其他优惠金额
                                
                               --,NVL(CA.LBR_POINT_USE_AMT   ,0) AS LBR_POINT_USE_AMT       --공임포인트사용금액
                               ,CASE WHEN CA.CALC_STAT_CD = '07'
                                THEN -1 * NVL(CA.LBR_POINT_USE_AMT,0)
                                ELSE NVL(CA.LBR_POINT_USE_AMT,0) END AS LBR_POINT_USE_AMT   --工时-积分使用金额
                               --,NVL(CA.LBR_ETC_DC_AMT      ,0) AS LBR_ETC_DC_AMT          --공임기타할인금액
                                ,CASE WHEN CA.CALC_STAT_CD = '07'
                                THEN -1 * NVL(CA.LBR_ETC_DC_AMT,0)
                                ELSE NVL(CA.LBR_ETC_DC_AMT,0) END AS LBR_ETC_DC_AMT   --工时-其他优惠金额
                               --,NVL(CA.LBR_CALC_SUM_AMT    ,0) AS LBR_CALC_SUM_AMT        --공임정산합계금액 工时-最终结算金额
                               ,CASE WHEN CA.CALC_STAT_CD = '07'
                                THEN -1 * NVL(CA.LBR_CALC_SUM_AMT,0)
                                ELSE NVL(CA.LBR_CALC_SUM_AMT,0) END AS LBR_CALC_SUM_AMT   --工时-最终结算金额
                               --,NVL(CA.PAR_CALC_AMT        ,0) AS PAR_CALC_AMT            --부품정산금액
                               ,CASE WHEN CA.CALC_STAT_CD = '07'
                                THEN -1 * NVL(CA.PAR_CALC_AMT,0)
                                ELSE NVL(CA.PAR_CALC_AMT,0) END AS PAR_CALC_AMT   --配件-结算金额
                               ,NVL(CA.PAR_DC_RATE         ,0) AS PAR_DC_RATE             --부품할인율
                               --,NVL(CA.PAR_DC_AMT          ,0) AS PAR_DC_AMT              --부품할인금액
                               ,CASE WHEN CA.CALC_STAT_CD = '07'
                                THEN -1 * NVL(CA.PAR_DC_AMT,0)
                                ELSE NVL(CA.PAR_DC_AMT,0) END AS PAR_DC_AMT   --配件-优惠金额
                                
                               --,NVL(CA.PAR_BM_POINT_USE_AMT,0) AS PAR_BM_POINT_USE_AMT    --부품BM포인트사용금액
                                ,CASE WHEN CA.CALC_STAT_CD = '07'
                                THEN -1 * NVL(CA.PAR_BM_POINT_USE_AMT,0)
                                ELSE NVL(CA.PAR_BM_POINT_USE_AMT,0) END AS PAR_BM_POINT_USE_AMT   --配件-蓝缤积分使用金额
                               --,NVL(CA.PAR_BM_CUPN_USE_AMT ,0) AS PAR_BM_CUPN_USE_AMT     --부품BM쿠폰사용금액
                               ,CASE WHEN CA.CALC_STAT_CD = '07'
                                THEN -1 * NVL(CA.PAR_BM_CUPN_USE_AMT,0)
                                ELSE NVL(CA.PAR_BM_CUPN_USE_AMT,0) END AS PAR_BM_CUPN_USE_AMT   --配件-蓝缤其他优惠金额
                               --,NVL(CA.PAR_POINT_USE_AMT   ,0) AS PAR_POINT_USE_AMT       --부품포인트사용금액
                               ,CASE WHEN CA.CALC_STAT_CD = '07'
                                THEN -1 * NVL(CA.PAR_POINT_USE_AMT,0)
                                ELSE NVL(CA.PAR_POINT_USE_AMT,0) END AS PAR_POINT_USE_AMT   --配件-积分使用金额
                               --,NVL(CA.PAR_ETC_DC_AMT      ,0) AS PAR_ETC_DC_AMT          --부품기타할인금액
                               ,CASE WHEN CA.CALC_STAT_CD = '07'
                                THEN -1 * NVL(CA.PAR_ETC_DC_AMT,0)
                                ELSE NVL(CA.PAR_ETC_DC_AMT,0) END AS PAR_ETC_DC_AMT   --配件-其他优惠金额
                                
                               --,NVL(CA.PAR_CALC_SUM_AMT    ,0) AS PAR_CALC_SUM_AMT        --부품정산합계금액
                               ,CASE WHEN CA.CALC_STAT_CD = '07'
                                THEN -1 * NVL(CA.PAR_CALC_SUM_AMT,0)
                                ELSE NVL(CA.PAR_CALC_SUM_AMT,0) END AS PAR_CALC_SUM_AMT   --配件-最终结算金额
                               ,NVL(CA.ETC_CALC_AMT        ,0) AS ETC_CALC_AMT            --기타정산금액
                               ,NVL(CA.ETC_DC_RATE         ,0) AS ETC_DC_RATE             --기타할인율
                               ,NVL(CA.ETC_DC_AMT          ,0) AS ETC_DC_AMT              --기타할인금액
                               ,NVL(CA.ETC_BM_POINT_USE_AMT,0) AS ETC_BM_POINT_USE_AMT    --기타BM포인트사용금액
                               ,NVL(CA.ETC_BM_CUPN_USE_AMT ,0) AS ETC_BM_CUPN_USE_AMT     --기타BM쿠폰사용금액
                               ,NVL(CA.ETC_POINT_USE_AMT   ,0) AS ETC_POINT_USE_AMT       --기타포인트사용금액
                               ,NVL(CA.ETC_OTHER_DC_AMT    ,0) AS ETC_OTHER_DC_AMT        --기타다른할인금액
                               --,NVL(CA.ETC_CALC_SUM_AMT    ,0) AS ETC_CALC_SUM_AMT        --기타정산합계금액
                                ,CASE WHEN CA.CALC_STAT_CD = '07'
                                THEN -1 * NVL(CA.ETC_CALC_SUM_AMT,0)
                                ELSE NVL(CA.ETC_CALC_SUM_AMT,0) END AS ETC_CALC_SUM_AMT   --其它-最终结算金额
                               ,NVL(CA.CALC_TOT_AMT        ,0) AS CALC_TOT_AMT            --정산총금액
                               ,NVL(CA.DC_TOT_RATE         ,0) AS DC_TOT_RATE             --할인총율
                               ,NVL(CA.DC_TOT_AMT          ,0) AS DC_TOT_AMT              --할인총금액
                               ,CASE WHEN (PAR_BM_POINT_USE_AMT <=0 AND LBR_BM_POINT_USE_AMT <=0)
                                     THEN BM_POINT_TOT_AMT ELSE 0 END AS BM_POINT_TOT_AMT       --BM포인트총금액
                               ,CASE WHEN (PAR_BM_CUPN_USE_AMT <=0 AND LBR_BM_CUPN_USE_AMT <=0)
                                     THEN BM_CUPN_TOT_AMT ELSE 0 END AS BM_CUPN_TOT_AMT         --BM쿠폰총금액
                               ,CASE WHEN (PAR_POINT_USE_AMT <=0 AND LBR_POINT_USE_AMT <=0)
                                     THEN POINT_TOT_AMT ELSE 0 END AS POINT_TOT_AMT             --포인트총금액
                               ,CASE WHEN (PAR_ETC_DC_AMT <=0 AND LBR_ETC_DC_AMT <=0)
                                     THEN ETC_TOT_AMT ELSE 0 END AS ETC_TOT_AMT                 --포인트총금액
                               --,NVL(CA.LAST_CALC_TOT_AMT   ,0) AS LAST_CALC_TOT_AMT       --최종정산총금액
                               ,CASE WHEN CA.CALC_STAT_CD = '07'
                                THEN -1 * NVL(CA.LAST_CALC_TOT_AMT,0)
                                ELSE NVL(CA.LAST_CALC_TOT_AMT,0) END AS LAST_CALC_TOT_AMT --最终结算金额
                               ,TO_CHAR(CALC_DT,'MM') AS MM
                               ,CASE WHEN TO_CHAR(CALC_DT,'MM') = TO_CHAR(SYSDATE, 'MM')
                                     THEN TO_NUMBER(TO_CHAR(SYSDATE, 'DD'))
                                     ELSE TO_NUMBER(TO_CHAR(LAST_DAY(CALC_DT), 'DD')) END AS LDATE
                               ,(SELECT DLR_RO_TP FROM SE_0300T WHERE DLR_CD = CA.DLR_CD AND RO_DOC_NO = CA.RO_DOC_NO) AS DLR_RO_TP
                       /** FROM SE_0500T CA
                        WHERE CA.DLR_CD = '${sDlrCd}'
                        AND CA.CALC_CANC_YN = 'N'
                        AND CA.CALC_STAT_CD = '00'
                        **/
                        FROM SE_0500T CA, SE_0300T B
                              WHERE CA.DLR_CD    = B.DLR_CD
                                AND CA.RO_DOC_NO = B.RO_DOC_NO
                                AND CA.RO_TP     = B.RO_TP
                                AND CA.DLR_CD    =  '${sDlrCd}'
                                 -- AND A.CALC_DT  >=  '2018-10-05'
                                -- AND A.CALC_DT  <  '2018-10-13'
                            AND CA.VIN_NO IS NOT NULL
                                    AND CA.CALC_STAT_CD NOT IN ('03', '04')
                                    
                        AND TO_CHAR(CA.CALC_DT,'YYYYMMDD') BETWEEN '${sStartYyMmDd}' AND '${sEndYyMmDd}'
                        ${IF(LEN(sFosterTp) <= 0,""," AND NVL(CA.RO_TP, 'NONE')='" + sFosterTp + "'")}    --위탁유형
                    )
                    WHERE 1=1
                    ${IF(LEN(sCarlineCd) <= 0,""," AND NVL(CARLINE_CD, 'NONE')='" + sCarlineCd + "'")}
                    ${IF(LEN(sDlrRoTp) <= 0,""," AND NVL(DLR_RO_TP, 'NONE')='" + sDlrRoTp + "'")}
                )
                SELECT 1 AS COLUMN_SEQ, 'COL01' AS COLUMN_NM, COUNT(DISTINCT(VIN_NO)) COLUMN_VAL, SA_ID, 'A' AS VAL_TYPE
                FROM (
                    SELECT *
                    FROM (
                        SELECT PRE.DLR_CD
                               ,PRE.DIAG_DOC_NO
                               ,PRE.VIN_NO
                               ,PRE.REG_USR_ID AS SA_ID
                               ,(SELECT CARLINE_CD FROM SA_0121T WHERE VIN_NO = PRE.VIN_NO AND ROWNUM = 1) AS CARLINE_CD
                               ,TO_CHAR(PRE_CHK_DT, 'MM') AS MM
                        FROM SE_0200T PRE
                        WHERE DLR_CD = '${sDlrCd}'
                        AND DIAG_STAT_CD != 'C'
                        AND TO_CHAR(PRE_CHK_DT, 'YYYYMMDD') BETWEEN '${sStartYyMmDd}' AND '${sEndYyMmDd}'
                    )
                     WHERE 1=1
                     ${IF(LEN(sCarlineCd) <= 0,""," AND NVL(CARLINE_CD, 'NONE')='" + sCarlineCd + "'")}
                )
                GROUP BY SA_ID     --사전점검대수(사전점검문서 발행 차량수량(취소한 사전점검문서 미포함))

                UNION ALL

                SELECT 2 AS COLUMN_SEQ, 'COL02' AS COLUMN_NM, COUNT(DIAG_DOC_NO) COLUMN_VAL, SA_ID, 'A' AS VAL_TYPE
                FROM (
                    SELECT *
                    FROM (
                        SELECT PRE.DLR_CD
                                ,PRE.DIAG_DOC_NO
                                ,PRE.VIN_NO
                                ,PRE.REG_USR_ID AS SA_ID
                                ,(SELECT CARLINE_CD FROM SA_0121T WHERE VIN_NO = PRE.VIN_NO AND ROWNUM = 1) AS CARLINE_CD
                                ,TO_CHAR(PRE_CHK_DT, 'MM') AS MM
                        FROM SE_0200T PRE
                        WHERE DLR_CD = '${sDlrCd}'
                        AND DIAG_STAT_CD != 'C'
                        AND TO_CHAR(PRE_CHK_DT, 'YYYYMMDD') BETWEEN '${sStartYyMmDd}' AND '${sEndYyMmDd}'
                    )
                     WHERE 1=1
                     ${IF(LEN(sCarlineCd) <= 0,""," AND NVL(CARLINE_CD, 'NONE')='" + sCarlineCd + "'")}
                )
                GROUP BY SA_ID     --사전점검대차(사전점검문서 발행 수량(취소한 사전점검문서 미포함))

                UNION ALL

                SELECT 3 AS COLUMN_SEQ, 'COL03' AS COLUMN_NM, COUNT(DISTINCT(VIN_NO)) COLUMN_VAL, SA_ID, 'A' AS VAL_TYPE
                FROM (
                    SELECT * FROM (
                        SELECT DLR_CD
                               ,RO_DOC_NO
                               ,VIN_NO
                               ,(SELECT CARLINE_CD FROM SA_0121T WHERE VIN_NO = RO.VIN_NO AND ROWNUM = 1) AS CARLINE_CD
                               ,TO_CHAR(RO_DT,'MM') AS MM
                               ,RO_TP
                               ,REG_USR_ID AS SA_ID
                               ,DLR_RO_TP
                        FROM SE_0300T RO
                        WHERE DLR_CD = '${sDlrCd}'
                        AND TO_CHAR(RO_DT,'YYYYMMDD') BETWEEN '${sStartYyMmDd}' AND '${sEndYyMmDd}'
                        AND RO_STAT_CD != '06'
                        ${IF(LEN(sFosterTp) <= 0,""," AND NVL(RO_TP, 'NONE')='" + sFosterTp + "'")}
                        ${IF(LEN(sDlrRoTp) <= 0,""," AND NVL(DLR_RO_TP, 'NONE')='" + sDlrRoTp + "'")}
                    )
                    WHERE 1=1
                    ${IF(LEN(sCarlineCd) <= 0,""," AND NVL(CARLINE_CD, 'NONE')='" + sCarlineCd + "'")}
                )
                GROUP BY SA_ID     --정비위탁대수(RO 발행 차량수량(취소한 RO 미포함))

                UNION ALL

                SELECT 4 AS COLUMN_SEQ, 'COL04' AS COLUMN_NM, COUNT(RO_DOC_NO) COLUMN_VAL, SA_ID, 'A' AS VAL_TYPE
                FROM (
                    SELECT * FROM (
                        SELECT DLR_CD
                               ,RO_DOC_NO
                               ,VIN_NO
                               ,(SELECT CARLINE_CD FROM SA_0121T WHERE VIN_NO = RO.VIN_NO AND ROWNUM = 1) AS CARLINE_CD
                               ,TO_CHAR(RO_DT,'MM') AS MM
                               ,RO_TP
                               ,REG_USR_ID AS SA_ID
                               ,DLR_RO_TP
                        FROM SE_0300T RO
                        WHERE DLR_CD = '${sDlrCd}'
                        AND TO_CHAR(RO_DT,'YYYYMMDD') BETWEEN '${sStartYyMmDd}' AND '${sEndYyMmDd}'
                        AND RO_STAT_CD != '06'
                        ${IF(LEN(sFosterTp) <= 0,""," AND NVL(RO_TP, 'NONE')='" + sFosterTp + "'")}
                        ${IF(LEN(sDlrRoTp) <= 0,""," AND NVL(DLR_RO_TP, 'NONE')='" + sDlrRoTp + "'")}
                    )
                    WHERE 1=1
                    ${IF(LEN(sCarlineCd) <= 0,""," AND NVL(CARLINE_CD, 'NONE')='" + sCarlineCd + "'")}
                )
                GROUP BY SA_ID     --정비위탁대차(RO 발행 수량(취소한 RO 미포함))

                UNION ALL

                SELECT 5 AS COLUMN_SEQ, 'COL05' AS COLUMN_NM, COUNT(DISTINCT(VIN_NO)) COLUMN_VAL, SA_ID, 'A' AS VAL_TYPE
                FROM (
                    SELECT * FROM (
                        SELECT DLR_CD
                               ,RO_DOC_NO
                               ,VIN_NO
                               ,(SELECT CARLINE_CD FROM SA_0121T WHERE VIN_NO = RO.VIN_NO AND ROWNUM = 1) AS CARLINE_CD
                               ,TO_CHAR(RO_DT,'MM') AS MM
                               ,RO_TP
                               ,REG_USR_ID AS SA_ID
                               ,DLR_RO_TP
                        FROM SE_0300T RO
                        WHERE DLR_CD = '${sDlrCd}'
                        AND TO_CHAR(RO_DT,'YYYYMMDD') BETWEEN '${sStartYyMmDd}' AND '${sEndYyMmDd}'
                        AND RO_STAT_CD = '06'
                        ${IF(LEN(sFosterTp) <= 0,""," AND NVL(RO_TP, 'NONE')='" + sFosterTp + "'")}
                        ${IF(LEN(sDlrRoTp) <= 0,""," AND NVL(DLR_RO_TP, 'NONE')='" + sDlrRoTp + "'")}
                    )
                    WHERE 1=1
                    ${IF(LEN(sCarlineCd) <= 0,""," AND NVL(CARLINE_CD, 'NONE')='" + sCarlineCd + "'")}
                )
                GROUP BY SA_ID     --위탁취소대수(RO 취소 차량수량)

                UNION ALL

                SELECT 6 AS COLUMN_SEQ, 'COL06' AS COLUMN_NM, COUNT(RO_DOC_NO) COLUMN_VAL, SA_ID, 'A' AS VAL_TYPE
                FROM (
                    SELECT * FROM (
                        SELECT DLR_CD
                               ,RO_DOC_NO
                               ,VIN_NO
                               ,(SELECT CARLINE_CD FROM SA_0121T WHERE VIN_NO = RO.VIN_NO AND ROWNUM = 1) AS CARLINE_CD
                               ,TO_CHAR(RO_DT,'MM') AS MM
                               ,RO_TP
                               ,REG_USR_ID AS SA_ID
                               ,DLR_RO_TP
                        FROM SE_0300T RO
                        WHERE DLR_CD = '${sDlrCd}'
                        AND TO_CHAR(RO_DT,'YYYYMMDD') BETWEEN '${sStartYyMmDd}' AND '${sEndYyMmDd}'
                        AND RO_STAT_CD = '06'
                        ${IF(LEN(sFosterTp) <= 0,""," AND NVL(RO_TP, 'NONE')='" + sFosterTp + "'")}
                        ${IF(LEN(sDlrRoTp) <= 0,""," AND NVL(DLR_RO_TP, 'NONE')='" + sDlrRoTp + "'")}
                    )
                    WHERE 1=1
                    ${IF(LEN(sCarlineCd) <= 0,""," AND NVL(CARLINE_CD, 'NONE')='" + sCarlineCd + "'")}
                )
                GROUP BY SA_ID     --위탁취소대수(RO 취소 수량)

                UNION ALL

                SELECT 7 AS COLUMN_SEQ, 'COL07' AS COLUMN_NM, COUNT(DISTINCT(VIN_NO)) COLUMN_VAL, SA_ID, 'A' AS VAL_TYPE
                FROM (
                    SELECT *
                    FROM (
                        SELECT VIN_NO
                               ,TO_CHAR(RO_DT, 'MM') AS MM
                               ,(SELECT CARLINE_CD FROM SA_0121T WHERE VIN_NO = RO.VIN_NO AND ROWNUM = 1) AS CARLINE_CD
                               ,RO_TP
                               ,REG_USR_ID AS SA_ID
                               ,DLR_RO_TP
                        FROM SE_0300T RO
                        WHERE DLR_CD = '${sDlrCd}'
                        AND RO_STAT_CD = '00'
                        AND TO_CHAR(RO_DT, 'YYYYMMDD') BETWEEN '${sStartYyMmDd}' AND '${sEndYyMmDd}'
                        ${IF(LEN(sFosterTp) <= 0,""," AND NVL(RO_TP, 'NONE')='" + sFosterTp + "'")}   --위탁유형
                        ${IF(LEN(sDlrRoTp) <= 0,""," AND NVL(DLR_RO_TP, 'NONE')='" + sDlrRoTp + "'")}
                    )
                    WHERE 1=1
                    ${IF(LEN(sCarlineCd) <= 0,""," AND NVL(CARLINE_CD, 'NONE')='" + sCarlineCd + "'")}
                )
                GROUP BY SA_ID     --정산완료대수(정비위탁대수 중, 정산완료 상태의 RO 차량수량)

                UNION ALL

                SELECT 8 AS COLUMN_SEQ, 'COL08' AS COLUMN_NM, COUNT(RO_DOC_NO) COLUMN_VAL, SA_ID, 'A' AS VAL_TYPE
                FROM (
                    SELECT *
                    FROM (
                        SELECT VIN_NO
                               ,RO_DOC_NO
                               ,TO_CHAR(RO_DT, 'MM') AS MM
                               ,(SELECT CARLINE_CD FROM SA_0121T WHERE VIN_NO = RO.VIN_NO AND ROWNUM = 1) AS CARLINE_CD
                               ,RO_TP
                               ,REG_USR_ID AS SA_ID
                               ,DLR_RO_TP
                        FROM SE_0300T RO
                        WHERE DLR_CD = '${sDlrCd}'
                        AND RO_STAT_CD = '00'
                        AND TO_CHAR(RO_DT, 'YYYYMMDD') BETWEEN '${sStartYyMmDd}' AND '${sEndYyMmDd}'
                        ${IF(LEN(sFosterTp) <= 0,""," AND NVL(RO_TP, 'NONE')='" + sFosterTp + "'")}   --위탁유형
                        ${IF(LEN(sDlrRoTp) <= 0,""," AND NVL(DLR_RO_TP, 'NONE')='" + sDlrRoTp + "'")}
                    )
                    WHERE 1=1
                    ${IF(LEN(sCarlineCd) <= 0,""," AND NVL(CARLINE_CD, 'NONE')='" + sCarlineCd + "'")}
                )
                GROUP BY SA_ID     --정산완료대차(정비위탁대차 중, 정산완료 상태의 RO 수량)

                UNION ALL

                SELECT 9 AS COLUMN_SEQ, 'COL09' AS COLUMN_NM, COUNT(DISTINCT(VIN_NO)) COLUMN_VAL, SA_ID, 'A' AS VAL_TYPE
                FROM (
                    SELECT *
                    FROM (
                        SELECT RO.VIN_NO
                               ,TO_CHAR(RO.RO_DT, 'MM') AS MM
                               ,(SELECT CARLINE_CD FROM SA_0121T WHERE VIN_NO = RO.VIN_NO AND ROWNUM = 1) AS CARLINE_CD
                               ,RO.RO_TP
                               ,RO.REG_USR_ID AS SA_ID
                               ,RO.DLR_RO_TP
                        FROM SE_0300T RO INNER JOIN SE_0550T RCV
                        ON RO.DLR_CD = RCV.DLR_CD
                        AND RO.RO_DOC_NO = RCV.RO_DOC_NO
                        WHERE RO.DLR_CD = '${sDlrCd}'
                        AND RO.RO_STAT_CD != '06'
                        AND RCV.RCV_STAT_CD = 'F'
                        AND TO_CHAR(RO.RO_DT, 'YYYYMMDD') BETWEEN '${sStartYyMmDd}' AND '${sEndYyMmDd}'
                        ${IF(LEN(sFosterTp) <= 0,""," AND NVL(RO.RO_TP, 'NONE')='" + sFosterTp + "'")}   --위탁유형
                        ${IF(LEN(sDlrRoTp) <= 0,""," AND NVL(RO.DLR_RO_TP, 'NONE')='" + sDlrRoTp + "'")}
                    )
                    WHERE 1=1
                    ${IF(LEN(sCarlineCd) <= 0,""," AND NVL(CARLINE_CD, 'NONE')='" + sCarlineCd + "'")}
                )
                GROUP BY SA_ID     --지불완료대수(정비위탁대수 중, 지불완료 상태의 RO 차량수량)

                UNION ALL

                SELECT 10 AS COLUMN_SEQ, 'COL10' AS COLUMN_NM, COUNT(RO_DOC_NO) COLUMN_VAL, SA_ID, 'A' AS VAL_TYPE
                FROM (
                    SELECT *
                    FROM (
                        SELECT RO.VIN_NO
                               ,RO.RO_DOC_NO
                               ,TO_CHAR(RO_DT, 'MM') AS MM
                               ,(SELECT CARLINE_CD FROM SA_0121T WHERE VIN_NO = RO.VIN_NO AND ROWNUM = 1) AS CARLINE_CD
                               ,RO.RO_TP
                               ,RO.REG_USR_ID AS SA_ID
                               ,RO.DLR_RO_TP
                        FROM SE_0300T RO INNER JOIN SE_0550T RCV
                        ON RO.DLR_CD = RCV.DLR_CD
                        AND RO.RO_DOC_NO = RCV.RO_DOC_NO
                        WHERE RO.DLR_CD = '${sDlrCd}'
                        AND RO.RO_STAT_CD != '06'
                        AND RCV.RCV_STAT_CD = 'F'
                        AND TO_CHAR(RO.RO_DT, 'YYYYMMDD') BETWEEN '${sStartYyMmDd}' AND '${sEndYyMmDd}'
                        ${IF(LEN(sFosterTp) <= 0,""," AND NVL(RO.RO_TP, 'NONE')='" + sFosterTp + "'")}   --위탁유형
                        ${IF(LEN(sDlrRoTp) <= 0,""," AND NVL(RO.DLR_RO_TP, 'NONE')='" + sDlrRoTp + "'")}
                    )
                    WHERE 1=1
                    ${IF(LEN(sCarlineCd) <= 0,""," AND NVL(CARLINE_CD, 'NONE')='" + sCarlineCd + "'")}
                )
                GROUP BY SA_ID     --지불완료대차(정비위탁대차 중, 지불완료 상태의 RO 수량)

                UNION ALL

                SELECT 11 AS COLUMN_SEQ, 'COL11' AS COLUMN_NM, COUNT(DISTINCT(VIN_NO)) COLUMN_VAL, SA_ID, 'A' AS VAL_TYPE
                FROM T1
                WHERE SER_PAR_DSTIN_CD = 'SER'
                GROUP BY SA_ID     --정비정산대수(서비스정산문서 발행 및 정산완료 차량수량)

                UNION ALL

                SELECT 12 AS COLUMN_SEQ, 'COL12' AS COLUMN_NM, COUNT(CALC_DOC_NO) COLUMN_VAL, SA_ID, 'A' AS VAL_TYPE
                FROM T1
                WHERE SER_PAR_DSTIN_CD = 'SER'
                GROUP BY SA_ID     --정비정산대차(서비스정산문서 발행 및 정산완료 수량)

                UNION ALL

                SELECT 13 AS COLUMN_SEQ , 'COL13' AS COLUMN_NM , SUM(NVL(LBR_CALC_SUM_AMT,0)) AS COLUMN_VAL, SA_ID, 'A' AS VAL_TYPE
                FROM T1
                WHERE SER_PAR_DSTIN_CD = 'SER'
                GROUP BY SA_ID    --공임-최종정산금액(정산금액-할인금액-포인트사용금액-BM포인트사용금액-기타할인금액) 工时-最终结算金额

                UNION ALL

                SELECT 14 AS COLUMN_SEQ , 'COL14' AS COLUMN_NM , SUM(NVL(LBR_CALC_AMT,0)) AS COLUMN_VAL, SA_ID, 'A' AS VAL_TYPE
                FROM T1
                WHERE SER_PAR_DSTIN_CD = 'SER'
                GROUP BY SA_ID    --공임-정산금액(수리생산액 중의 공임의 정산금액) 工时-结算金额

                UNION ALL

                SELECT 15 AS COLUMN_SEQ , 'COL15' AS COLUMN_NM , SUM(NVL(LBR_DC_AMT,0)) AS COLUMN_VAL, SA_ID, 'A' AS VAL_TYPE
                FROM T1
                WHERE SER_PAR_DSTIN_CD = 'SER'
                GROUP BY SA_ID    --공임-할인금액(수리생산액 중의 공임의 할인금액) 工时-优惠金额

                UNION ALL

                SELECT 16 AS COLUMN_SEQ , 'COL16' AS COLUMN_NM , SUM(NVL(LBR_POINT_USE_AMT,0)) AS COLUMN_VAL, SA_ID, 'A' AS VAL_TYPE
                FROM T1
                WHERE SER_PAR_DSTIN_CD = 'SER'
                GROUP BY SA_ID    --공임-포인트사용금액(수리생산액 중의 공임의 포인트사용금액) 工时-积分使用金额

                UNION ALL

                SELECT 17 AS COLUMN_SEQ , 'COL17' AS COLUMN_NM , SUM(NVL(LBR_BM_POINT_USE_AMT,0)) AS COLUMN_VAL, SA_ID, 'A' AS VAL_TYPE
                FROM T1
                WHERE SER_PAR_DSTIN_CD = 'SER'
                GROUP BY SA_ID    --공임-BM포인트사용금액(수리생산액 중의 공임의 BM포인트사용금액)工时-蓝缤积分使用金额

                UNION ALL

                SELECT 18 AS COLUMN_SEQ , 'COL18' AS COLUMN_NM , SUM(NVL(LBR_BM_CUPN_USE_AMT,0)) AS COLUMN_VAL, SA_ID, 'A' AS VAL_TYPE
                FROM T1
                WHERE SER_PAR_DSTIN_CD = 'SER'
                GROUP BY SA_ID    --공임-BM쿠폰사용금액(수리생산액 중의 공임의 BM쿠폰사용금액) 工时-蓝缤其他优惠金额

                UNION ALL

                SELECT 19 AS COLUMN_SEQ , 'COL19' AS COLUMN_NM , SUM(NVL(LBR_ETC_DC_AMT,0)) AS COLUMN_VAL, SA_ID, 'A' AS VAL_TYPE
                FROM T1
                WHERE SER_PAR_DSTIN_CD = 'SER'
                GROUP BY SA_ID    --공임-기타할인금액(수리생산액 중의 공임의 기타할인금액) 工时-其他优惠金额

                UNION ALL

                SELECT 20 AS COLUMN_SEQ , 'COL20' AS COLUMN_NM , SUM(NVL(PAR_CALC_SUM_AMT,0)) AS COLUMN_VAL, SA_ID, 'A' AS VAL_TYPE
                FROM T1
                WHERE SER_PAR_DSTIN_CD = 'SER'
                GROUP BY SA_ID    --부품-최종정산금액(정산금액-할인금액-포인트사용금액-BM포인트사용금액-기타할인금액) 配件-最终结算金额

                UNION ALL

                SELECT 21 AS COLUMN_SEQ , 'COL21' AS COLUMN_NM , SUM(NVL(PAR_CALC_AMT,0)) AS COLUMN_VAL, SA_ID, 'A' AS VAL_TYPE
                FROM T1
                WHERE SER_PAR_DSTIN_CD = 'SER'
                GROUP BY SA_ID    --부품-정산금액(수리생산액 중의 부품의 정산금액) 配件-结算金额

                UNION ALL

                SELECT 22 AS COLUMN_SEQ , 'COL22' AS COLUMN_NM , SUM(NVL(PAR_DC_AMT,0)) AS COLUMN_VAL, SA_ID, 'A' AS VAL_TYPE
                FROM T1
                WHERE SER_PAR_DSTIN_CD = 'SER'
                GROUP BY SA_ID    --부품-할인금액(수리생산액 중의 부품의 할인금액) 配件-优惠金额

                UNION ALL

                SELECT 23 AS COLUMN_SEQ , 'COL23' AS COLUMN_NM , SUM(NVL(PAR_POINT_USE_AMT,0)) AS COLUMN_VAL, SA_ID, 'A' AS VAL_TYPE
                FROM T1
                WHERE SER_PAR_DSTIN_CD = 'SER'
                GROUP BY SA_ID    --부품-포인트사용금액(수리생산액 중의 부품의 포인트사용금액) 配件-积分使用金额

                UNION ALL

                SELECT 24 AS COLUMN_SEQ , 'COL24' AS COLUMN_NM , SUM(NVL(PAR_BM_POINT_USE_AMT,0)) AS COLUMN_VAL, SA_ID, 'A' AS VAL_TYPE
                FROM T1
                WHERE SER_PAR_DSTIN_CD = 'SER'
                GROUP BY SA_ID    --부품-BM포인트사용금액   (수리생산액 중의 부품의 BM포인트사용금액)配件-蓝缤积分使用金额

                UNION ALL

                SELECT 25 AS COLUMN_SEQ , 'COL25' AS COLUMN_NM , SUM(NVL(PAR_BM_CUPN_USE_AMT,0)) AS COLUMN_VAL, SA_ID, 'A' AS VAL_TYPE
                FROM T1
                WHERE SER_PAR_DSTIN_CD = 'SER'
                GROUP BY SA_ID    --부품-BM쿠폰사용금액(수리생산액 중의 부품의 BM쿠폰사용금액) 配件-蓝缤其他优惠金额

                UNION ALL

                SELECT 26 AS COLUMN_SEQ , 'COL26' AS COLUMN_NM , SUM(NVL(PAR_ETC_DC_AMT,0)) AS COLUMN_VAL, SA_ID, 'A' AS VAL_TYPE
                FROM T1
                WHERE SER_PAR_DSTIN_CD = 'SER'
                GROUP BY SA_ID    --부품-기타할인금액(수리생산액 중의 부품의 기타할인금액) 配件-其他优惠金额

                UNION ALL

                SELECT 27 AS COLUMN_SEQ , 'COL27' AS COLUMN_NM , SUM(NVL(ETC_CALC_SUM_AMT,0)) AS COLUMN_VAL, SA_ID, 'A' AS VAL_TYPE
                FROM T1
                WHERE SER_PAR_DSTIN_CD = 'SER'
                GROUP BY SA_ID    --기타-최종정산금액(수리생산액 중의 기타사항의 정산금액) 其它-最终结算金额

                UNION ALL

                SELECT 28 AS COLUMN_SEQ , 'COL28' AS COLUMN_NM , SUM(NVL(POINT_TOT_AMT + BM_POINT_TOT_AMT + ETC_TOT_AMT + BM_CUPN_TOT_AMT,0)) AS COLUMN_VAL, SA_ID, 'A' AS VAL_TYPE
                FROM T1
                WHERE SER_PAR_DSTIN_CD = 'SER'
                GROUP BY SA_ID    --수리할인금액-최종정산금액 维修费优惠金额-最终结算金额 

                UNION ALL

                SELECT 29 AS COLUMN_SEQ , 'COL29' AS COLUMN_NM , SUM(NVL(POINT_TOT_AMT,0)) AS COLUMN_VAL, SA_ID, 'A' AS VAL_TYPE
                FROM T1
                WHERE SER_PAR_DSTIN_CD = 'SER'
                GROUP BY SA_ID    --수리비 할인금액-포인트사용 维修费优惠金额-积分使用

                UNION ALL

                SELECT 30 AS COLUMN_SEQ , 'COL30' AS COLUMN_NM , SUM(NVL(BM_POINT_TOT_AMT,0)) AS COLUMN_VAL, SA_ID, 'A' AS VAL_TYPE
                FROM T1
                WHERE SER_PAR_DSTIN_CD = 'SER'
                GROUP BY SA_ID    --수리비 할인금액-BM포인트사용 维修费优惠金额-蓝缤积分使用

                UNION ALL

                SELECT 31 AS COLUMN_SEQ , 'COL31' AS COLUMN_NM , SUM(NVL(ETC_TOT_AMT,0)) AS COLUMN_VAL, SA_ID, 'A' AS VAL_TYPE
                FROM T1
                WHERE SER_PAR_DSTIN_CD = 'SER'
                GROUP BY SA_ID    --수리비 할인금액-기타할인 维修费优惠金额-其他优惠

                UNION ALL

                SELECT 32 AS COLUMN_SEQ , 'COL32' AS COLUMN_NM , SUM(NVL(BM_CUPN_TOT_AMT,0)) AS COLUMN_VAL, SA_ID, 'A' AS VAL_TYPE
                FROM T1
                WHERE SER_PAR_DSTIN_CD = 'SER'
                GROUP BY SA_ID    --수리비 할인금액-BM기타할인 维修费优惠金额-蓝缤其他优惠

                UNION ALL

                SELECT 33 AS COLUMN_SEQ , 'COL33' AS COLUMN_NM , SUM(NVL(LAST_CALC_TOT_AMT,0)) AS COLUMN_VAL, SA_ID, 'A' AS VAL_TYPE
                FROM T1
                WHERE SER_PAR_DSTIN_CD = 'SER'
                GROUP BY SA_ID    --최종정산금액  最终结算金额

                UNION ALL

                SELECT 34 AS COLUMN_SEQ , 'COL34' AS COLUMN_NM , SUM(NVL(WON_UNIT_CUT_AMT,0)) AS COLUMN_VAL, SA_ID, 'A' AS VAL_TYPE
                FROM T1
                WHERE SER_PAR_DSTIN_CD = 'SER'
                GROUP BY SA_ID  --정산절사금액 结算取整金额

                UNION ALL

                SELECT 35 AS COLUMN_SEQ , 'COL35' AS COLUMN_NM , SUM(NVL(DEMIC_POINT_CUT_AMT,0)) AS COLUMN_VAL, SA_ID, 'A' AS VAL_TYPE
                FROM T1
                WHERE SER_PAR_DSTIN_CD = 'SER'
                GROUP BY SA_ID    --정산제로금액 结算去零金额
                
               

                UNION ALL

                SELECT 36 AS COLUMN_SEQ , 'COL36' AS COLUMN_NM , SUM(NVL(PAYM_AMT,0)) AS COLUMN_VAL, T2.REG_USR_ID AS SA_ID, 'A' AS VAL_TYPE
                FROM
                    (
                    SELECT * FROM (
                        SELECT CA.DLR_CD
                               ,CA.VIN_NO
                               ,(SELECT CARLINE_CD FROM SA_0121T WHERE VIN_NO = CA.VIN_NO AND ROWNUM = 1) AS CARLINE_CD
                               ,(SELECT CASE WHEN CA.CALC_STAT_CD = '07'  THEN SUM(-1*NVL(PAYM_AMT, 0)) ELSE SUM(NVL(PAYM_AMT, 0)) END  FROM SE_0530T WHERE DLR_CD = CA.DLR_CD AND CALC_DOC_NO = CA.CALC_DOC_NO) AS PAYM_AMT
                               ,(SELECT SUM(NVL(WON_UNIT_CUT_AMT, 0)) FROM SE_0530T WHERE DLR_CD = CA.DLR_CD AND CALC_DOC_NO = CA.CALC_DOC_NO) AS WON_UNIT_CUT_AMT
                               ,(SELECT SUM(NVL(DEMIC_POINT_CUT_AMT, 0)) FROM SE_0530T WHERE DLR_CD = CA.DLR_CD AND CALC_DOC_NO = CA.CALC_DOC_NO) AS DEMIC_POINT_CUT_AMT
                               ,CA.RO_DOC_NO
                               ,CA.RO_TP
                               ,CA.CALC_DOC_NO
                               ,CA.CALC_STAT_CD
                               ,CA.CALC_DT
                               ,CA.SER_PAR_DSTIN_CD
                               ,CA.CALC_COMP_USR_ID AS SA_ID
                               ,CA.CALC_COMP_USR_NM AS SA_NM
                               ,NVL(CA.LBR_CALC_AMT        ,0) AS LBR_CALC_AMT            --공임정산금액
                               ,NVL(CA.LBR_DC_RATE         ,0) AS LBR_DC_RATE             --공임할인율
                               ,NVL(CA.LBR_DC_AMT          ,0) AS LBR_DC_AMT              --공임할인금액
                               ,NVL(CA.LBR_BM_POINT_USE_AMT,0) AS LBR_BM_POINT_USE_AMT    --공임BM포인트사용금액
                               ,NVL(CA.LBR_BM_CUPN_USE_AMT ,0) AS LBR_BM_CUPN_USE_AMT     --공임BM쿠폰사용금액
                               ,NVL(CA.LBR_POINT_USE_AMT   ,0) AS LBR_POINT_USE_AMT       --공임포인트사용금액
                               ,NVL(CA.LBR_ETC_DC_AMT      ,0) AS LBR_ETC_DC_AMT          --공임기타할인금액
                               ,NVL(CA.LBR_CALC_SUM_AMT    ,0) AS LBR_CALC_SUM_AMT        --공임정산합계금액
                               ,NVL(CA.PAR_CALC_AMT        ,0) AS PAR_CALC_AMT            --부품정산금액
                               ,NVL(CA.PAR_DC_RATE         ,0) AS PAR_DC_RATE             --부품할인율
                               ,NVL(CA.PAR_DC_AMT          ,0) AS PAR_DC_AMT              --부품할인금액
                               ,NVL(CA.PAR_BM_POINT_USE_AMT,0) AS PAR_BM_POINT_USE_AMT    --부품BM포인트사용금액
                               ,NVL(CA.PAR_BM_CUPN_USE_AMT ,0) AS PAR_BM_CUPN_USE_AMT     --부품BM쿠폰사용금액
                               ,NVL(CA.PAR_POINT_USE_AMT   ,0) AS PAR_POINT_USE_AMT       --부품포인트사용금액
                               ,NVL(CA.PAR_ETC_DC_AMT      ,0) AS PAR_ETC_DC_AMT          --부품기타할인금액
                               ,NVL(CA.PAR_CALC_SUM_AMT    ,0) AS PAR_CALC_SUM_AMT        --부품정산합계금액
                               ,NVL(CA.ETC_CALC_AMT        ,0) AS ETC_CALC_AMT            --기타정산금액
                               ,NVL(CA.ETC_DC_RATE         ,0) AS ETC_DC_RATE             --기타할인율
                               ,NVL(CA.ETC_DC_AMT          ,0) AS ETC_DC_AMT              --기타할인금액
                               ,NVL(CA.ETC_BM_POINT_USE_AMT,0) AS ETC_BM_POINT_USE_AMT    --기타BM포인트사용금액
                               ,NVL(CA.ETC_BM_CUPN_USE_AMT ,0) AS ETC_BM_CUPN_USE_AMT     --기타BM쿠폰사용금액
                               ,NVL(CA.ETC_POINT_USE_AMT   ,0) AS ETC_POINT_USE_AMT       --기타포인트사용금액
                               ,NVL(CA.ETC_OTHER_DC_AMT    ,0) AS ETC_OTHER_DC_AMT        --기타다른할인금액
                               ,NVL(CA.ETC_CALC_SUM_AMT    ,0) AS ETC_CALC_SUM_AMT        --기타정산합계금액
                               ,NVL(CA.CALC_TOT_AMT        ,0) AS CALC_TOT_AMT            --정산총금액
                               ,NVL(CA.DC_TOT_RATE         ,0) AS DC_TOT_RATE             --할인총율
                               ,NVL(CA.DC_TOT_AMT          ,0) AS DC_TOT_AMT              --할인총금액
                               ,CASE WHEN (PAR_BM_POINT_USE_AMT <=0 AND LBR_BM_POINT_USE_AMT <=0)
                                     THEN BM_POINT_TOT_AMT ELSE 0 END AS BM_POINT_TOT_AMT       --BM포인트총금액
                               ,CASE WHEN (PAR_BM_CUPN_USE_AMT <=0 AND LBR_BM_CUPN_USE_AMT <=0)
                                     THEN BM_CUPN_TOT_AMT ELSE 0 END AS BM_CUPN_TOT_AMT         --BM쿠폰총금액
                               ,CASE WHEN (PAR_POINT_USE_AMT <=0 AND LBR_POINT_USE_AMT <=0)
                                     THEN POINT_TOT_AMT ELSE 0 END AS POINT_TOT_AMT             --포인트총금액
                               ,CASE WHEN (PAR_ETC_DC_AMT <=0 AND LBR_ETC_DC_AMT <=0)
                                     THEN ETC_TOT_AMT ELSE 0 END AS ETC_TOT_AMT                 --포인트총금액
                               ,NVL(CA.LAST_CALC_TOT_AMT   ,0) AS LAST_CALC_TOT_AMT       --최종정산총금액
                               ,TO_CHAR(CALC_DT,'MM') AS MM
                               ,CASE WHEN TO_CHAR(CALC_DT,'MM') = TO_CHAR(SYSDATE, 'MM')
                                     THEN TO_NUMBER(TO_CHAR(SYSDATE, 'DD'))
                                     ELSE TO_NUMBER(TO_CHAR(LAST_DAY(CALC_DT), 'DD')) END AS LDATE
                               ,(SELECT DLR_RO_TP FROM SE_0300T WHERE DLR_CD = CA.DLR_CD AND RO_DOC_NO = CA.RO_DOC_NO) AS DLR_RO_TP
                        FROM SE_0500T CA
                        WHERE CA.DLR_CD = '${sDlrCd}'
                        AND (CA.CALC_STAT_CD = '00' OR  CA.CALC_STAT_CD = '07')
                        AND TO_CHAR(CA.CALC_DT,'YYYYMMDD') BETWEEN '${sStartYyMmDd}' AND '${sEndYyMmDd}'
                        ${IF(LEN(sFosterTp) <= 0,""," AND NVL(CA.RO_TP, 'NONE')='" + sFosterTp + "'")}    --위탁유형
                    )
                    WHERE 1=1
                    ${IF(LEN(sCarlineCd) <= 0,""," AND NVL(CARLINE_CD, 'NONE')='" + sCarlineCd + "'")}
                    ${IF(LEN(sDlrRoTp) <= 0,""," AND NVL(DLR_RO_TP, 'NONE')='" + sDlrRoTp + "'")}
                ) T3

                INNER JOIN SE_0300T T2
                ON T3.DLR_CD = T2.DLR_CD
                AND T3.RO_DOC_NO = T2.RO_DOC_NO
                WHERE T3.SER_PAR_DSTIN_CD = 'SER'
                GROUP BY T2.REG_USR_ID    --수리생산액(합계)   维修产值（合计） 

                UNION ALL

                SELECT 37 AS COLUMN_SEQ , 'COL37' AS COLUMN_NM , SUM(NVL(PAYM_AMT,0)) AS COLUMN_VAL, T2.REG_USR_ID AS SA_ID, 'A' AS VAL_TYPE
                FROM T1
                INNER JOIN SE_0300T T2
                ON T1.DLR_CD = T2.DLR_CD
                AND T1.RO_DOC_NO = T2.RO_DOC_NO
                WHERE T1.RO_TP != '02'
                AND T1.SER_PAR_DSTIN_CD = 'SER'
                GROUP BY T2.REG_USR_ID    --수리생산액(비보증) 维修产值（非保修）

                UNION ALL

                SELECT 38 AS COLUMN_SEQ , 'COL38' AS COLUMN_NM , SUM(NVL(PAYM_AMT,0)) AS COLUMN_VAL, T2.REG_USR_ID AS SA_ID, 'A' AS VAL_TYPE
                FROM (
					SELECT * FROM (
                        SELECT CA.DLR_CD
                               ,CA.VIN_NO
                               ,(SELECT CARLINE_CD FROM SA_0121T WHERE VIN_NO = CA.VIN_NO AND ROWNUM = 1) AS CARLINE_CD
                               ,CASE WHEN CA.CALC_STAT_CD = '07'
                                THEN -1 * NVL((SELECT SUM(NVL(PAYM_AMT, 0)) FROM SE_0530T WHERE DLR_CD = CA.DLR_CD AND CALC_DOC_NO = CA.CALC_DOC_NO),0)
                                ELSE NVL((SELECT SUM(NVL(PAYM_AMT, 0)) FROM SE_0530T WHERE DLR_CD = CA.DLR_CD AND CALC_DOC_NO = CA.CALC_DOC_NO),0) END AS PAYM_AMT   --应收金额
                               ,CASE WHEN CA.CALC_STAT_CD = '07'
                                THEN -1 * NVL((SELECT SUM(NVL(WON_UNIT_CUT_AMT, 0)) FROM SE_0530T WHERE DLR_CD = CA.DLR_CD AND CALC_DOC_NO = CA.CALC_DOC_NO),0)
                                ELSE NVL((SELECT SUM(NVL(WON_UNIT_CUT_AMT, 0)) FROM SE_0530T WHERE DLR_CD = CA.DLR_CD AND CALC_DOC_NO = CA.CALC_DOC_NO),0) END AS WON_UNIT_CUT_AMT   --结算取整金额
                               ,CASE WHEN CA.CALC_STAT_CD = '07'
                                THEN -1 * NVL((SELECT SUM(NVL(DEMIC_POINT_CUT_AMT, 0)) FROM SE_0530T WHERE DLR_CD = CA.DLR_CD AND CALC_DOC_NO = CA.CALC_DOC_NO),0)
                                ELSE NVL((SELECT SUM(NVL(DEMIC_POINT_CUT_AMT, 0)) FROM SE_0530T WHERE DLR_CD = CA.DLR_CD AND CALC_DOC_NO = CA.CALC_DOC_NO),0) END AS DEMIC_POINT_CUT_AMT   --结算去零金额
                               ,CA.RO_DOC_NO
                               ,CA.RO_TP
                               ,CA.CALC_DOC_NO
                               ,CA.CALC_STAT_CD
                               ,CA.CALC_DT
                               ,CA.SER_PAR_DSTIN_CD
                               ,CA.CALC_COMP_USR_ID AS SA_ID
                               ,CA.CALC_COMP_USR_NM AS SA_NM
                               ,CASE WHEN CA.CALC_STAT_CD = '07'
                                THEN -1 * NVL(CA.LBR_CALC_AMT,0)
                                ELSE NVL(CA.LBR_CALC_AMT,0) END AS LBR_CALC_AMT   --工时-结算金额
                               ,NVL(CA.LBR_DC_RATE         ,0) AS LBR_DC_RATE             --공임할인율
                               ,CASE WHEN CA.CALC_STAT_CD = '07'
                                THEN -1 * NVL(CA.LBR_DC_AMT,0)
                                ELSE NVL(CA.LBR_DC_AMT,0) END AS LBR_DC_AMT   --工时-优惠金额
                               ,CASE WHEN CA.CALC_STAT_CD = '07'
                                THEN -1 * NVL(CA.LBR_BM_POINT_USE_AMT,0)
                                ELSE NVL(CA.LBR_BM_POINT_USE_AMT,0) END AS LBR_BM_POINT_USE_AMT   --工时-蓝缤积分使用金额
                               ,CASE WHEN CA.CALC_STAT_CD = '07'
                                THEN -1 * NVL(CA.LBR_BM_CUPN_USE_AMT,0)
                                ELSE NVL(CA.LBR_BM_CUPN_USE_AMT,0) END AS LBR_BM_CUPN_USE_AMT   --工时-蓝缤其他优惠金额
                               ,CASE WHEN CA.CALC_STAT_CD = '07'
                                THEN -1 * NVL(CA.LBR_POINT_USE_AMT,0)
                                ELSE NVL(CA.LBR_POINT_USE_AMT,0) END AS LBR_POINT_USE_AMT   --工时-积分使用金额
                               ,CASE WHEN CA.CALC_STAT_CD = '07'
                                THEN -1 * NVL(CA.LBR_ETC_DC_AMT,0)
                                ELSE NVL(CA.LBR_ETC_DC_AMT,0) END AS LBR_ETC_DC_AMT   --工时-其他优惠金额
                               ,CASE WHEN CA.CALC_STAT_CD = '07'
                                THEN -1 * NVL(CA.LBR_CALC_SUM_AMT,0)
                                ELSE NVL(CA.LBR_CALC_SUM_AMT,0) END AS LBR_CALC_SUM_AMT   --工时-最终结算金额
                               ,CASE WHEN CA.CALC_STAT_CD = '07'
                                THEN -1 * NVL(CA.PAR_CALC_AMT,0)
                                ELSE NVL(CA.PAR_CALC_AMT,0) END AS PAR_CALC_AMT   --配件-结算金额
                               ,NVL(CA.PAR_DC_RATE         ,0) AS PAR_DC_RATE             --부품할인율
                               ,CASE WHEN CA.CALC_STAT_CD = '07'
                                THEN -1 * NVL(CA.PAR_DC_AMT,0)
                                ELSE NVL(CA.PAR_DC_AMT,0) END AS PAR_DC_AMT   --配件-优惠金额
                               ,CASE WHEN CA.CALC_STAT_CD = '07'
                                THEN -1 * NVL(CA.PAR_BM_POINT_USE_AMT,0)
                                ELSE NVL(CA.PAR_BM_POINT_USE_AMT,0) END AS PAR_BM_POINT_USE_AMT   --配件-蓝缤积分使用金额
                               ,CASE WHEN CA.CALC_STAT_CD = '07'
                                THEN -1 * NVL(CA.PAR_BM_CUPN_USE_AMT,0)
                                ELSE NVL(CA.PAR_BM_CUPN_USE_AMT,0) END AS PAR_BM_CUPN_USE_AMT   --配件-蓝缤其他优惠金额
                               ,CASE WHEN CA.CALC_STAT_CD = '07'
                                THEN -1 * NVL(CA.PAR_POINT_USE_AMT,0)
                                ELSE NVL(CA.PAR_POINT_USE_AMT,0) END AS PAR_POINT_USE_AMT   --配件-积分使用金额
                               ,CASE WHEN CA.CALC_STAT_CD = '07'
                                THEN -1 * NVL(CA.PAR_ETC_DC_AMT,0)
                                ELSE NVL(CA.PAR_ETC_DC_AMT,0) END AS PAR_ETC_DC_AMT   --配件-其他优惠金额
                               ,CASE WHEN CA.CALC_STAT_CD = '07'
                                THEN -1 * NVL(CA.PAR_CALC_SUM_AMT,0)
                                ELSE NVL(CA.PAR_CALC_SUM_AMT,0) END AS PAR_CALC_SUM_AMT   --配件-最终结算金额
                               ,NVL(CA.ETC_CALC_AMT        ,0) AS ETC_CALC_AMT            --기타정산금액
                               ,NVL(CA.ETC_DC_RATE         ,0) AS ETC_DC_RATE             --기타할인율
                               ,NVL(CA.ETC_DC_AMT          ,0) AS ETC_DC_AMT              --기타할인금액
                               ,NVL(CA.ETC_BM_POINT_USE_AMT,0) AS ETC_BM_POINT_USE_AMT    --기타BM포인트사용금액
                               ,NVL(CA.ETC_BM_CUPN_USE_AMT ,0) AS ETC_BM_CUPN_USE_AMT     --기타BM쿠폰사용금액
                               ,NVL(CA.ETC_POINT_USE_AMT   ,0) AS ETC_POINT_USE_AMT       --기타포인트사용금액
                               ,NVL(CA.ETC_OTHER_DC_AMT    ,0) AS ETC_OTHER_DC_AMT        --기타다른할인금액
                               ,CASE WHEN CA.CALC_STAT_CD = '07'
                                THEN -1 * NVL(CA.ETC_CALC_SUM_AMT,0)
                                ELSE NVL(CA.ETC_CALC_SUM_AMT,0) END AS ETC_CALC_SUM_AMT   --其它-最终结算金额
                               ,NVL(CA.CALC_TOT_AMT        ,0) AS CALC_TOT_AMT            --정산총금액
                               ,NVL(CA.DC_TOT_RATE         ,0) AS DC_TOT_RATE             --할인총율
                               ,NVL(CA.DC_TOT_AMT          ,0) AS DC_TOT_AMT              --할인총금액
                               ,CASE WHEN (PAR_BM_POINT_USE_AMT <=0 AND LBR_BM_POINT_USE_AMT <=0)
                                     THEN BM_POINT_TOT_AMT ELSE 0 END AS BM_POINT_TOT_AMT       --BM포인트총금액
                               ,CASE WHEN (PAR_BM_CUPN_USE_AMT <=0 AND LBR_BM_CUPN_USE_AMT <=0)
                                     THEN BM_CUPN_TOT_AMT ELSE 0 END AS BM_CUPN_TOT_AMT         --BM쿠폰총금액
                               ,CASE WHEN (PAR_POINT_USE_AMT <=0 AND LBR_POINT_USE_AMT <=0)
                                     THEN POINT_TOT_AMT ELSE 0 END AS POINT_TOT_AMT             --포인트총금액
                               ,CASE WHEN (PAR_ETC_DC_AMT <=0 AND LBR_ETC_DC_AMT <=0)
                                     THEN ETC_TOT_AMT ELSE 0 END AS ETC_TOT_AMT                 --포인트총금액
                               ,CASE WHEN CA.CALC_STAT_CD = '07'
                                THEN -1 * NVL(CA.LAST_CALC_TOT_AMT,0)
                                ELSE NVL(CA.LAST_CALC_TOT_AMT,0) END AS LAST_CALC_TOT_AMT --最终结算金额
                               ,TO_CHAR(CALC_DT,'MM') AS MM
                               ,CASE WHEN TO_CHAR(CALC_DT,'MM') = TO_CHAR(SYSDATE, 'MM')
                                     THEN TO_NUMBER(TO_CHAR(SYSDATE, 'DD'))
                                     ELSE TO_NUMBER(TO_CHAR(LAST_DAY(CALC_DT), 'DD')) END AS LDATE
                               ,(SELECT DLR_RO_TP FROM SE_0300T WHERE DLR_CD = CA.DLR_CD AND RO_DOC_NO = CA.RO_DOC_NO) AS DLR_RO_TP
                       
                        FROM SE_0500T CA, SE_0300T B
                              WHERE CA.DLR_CD    = B.DLR_CD
                                AND CA.RO_DOC_NO = B.RO_DOC_NO
                                --AND CA.RO_TP     = B.RO_TP
                                AND CA.DLR_CD    =  '${sDlrCd}'
                                 
                            AND CA.VIN_NO IS NOT NULL
                                    AND CA.CALC_STAT_CD NOT IN ('03', '04')
                                    
                        AND TO_CHAR(CA.CALC_DT,'YYYYMMDD') BETWEEN '${sStartYyMmDd}' AND '${sEndYyMmDd}'
                        ${IF(LEN(sFosterTp) <= 0,""," AND NVL(CA.RO_TP, 'NONE')='" + sFosterTp + "'")}    --위탁유형
                    )
                    WHERE 1=1
                    ${IF(LEN(sCarlineCd) <= 0,""," AND NVL(CARLINE_CD, 'NONE')='" + sCarlineCd + "'")}
                    ${IF(LEN(sDlrRoTp) <= 0,""," AND NVL(DLR_RO_TP, 'NONE')='" + sDlrRoTp + "'")}
                )T1
                INNER JOIN SE_0300T T2
                ON T1.DLR_CD = T2.DLR_CD
                AND T1.RO_DOC_NO = T2.RO_DOC_NO
                WHERE T1.RO_TP = '02'
                AND T1.SER_PAR_DSTIN_CD = 'SER'
                GROUP BY T2.REG_USR_ID    --수리생산액(보증) 维修产值（非保修）

                UNION ALL

                SELECT 39 AS COLUMN_SEQ , 'COL39' AS COLUMN_NM , SUM(NVL(MOVING_AVG_AMT,0)) AS COLUMN_VAL, SA_ID, 'A' AS VAL_TYPE
                FROM (
                    SELECT 
                     CASE WHEN A.CALC_STAT_CD = '07'
            		THEN -1 * NVL(MOVING_AVG_AMT        ,0)
            		ELSE NVL(MOVING_AVG_AMT        ,0) END AS MOVING_AVG_AMT
                    , A.SA_ID
                    , A.DLR_CD
                    , A.RO_DOC_NO
                    FROM T1 A LEFT OUTER JOIN
                    (SELECT (POS_AMT - NEG_AMT) AS MOVING_AVG_AMT, DLR_CD, RO_DOC_NO
                       FROM (
                           SELECT NVL(SUM(DECODE(PAR_REQ_STAT_CD, 02, T2.MOVING_AVG_AMT)), 0) AS POS_AMT
                                  , NVL(SUM(DECODE(PAR_REQ_STAT_CD, 03, ABS(T2.MOVING_AVG_AMT))), 0) AS NEG_AMT
                                  , T2.DLR_CD, T2.RO_DOC_NO
                             FROM SE_0160T T1
                            INNER JOIN PT_0502T T2
                               ON T1.DLR_CD = T2.DLR_CD
                              AND T1.DOC_NO = T2.RO_DOC_NO
                              AND T1.LINE_NO = T2.RO_LINE_NO
                              AND T1.ITEM_CD = T2.ITEM_CD
                            WHERE T1.DLR_CD = '${sDlrCd}'
                              AND PREFIX_ID = 'RO'
                              AND PAR_GI_TP = 'RO'
                              GROUP BY T2.DLR_CD, T2.RO_DOC_NO
                           )
                    ) F2
                    ON A.DLR_CD = F2.DLR_CD
                    AND A.RO_DOC_NO = F2.RO_DOC_NO
                    WHERE A.SER_PAR_DSTIN_CD = 'SER'
                )
                GROUP BY SA_ID    --부품원가(합계) 配件成本（合计）

                UNION ALL

                SELECT 40 AS COLUMN_SEQ , 'COL40' AS COLUMN_NM , SUM(PAYM_AMT) - SUM(NVL(MOVING_AVG_AMT, 0)) COLUMN_VAL, SA_ID, 'A' AS VAL_TYPE
                FROM (
                    SELECT PAYM_AMT, 0 AS MOVING_AVG_AMT, SA_ID
                    FROM T1
                    WHERE SER_PAR_DSTIN_CD = 'SER'

                    UNION ALL

                    SELECT 0 AS PAYM_AMT
                     , CASE WHEN F3.CALC_STAT_CD = '07'
            		THEN -1 * NVL(MOVING_AVG_AMT        ,0)
            		ELSE NVL(MOVING_AVG_AMT        ,0) END AS MOVING_AVG_AMT
                    , SA_ID
                    FROM (
                        SELECT MOVING_AVG_AMT, A.SA_ID, A.DLR_CD, A.RO_DOC_NO,A.CALC_STAT_CD
                        FROM T1 A LEFT OUTER JOIN
                        (SELECT (POS_AMT - NEG_AMT) AS MOVING_AVG_AMT, DLR_CD, RO_DOC_NO
                           FROM (
                               SELECT NVL(SUM(DECODE(PAR_REQ_STAT_CD, 02, T2.MOVING_AVG_AMT)), 0) AS POS_AMT
                                      , NVL(SUM(DECODE(PAR_REQ_STAT_CD, 03, ABS(T2.MOVING_AVG_AMT))), 0) AS NEG_AMT
                                      , T2.DLR_CD, T2.RO_DOC_NO
                                 FROM SE_0160T T1
                                INNER JOIN PT_0502T T2
                                   ON T1.DLR_CD = T2.DLR_CD
                                  AND T1.DOC_NO = T2.RO_DOC_NO
                                  AND T1.LINE_NO = T2.RO_LINE_NO
                                  AND T1.ITEM_CD = T2.ITEM_CD
                                WHERE T1.DLR_CD = '${sDlrCd}'
                                  AND PREFIX_ID = 'RO'
                                  AND PAR_GI_TP = 'RO'
                                  GROUP BY T2.DLR_CD, T2.RO_DOC_NO
                               )
                        ) F2
                        ON A.DLR_CD = F2.DLR_CD
                        AND A.RO_DOC_NO = F2.RO_DOC_NO
                        WHERE SER_PAR_DSTIN_CD = 'SER'
                    )F3
                )
                GROUP BY SA_ID    --수리총이윤(합계) 维修毛利（合计）

                UNION ALL

                SELECT 41 AS COLUMN_SEQ , 'COL41' AS COLUMN_NM
                        ,ROUND(CASE WHEN SUM(NULLIF(PAYM_AMT, 0)) > 0
                                    THEN ((SUM(PAYM_AMT) - SUM(NVL(MOVING_AVG_AMT, 0)))/SUM(NULLIF(PAYM_AMT, 0)))
                                    ELSE 0 END, 2) COLUMN_VAL
                       ,SA_ID
                       ,'P' AS VAL_TYPE
                FROM (
                    SELECT PAYM_AMT, 0 AS MOVING_AVG_AMT, SA_ID
                    FROM T1
                    WHERE SER_PAR_DSTIN_CD = 'SER'

                    UNION ALL

                    SELECT 0 AS PAYM_AMT, MOVING_AVG_AMT, SA_ID
                    FROM (
                        SELECT CASE WHEN A.CALC_STAT_CD = '07'
            		THEN -1 * NVL(MOVING_AVG_AMT        ,0)
            		ELSE NVL(MOVING_AVG_AMT        ,0) END AS MOVING_AVG_AMT , A.SA_ID, A.DLR_CD, A.RO_DOC_NO
                        FROM T1 A LEFT OUTER JOIN
                        (SELECT (POS_AMT - NEG_AMT) AS MOVING_AVG_AMT, DLR_CD, RO_DOC_NO
                           FROM (
                               SELECT NVL(SUM(DECODE(PAR_REQ_STAT_CD, 02, T2.MOVING_AVG_AMT)), 0) AS POS_AMT
                                      , NVL(SUM(DECODE(PAR_REQ_STAT_CD, 03, ABS(T2.MOVING_AVG_AMT))), 0) AS NEG_AMT
                                      , T2.DLR_CD, T2.RO_DOC_NO
                                 FROM SE_0160T T1
                                INNER JOIN PT_0502T T2
                                   ON T1.DLR_CD = T2.DLR_CD
                                  AND T1.DOC_NO = T2.RO_DOC_NO
                                  AND T1.LINE_NO = T2.RO_LINE_NO
                                  AND T1.ITEM_CD = T2.ITEM_CD
                                WHERE T1.DLR_CD = '${sDlrCd}'
                                  AND PREFIX_ID = 'RO'
                                  AND PAR_GI_TP = 'RO'
                                  GROUP BY T2.DLR_CD, T2.RO_DOC_NO
                               )
                        ) F2
                        ON A.DLR_CD = F2.DLR_CD
                        AND A.RO_DOC_NO = F2.RO_DOC_NO
                        WHERE SER_PAR_DSTIN_CD = 'SER'
                    )
                )
                GROUP BY SA_ID    --수리총이윤율(합계) 维修毛利率（合计）

                UNION ALL

                SELECT 42 AS COLUMN_SEQ, 'COL42' AS COLUMN_NM
                       ,ROUND(CASE WHEN COUNT(DISTINCT(T1.VIN_NO))  > 0
                                   THEN SUM(PAYM_AMT)/COUNT(DISTINCT(T1.VIN_NO))
                                   ELSE 0 END,2)  COLUMN_VAL
                       ,T2.REG_USR_ID AS SA_ID
                       ,'A' AS VAL_TYPE
                FROM T1
                INNER JOIN SE_0300T T2
                ON T1.DLR_CD = T2.DLR_CD
                AND T1.RO_DOC_NO = T2.RO_DOC_NO
                WHERE SER_PAR_DSTIN_CD = 'SER'
                GROUP BY T2.REG_USR_ID    --한대수수리생산액(합계) : 수리생산액/정비정산대수 (합계) 单台数维修产值（合计）

                UNION ALL

                SELECT 43 AS COLUMN_SEQ, 'COL43' AS COLUMN_NM
                       ,ROUND(CASE WHEN COUNT(CALC_DOC_NO )  > 0
                                   THEN SUM(PAYM_AMT)/COUNT(CALC_DOC_NO)
                                   ELSE 0 END,2)  COLUMN_VAL
                       ,T2.REG_USR_ID AS SA_ID
                       ,'A' AS VAL_TYPE
                FROM T1
                INNER JOIN SE_0300T T2
                ON T1.DLR_CD = T2.DLR_CD
                AND T1.RO_DOC_NO = T2.RO_DOC_NO
                WHERE SER_PAR_DSTIN_CD = 'SER'
                GROUP BY T2.REG_USR_ID    --한대차수리생산액(합계) : 수리생산액/정비정산대차 (합계)

                UNION ALL

                SELECT 44 AS COLUMN_SEQ , 'COL44' AS COLUMN_NM , SUM(NVL(PAYM_AMT,0)) AS COLUMN_VAL, SA_ID, 'A' AS VAL_TYPE
                FROM T1
                WHERE SER_PAR_DSTIN_CD = 'PAR'
                GROUP BY SA_ID    --부품판매생산액

                UNION ALL

                SELECT 45 AS COLUMN_SEQ, 'COL45' AS COLUMN_NM, SUM(NVL(MOVING_AVG_AMT,0)) AS COLUMN_VAL, SA_ID, 'A' AS VAL_TYPE
                FROM (
                    SELECT C.MOVING_AVG_AMT, A.SA_ID
                    FROM T1 A
                    INNER JOIN PT_0522T B
                    ON A.DLR_CD = B.DLR_CD
                    AND A.RO_DOC_NO = B.PAR_SALE_ORD_NO
                    INNER JOIN PT_0312T C
                    ON B.DLR_CD = C.DLR_CD
                    AND B.MVT_DOC_NO = C.MVT_DOC_NO
                    AND B.MVT_DOC_LINE_NO = C.MVT_DOC_LINE_NO
                    WHERE SER_PAR_DSTIN_CD = 'PAR'
                )
                GROUP BY SA_ID    --부품판매원가 : 정산완료한 부품정산서의 합계 부품원가금액

                UNION ALL

                SELECT 46 AS COLUMN_SEQ, 'COL46' AS COLUMN_NM, SUM(NVL(PAYM_AMT, 0)) - SUM(NVL(MOVING_AVG_AMT,0)) AS COLUMN_VAL, SA_ID, 'A' AS VAL_TYPE
                FROM (
                    SELECT PAYM_AMT, 0 AS MOVING_AVG_AMT, SA_ID
                    FROM T1
                    WHERE SER_PAR_DSTIN_CD = 'PAR'

                    UNION ALL

                    SELECT 0 AS PAYM_AMT, C.MOVING_AVG_AMT, A.SA_ID
                    FROM T1 A
                    INNER JOIN PT_0522T B
                    ON A.DLR_CD = B.DLR_CD
                    AND A.RO_DOC_NO = B.PAR_SALE_ORD_NO
                    INNER JOIN PT_0312T C
                    ON B.DLR_CD = C.DLR_CD
                    AND B.MVT_DOC_NO = C.MVT_DOC_NO
                    AND B.MVT_DOC_LINE_NO = C.MVT_DOC_LINE_NO
                    WHERE SER_PAR_DSTIN_CD = 'PAR'
                )
                GROUP BY SA_ID    --부품판매총이윤 : 부품판매생산액 - 부품판매원가

                UNION ALL

                SELECT 47 AS COLUMN_SEQ
                       ,'COL47' AS COLUMN_NM
                       ,ROUND(CASE WHEN SUM(NULLIF(PAYM_AMT, 0)) > 0
                                    THEN ((SUM(PAYM_AMT) - SUM(NVL(MOVING_AVG_AMT, 0)))/SUM(NULLIF(PAYM_AMT, 0)))
                                    ELSE 0 END, 2) COLUMN_VAL
                       ,SA_ID
                       ,'P' AS VAL_TYPE
                FROM (
                    SELECT PAYM_AMT, 0 AS MOVING_AVG_AMT, SA_ID
                    FROM T1
                    WHERE SER_PAR_DSTIN_CD = 'PAR'

                    UNION ALL

                    SELECT 0 AS PAYM_AMT, C.MOVING_AVG_AMT, A.SA_ID
                    FROM T1 A
                    INNER JOIN PT_0522T B
                    ON A.DLR_CD = B.DLR_CD
                    AND A.RO_DOC_NO = B.PAR_SALE_ORD_NO
                    INNER JOIN PT_0312T C
                    ON B.DLR_CD = C.DLR_CD
                    AND B.MVT_DOC_NO = C.MVT_DOC_NO
                    AND B.MVT_DOC_LINE_NO = C.MVT_DOC_LINE_NO
                    WHERE SER_PAR_DSTIN_CD = 'PAR'
                )
                GROUP BY SA_ID    --부품판매총이윤율 : 부품판매총이윤/부품판매수입

                UNION ALL

                SELECT 48 AS COLUMN_SEQ, 'COL48' AS COLUMN_NM
                    , ROUND(COUNT(DISTINCT(VIN_NO))/LDATE, 2) AS COLUMN_VAL
                    , SA_ID
                    , 'A' AS VAL_TYPE FROM (
                    SELECT * FROM (
                        SELECT DLR_CD
                            ,DIAG_DOC_NO
                            ,VIN_NO
                            ,REG_USR_ID AS SA_ID
                            ,(SELECT CARLINE_CD FROM SA_0121T WHERE VIN_NO = PRE.VIN_NO AND ROWNUM = 1) AS CARLINE_CD
                            ,TO_CHAR(PRE_CHK_DT,'MM') AS MM
                            ,CASE WHEN TO_CHAR(PRE_CHK_DT,'MM') = TO_CHAR(SYSDATE, 'MM')
                                  THEN TO_NUMBER(TO_CHAR(SYSDATE, 'DD'))
                                  ELSE TO_NUMBER(TO_CHAR(LAST_DAY(PRE_CHK_DT), 'DD')) END AS LDATE
                        FROM SE_0200T PRE
                        WHERE DLR_CD = '${sDlrCd}'
                         AND DIAG_STAT_CD != 'C'
                         AND TO_CHAR(PRE_CHK_DT,'YYYYMMDD') BETWEEN '${sStartYyMmDd}' AND '${sEndYyMmDd}'
                    )
                    WHERE 1=1
                    ${IF(LEN(sCarlineCd) <= 0,""," AND NVL(CARLINE_CD, 'NONE')='" + sCarlineCd + "'")}   --차종
                )
                GROUP BY SA_ID, LDATE     --일평균사전점검대수(사전점검대수/시간구간의 일수)

                UNION ALL

                SELECT 49 AS COLUMN_SEQ, 'COL49' AS COLUMN_NM, ROUND(COUNT(DIAG_DOC_NO)/LDATE, 2) AS COLUMN_VAL, SA_ID, 'A' AS VAL_TYPE FROM (
                    SELECT * FROM (
                        SELECT DLR_CD
                            ,DIAG_DOC_NO
                            ,VIN_NO
                            ,REG_USR_ID AS SA_ID
                            ,(SELECT CARLINE_CD FROM SA_0121T WHERE VIN_NO = PRE.VIN_NO AND ROWNUM = 1) AS CARLINE_CD
                            ,TO_CHAR(PRE_CHK_DT,'MM') AS MM
                            ,CASE WHEN TO_CHAR(PRE_CHK_DT,'MM') = TO_CHAR(SYSDATE, 'MM')
                                  THEN TO_NUMBER(TO_CHAR(SYSDATE, 'DD'))
                                  ELSE TO_NUMBER(TO_CHAR(LAST_DAY(PRE_CHK_DT), 'DD')) END AS LDATE
                        FROM SE_0200T PRE
                        WHERE DLR_CD = '${sDlrCd}'
                         AND DIAG_STAT_CD != 'C'
                         AND TO_CHAR(PRE_CHK_DT,'YYYYMMDD') BETWEEN '${sStartYyMmDd}' AND '${sEndYyMmDd}'
                    )
                    WHERE 1=1
                    ${IF(LEN(sCarlineCd) <= 0,""," AND NVL(CARLINE_CD, 'NONE')='" + sCarlineCd + "'")}   --차종
                )
                GROUP BY SA_ID, LDATE     --일평균사전점검대차(사전점검대차/시간구간의 일수)

                UNION ALL

                SELECT 50 AS COLUMN_SEQ, 'COL50' AS COLUMN_NM, ROUND(COUNT(DISTINCT(VIN_NO))/LDATE, 2) AS COLUMN_VAL, SA_ID, 'A' AS VAL_TYPE
                FROM (
                    SELECT * FROM (
                        SELECT DLR_CD
                               ,RO_DOC_NO
                               ,VIN_NO
                               ,(SELECT CARLINE_CD FROM SA_0121T WHERE VIN_NO = RO.VIN_NO AND ROWNUM = 1) AS CARLINE_CD
                               ,TO_CHAR(RO_DT,'MM') AS MM
                               ,CASE WHEN TO_CHAR(RO_DT,'MM') = TO_CHAR(SYSDATE, 'MM')
                                     THEN TO_NUMBER(TO_CHAR(SYSDATE, 'DD'))
                                     ELSE TO_NUMBER(TO_CHAR(LAST_DAY(RO_DT), 'DD')) END AS LDATE
                               ,RO_TP
                               ,REG_USR_ID AS SA_ID
                               ,DLR_RO_TP
                        FROM SE_0300T RO
                        WHERE DLR_CD = '${sDlrCd}'
                        AND TO_CHAR(RO_DT,'YYYYMMDD') BETWEEN '${sStartYyMmDd}' AND '${sEndYyMmDd}'
                        AND RO_STAT_CD != '06'
                        ${IF(LEN(sFosterTp) <= 0,""," AND NVL(RO_TP, 'NONE')='" + sFosterTp + "'")}
                        ${IF(LEN(sDlrRoTp) <= 0,""," AND NVL(DLR_RO_TP, 'NONE')='" + sDlrRoTp + "'")}
                    )
                    WHERE 1=1
                    ${IF(LEN(sCarlineCd) <= 0,""," AND NVL(CARLINE_CD, 'NONE')='" + sCarlineCd + "'")}
                )
                GROUP BY SA_ID, LDATE     --일평균위탁대수(RO대수/시간구간의 일수)

                UNION ALL

                SELECT 51 AS COLUMN_SEQ, 'COL51' AS COLUMN_NM, ROUND(COUNT(RO_DOC_NO)/LDATE, 2) AS COLUMN_VAL, SA_ID, 'A' AS VAL_TYPE
                FROM (
                    SELECT * FROM (
                        SELECT DLR_CD
                               ,RO_DOC_NO
                               ,VIN_NO
                               ,(SELECT CARLINE_CD FROM SA_0121T WHERE VIN_NO = RO.VIN_NO AND ROWNUM = 1) AS CARLINE_CD
                               ,TO_CHAR(RO_DT,'MM') AS MM
                               ,CASE WHEN TO_CHAR(RO_DT,'MM') = TO_CHAR(SYSDATE, 'MM')
                                     THEN TO_NUMBER(TO_CHAR(SYSDATE, 'DD'))
                                     ELSE TO_NUMBER(TO_CHAR(LAST_DAY(RO_DT), 'DD')) END AS LDATE
                               ,RO_TP
                               ,REG_USR_ID AS SA_ID
                               ,DLR_RO_TP
                        FROM SE_0300T RO
                        WHERE DLR_CD = '${sDlrCd}'
                        AND TO_CHAR(RO_DT,'YYYYMMDD') BETWEEN '${sStartYyMmDd}' AND '${sEndYyMmDd}'
                        AND RO_STAT_CD != '06'
                        ${IF(LEN(sFosterTp) <= 0,""," AND NVL(RO_TP, 'NONE')='" + sFosterTp + "'")}
                        ${IF(LEN(sDlrRoTp) <= 0,""," AND NVL(DLR_RO_TP, 'NONE')='" + sDlrRoTp + "'")}
                    )
                    WHERE 1=1
                    ${IF(LEN(sCarlineCd) <= 0,""," AND NVL(CARLINE_CD, 'NONE')='" + sCarlineCd + "'")}
                )
                GROUP BY SA_ID, LDATE     --일평균위탁대차(RO대차/시간구간의 일수)

                UNION ALL

                SELECT 52 AS COLUMN_SEQ, 'COL52' AS COLUMN_NM, ROUND(COUNT(DISTINCT(VIN_NO))/LDATE, 2) AS COLUMN_VAL, SA_ID, 'A' AS VAL_TYPE
                FROM T1
                WHERE SER_PAR_DSTIN_CD = 'SER'
                GROUP BY SA_ID, LDATE     --일평균정산대수(정비정산대수/시간구간의 일수)

                UNION ALL

                SELECT 53 AS COLUMN_SEQ, 'COL53' AS COLUMN_NM, ROUND(COUNT(CALC_DOC_NO)/LDATE, 2) AS COLUMN_VAL, SA_ID, 'A' AS VAL_TYPE
                FROM T1
                WHERE SER_PAR_DSTIN_CD = 'SER'
                GROUP BY SA_ID, LDATE     --일평균정산대차(정비정산대차/시간구간의 일수)

                UNION ALL

                SELECT 54 AS COLUMN_SEQ, 'COL54' AS COLUMN_NM, ROUND(SUM(TERM) * 24 / COUNT(1), 2) AS COLUMN_VAL, SA_ID, 'TIME' AS TYPE
                FROM (
                    SELECT *
                    FROM (
                        SELECT PRE.DLR_CD
                               ,PRE.DIAG_DOC_NO
                               ,PRE.VIN_NO
                               ,(SELECT CARLINE_CD FROM SA_0121T WHERE VIN_NO = PRE.VIN_NO AND ROWNUM = 1) AS CARLINE_CD
                               ,PRE.REG_USR_ID AS SA_ID
                               ,PRE_CHK_DT - REG_DT AS TERM
                               ,TO_CHAR(PRE_CHK_DT, 'MM') AS MM
                        FROM SE_0200T PRE
                        WHERE DLR_CD = '${sDlrCd}'
                        AND TO_CHAR(PRE_CHK_DT,'YYYYMMDD') BETWEEN '${sStartYyMmDd}' AND '${sEndYyMmDd}'
                        AND DIAG_STAT_CD != 'C'
                    )
                    WHERE 1=1
                    ${IF(LEN(sCarlineCd) <= 0,""," AND NVL(CARLINE_CD, 'NONE')='" + sCarlineCd + "'")}
                )
                GROUP BY SA_ID     --사전점검시간(차량 딜러도착 인식시간에서 사전점검 확인시간까지의 시간산출(단위:시간))

                UNION ALL

                SELECT 55 AS COLUMN_SEQ, 'COL55' AS COLUMN_NM, ROUND(SUM(TERM) * 24 / COUNT(1), 2) AS COLUMN_VAL, SA_ID, 'TIME' AS TYPE
                FROM (
                    SELECT *
                    FROM (
                        SELECT RO.DLR_CD
                               ,RO.RO_DOC_NO
                               ,RO.VIN_NO
                               ,(SELECT CARLINE_CD FROM SA_0121T WHERE VIN_NO = RO.VIN_NO AND ROWNUM = 1) AS CARLINE_CD
                               ,TO_CHAR(RO.RO_DT,'MM') AS MM
                               ,RO.RO_DT - PRE.PRE_CHK_DT AS TERM
                               ,RO.RO_TP
                               ,RO.REG_USR_ID AS SA_ID
                               ,RO.DLR_RO_TP
					      ,PRE.DIAG_STAT_CD
                        FROM SE_0300T RO
                        INNER JOIN SE_0200T PRE
                        ON RO.DLR_CD = PRE.DLR_CD
                        AND RO.DIAG_DOC_NO = PRE.DIAG_DOC_NO
                        AND TO_CHAR(RO.RO_DT,'YYYYMMDD') BETWEEN '${sStartYyMmDd}' AND '${sEndYyMmDd}'--R18122100255增加工单日期即开单时间查询 贾明2018-12-24
                        --WHERE PRE.DIAG_STAT_CD != 'C'
                        ${IF(LEN(sFosterTp) <= 0,""," AND NVL(RO_TP, 'NONE')='" + sFosterTp + "'")}
                        ${IF(LEN(sDlrRoTp) <= 0,""," AND NVL(RO.DLR_RO_TP, 'NONE')='" + sDlrRoTp + "'")}
                    )
                    WHERE 1=1
				AND DIAG_STAT_CD != 'C'
                    ${IF(LEN(sCarlineCd) <= 0,""," AND NVL(CARLINE_CD, 'NONE')='" + sCarlineCd + "'")}
                )
                GROUP BY SA_ID     -- 정비위탁시간(사전점검 확인시간에서 RO 확인시간까지의 시간산출(단위:시간))

                UNION ALL

                SELECT 56 AS COLUMN_SEQ, 'COL56' AS COLUMN_NM, ROUND(SUM(TERM1) * 24 / COUNT(1), 2) + ROUND(SUM(TERM2) * 24 / COUNT(1), 2) AS COLUMN_VAL, SA_ID, 'TIME' AS TYPE
                FROM (
                    SELECT RO.DLR_CD
                           ,RO.RO_TP
                           ,RO.RO_DOC_NO
                           ,RO.VIN_NO
                           ,RO.REG_USR_ID AS SA_ID
                           ,(SELECT CARLINE_CD FROM SA_0121T WHERE VIN_NO = RO.VIN_NO AND ROWNUM = 1) AS CARLINE_CD
                           ,TO_CHAR(RO.RO_DT,'MM') AS MM
                           ,(CA.CALC_DT - RO.DL_CHK_DT) AS TERM1
                           ,((SELECT MAX(RCPT_DT) FROM SE_0560T WHERE DLR_CD = RCV.DLR_CD AND RCV_DOC_NO = RCV.RCV_DOC_NO AND ROWNUM = 1) - CA.CALC_DT) AS TERM2
                    FROM SE_0300T RO
                    INNER JOIN T1 CA
                    ON RO.DLR_CD = CA.DLR_CD
                    AND RO.RO_DOC_NO = CA.RO_DOC_NO
                    INNER JOIN SE_0550T RCV
                    ON RO.DLR_CD = RCV.DLR_CD
                    AND RO.RO_DOC_NO = RCV.RO_DOC_NO
                    WHERE CA.SER_PAR_DSTIN_CD = 'SER'
                    AND RCV.RCV_STAT_CD = 'F'
                )
                GROUP BY SA_ID     -- 정비인도시간(인도체크 확인시간에서 수납등록 완료시간까지 시간 산출(단위:시간))

                UNION ALL

                SELECT 57 AS COLUMN_SEQ, 'COL57' AS COLUMN_NM, ROUND(SUM(TERM) * 24 / COUNT(1), 2) AS COLUMN_VAL, SA_ID, 'TIME' AS TYPE
                FROM (
                    SELECT RO.DLR_CD
                           ,CA.RO_TP
                           ,CA.RO_DOC_NO
                           ,CA.VIN_NO
                           ,(CA.CALC_DT - RO.DL_CHK_DT) AS TERM
                           ,CA.MM
                           ,CA.SA_ID
                    FROM SE_0300T RO
                    INNER JOIN T1 CA
                    ON RO.DLR_CD = CA.DLR_CD
                    AND RO.RO_DOC_NO = CA.RO_DOC_NO
                    INNER JOIN SE_0550T RCV
                    ON RO.DLR_CD = RCV.DLR_CD
                    AND RO.RO_DOC_NO = RCV.RO_DOC_NO
                    WHERE CA.SER_PAR_DSTIN_CD = 'SER'
                    AND RCV.RCV_STAT_CD = 'F'
                )
                GROUP BY SA_ID     -- 정비정산시간(인도체크 확인시간에서 정산완료시간까지 시간 산출(단위:시간))

                UNION ALL

                SELECT 58 AS COLUMN_SEQ, 'COL58' AS COLUMN_NM, ROUND(SUM(TERM) * 24 / COUNT(1), 2) AS COLUMN_VAL, SA_ID, 'TIME' AS TYPE
                FROM (
                    SELECT CA.DLR_CD
                           ,CA.RO_TP
                           ,((SELECT MAX(RCPT_DT) FROM SE_0560T WHERE DLR_CD = RCV.DLR_CD AND RCV_DOC_NO = RCV.RCV_DOC_NO AND ROWNUM = 1) - CA.CALC_DT) AS TERM
                           ,CA.MM
                           ,CA.SA_ID
                    FROM SE_0300T RO
                    INNER JOIN T1 CA
                    ON RO.DLR_CD = CA.DLR_CD
                    AND RO.RO_DOC_NO = CA.RO_DOC_NO
                    INNER JOIN SE_0550T RCV
                    ON RO.DLR_CD = RCV.DLR_CD
                    AND RO.RO_DOC_NO = RCV.RO_DOC_NO
                    WHERE CA.SER_PAR_DSTIN_CD = 'SER'
                    AND RCV.RCV_STAT_CD = 'F'
                )
                GROUP BY SA_ID     -- 정비수납시간(정산완료시간에서 수납등록완료시간까지 시간 산출(단위:시간))

                UNION ALL

                SELECT 59 AS COLUMN_SEQ, 'COL59' AS COLUMN_NM, COUNT(RO_DOC_NO) AS COLUMN_VAL, SA_ID, 'CNT' AS TYPE
                FROM (
                    SELECT * FROM (
                        SELECT DLR_CD
                               ,RO_DOC_NO
                               ,VIN_NO
                               ,(SELECT CARLINE_CD FROM SA_0121T WHERE VIN_NO = RO.VIN_NO AND ROWNUM = 1) AS CARLINE_CD
                               ,TO_CHAR(RO_DT,'MM') AS MM
                               ,RO_TP
                               ,REG_USR_ID AS SA_ID
                               ,DLR_RO_TP
                        FROM SE_0300T RO
                        WHERE DLR_CD = '${sDlrCd}'
                        AND TO_CHAR(RO_DT,'YYYYMMDD') BETWEEN '${sStartYyMmDd}' AND '${sEndYyMmDd}'
                        AND DL_CHK_DT <= EXPC_DL_DT
                        AND RO_STAT_CD != '06'
                        ${IF(LEN(sFosterTp) <= 0,""," AND NVL(RO_TP, 'NONE')='" + sFosterTp + "'")}
                        ${IF(LEN(sDlrRoTp) <= 0,""," AND NVL(DLR_RO_TP, 'NONE')='" + sDlrRoTp + "'")}
                    )
                    WHERE 1=1
                    ${IF(LEN(sCarlineCd) <= 0,""," AND NVL(CARLINE_CD, 'NONE')='" + sCarlineCd + "'")}
                )
                GROUP BY SA_ID     -- on time인도대차(인도확인시간이 예상인도시간보다 작거나 같은 RO대차)

                UNION ALL

                SELECT 60 AS COLUMN_SEQ, 'COL60' AS COLUMN_NM, ROUND((COUNT(DL_RO_DOC_NO)/COUNT(RO_DOC_NO)), 2) AS COLUMN_VAL, SA_ID, 'P' AS TYPE
                FROM(
                    SELECT *
                    FROM (
                        SELECT '' AS RO_DOC_NO
                               ,RO_DOC_NO AS DL_RO_DOC_NO
                               ,TO_CHAR(RO_DT,'MM') AS MM
                               ,(SELECT CARLINE_CD FROM SA_0121T WHERE VIN_NO = RO.VIN_NO AND ROWNUM = 1) AS CARLINE_CD
                               ,RO_TP
                               ,REG_USR_ID AS SA_ID
                               ,DLR_RO_TP
                        FROM SE_0300T RO
                        WHERE DLR_CD = '${sDlrCd}'
                        AND TO_CHAR(RO_DT,'YYYYMMDD') BETWEEN '${sStartYyMmDd}' AND '${sEndYyMmDd}'
                        AND RO_STAT_CD != '06'
                        AND DL_CHK_DT <= EXPC_DL_DT

                        UNION ALL

                        SELECT RO_DOC_NO
                               ,'' AS DL_RO_DOC_NO
                               ,TO_CHAR(RO_DT,'MM') AS MM
                               ,(SELECT CARLINE_CD FROM SA_0121T WHERE VIN_NO = RO.VIN_NO AND ROWNUM = 1) AS CARLINE_CD
                               ,RO_TP
                               ,REG_USR_ID AS SA_ID
                               ,DLR_RO_TP
                        FROM SE_0300T RO
                        WHERE DLR_CD = '${sDlrCd}'
                        AND TO_CHAR(RO_DT,'YYYYMMDD') BETWEEN '${sStartYyMmDd}' AND '${sEndYyMmDd}'
                        AND RO_STAT_CD != '06'
                    )
                    WHERE 1=1
                    ${IF(LEN(sFosterTp) <= 0,""," AND NVL(RO_TP, 'NONE')='" + sFosterTp + "'")}
                    ${IF(LEN(sCarlineCd) <= 0,""," AND NVL(CARLINE_CD, 'NONE')='" + sCarlineCd + "'")}
                    ${IF(LEN(sDlrRoTp) <= 0,""," AND NVL(DLR_RO_TP, 'NONE')='" + sDlrRoTp + "'")}
                )
                GROUP BY SA_ID     -- on time인도율(on time인도대차/RO대차)

                --UNION ALL

                --SELECT 61 AS COLUMN_SEQ, 'COL61' AS COLUMN_NM, ROUND((COUNT(RO_DOC_NO)/NULLIF(COUNT(RWRK_RO), 0)), 2) AS COLUMN_VAL, SA_ID, 'P' AS VAL_TYPE
                --FROM (
                --    SELECT *
                --    FROM (
                --        SELECT RO_DOC_NO AS RWRK_RO
                --               ,'' AS RO_DOC_NO
                --               ,TO_CHAR(RO_DT,'MM') AS MM
                --               ,(SELECT CARLINE_CD FROM SA_0121T WHERE VIN_NO = VIN_NO AND ROWNUM = 1) AS CARLINE_CD
                --               ,RO_TP
                --               ,SA_ID
                --        FROM SE_0300T
                --        WHERE DLR_CD = '${sDlrCd}'
                --        AND TO_CHAR(RO_DT,'YYYYMMDD') BETWEEN '${sStartYyMmDd}' AND '${sEndYyMmDd}'
                --        AND RO_STAT_CD != '06'
                --        AND RO_TP = '05'

                --        UNION ALL

                --        SELECT '' AS RWRK_RO
                --               ,RO_DOC_NO
                --               ,TO_CHAR(RO_DT,'MM') AS MM
                --               ,(SELECT CARLINE_CD FROM SA_0121T WHERE VIN_NO = VIN_NO AND ROWNUM = 1) AS CARLINE_CD
                --               ,RO_TP
                --               ,SA_ID
                --        FROM SE_0300T
                --        WHERE DLR_CD = '${sDlrCd}'
                --        AND TO_CHAR(RO_DT,'YYYYMMDD') BETWEEN '${sStartYyMmDd}' AND '${sEndYyMmDd}'
                --        AND RO_STAT_CD != '06'
                --    )
                --    WHERE 1=1
                --    ${IF(LEN(sFosterTp) <= 0,""," AND NVL(RO_TP, 'NONE')='" + sFosterTp + "'")}
                --    ${IF(LEN(sCarlineCd) <= 0,""," AND NVL(CARLINE_CD, 'NONE')='" + sCarlineCd + "'")}
                --)
                --GROUP BY SA_ID     --1회회복율(1-리워크수리율)
                
                UNION ALL
                SELECT 62 AS COLUMN_SEQ , 'COL62' AS COLUMN_NM , SUM(NVL(PAYM_AMT,0)) AS COLUMN_VAL, SA_ID, 'A' AS VAL_TYPE
                FROM T1
                WHERE SER_PAR_DSTIN_CD = 'SER'
                GROUP BY SA_ID    -- 应收金额
            )
        )PIVOT(
            SUM(COLUMN_VAL)
            FOR COLUMN_NM IN(
                'COL01' AS "COL01"
                ,'COL02' AS "COL02"
                ,'COL03' AS "COL03"
                ,'COL04' AS "COL04"
                ,'COL05' AS "COL05"
                ,'COL06' AS "COL06"
                ,'COL07' AS "COL07"
                ,'COL08' AS "COL08"
                ,'COL09' AS "COL09"
                ,'COL10' AS "COL10"
                ,'COL11' AS "COL11"
                ,'COL12' AS "COL12"
                ,'COL13' AS "COL13"
                ,'COL14' AS "COL14"
                ,'COL15' AS "COL15"
                ,'COL16' AS "COL16"
                ,'COL17' AS "COL17"
                ,'COL18' AS "COL18"
                ,'COL19' AS "COL19"
                ,'COL20' AS "COL20"
                ,'COL21' AS "COL21"
                ,'COL22' AS "COL22"
                ,'COL23' AS "COL23"
                ,'COL24' AS "COL24"
                ,'COL25' AS "COL25"
                ,'COL26' AS "COL26"
                ,'COL27' AS "COL27"
                ,'COL28' AS "COL28"
                ,'COL29' AS "COL29"
                ,'COL30' AS "COL30"
                ,'COL31' AS "COL31"
                ,'COL32' AS "COL32"
                ,'COL33' AS "COL33"
                ,'COL34' AS "COL34"
                ,'COL35' AS "COL35"
                ,'COL36' AS "COL36"
                ,'COL37' AS "COL37"
                ,'COL38' AS "COL38"
                ,'COL39' AS "COL39"
                ,'COL40' AS "COL40"
                ,'COL41' AS "COL41"
                ,'COL42' AS "COL42"
                ,'COL43' AS "COL43"
                ,'COL44' AS "COL44"
                ,'COL45' AS "COL45"
                ,'COL46' AS "COL46"
                ,'COL47' AS "COL47"
                ,'COL48' AS "COL48"
                ,'COL49' AS "COL49"
                ,'COL50' AS "COL50"
                ,'COL51' AS "COL51"
                ,'COL52' AS "COL52"
                ,'COL53' AS "COL53"
                ,'COL54' AS "COL54"
                ,'COL55' AS "COL55"
                ,'COL56' AS "COL56"
                ,'COL57' AS "COL57"
                ,'COL58' AS "COL58"
                ,'COL59' AS "COL59"
                ,'COL60' AS "COL60"
                ,'COL61' AS "COL61"
                ,'COL62' AS "COL62"   --应收金额
            )
        )
        WHERE SA_NM IS NOT NULL
    ) F1
) F2
WHERE TOTAL_SUM > 0
ORDER BY SA_ID;
]]></Query>
</TableData>
</TableDataMap>
<Report class="com.fr.report.worksheet.WorkSheet" name="sheet1">
<ReportPageAttr>
<HR F="0" T="0"/>
<FR/>
<HC F="0" T="0"/>
<FC/>
<UPFCR COLUMN="true" ROW="true"/>
</ReportPageAttr>
<ColumnPrivilegeControl/>
<RowPrivilegeControl/>
<RowHeight defaultValue="723900">
<![CDATA[1152000,1152000,1152000,1152000,723900,723900,723900,723900,723900,723900,723900]]></RowHeight>
<ColumnWidth defaultValue="2743200">
<![CDATA[4320000,4320000,4320000,4320000,4320000,4320000,4320000,0,0,0,0,4320000,4320000,5328000,5328000,5328000,5328000,5328000,5328000,5328000,5328000,5328000,5328000,5328000,5328000,5328000,5328000,5328000,6480000,6480000,6480000,6480000,6480000,4320000,4320000,4320000,4320000,4320000,4320000,4320000,4320000,4320000,4320000,5328000,5328000,0,0,0,0,4320000,4320000,4320000,4320000,4320000,4320000,4320000,4320000,4320000,4320000,4320000,4320000,4320000,0,2743200]]></ColumnWidth>
<CellElementList>
<C c="0" r="0" s="0">
<O>
<![CDATA[服务接待者]]></O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="1" r="0" s="0">
<O>
<![CDATA[接车检查台数]]></O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="2" r="0" s="0">
<O>
<![CDATA[接车检查台次]]></O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="3" r="0" s="0">
<O>
<![CDATA[维修委托台数]]></O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="4" r="0" s="0">
<O>
<![CDATA[维修委托台次]]></O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="5" r="0" s="0">
<O>
<![CDATA[取消委托台数]]></O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="6" r="0" s="0">
<O>
<![CDATA[取消委托台次]]></O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="7" r="0" s="0">
<O>
<![CDATA[结算完成台数]]></O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="8" r="0" s="0">
<O>
<![CDATA[结算完成台次]]></O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="9" r="0" s="0">
<O>
<![CDATA[付款完成台数]]></O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="10" r="0" s="0">
<O>
<![CDATA[付款完成台次]]></O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="11" r="0" s="0">
<O>
<![CDATA[服务结算台数]]></O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="12" r="0" s="0">
<O>
<![CDATA[服务结算台次]]></O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="13" r="0" s="0">
<O>
<![CDATA[工时-最终结算金额]]></O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="14" r="0" s="0">
<O>
<![CDATA[工时-结算金额]]></O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="15" r="0" s="0">
<O>
<![CDATA[工时-优惠金额]]></O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="16" r="0" s="0">
<O>
<![CDATA[工时-积分使用金额]]></O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="17" r="0" s="0">
<O>
<![CDATA[工时-蓝缤积分使用金额]]></O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="18" r="0" s="0">
<O>
<![CDATA[工时-蓝缤其他优惠金额]]></O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="19" r="0" s="0">
<O>
<![CDATA[工时-其他优惠金额]]></O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="20" r="0" s="0">
<O>
<![CDATA[配件-最终结算金额]]></O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="21" r="0" s="0">
<O>
<![CDATA[配件-结算金额]]></O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="22" r="0" s="0">
<O>
<![CDATA[配件-优惠金额]]></O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="23" r="0" s="0">
<O>
<![CDATA[配件-积分使用金额]]></O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="24" r="0" s="0">
<O>
<![CDATA[配件-蓝缤积分使用金额]]></O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="25" r="0" s="0">
<O>
<![CDATA[配件-蓝缤其他优惠金额]]></O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="26" r="0" s="0">
<O>
<![CDATA[配件-其他优惠金额]]></O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="27" r="0" s="0">
<O>
<![CDATA[其它-最终结算金额]]></O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="28" r="0" s="0">
<O>
<![CDATA[维修费优惠金额-最终结算金额]]></O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="29" r="0" s="0">
<O>
<![CDATA[维修费优惠金额-积分使用]]></O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="30" r="0" s="0">
<O>
<![CDATA[维修费优惠金额-蓝缤积分使用]]></O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="31" r="0" s="0">
<O>
<![CDATA[维修费优惠金额-其他优惠]]></O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="32" r="0" s="0">
<O>
<![CDATA[维修费优惠金额-蓝缤其他优惠]]></O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="33" r="0" s="0">
<O>
<![CDATA[最终结算金额]]></O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="34" r="0" s="0">
<O>
<![CDATA[结算取整金额]]></O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="35" r="0" s="0">
<O>
<![CDATA[结算去零金额]]></O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="36" r="0" s="0">
<O>
<![CDATA[应收金额]]></O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="37" r="0" s="0">
<O>
<![CDATA[维修产值（合计）]]></O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="38" r="0" s="0">
<O>
<![CDATA[维修产值（非保修）]]></O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="39" r="0" s="0">
<O>
<![CDATA[维修产值（保修）]]></O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="40" r="0" s="0">
<O>
<![CDATA[配件成本（合计）]]></O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="41" r="0" s="0">
<O>
<![CDATA[维修毛利（合计）]]></O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="42" r="0" s="0">
<O>
<![CDATA[维修毛利率（合计）]]></O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="43" r="0" s="0">
<O>
<![CDATA[单台数维修产值（合计）]]></O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="44" r="0" s="0">
<O>
<![CDATA[单台次维修产值（合计）]]></O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="45" r="0" s="0">
<O>
<![CDATA[配件销售产值]]></O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="46" r="0" s="0">
<O>
<![CDATA[配件销售成本]]></O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="47" r="0" s="0">
<O>
<![CDATA[配件销售毛利]]></O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="48" r="0" s="0">
<O>
<![CDATA[配件销售毛利率]]></O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="49" r="0" s="0">
<O>
<![CDATA[日均接车台数]]></O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="50" r="0" s="0">
<O>
<![CDATA[日均接车台次]]></O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="51" r="0" s="0">
<O>
<![CDATA[日均委托台数]]></O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="52" r="0" s="0">
<O>
<![CDATA[日均委托台次]]></O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="53" r="0" s="0">
<O>
<![CDATA[日均结算台数]]></O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="54" r="0" s="0">
<O>
<![CDATA[日均结算台次]]></O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="55" r="0" s="0">
<O>
<![CDATA[服务接车时间]]></O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="56" r="0" s="0">
<O>
<![CDATA[维修委托时间]]></O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="57" r="0" s="0">
<O>
<![CDATA[服务交车时间]]></O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="58" r="0" s="0">
<O>
<![CDATA[服务结算时间]]></O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="59" r="0" s="0">
<O>
<![CDATA[服务收款时间]]></O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="60" r="0" s="0">
<O>
<![CDATA[准时交车台次]]></O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="61" r="0" s="0">
<O>
<![CDATA[准时交车率]]></O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="62" r="0" s="0">
<O>
<![CDATA[一次修复率]]></O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="0" r="1" s="1">
<O>
<![CDATA[合计]]></O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="1" r="1" s="2">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=SUM(B4)]]></Attributes>
</O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="2" r="1" s="2">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=SUM(C4)]]></Attributes>
</O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="3" r="1" s="2">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=SUM(D4)]]></Attributes>
</O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="4" r="1" s="2">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=SUM(E4)]]></Attributes>
</O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="5" r="1" s="2">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=SUM(F4)]]></Attributes>
</O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="6" r="1" s="2">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=SUM(G4)]]></Attributes>
</O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="7" r="1" s="2">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=SUM(H4)]]></Attributes>
</O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="8" r="1" s="2">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=SUM(I4)]]></Attributes>
</O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="9" r="1" s="2">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=SUM(J4)]]></Attributes>
</O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="10" r="1" s="2">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=SUM(K4)]]></Attributes>
</O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="11" r="1" s="2">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=SUM(L4)]]></Attributes>
</O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="12" r="1" s="2">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=SUM(M4)]]></Attributes>
</O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="13" r="1" s="2">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=SUM(N4)]]></Attributes>
</O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="14" r="1" s="2">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=SUM(O4)]]></Attributes>
</O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="15" r="1" s="2">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=SUM(P4)]]></Attributes>
</O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="16" r="1" s="2">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=SUM(Q4)]]></Attributes>
</O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="17" r="1" s="2">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=SUM(R4)]]></Attributes>
</O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="18" r="1" s="2">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=SUM(S4)]]></Attributes>
</O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="19" r="1" s="2">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=SUM(T4)]]></Attributes>
</O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="20" r="1" s="2">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=SUM(U4)]]></Attributes>
</O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="21" r="1" s="2">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=SUM(V4)]]></Attributes>
</O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="22" r="1" s="2">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=SUM(W4)]]></Attributes>
</O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="23" r="1" s="2">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=SUM(X4)]]></Attributes>
</O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="24" r="1" s="2">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=SUM(Y4)]]></Attributes>
</O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="25" r="1" s="2">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=SUM(Z4)]]></Attributes>
</O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="26" r="1" s="2">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=SUM(AA4)]]></Attributes>
</O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="27" r="1" s="2">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=SUM(AB4)]]></Attributes>
</O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="28" r="1" s="2">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=SUM(AC4)]]></Attributes>
</O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="29" r="1" s="2">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=SUM(AD4)]]></Attributes>
</O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="30" r="1" s="2">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=SUM(AE4)]]></Attributes>
</O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="31" r="1" s="2">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=SUM(AF4)]]></Attributes>
</O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="32" r="1" s="2">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=SUM(AG4)]]></Attributes>
</O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="33" r="1" s="2">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=SUM(AH4)]]></Attributes>
</O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="34" r="1" s="2">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=SUM(AI4) * 100]]></Attributes>
</O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="35" r="1" s="2">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=SUM(AJ4)]]></Attributes>
</O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="36" r="1" s="2">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=SUM(AH4)+SUM(AI4)-SUM(AJ4)]]></Attributes>
</O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="37" r="1" s="2">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=SUM(AL4)]]></Attributes>
</O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="38" r="1" s="2">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=SUM(AM4)]]></Attributes>
</O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="39" r="1" s="2">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=SUM(AN4)]]></Attributes>
</O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="40" r="1" s="2">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=SUM(AO4)]]></Attributes>
</O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="41" r="1" s="2">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=SUM(AP4)]]></Attributes>
</O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="42" r="1" s="2">
<PrivilegeControl/>
<Expand/>
</C>
<C c="43" r="1" s="2">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=SUM(AR4)]]></Attributes>
</O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="44" r="1" s="2">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=SUM(AS4)]]></Attributes>
</O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="45" r="1" s="2">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=SUM(AT4)]]></Attributes>
</O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="46" r="1" s="2">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=SUM(AU4)]]></Attributes>
</O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="47" r="1" s="2">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=SUM(AV4)]]></Attributes>
</O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="48" r="1" s="2">
<PrivilegeControl/>
<Expand/>
</C>
<C c="49" r="1" s="2">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=SUM(AX4)]]></Attributes>
</O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="50" r="1" s="2">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=SUM(AY4)]]></Attributes>
</O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="51" r="1" s="2">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=SUM(AZ4)]]></Attributes>
</O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="52" r="1" s="2">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=SUM(BA4)]]></Attributes>
</O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="53" r="1" s="2">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=SUM(BB4)]]></Attributes>
</O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="54" r="1" s="2">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=SUM(BC4)]]></Attributes>
</O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="55" r="1" s="2">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=SUM(BD4)]]></Attributes>
</O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="56" r="1" s="2">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=SUM(BE4)]]></Attributes>
</O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="57" r="1" s="2">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=SUM(BF4)]]></Attributes>
</O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="58" r="1" s="2">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=SUM(BG4)]]></Attributes>
</O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="59" r="1" s="2">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=SUM(BH4)]]></Attributes>
</O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="60" r="1" s="2">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=SUM(BI4)]]></Attributes>
</O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="61" r="1" s="2">
<PrivilegeControl/>
<Expand/>
</C>
<C c="62" r="1" s="2">
<PrivilegeControl/>
<Expand/>
</C>
<C c="0" r="2" s="1">
<O>
<![CDATA[平均]]></O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="1" r="2" s="2">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=ROUND(AVERAGE(B4), 2)]]></Attributes>
</O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="2" r="2" s="2">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=ROUND(AVERAGE(C4), 2)]]></Attributes>
</O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="3" r="2" s="2">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=ROUND(AVERAGE(D4), 2)]]></Attributes>
</O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="4" r="2" s="2">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=ROUND(AVERAGE(E4), 2)]]></Attributes>
</O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="5" r="2" s="2">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=ROUND(AVERAGE(F4), 2)]]></Attributes>
</O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="6" r="2" s="2">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=ROUND(AVERAGE(G4), 2)]]></Attributes>
</O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="7" r="2" s="2">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=ROUND(AVERAGE(H4), 2)]]></Attributes>
</O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="8" r="2" s="2">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=ROUND(AVERAGE(I4), 2)]]></Attributes>
</O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="9" r="2" s="2">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=ROUND(AVERAGE(J4), 2)]]></Attributes>
</O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="10" r="2" s="2">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=ROUND(AVERAGE(K4), 2)]]></Attributes>
</O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="11" r="2" s="2">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=ROUND(AVERAGE(L4), 2)]]></Attributes>
</O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="12" r="2" s="2">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=ROUND(AVERAGE(M4), 2)]]></Attributes>
</O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="13" r="2" s="2">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=ROUND(AVERAGE(N4), 2)]]></Attributes>
</O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="14" r="2" s="2">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=ROUND(AVERAGE(O4), 2)]]></Attributes>
</O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="15" r="2" s="2">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=ROUND(AVERAGE(P4), 2)]]></Attributes>
</O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="16" r="2" s="2">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=ROUND(AVERAGE(Q4), 2)]]></Attributes>
</O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="17" r="2" s="2">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=ROUND(AVERAGE(R4), 2)]]></Attributes>
</O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="18" r="2" s="2">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=ROUND(AVERAGE(S4), 2)]]></Attributes>
</O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="19" r="2" s="2">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=ROUND(AVERAGE(T4), 2)]]></Attributes>
</O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="20" r="2" s="2">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=ROUND(AVERAGE(U4), 2)]]></Attributes>
</O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="21" r="2" s="2">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=ROUND(AVERAGE(V4), 2)]]></Attributes>
</O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="22" r="2" s="2">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=ROUND(AVERAGE(W4), 2)]]></Attributes>
</O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="23" r="2" s="2">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=ROUND(AVERAGE(X4), 2)]]></Attributes>
</O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="24" r="2" s="2">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=ROUND(AVERAGE(Y4), 2)]]></Attributes>
</O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="25" r="2" s="2">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=ROUND(AVERAGE(Z4), 2)]]></Attributes>
</O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="26" r="2" s="2">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=ROUND(AVERAGE(AA4), 2)]]></Attributes>
</O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="27" r="2" s="2">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=ROUND(AVERAGE(AB4), 2)]]></Attributes>
</O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="28" r="2" s="2">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=ROUND(AVERAGE(AC4), 2)]]></Attributes>
</O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="29" r="2" s="2">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=ROUND(AVERAGE(AD4), 2)]]></Attributes>
</O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="30" r="2" s="2">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=ROUND(AVERAGE(AE4), 2)]]></Attributes>
</O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="31" r="2" s="2">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=ROUND(AVERAGE(AF4), 2)]]></Attributes>
</O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="32" r="2" s="2">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=ROUND(AVERAGE(AG4), 2)]]></Attributes>
</O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="33" r="2" s="2">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=ROUND(AVERAGE(AH4), 2)]]></Attributes>
</O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="34" r="2" s="2">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=ROUND(AVERAGE(AI4), 2)]]></Attributes>
</O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="35" r="2" s="2">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=ROUND(AVERAGE(AJ4), 2)]]></Attributes>
</O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="36" r="2" s="2">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=ROUND(AVERAGE(AH4), 2)+ROUND(AVERAGE(AI4), 2)-ROUND(AVERAGE(AJ4), 2)]]></Attributes>
</O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="37" r="2" s="2">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=ROUND(AVERAGE(AL4), 2)]]></Attributes>
</O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="38" r="2" s="2">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=ROUND(AVERAGE(AM4), 2)]]></Attributes>
</O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="39" r="2" s="2">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=ROUND(AVERAGE(AN4), 2)]]></Attributes>
</O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="40" r="2" s="2">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=ROUND(AVERAGE(AO4), 2)]]></Attributes>
</O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="41" r="2" s="2">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=ROUND(AVERAGE(AP4), 2)]]></Attributes>
</O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="42" r="2" s="2">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=ROUND(AVERAGE(AQ4), 2)]]></Attributes>
</O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="43" r="2" s="2">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=ROUND(AVERAGE(AR4), 2)]]></Attributes>
</O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="44" r="2" s="2">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=ROUND(AVERAGE(AS4), 2)]]></Attributes>
</O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="45" r="2" s="2">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=ROUND(AVERAGE(AT4), 2)]]></Attributes>
</O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="46" r="2" s="2">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=ROUND(AVERAGE(AU4), 2)]]></Attributes>
</O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="47" r="2" s="2">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=ROUND(AVERAGE(AV4), 2)]]></Attributes>
</O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="48" r="2" s="2">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=ROUND(AVERAGE(AW4), 2)]]></Attributes>
</O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="49" r="2" s="2">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=ROUND(AVERAGE(AX4), 2)]]></Attributes>
</O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="50" r="2" s="2">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=ROUND(AVERAGE(AY4), 2)]]></Attributes>
</O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="51" r="2" s="2">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=ROUND(AVERAGE(AZ4), 2)]]></Attributes>
</O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="52" r="2" s="2">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=ROUND(AVERAGE(BA4), 2)]]></Attributes>
</O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="53" r="2" s="2">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=ROUND(AVERAGE(BB4), 2)]]></Attributes>
</O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="54" r="2" s="2">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=ROUND(AVERAGE(BC4), 2)]]></Attributes>
</O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="55" r="2" s="2">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=ROUND(AVERAGE(BD4), 2)]]></Attributes>
</O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="56" r="2" s="2">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=ROUND(AVERAGE(BE4), 2)]]></Attributes>
</O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="57" r="2" s="2">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=ROUND(AVERAGE(BF4), 2)]]></Attributes>
</O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="58" r="2" s="2">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=ROUND(AVERAGE(BG4), 2)]]></Attributes>
</O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="59" r="2" s="2">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=ROUND(AVERAGE(BH4), 2)]]></Attributes>
</O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="60" r="2" s="2">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=ROUND(AVERAGE(BI4), 2)]]></Attributes>
</O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="61" r="2" s="2">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=ROUND(AVERAGE(BJ4), 2)]]></Attributes>
</O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="62" r="2" s="2">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=ROUND(AVERAGE(BK4), 2)]]></Attributes>
</O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="0" r="3" s="3">
<O t="DSColumn">
<Attributes dsName="ds1" columnName="SA_NM"/>
<Complex/>
<RG class="com.fr.report.cell.cellattr.core.group.FunctionGrouper"/>
<Parameters/>
</O>
<PrivilegeControl/>
<HighlightList>
<Highlight class="com.fr.report.cell.cellattr.highlight.DefaultHighlight">
<Name>
<![CDATA[조건속성1]]></Name>
<Condition class="com.fr.data.condition.FormulaCondition">
<Formula>
<![CDATA[row() % 2 = 0]]></Formula>
</Condition>
<HighlightAction class="com.fr.report.cell.cellattr.highlight.BackgroundHighlightAction">
<Scope val="1"/>
<Background name="ColorBackground" color="-1"/>
</HighlightAction>
</Highlight>
</HighlightList>
<Expand dir="0"/>
</C>
<C c="1" r="3" s="2">
<O t="DSColumn">
<Attributes dsName="ds1" columnName="COL01"/>
<Complex/>
<RG class="com.fr.report.cell.cellattr.core.group.FunctionGrouper"/>
<Parameters/>
</O>
<PrivilegeControl/>
<Expand dir="0"/>
</C>
<C c="2" r="3" s="2">
<O t="DSColumn">
<Attributes dsName="ds1" columnName="COL02"/>
<Complex/>
<RG class="com.fr.report.cell.cellattr.core.group.FunctionGrouper"/>
<Parameters/>
</O>
<PrivilegeControl/>
<Expand dir="0"/>
</C>
<C c="3" r="3" s="2">
<O t="DSColumn">
<Attributes dsName="ds1" columnName="COL03"/>
<Complex/>
<RG class="com.fr.report.cell.cellattr.core.group.FunctionGrouper"/>
<Parameters/>
</O>
<PrivilegeControl/>
<Expand dir="0"/>
</C>
<C c="4" r="3" s="2">
<O t="DSColumn">
<Attributes dsName="ds1" columnName="COL04"/>
<Complex/>
<RG class="com.fr.report.cell.cellattr.core.group.FunctionGrouper"/>
<Parameters/>
</O>
<PrivilegeControl/>
<Expand dir="0"/>
</C>
<C c="5" r="3" s="2">
<O t="DSColumn">
<Attributes dsName="ds1" columnName="COL05"/>
<Complex/>
<RG class="com.fr.report.cell.cellattr.core.group.FunctionGrouper"/>
<Parameters/>
</O>
<PrivilegeControl/>
<Expand dir="0"/>
</C>
<C c="6" r="3" s="2">
<O t="DSColumn">
<Attributes dsName="ds1" columnName="COL06"/>
<Complex/>
<RG class="com.fr.report.cell.cellattr.core.group.FunctionGrouper"/>
<Parameters/>
</O>
<PrivilegeControl/>
<Expand dir="0"/>
</C>
<C c="7" r="3" s="2">
<O t="DSColumn">
<Attributes dsName="ds1" columnName="COL07"/>
<Complex/>
<RG class="com.fr.report.cell.cellattr.core.group.FunctionGrouper"/>
<Parameters/>
</O>
<PrivilegeControl/>
<Expand dir="0"/>
</C>
<C c="8" r="3" s="2">
<O t="DSColumn">
<Attributes dsName="ds1" columnName="COL08"/>
<Complex/>
<RG class="com.fr.report.cell.cellattr.core.group.FunctionGrouper"/>
<Parameters/>
</O>
<PrivilegeControl/>
<Expand dir="0"/>
</C>
<C c="9" r="3" s="2">
<O t="DSColumn">
<Attributes dsName="ds1" columnName="COL09"/>
<Complex/>
<RG class="com.fr.report.cell.cellattr.core.group.FunctionGrouper"/>
<Parameters/>
</O>
<PrivilegeControl/>
<Expand dir="0"/>
</C>
<C c="10" r="3" s="2">
<O t="DSColumn">
<Attributes dsName="ds1" columnName="COL10"/>
<Complex/>
<RG class="com.fr.report.cell.cellattr.core.group.FunctionGrouper"/>
<Parameters/>
</O>
<PrivilegeControl/>
<Expand dir="0"/>
</C>
<C c="11" r="3" s="2">
<O t="DSColumn">
<Attributes dsName="ds1" columnName="COL11"/>
<Complex/>
<RG class="com.fr.report.cell.cellattr.core.group.FunctionGrouper"/>
<Parameters/>
</O>
<PrivilegeControl/>
<Expand dir="0"/>
</C>
<C c="12" r="3" s="2">
<O t="DSColumn">
<Attributes dsName="ds1" columnName="COL12"/>
<Complex/>
<RG class="com.fr.report.cell.cellattr.core.group.FunctionGrouper"/>
<Parameters/>
</O>
<PrivilegeControl/>
<Expand dir="0"/>
</C>
<C c="13" r="3" s="2">
<O t="DSColumn">
<Attributes dsName="ds1" columnName="COL13"/>
<Complex/>
<RG class="com.fr.report.cell.cellattr.core.group.FunctionGrouper"/>
<Parameters/>
</O>
<PrivilegeControl/>
<Expand dir="0"/>
</C>
<C c="14" r="3" s="2">
<O t="DSColumn">
<Attributes dsName="ds1" columnName="COL14"/>
<Complex/>
<RG class="com.fr.report.cell.cellattr.core.group.FunctionGrouper"/>
<Parameters/>
</O>
<PrivilegeControl/>
<Expand dir="0"/>
</C>
<C c="15" r="3" s="2">
<O t="DSColumn">
<Attributes dsName="ds1" columnName="COL15"/>
<Complex/>
<RG class="com.fr.report.cell.cellattr.core.group.FunctionGrouper"/>
<Parameters/>
</O>
<PrivilegeControl/>
<Expand dir="0"/>
</C>
<C c="16" r="3" s="2">
<O t="DSColumn">
<Attributes dsName="ds1" columnName="COL16"/>
<Complex/>
<RG class="com.fr.report.cell.cellattr.core.group.FunctionGrouper"/>
<Parameters/>
</O>
<PrivilegeControl/>
<Expand dir="0"/>
</C>
<C c="17" r="3" s="2">
<O t="DSColumn">
<Attributes dsName="ds1" columnName="COL17"/>
<Complex/>
<RG class="com.fr.report.cell.cellattr.core.group.FunctionGrouper"/>
<Parameters/>
</O>
<PrivilegeControl/>
<Expand dir="0"/>
</C>
<C c="18" r="3" s="2">
<O t="DSColumn">
<Attributes dsName="ds1" columnName="COL18"/>
<Complex/>
<RG class="com.fr.report.cell.cellattr.core.group.FunctionGrouper"/>
<Parameters/>
</O>
<PrivilegeControl/>
<Expand dir="0"/>
</C>
<C c="19" r="3" s="2">
<O t="DSColumn">
<Attributes dsName="ds1" columnName="COL19"/>
<Complex/>
<RG class="com.fr.report.cell.cellattr.core.group.FunctionGrouper"/>
<Parameters/>
</O>
<PrivilegeControl/>
<Expand dir="0"/>
</C>
<C c="20" r="3" s="2">
<O t="DSColumn">
<Attributes dsName="ds1" columnName="COL20"/>
<Complex/>
<RG class="com.fr.report.cell.cellattr.core.group.FunctionGrouper"/>
<Parameters/>
</O>
<PrivilegeControl/>
<Expand dir="0"/>
</C>
<C c="21" r="3" s="2">
<O t="DSColumn">
<Attributes dsName="ds1" columnName="COL21"/>
<Complex/>
<RG class="com.fr.report.cell.cellattr.core.group.FunctionGrouper"/>
<Parameters/>
</O>
<PrivilegeControl/>
<Expand dir="0"/>
</C>
<C c="22" r="3" s="2">
<O t="DSColumn">
<Attributes dsName="ds1" columnName="COL22"/>
<Complex/>
<RG class="com.fr.report.cell.cellattr.core.group.FunctionGrouper"/>
<Parameters/>
</O>
<PrivilegeControl/>
<Expand dir="0"/>
</C>
<C c="23" r="3" s="2">
<O t="DSColumn">
<Attributes dsName="ds1" columnName="COL23"/>
<Complex/>
<RG class="com.fr.report.cell.cellattr.core.group.FunctionGrouper"/>
<Parameters/>
</O>
<PrivilegeControl/>
<Expand dir="0"/>
</C>
<C c="24" r="3" s="2">
<O t="DSColumn">
<Attributes dsName="ds1" columnName="COL24"/>
<Complex/>
<RG class="com.fr.report.cell.cellattr.core.group.FunctionGrouper"/>
<Parameters/>
</O>
<PrivilegeControl/>
<Expand dir="0"/>
</C>
<C c="25" r="3" s="2">
<O t="DSColumn">
<Attributes dsName="ds1" columnName="COL25"/>
<Complex/>
<RG class="com.fr.report.cell.cellattr.core.group.FunctionGrouper"/>
<Parameters/>
</O>
<PrivilegeControl/>
<Expand dir="0"/>
</C>
<C c="26" r="3" s="2">
<O t="DSColumn">
<Attributes dsName="ds1" columnName="COL26"/>
<Complex/>
<RG class="com.fr.report.cell.cellattr.core.group.FunctionGrouper"/>
<Parameters/>
</O>
<PrivilegeControl/>
<Expand dir="0"/>
</C>
<C c="27" r="3" s="2">
<O t="DSColumn">
<Attributes dsName="ds1" columnName="COL27"/>
<Complex/>
<RG class="com.fr.report.cell.cellattr.core.group.FunctionGrouper"/>
<Parameters/>
</O>
<PrivilegeControl/>
<Expand dir="0"/>
</C>
<C c="28" r="3" s="2">
<O t="DSColumn">
<Attributes dsName="ds1" columnName="COL28"/>
<Complex/>
<RG class="com.fr.report.cell.cellattr.core.group.FunctionGrouper"/>
<Parameters/>
</O>
<PrivilegeControl/>
<Expand dir="0"/>
</C>
<C c="29" r="3" s="2">
<O t="DSColumn">
<Attributes dsName="ds1" columnName="COL29"/>
<Complex/>
<RG class="com.fr.report.cell.cellattr.core.group.FunctionGrouper"/>
<Parameters/>
</O>
<PrivilegeControl/>
<Expand dir="0"/>
</C>
<C c="30" r="3" s="2">
<O t="DSColumn">
<Attributes dsName="ds1" columnName="COL30"/>
<Complex/>
<RG class="com.fr.report.cell.cellattr.core.group.FunctionGrouper"/>
<Parameters/>
</O>
<PrivilegeControl/>
<Expand dir="0"/>
</C>
<C c="31" r="3" s="2">
<O t="DSColumn">
<Attributes dsName="ds1" columnName="COL31"/>
<Complex/>
<RG class="com.fr.report.cell.cellattr.core.group.FunctionGrouper"/>
<Parameters/>
</O>
<PrivilegeControl/>
<Expand dir="0"/>
</C>
<C c="32" r="3" s="2">
<O t="DSColumn">
<Attributes dsName="ds1" columnName="COL32"/>
<Complex/>
<RG class="com.fr.report.cell.cellattr.core.group.FunctionGrouper"/>
<Parameters/>
</O>
<PrivilegeControl/>
<Expand dir="0"/>
</C>
<C c="33" r="3" s="2">
<O t="DSColumn">
<Attributes dsName="ds1" columnName="COL33"/>
<Complex/>
<RG class="com.fr.report.cell.cellattr.core.group.FunctionGrouper"/>
<Parameters/>
</O>
<PrivilegeControl/>
<Expand dir="0"/>
</C>
<C c="34" r="3" s="2">
<O t="DSColumn">
<Attributes dsName="ds1" columnName="COL34"/>
<Complex/>
<RG class="com.fr.report.cell.cellattr.core.group.FunctionGrouper"/>
<Parameters/>
</O>
<PrivilegeControl/>
<Expand dir="0"/>
</C>
<C c="35" r="3" s="2">
<O t="DSColumn">
<Attributes dsName="ds1" columnName="COL35"/>
<Complex/>
<RG class="com.fr.report.cell.cellattr.core.group.FunctionGrouper"/>
<Parameters/>
</O>
<PrivilegeControl/>
<Expand dir="0"/>
</C>
<C c="36" r="3" s="2">
<O t="DSColumn">
<Attributes dsName="ds1" columnName="COL62"/>
<Complex/>
<RG class="com.fr.report.cell.cellattr.core.group.FunctionGrouper"/>
<Parameters/>
</O>
<PrivilegeControl/>
<Expand dir="0"/>
</C>
<C c="37" r="3" s="2">
<O t="DSColumn">
<Attributes dsName="ds1" columnName="COL36"/>
<Complex/>
<RG class="com.fr.report.cell.cellattr.core.group.FunctionGrouper"/>
<Parameters/>
</O>
<PrivilegeControl/>
<Expand dir="0"/>
</C>
<C c="38" r="3" s="2">
<O t="DSColumn">
<Attributes dsName="ds1" columnName="COL37"/>
<Complex/>
<RG class="com.fr.report.cell.cellattr.core.group.FunctionGrouper"/>
<Parameters/>
</O>
<PrivilegeControl/>
<Expand dir="0"/>
</C>
<C c="39" r="3" s="2">
<O t="DSColumn">
<Attributes dsName="ds1" columnName="COL38"/>
<Complex/>
<RG class="com.fr.report.cell.cellattr.core.group.FunctionGrouper"/>
<Parameters/>
</O>
<PrivilegeControl/>
<Expand dir="0"/>
</C>
<C c="40" r="3" s="2">
<O t="DSColumn">
<Attributes dsName="ds1" columnName="COL39"/>
<Complex/>
<RG class="com.fr.report.cell.cellattr.core.group.FunctionGrouper"/>
<Parameters/>
</O>
<PrivilegeControl/>
<Expand dir="0"/>
</C>
<C c="41" r="3" s="2">
<O t="DSColumn">
<Attributes dsName="ds1" columnName="COL40"/>
<Complex/>
<RG class="com.fr.report.cell.cellattr.core.group.FunctionGrouper"/>
<Parameters/>
</O>
<PrivilegeControl/>
<Expand dir="0"/>
</C>
<C c="42" r="3" s="2">
<O t="DSColumn">
<Attributes dsName="ds1" columnName="COL41"/>
<Complex/>
<RG class="com.fr.report.cell.cellattr.core.group.FunctionGrouper"/>
<Parameters/>
</O>
<PrivilegeControl/>
<Expand dir="0"/>
</C>
<C c="43" r="3" s="2">
<O t="DSColumn">
<Attributes dsName="ds1" columnName="COL42"/>
<Complex/>
<RG class="com.fr.report.cell.cellattr.core.group.FunctionGrouper"/>
<Parameters/>
</O>
<PrivilegeControl/>
<Expand dir="0"/>
</C>
<C c="44" r="3" s="2">
<O t="DSColumn">
<Attributes dsName="ds1" columnName="COL43"/>
<Complex/>
<RG class="com.fr.report.cell.cellattr.core.group.FunctionGrouper"/>
<Parameters/>
</O>
<PrivilegeControl/>
<Expand dir="0"/>
</C>
<C c="45" r="3" s="2">
<O t="DSColumn">
<Attributes dsName="ds1" columnName="COL44"/>
<Complex/>
<RG class="com.fr.report.cell.cellattr.core.group.FunctionGrouper"/>
<Parameters/>
</O>
<PrivilegeControl/>
<Expand dir="0"/>
</C>
<C c="46" r="3" s="2">
<O t="DSColumn">
<Attributes dsName="ds1" columnName="COL45"/>
<Complex/>
<RG class="com.fr.report.cell.cellattr.core.group.FunctionGrouper"/>
<Parameters/>
</O>
<PrivilegeControl/>
<Expand dir="0"/>
</C>
<C c="47" r="3" s="2">
<O t="DSColumn">
<Attributes dsName="ds1" columnName="COL46"/>
<Complex/>
<RG class="com.fr.report.cell.cellattr.core.group.FunctionGrouper"/>
<Parameters/>
</O>
<PrivilegeControl/>
<Expand dir="0"/>
</C>
<C c="48" r="3" s="2">
<O t="DSColumn">
<Attributes dsName="ds1" columnName="COL47"/>
<Complex/>
<RG class="com.fr.report.cell.cellattr.core.group.FunctionGrouper"/>
<Parameters/>
</O>
<PrivilegeControl/>
<Expand dir="0"/>
</C>
<C c="49" r="3" s="2">
<O t="DSColumn">
<Attributes dsName="ds1" columnName="COL48"/>
<Complex/>
<RG class="com.fr.report.cell.cellattr.core.group.FunctionGrouper"/>
<Parameters/>
</O>
<PrivilegeControl/>
<Expand dir="0"/>
</C>
<C c="50" r="3" s="2">
<O t="DSColumn">
<Attributes dsName="ds1" columnName="COL49"/>
<Complex/>
<RG class="com.fr.report.cell.cellattr.core.group.FunctionGrouper"/>
<Parameters/>
</O>
<PrivilegeControl/>
<Expand dir="0"/>
</C>
<C c="51" r="3" s="2">
<O t="DSColumn">
<Attributes dsName="ds1" columnName="COL50"/>
<Complex/>
<RG class="com.fr.report.cell.cellattr.core.group.FunctionGrouper"/>
<Parameters/>
</O>
<PrivilegeControl/>
<Expand dir="0"/>
</C>
<C c="52" r="3" s="2">
<O t="DSColumn">
<Attributes dsName="ds1" columnName="COL51"/>
<Complex/>
<RG class="com.fr.report.cell.cellattr.core.group.FunctionGrouper"/>
<Parameters/>
</O>
<PrivilegeControl/>
<Expand dir="0"/>
</C>
<C c="53" r="3" s="2">
<O t="DSColumn">
<Attributes dsName="ds1" columnName="COL52"/>
<Complex/>
<RG class="com.fr.report.cell.cellattr.core.group.FunctionGrouper"/>
<Parameters/>
</O>
<PrivilegeControl/>
<Expand dir="0"/>
</C>
<C c="54" r="3" s="2">
<O t="DSColumn">
<Attributes dsName="ds1" columnName="COL53"/>
<Complex/>
<RG class="com.fr.report.cell.cellattr.core.group.FunctionGrouper"/>
<Parameters/>
</O>
<PrivilegeControl/>
<Expand dir="0"/>
</C>
<C c="55" r="3" s="2">
<O t="DSColumn">
<Attributes dsName="ds1" columnName="COL54"/>
<Complex/>
<RG class="com.fr.report.cell.cellattr.core.group.FunctionGrouper"/>
<Parameters/>
</O>
<PrivilegeControl/>
<Expand dir="0"/>
</C>
<C c="56" r="3" s="2">
<O t="DSColumn">
<Attributes dsName="ds1" columnName="COL55"/>
<Complex/>
<RG class="com.fr.report.cell.cellattr.core.group.FunctionGrouper"/>
<Parameters/>
</O>
<PrivilegeControl/>
<Expand dir="0"/>
</C>
<C c="57" r="3" s="2">
<O t="DSColumn">
<Attributes dsName="ds1" columnName="COL56"/>
<Complex/>
<RG class="com.fr.report.cell.cellattr.core.group.FunctionGrouper"/>
<Parameters/>
</O>
<PrivilegeControl/>
<Expand dir="0"/>
</C>
<C c="58" r="3" s="2">
<O t="DSColumn">
<Attributes dsName="ds1" columnName="COL57"/>
<Complex/>
<RG class="com.fr.report.cell.cellattr.core.group.FunctionGrouper"/>
<Parameters/>
</O>
<PrivilegeControl/>
<Expand dir="0"/>
</C>
<C c="59" r="3" s="2">
<O t="DSColumn">
<Attributes dsName="ds1" columnName="COL58"/>
<Complex/>
<RG class="com.fr.report.cell.cellattr.core.group.FunctionGrouper"/>
<Parameters/>
</O>
<PrivilegeControl/>
<Expand dir="0"/>
</C>
<C c="60" r="3" s="2">
<O t="DSColumn">
<Attributes dsName="ds1" columnName="COL59"/>
<Complex/>
<RG class="com.fr.report.cell.cellattr.core.group.FunctionGrouper"/>
<Parameters/>
</O>
<PrivilegeControl/>
<Expand dir="0"/>
</C>
<C c="61" r="3" s="2">
<O t="DSColumn">
<Attributes dsName="ds1" columnName="COL60"/>
<Complex/>
<RG class="com.fr.report.cell.cellattr.core.group.FunctionGrouper"/>
<Parameters/>
</O>
<PrivilegeControl/>
<Expand dir="0"/>
</C>
<C c="62" r="3" s="2">
<O t="DSColumn">
<Attributes dsName="ds1" columnName="COL61"/>
<Complex/>
<RG class="com.fr.report.cell.cellattr.core.group.FunctionGrouper"/>
<Parameters/>
</O>
<PrivilegeControl/>
<Expand dir="0"/>
</C>
</CellElementList>
<ReportAttrSet>
<ReportSettings headerHeight="0" footerHeight="0">
<PaperSetting orientation="1">
<PaperSize width="36288000" height="298080000"/>
<Margin top="432000" left="432000" bottom="432000" right="432000"/>
</PaperSetting>
</ReportSettings>
<Header reportPageType="0">
<Background name="NullBackground"/>
<LeftList/>
<CenterList/>
<RightList/>
</Header>
<Footer reportPageType="0">
<Background name="NullBackground"/>
<LeftList/>
<CenterList/>
<RightList/>
</Footer>
</ReportAttrSet>
<PrivilegeControl/>
</Report>
<ReportParameterAttr>
<Attributes showWindow="true" delayPlaying="true" windowPosition="1" align="0" useParamsTemplate="false"/>
<PWTitle>
<![CDATA[매개변수]]></PWTitle>
</ReportParameterAttr>
<StyleList>
<Style horizontal_alignment="0" imageLayout="1">
<FRFont name="Microsoft YaHei UI" style="0" size="72" foreground="-1"/>
<Background name="ColorBackground" color="-11561760"/>
<Border>
<Top style="1" color="-3352093"/>
<Bottom style="1" color="-3352093"/>
<Left style="1" color="-3352093"/>
<Right style="1" color="-3352093"/>
</Border>
</Style>
<Style horizontal_alignment="0" imageLayout="1">
<FRFont name="Verdana" style="0" size="72" foreground="-10855846"/>
<Background name="ColorBackground" color="-986896"/>
<Border>
<Top style="5" color="-1"/>
<Bottom style="5" color="-1"/>
<Left style="5" color="-1"/>
<Right style="5" color="-1"/>
</Border>
</Style>
<Style horizontal_alignment="4" imageLayout="1">
<Format class="com.fr.base.CoreDecimalFormat">
<![CDATA[#,##0.00]]></Format>
<FRFont name="Verdana" style="0" size="72" foreground="-10855846"/>
<Background name="ColorBackground" color="-986896"/>
<Border>
<Top style="5" color="-1"/>
<Bottom style="5" color="-1"/>
<Left style="5" color="-1"/>
<Right style="5" color="-1"/>
</Border>
</Style>
<Style horizontal_alignment="2" imageLayout="1">
<FRFont name="Verdana" style="0" size="72" foreground="-10855846"/>
<Background name="ColorBackground" color="-986896"/>
<Border>
<Top style="5" color="-1"/>
<Bottom style="5" color="-1"/>
<Left style="5" color="-1"/>
<Right style="5" color="-1"/>
</Border>
</Style>
</StyleList>
<DesignerVersion DesignerVersion="JAA"/>
<PreviewType PreviewType="0"/>
<TemplateID/>
<TemplateIdAttMark class="com.fr.base.iofileattr.TemplateIdAttrMark">
<TemplateIdAttMark TemplateId="4217bcb2-4061-4e21-923e-29a5ab49ba2e"/>
</TemplateIdAttMark>
</WorkBook>
