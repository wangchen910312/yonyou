<?xml version="1.0" encoding="UTF-8"?>
<WorkBook xmlVersion="20170720" releaseVersion="9.0.0">
<TableDataMap>
<TableData name="selectSerPrdAmtFosterTpDs" class="com.fr.data.impl.DBTableData">
<Parameters>
<Parameter>
<Attributes name="sStartYyMmDd"/>
<O>
<![CDATA[20181201]]></O>
</Parameter>
<Parameter>
<Attributes name="sCarlineCd"/>
<O>
<![CDATA[]]></O>
</Parameter>
<Parameter>
<Attributes name="sEndYyMmDd"/>
<O>
<![CDATA[20181225]]></O>
</Parameter>
<Parameter>
<Attributes name="sFosterTp"/>
<O>
<![CDATA[]]></O>
</Parameter>
<Parameter>
<Attributes name="sDlrCd"/>
<O>
<![CDATA[D2901]]></O>
</Parameter>
<Parameter>
<Attributes name="sDlrRoTp"/>
<O>
<![CDATA[]]></O>
</Parameter>
</Parameters>
<Attributes maxMemRowCount="-1"/>
<Connection class="com.fr.data.impl.NameDatabaseConnection">
<DatabaseName>
<![CDATA[BHDMS]]></DatabaseName>
</Connection>
<Query>
<![CDATA[-- 서비스생산액 : 위탁유형별
SELECT COLUMN_SEQ
       ,COLUMN_NM
       ,NVL(RO01, 0) AS RO01
       ,NVL(RO02, 0) AS RO02
       ,NVL(RO03, 0) AS RO03
       ,NVL(RO04, 0) AS RO04
       ,NVL(RO05, 0) AS RO05
FROM (
    SELECT RO_TP, COLUMN_SEQ, COLUMN_NM, COLUMN_VAL, VAL_TYPE
    FROM (
        WITH T1 AS (
            SELECT *
            FROM (
                SELECT CA.DLR_CD
                       ,CA.VIN_NO
                       ,(SELECT CARLINE_CD FROM SA_0121T WHERE VIN_NO = CA.VIN_NO AND ROWNUM = 1) AS CARLINE_CD
                       ,(SELECT CASE WHEN CA.CALC_STAT_CD = '07'  THEN SUM(-1*NVL(PAYM_AMT, 0)) ELSE SUM(NVL(PAYM_AMT, 0)) END  FROM SE_0530T WHERE DLR_CD = CA.DLR_CD AND CALC_DOC_NO = CA.CALC_DOC_NO) AS PAYM_AMT
                       --,(SELECT SUM(NVL(PAYM_AMT, 0)) FROM SE_0530T WHERE DLR_CD = '${sDlrCd}' AND CALC_DOC_NO = CA.CALC_DOC_NO) AS PAYM_AMT
                       --,(SELECT SUM(NVL(WON_UNIT_CUT_AMT, 0)) FROM SE_0530T WHERE DLR_CD = '${sDlrCd}' AND CALC_DOC_NO = CA.CALC_DOC_NO) AS WON_UNIT_CUT_AMT
                        ,CASE WHEN CA.CALC_STAT_CD = '07'
                                THEN -1 * NVL((SELECT SUM(NVL(WON_UNIT_CUT_AMT, 0)) FROM SE_0530T WHERE DLR_CD = CA.DLR_CD AND CALC_DOC_NO = CA.CALC_DOC_NO),0)
                                ELSE NVL((SELECT SUM(NVL(WON_UNIT_CUT_AMT, 0)) FROM SE_0530T WHERE DLR_CD = CA.DLR_CD AND CALC_DOC_NO = CA.CALC_DOC_NO),0) END AS WON_UNIT_CUT_AMT   --结算取整金额 
                       --,(SELECT SUM(NVL(DEMIC_POINT_CUT_AMT, 0)) FROM SE_0530T WHERE DLR_CD = '${sDlrCd}' AND CALC_DOC_NO = CA.CALC_DOC_NO) AS DEMIC_POINT_CUT_AMT
                       ,CASE WHEN CA.CALC_STAT_CD = '07'
                                THEN -1 * NVL((SELECT SUM(NVL(DEMIC_POINT_CUT_AMT, 0)) FROM SE_0530T WHERE DLR_CD = CA.DLR_CD AND CALC_DOC_NO = CA.CALC_DOC_NO),0)
                                ELSE NVL((SELECT SUM(NVL(DEMIC_POINT_CUT_AMT, 0)) FROM SE_0530T WHERE DLR_CD = CA.DLR_CD AND CALC_DOC_NO = CA.CALC_DOC_NO),0) END AS DEMIC_POINT_CUT_AMT   --结算去零金额 
                       ,CA.RO_DOC_NO
                       ,CA.RO_TP
                       ,CA.CALC_DOC_NO
                       ,CA.CALC_STAT_CD
                       --,NVL(CA.LBR_CALC_AMT        ,0) AS LBR_CALC_AMT            --공임정산금액
                       ,CASE WHEN CA.CALC_STAT_CD = '07'
                                THEN -1 * NVL(CA.LBR_CALC_AMT,0)
                                ELSE NVL(CA.LBR_CALC_AMT,0) END AS LBR_CALC_AMT   --工时-结算金额
                       ,NVL(CA.LBR_DC_RATE         ,0) AS LBR_DC_RATE             --공임할인율
                       --,NVL(CA.LBR_DC_AMT          ,0) AS LBR_DC_AMT              --공임할인금액
                        ,CASE WHEN CA.CALC_STAT_CD = '07'
                                THEN -1 * NVL(CA.LBR_DC_AMT,0)
                                ELSE NVL(CA.LBR_DC_AMT,0) END AS LBR_DC_AMT   --工时-优惠金额 
                       --,NVL(CA.LBR_BM_POINT_USE_AMT,0) AS LBR_BM_POINT_USE_AMT    --공임BM포인트사용금액
                       ,CASE WHEN CA.CALC_STAT_CD = '07'
                                THEN -1 * NVL(CA.LBR_BM_POINT_USE_AMT,0)
                                ELSE NVL(CA.LBR_BM_POINT_USE_AMT,0) END AS LBR_BM_POINT_USE_AMT   --工时-蓝缤积分使用金额
                       --,NVL(CA.LBR_BM_CUPN_USE_AMT ,0) AS LBR_BM_CUPN_USE_AMT     --공임BM쿠폰사용금액
                       ,CASE WHEN CA.CALC_STAT_CD = '07'
                                THEN -1 * NVL(CA.LBR_BM_CUPN_USE_AMT,0)
                                ELSE NVL(CA.LBR_BM_CUPN_USE_AMT,0) END AS LBR_BM_CUPN_USE_AMT   --工时-蓝缤其他优惠金额
                       --,NVL(CA.LBR_POINT_USE_AMT   ,0) AS LBR_POINT_USE_AMT       --공임포인트사용금액
                        ,CASE WHEN CA.CALC_STAT_CD = '07'
                                THEN -1 * NVL(CA.LBR_POINT_USE_AMT,0)
                                ELSE NVL(CA.LBR_POINT_USE_AMT,0) END AS LBR_POINT_USE_AMT   --工时-积分使用金额
                       --,NVL(CA.LBR_ETC_DC_AMT      ,0) AS LBR_ETC_DC_AMT          --공임기타할인금액
                       ,CASE WHEN CA.CALC_STAT_CD = '07'
                                THEN -1 * NVL(CA.LBR_ETC_DC_AMT,0)
                                ELSE NVL(CA.LBR_ETC_DC_AMT,0) END AS LBR_ETC_DC_AMT   --工时-其他优惠金额 
                       --,NVL(CA.LBR_CALC_SUM_AMT    ,0) AS LBR_CALC_SUM_AMT        --공임정산합계금액
                       ,CASE WHEN CA.CALC_STAT_CD = '07'
                                THEN -1 * NVL(CA.LBR_CALC_SUM_AMT,0)
                                ELSE NVL(CA.LBR_CALC_SUM_AMT,0) END AS LBR_CALC_SUM_AMT   --工时-最终结算金额
                       --,NVL(CA.PAR_CALC_AMT        ,0) AS PAR_CALC_AMT            --부품정산금액
                       ,CASE WHEN CA.CALC_STAT_CD = '07'
                                THEN -1 * NVL(CA.PAR_CALC_AMT,0)
                                ELSE NVL(CA.PAR_CALC_AMT,0) END AS PAR_CALC_AMT   --配件-结算金额 
                       ,NVL(CA.PAR_DC_RATE         ,0) AS PAR_DC_RATE             --부품할인율
                       --,NVL(CA.PAR_DC_AMT          ,0) AS PAR_DC_AMT              --부품할인금액
                       ,CASE WHEN CA.CALC_STAT_CD = '07'
                                THEN -1 * NVL(CA.PAR_DC_AMT,0)
                                ELSE NVL(CA.PAR_DC_AMT,0) END AS PAR_DC_AMT   --配件-优惠金额 
                       --,NVL(CA.PAR_BM_POINT_USE_AMT,0) AS PAR_BM_POINT_USE_AMT    --부품BM포인트사용금액
                        ,CASE WHEN CA.CALC_STAT_CD = '07'
                                THEN -1 * NVL(CA.PAR_BM_POINT_USE_AMT,0)
                                ELSE NVL(CA.PAR_BM_POINT_USE_AMT,0) END AS PAR_BM_POINT_USE_AMT   --配件-蓝缤积分使用金额 
                       --,NVL(CA.PAR_BM_CUPN_USE_AMT ,0) AS PAR_BM_CUPN_USE_AMT     --부품BM쿠폰사용금액
                       ,CASE WHEN CA.CALC_STAT_CD = '07'
                                THEN -1 * NVL(CA.PAR_BM_CUPN_USE_AMT,0)
                                ELSE NVL(CA.PAR_BM_CUPN_USE_AMT,0) END AS PAR_BM_CUPN_USE_AMT   --配件-蓝缤其他优惠金额
                       --,NVL(CA.PAR_POINT_USE_AMT   ,0) AS PAR_POINT_USE_AMT       --부품포인트사용금액
                       ,CASE WHEN CA.CALC_STAT_CD = '07'
                                THEN -1 * NVL(CA.PAR_POINT_USE_AMT,0)
                                ELSE NVL(CA.PAR_POINT_USE_AMT,0) END AS PAR_POINT_USE_AMT   --配件-积分使用金额
                       --,NVL(CA.PAR_ETC_DC_AMT      ,0) AS PAR_ETC_DC_AMT          --부품기타할인금액
                       ,CASE WHEN CA.CALC_STAT_CD = '07'
                                THEN -1 * NVL(CA.PAR_ETC_DC_AMT,0)
                                ELSE NVL(CA.PAR_ETC_DC_AMT,0) END AS PAR_ETC_DC_AMT   --配件-其他优惠金额
                       --,NVL(CA.PAR_CALC_SUM_AMT    ,0) AS PAR_CALC_SUM_AMT        --부품정산합계금액
                       ,CASE WHEN CA.CALC_STAT_CD = '07'
                                THEN -1 * NVL(CA.PAR_CALC_SUM_AMT,0)
                                ELSE NVL(CA.PAR_CALC_SUM_AMT,0) END AS PAR_CALC_SUM_AMT   --配件-最终结算金额
                       ,NVL(CA.ETC_CALC_AMT        ,0) AS ETC_CALC_AMT            --기타정산금액
                       ,NVL(CA.ETC_DC_RATE         ,0) AS ETC_DC_RATE             --기타할인율
                       ,NVL(CA.ETC_DC_AMT          ,0) AS ETC_DC_AMT              --기타할인금액
                       ,NVL(CA.ETC_BM_POINT_USE_AMT,0) AS ETC_BM_POINT_USE_AMT    --기타BM포인트사용금액
                       ,NVL(CA.ETC_BM_CUPN_USE_AMT ,0) AS ETC_BM_CUPN_USE_AMT     --기타BM쿠폰사용금액
                       ,NVL(CA.ETC_POINT_USE_AMT   ,0) AS ETC_POINT_USE_AMT       --기타포인트사용금액
                       ,NVL(CA.ETC_OTHER_DC_AMT    ,0) AS ETC_OTHER_DC_AMT        --기타다른할인금액
                       --,NVL(CA.ETC_CALC_SUM_AMT    ,0) AS ETC_CALC_SUM_AMT        --기타정산합계금액
                       ,CASE WHEN CA.CALC_STAT_CD = '07'
                                THEN -1 * NVL(CA.ETC_CALC_SUM_AMT,0)
                                ELSE NVL(CA.ETC_CALC_SUM_AMT,0) END AS ETC_CALC_SUM_AMT   --其它-最终结算金额 
                       ,NVL(CA.CALC_TOT_AMT        ,0) AS CALC_TOT_AMT            --정산총금액
                       ,NVL(CA.DC_TOT_RATE         ,0) AS DC_TOT_RATE             --할인총율
                       ,NVL(CA.DC_TOT_AMT          ,0) AS DC_TOT_AMT              --할인총금액
                       
                       --,CASE WHEN (PAR_BM_POINT_USE_AMT <=0 AND LBR_BM_POINT_USE_AMT <=0)
                       --    THEN BM_POINT_TOT_AMT ELSE 0 END AS BM_POINT_TOT_AMT       --BM포인트총금액
                       ,CASE WHEN CA.CALC_STAT_CD = '07'
                                THEN -1 * NVL(BM_POINT_TOT_AMT,0)ELSE BM_POINT_TOT_AMT END AS BM_POINT_TOT_AMT
                                
                       --,CASE WHEN (PAR_BM_CUPN_USE_AMT <=0 AND LBR_BM_CUPN_USE_AMT <=0)
                       --      THEN BM_CUPN_TOT_AMT ELSE 0 END AS BM_CUPN_TOT_AMT         --BM쿠폰총금액
                        ,CASE WHEN CA.CALC_STAT_CD = '07'
                                THEN -1 * NVL(BM_CUPN_TOT_AMT,0)ELSE BM_CUPN_TOT_AMT END AS BM_CUPN_TOT_AMT
                        		
                       --,CASE WHEN (PAR_POINT_USE_AMT <=0 AND LBR_POINT_USE_AMT <=0)
                       --      THEN POINT_TOT_AMT ELSE 0 END AS POINT_TOT_AMT             --포인트총금액
                       ,CASE WHEN CA.CALC_STAT_CD = '07'
                                THEN -1 * NVL(POINT_TOT_AMT,0)ELSE POINT_TOT_AMT END AS POINT_TOT_AMT
                        
                       --,CASE WHEN (PAR_ETC_DC_AMT <=0 AND LBR_ETC_DC_AMT <=0)
                       --      THEN ETC_TOT_AMT ELSE 0 END AS ETC_TOT_AMT                 --포인트총금액
                       ,CASE WHEN CA.CALC_STAT_CD = '07'
                                THEN -1 * NVL(ETC_TOT_AMT,0)ELSE ETC_TOT_AMT END AS ETC_TOT_AMT
                       
                       --,NVL(CA.LAST_CALC_TOT_AMT   ,0) AS LAST_CALC_TOT_AMT       --최종정산총금액
                       ,CASE WHEN CA.CALC_STAT_CD = '07'
                                THEN -1 * NVL(CA.LAST_CALC_TOT_AMT,0)
                                ELSE NVL(CA.LAST_CALC_TOT_AMT,0) END AS LAST_CALC_TOT_AMT --最终结算金额
                       ,TO_CHAR(CALC_DT,'MM') AS CALC_MM
                       ,(SELECT DLR_RO_TP FROM SE_0300T WHERE DLR_CD = CA.DLR_CD AND RO_DOC_NO = CA.RO_DOC_NO) AS DLR_RO_TP
               /** FROM SE_0500T CA
                WHERE CA.DLR_CD = '${sDlrCd}'
                AND CA.CALC_CANC_YN = 'N'
                AND CA.CALC_STAT_CD = '00'
                **/
                 FROM SE_0500T CA, SE_0300T B
                              WHERE CA.DLR_CD    = B.DLR_CD
                                AND CA.RO_DOC_NO = B.RO_DOC_NO
                                AND CA.RO_TP     = B.RO_TP
                                AND CA.DLR_CD    =  '${sDlrCd}'
                                 -- AND A.CALC_DT  >=  '2018-10-05'
                                -- AND A.CALC_DT  <  '2018-10-13'
                            AND CA.VIN_NO IS NOT NULL
                                AND CA.CALC_STAT_CD NOT IN ('03', '04')
                AND TO_CHAR(CA.CALC_DT,'YYYYMMDD') BETWEEN  '${sStartYyMmDd}' AND '${sEndYyMmDd}'
                AND SER_PAR_DSTIN_CD = 'SER'
                ${IF(LEN(sFosterTp) <= 0,""," AND NVL(CA.RO_TP, 'NONE')='" + sFosterTp + "'")}  --위탁유형
            ) WHERE 1=1
            ${IF(LEN(sCarlineCd) <= 0,""," AND NVL(CARLINE_CD, 'NONE')='" + sCarlineCd + "'")}  --차종
            ${IF(LEN(sDlrRoTp) <= 0,""," AND NVL(DLR_RO_TP, 'NONE')='" + sDlrRoTp + "'")}
        )
        SELECT RO_TP , 1 AS COLUMN_SEQ , '工时-最终结算金额' AS COLUMN_NM , SUM(NVL(LBR_CALC_SUM_AMT,0)) AS COLUMN_VAL, 'A' AS VAL_TYPE
        FROM T1
        GROUP BY RO_TP    --공임최종정산금액
        UNION ALL
        SELECT '00' AS RO_TP , 1 AS COLUMN_SEQ , '工时-最终结算金额' AS COLUMN_NM , 0 AS COLUMN_VAL, 'A' AS VAL_TYPE
        FROM DUAL

        UNION ALL

        SELECT RO_TP , 2 AS COLUMN_SEQ , '    工时-结算金额' AS COLUMN_NM , SUM(NVL(LBR_CALC_AMT,0)) AS COLUMN_VAL, 'A' AS VAL_TYPE
        FROM T1
        GROUP BY RO_TP    --공임정산금액
        UNION ALL
        SELECT '00' AS RO_TP , 2 AS COLUMN_SEQ , '    工时-结算金额' AS COLUMN_NM , 0 AS COLUMN_VAL, 'A' AS VAL_TYPE
        FROM DUAL

        UNION ALL

        SELECT RO_TP , 3 AS COLUMN_SEQ , '    工时-优惠金额' AS COLUMN_NM , SUM(NVL(LBR_DC_AMT,0)) AS COLUMN_VAL, 'A' AS VAL_TYPE
        FROM T1
        GROUP BY RO_TP    --공임할인금액
        UNION ALL
        SELECT '00' AS RO_TP , 3 AS COLUMN_SEQ , '    工时-优惠金额' AS COLUMN_NM , 0 AS COLUMN_VAL, 'A' AS VAL_TYPE
        FROM DUAL

        UNION ALL

        SELECT RO_TP , 4 AS COLUMN_SEQ , '    工时-积分使用金额' AS COLUMN_NM , SUM(NVL(LBR_POINT_USE_AMT,0)) AS COLUMN_VAL, 'A' AS VAL_TYPE
        FROM T1
        GROUP BY RO_TP    --공임포인트사용금액
        UNION ALL
        SELECT '00' AS RO_TP , 4 AS COLUMN_SEQ , '    工时-积分使用金额' AS COLUMN_NM , 0 AS COLUMN_VAL, 'A' AS VAL_TYPE
        FROM DUAL

        UNION ALL

        SELECT RO_TP , 5 AS COLUMN_SEQ , '    工时-蓝缤积分使用金额' AS COLUMN_NM , SUM(NVL(LBR_BM_POINT_USE_AMT,0)) AS COLUMN_VAL, 'A' AS VAL_TYPE
        FROM T1
        GROUP BY RO_TP    --공임BM포인트사용금액
        UNION ALL
        SELECT '00' AS RO_TP , 5 AS COLUMN_SEQ , '    工时-蓝缤积分使用金额' AS COLUMN_NM , 0 AS COLUMN_VAL, 'A' AS VAL_TYPE
        FROM DUAL

        UNION ALL

        SELECT RO_TP , 6 AS COLUMN_SEQ , '    工时-蓝缤其他优惠金额' AS COLUMN_NM , SUM(NVL(LBR_BM_CUPN_USE_AMT,0)) AS COLUMN_VAL, 'A' AS VAL_TYPE
        FROM T1
        GROUP BY RO_TP    --공임BM쿠폰사용금액
        UNION ALL
        SELECT '00' AS RO_TP , 6 AS COLUMN_SEQ , '    工时-蓝缤其他优惠金额' AS COLUMN_NM , 0 AS COLUMN_VAL, 'A' AS VAL_TYPE
        FROM DUAL

        UNION ALL

        SELECT RO_TP , 7 AS COLUMN_SEQ , '    工时-其他优惠金额' AS COLUMN_NM , SUM(NVL(LBR_ETC_DC_AMT,0)) AS COLUMN_VAL, 'A' AS VAL_TYPE
        FROM T1
        GROUP BY RO_TP    --공임기타할인금액
        UNION ALL
        SELECT '00' AS RO_TP , 7 AS COLUMN_SEQ , '    工时-其他优惠金额' AS COLUMN_NM , 0 AS COLUMN_VAL, 'A' AS VAL_TYPE
        FROM DUAL

        UNION ALL

        SELECT RO_TP , 8 AS COLUMN_SEQ , '配件-最终结算金额' AS COLUMN_NM , SUM(NVL(PAR_CALC_SUM_AMT,0)) AS COLUMN_VAL, 'A' AS VAL_TYPE
        FROM T1
        GROUP BY RO_TP    --부품정산합계금액
        UNION ALL
        SELECT '00' AS RO_TP , 8 AS COLUMN_SEQ , '配件-最终结算金额' AS COLUMN_NM , 0 AS COLUMN_VAL, 'A' AS VAL_TYPE
        FROM DUAL

        UNION ALL

        SELECT RO_TP , 9 AS COLUMN_SEQ , '    配件-结算金额' AS COLUMN_NM , SUM(NVL(PAR_CALC_AMT,0)) AS COLUMN_VAL, 'A' AS VAL_TYPE
        FROM T1
        GROUP BY RO_TP    --부품정산금액
        UNION ALL
        SELECT '00' AS RO_TP , 9 AS COLUMN_SEQ , '    配件-结算金额' AS COLUMN_NM , 0 AS COLUMN_VAL, 'A' AS VAL_TYPE
        FROM DUAL

        UNION ALL

        SELECT RO_TP , 10 AS COLUMN_SEQ , '    配件-优惠金额' AS COLUMN_NM , SUM(NVL(PAR_DC_AMT,0)) AS COLUMN_VAL, 'A' AS VAL_TYPE
        FROM T1
        GROUP BY RO_TP    --부품할인금액
        UNION ALL
        SELECT '00' AS RO_TP , 10 AS COLUMN_SEQ , '    配件-优惠金额' AS COLUMN_NM , 0 AS COLUMN_VAL, 'A' AS VAL_TYPE
        FROM DUAL

        UNION ALL

        SELECT RO_TP , 11 AS COLUMN_SEQ , '    配件-积分使用金额' AS COLUMN_NM , SUM(NVL(PAR_POINT_USE_AMT,0)) AS COLUMN_VAL, 'A' AS VAL_TYPE
        FROM T1
        GROUP BY RO_TP    --부품포인트사용금액
        UNION ALL
        SELECT '00' AS RO_TP , 11 AS COLUMN_SEQ , '    配件-积分使用金额' AS COLUMN_NM , 0 AS COLUMN_VAL, 'A' AS VAL_TYPE
        FROM DUAL

        UNION ALL

        SELECT RO_TP , 12 AS COLUMN_SEQ , '    配件-蓝缤积分使用金额' AS COLUMN_NM , SUM(NVL(PAR_BM_POINT_USE_AMT,0)) AS COLUMN_VAL, 'A' AS VAL_TYPE
        FROM T1
        GROUP BY RO_TP    --부품BM포인트사용금액
        UNION ALL
        SELECT '00' AS RO_TP , 12 AS COLUMN_SEQ , '    配件-蓝缤积分使用金额' AS COLUMN_NM , 0 AS COLUMN_VAL, 'A' AS VAL_TYPE
        FROM DUAL

        UNION ALL

        SELECT RO_TP , 13 AS COLUMN_SEQ , '    配件-蓝缤其他优惠金额' AS COLUMN_NM , SUM(NVL(PAR_BM_CUPN_USE_AMT,0)) AS COLUMN_VAL, 'A' AS VAL_TYPE
        FROM T1
        GROUP BY RO_TP    --부품BM쿠폰사용금액
        UNION ALL
        SELECT '00' AS RO_TP , 13 AS COLUMN_SEQ , '    配件-蓝缤其他优惠金额' AS COLUMN_NM , 0 AS COLUMN_VAL, 'A' AS VAL_TYPE
        FROM DUAL

        UNION ALL

        SELECT RO_TP , 14 AS COLUMN_SEQ , '    配件-其他优惠金额' AS COLUMN_NM , SUM(NVL(PAR_ETC_DC_AMT,0)) AS COLUMN_VAL, 'A' AS VAL_TYPE
        FROM T1
        GROUP BY RO_TP    --부품기타할인금액
        UNION ALL
        SELECT '00' AS RO_TP , 14 AS COLUMN_SEQ , '    配件-其他优惠金额' AS COLUMN_NM , 0 AS COLUMN_VAL, 'A' AS VAL_TYPE
        FROM DUAL

        UNION ALL

        SELECT RO_TP , 15 AS COLUMN_SEQ , '其它-最终结算金额' AS COLUMN_NM , SUM(NVL(ETC_CALC_SUM_AMT,0)) AS COLUMN_VAL, 'A' AS VAL_TYPE
        FROM T1
        GROUP BY RO_TP    --기타정산합계금액
        UNION ALL
        SELECT '00' AS RO_TP , 15 AS COLUMN_SEQ , '其它-最终结算金额' AS COLUMN_NM , 0 AS COLUMN_VAL, 'A' AS VAL_TYPE
        FROM DUAL

        UNION ALL

        SELECT RO_TP , 16 AS COLUMN_SEQ , '维修费优惠金额-最终结算金额' AS COLUMN_NM , SUM(NVL(POINT_TOT_AMT + BM_POINT_TOT_AMT + ETC_TOT_AMT + BM_CUPN_TOT_AMT,0)) AS COLUMN_VAL, 'A' AS VAL_TYPE
        FROM T1
        GROUP BY RO_TP    --수리할인금액-최종정산금액
        UNION ALL
        SELECT '00' AS RO_TP , 16 AS COLUMN_SEQ , '维修费优惠金额-最终结算金额' AS COLUMN_NM , 0 AS COLUMN_VAL, 'A' AS VAL_TYPE
        FROM DUAL

        UNION ALL

        SELECT RO_TP , 17 AS COLUMN_SEQ , '    维修费优惠金额-积分使用' AS COLUMN_NM , SUM(NVL(POINT_TOT_AMT,0)) AS COLUMN_VAL, 'A' AS VAL_TYPE
        FROM T1
        GROUP BY RO_TP    --수리비 할인금액-포인트사용
        UNION ALL
        SELECT '00' AS RO_TP , 17 AS COLUMN_SEQ , '    维修费优惠金额-积分使用' AS COLUMN_NM , 0 AS COLUMN_VAL, 'A' AS VAL_TYPE
        FROM DUAL

        UNION ALL

        SELECT RO_TP , 18 AS COLUMN_SEQ , '    维修费优惠金额-蓝缤积分使用' AS COLUMN_NM , SUM(NVL(BM_POINT_TOT_AMT,0)) AS COLUMN_VAL, 'A' AS VAL_TYPE
        FROM T1
        GROUP BY RO_TP    --수리비 할인금액-BM포인트사용
        UNION ALL
        SELECT '00' AS RO_TP , 18 AS COLUMN_SEQ , '    维修费优惠金额-蓝缤积分使用' AS COLUMN_NM , 0 AS COLUMN_VAL, 'A' AS VAL_TYPE
        FROM DUAL

        UNION ALL

        SELECT RO_TP , 19 AS COLUMN_SEQ , '    维修费优惠金额-蓝缤其他优惠' AS COLUMN_NM , SUM(NVL(BM_CUPN_TOT_AMT,0)) AS COLUMN_VAL, 'A' AS VAL_TYPE
        FROM T1
        GROUP BY RO_TP    --수리비 할인금액-BM기타할인
        UNION ALL
        SELECT '00' AS RO_TP , 19 AS COLUMN_SEQ , '    维修费优惠金额-蓝缤其他优惠' AS COLUMN_NM , 0 AS COLUMN_VAL, 'A' AS VAL_TYPE
        FROM DUAL

        UNION ALL

        SELECT RO_TP , 20 AS COLUMN_SEQ , '    维修费优惠金额-其他优惠' AS COLUMN_NM , SUM(NVL(ETC_TOT_AMT,0)) AS COLUMN_VAL, 'A' AS VAL_TYPE
        FROM T1
        GROUP BY RO_TP    --수리비 할인금액-기타할인
        UNION ALL
        SELECT '00' AS RO_TP , 20 AS COLUMN_SEQ , '    维修费优惠金额-其他优惠' AS COLUMN_NM , 0 AS COLUMN_VAL, 'A' AS VAL_TYPE
        FROM DUAL

        UNION ALL

        SELECT RO_TP , 21 AS COLUMN_SEQ , '最终结算金额' AS COLUMN_NM , SUM(NVL(LAST_CALC_TOT_AMT,0)) AS COLUMN_VAL, 'A' AS VAL_TYPE
        FROM T1
        GROUP BY RO_TP    --최종정산금액
        UNION ALL
        SELECT '00' AS RO_TP , 21 AS COLUMN_SEQ , '最终结算金额' AS COLUMN_NM , 0 AS COLUMN_VAL, 'A' AS VAL_TYPE
        FROM DUAL --最终结算金额

        UNION ALL

        SELECT RO_TP , 22 AS COLUMN_SEQ , '结算取整金额' AS COLUMN_NM , SUM(NVL(WON_UNIT_CUT_AMT,0)) AS COLUMN_VAL, 'A' AS VAL_TYPE
        FROM T1
        GROUP BY RO_TP  --정산절사금액
        UNION ALL
        SELECT '00' AS RO_TP , 22 AS COLUMN_SEQ , '结算取整金额' AS COLUMN_NM , 0 AS COLUMN_VAL, 'A' AS VAL_TYPE
        FROM DUAL

        UNION ALL

        SELECT RO_TP , 23 AS COLUMN_SEQ , '结算去零金额' AS COLUMN_NM , SUM(NVL(DEMIC_POINT_CUT_AMT,0)) AS COLUMN_VAL, 'A' AS VAL_TYPE
        FROM T1
        GROUP BY RO_TP    --정산제로금액
        UNION ALL
        SELECT '00' AS RO_TP , 23 AS COLUMN_SEQ , '结算去零金额' AS COLUMN_NM , 0 AS COLUMN_VAL, 'A' AS VAL_TYPE
        FROM DUAL

        UNION ALL

        SELECT RO_TP , 24 AS COLUMN_SEQ , '维修产值（合计）' AS COLUMN_NM , SUM(NVL(PAYM_AMT,0)) AS COLUMN_VAL, 'A' AS VAL_TYPE
        FROM
        (
                SELECT *
                FROM (
                    SELECT CA.DLR_CD
                           ,CA.VIN_NO
                           ,(SELECT CARLINE_CD FROM SA_0121T WHERE VIN_NO = CA.VIN_NO AND ROWNUM = 1) AS CARLINE_CD
                           ,(SELECT CASE WHEN CA.CALC_STAT_CD = '07'  THEN SUM(-1*NVL(PAYM_AMT, 0)) ELSE SUM(NVL(PAYM_AMT, 0)) END  FROM SE_0530T WHERE DLR_CD = CA.DLR_CD AND CALC_DOC_NO = CA.CALC_DOC_NO) AS PAYM_AMT
                           ,(SELECT SUM(NVL(WON_UNIT_CUT_AMT, 0)) FROM SE_0530T WHERE DLR_CD = '${sDlrCd}' AND CALC_DOC_NO = CA.CALC_DOC_NO) AS WON_UNIT_CUT_AMT
                           ,(SELECT SUM(NVL(DEMIC_POINT_CUT_AMT, 0)) FROM SE_0530T WHERE DLR_CD = '${sDlrCd}' AND CALC_DOC_NO = CA.CALC_DOC_NO) AS DEMIC_POINT_CUT_AMT
                           ,CA.RO_DOC_NO
                           ,CA.RO_TP
                           ,CA.CALC_DOC_NO
                           ,CA.CALC_STAT_CD
                           ,NVL(CA.LBR_CALC_AMT        ,0) AS LBR_CALC_AMT            --공임정산금액
                           ,NVL(CA.LBR_DC_RATE         ,0) AS LBR_DC_RATE             --공임할인율
                           ,NVL(CA.LBR_DC_AMT          ,0) AS LBR_DC_AMT              --공임할인금액
                           ,NVL(CA.LBR_BM_POINT_USE_AMT,0) AS LBR_BM_POINT_USE_AMT    --공임BM포인트사용금액
                           ,NVL(CA.LBR_BM_CUPN_USE_AMT ,0) AS LBR_BM_CUPN_USE_AMT     --공임BM쿠폰사용금액
                           ,NVL(CA.LBR_POINT_USE_AMT   ,0) AS LBR_POINT_USE_AMT       --공임포인트사용금액
                           ,NVL(CA.LBR_ETC_DC_AMT      ,0) AS LBR_ETC_DC_AMT          --공임기타할인금액
                           ,NVL(CA.LBR_CALC_SUM_AMT    ,0) AS LBR_CALC_SUM_AMT        --공임정산합계금액
                           ,NVL(CA.PAR_CALC_AMT        ,0) AS PAR_CALC_AMT            --부품정산금액
                           ,NVL(CA.PAR_DC_RATE         ,0) AS PAR_DC_RATE             --부품할인율
                           ,NVL(CA.PAR_DC_AMT          ,0) AS PAR_DC_AMT              --부품할인금액
                           ,NVL(CA.PAR_BM_POINT_USE_AMT,0) AS PAR_BM_POINT_USE_AMT    --부품BM포인트사용금액
                           ,NVL(CA.PAR_BM_CUPN_USE_AMT ,0) AS PAR_BM_CUPN_USE_AMT     --부품BM쿠폰사용금액
                           ,NVL(CA.PAR_POINT_USE_AMT   ,0) AS PAR_POINT_USE_AMT       --부품포인트사용금액
                           ,NVL(CA.PAR_ETC_DC_AMT      ,0) AS PAR_ETC_DC_AMT          --부품기타할인금액
                           ,NVL(CA.PAR_CALC_SUM_AMT    ,0) AS PAR_CALC_SUM_AMT        --부품정산합계금액
                           ,NVL(CA.ETC_CALC_AMT        ,0) AS ETC_CALC_AMT            --기타정산금액
                           ,NVL(CA.ETC_DC_RATE         ,0) AS ETC_DC_RATE             --기타할인율
                           ,NVL(CA.ETC_DC_AMT          ,0) AS ETC_DC_AMT              --기타할인금액
                           ,NVL(CA.ETC_BM_POINT_USE_AMT,0) AS ETC_BM_POINT_USE_AMT    --기타BM포인트사용금액
                           ,NVL(CA.ETC_BM_CUPN_USE_AMT ,0) AS ETC_BM_CUPN_USE_AMT     --기타BM쿠폰사용금액
                           ,NVL(CA.ETC_POINT_USE_AMT   ,0) AS ETC_POINT_USE_AMT       --기타포인트사용금액
                           ,NVL(CA.ETC_OTHER_DC_AMT    ,0) AS ETC_OTHER_DC_AMT        --기타다른할인금액
                           ,NVL(CA.ETC_CALC_SUM_AMT    ,0) AS ETC_CALC_SUM_AMT        --기타정산합계금액
                           ,NVL(CA.CALC_TOT_AMT        ,0) AS CALC_TOT_AMT            --정산총금액
                           ,NVL(CA.DC_TOT_RATE         ,0) AS DC_TOT_RATE             --할인총율
                           ,NVL(CA.DC_TOT_AMT          ,0) AS DC_TOT_AMT              --할인총금액
                           ,CASE WHEN (PAR_BM_POINT_USE_AMT <=0 AND LBR_BM_POINT_USE_AMT <=0)
                                 THEN BM_POINT_TOT_AMT ELSE 0 END AS BM_POINT_TOT_AMT       --BM포인트총금액
                           ,CASE WHEN (PAR_BM_CUPN_USE_AMT <=0 AND LBR_BM_CUPN_USE_AMT <=0)
                                 THEN BM_CUPN_TOT_AMT ELSE 0 END AS BM_CUPN_TOT_AMT         --BM쿠폰총금액
                           ,CASE WHEN (PAR_POINT_USE_AMT <=0 AND LBR_POINT_USE_AMT <=0)
                                 THEN POINT_TOT_AMT ELSE 0 END AS POINT_TOT_AMT             --포인트총금액
                           ,CASE WHEN (PAR_ETC_DC_AMT <=0 AND LBR_ETC_DC_AMT <=0)
                                 THEN ETC_TOT_AMT ELSE 0 END AS ETC_TOT_AMT                 --포인트총금액
                           ,NVL(CA.LAST_CALC_TOT_AMT   ,0) AS LAST_CALC_TOT_AMT       --최종정산총금액
                           ,TO_CHAR(CALC_DT,'MM') AS CALC_MM
                           ,(SELECT DLR_RO_TP FROM SE_0300T WHERE DLR_CD = CA.DLR_CD AND RO_DOC_NO = CA.RO_DOC_NO) AS DLR_RO_TP
                   /** FROM SE_0500T CA
                    WHERE CA.DLR_CD = '${sDlrCd}'
                    AND TO_CHAR(CA.CALC_DT,'YYYYMMDD') BETWEEN  '${sStartYyMmDd}' AND '${sEndYyMmDd}'
                    AND (CA.CALC_STAT_CD = '00' OR  CA.CALC_STAT_CD = '07')
                    AND SER_PAR_DSTIN_CD = 'SER'**/
                     FROM SE_0500T CA, SE_0300T B
                              WHERE CA.DLR_CD    = B.DLR_CD
                                AND CA.RO_DOC_NO = B.RO_DOC_NO
                                AND CA.RO_TP     = B.RO_TP
                                AND CA.DLR_CD    =  '${sDlrCd}'
                                 -- AND A.CALC_DT  >=  '2018-10-05'
                                -- AND A.CALC_DT  <  '2018-10-13'
                            AND CA.VIN_NO IS NOT NULL
                                    AND CA.CALC_STAT_CD NOT IN ('03', '04')
                                    
                AND TO_CHAR(CA.CALC_DT,'YYYYMMDD') BETWEEN  '${sStartYyMmDd}' AND '${sEndYyMmDd}'
                AND SER_PAR_DSTIN_CD = 'SER'
                
                    ${IF(LEN(sFosterTp) <= 0,""," AND NVL(CA.RO_TP, 'NONE')='" + sFosterTp + "'")}  --위탁유형
                ) WHERE 1=1
                ${IF(LEN(sCarlineCd) <= 0,""," AND NVL(CARLINE_CD, 'NONE')='" + sCarlineCd + "'")}  --차종
                ${IF(LEN(sDlrRoTp) <= 0,""," AND NVL(DLR_RO_TP, 'NONE')='" + sDlrRoTp + "'")}
            )
        GROUP BY RO_TP    --수리생산액(합계)
        UNION ALL
        SELECT '00' AS RO_TP , 24 AS COLUMN_SEQ , '维修产值（合计）' AS COLUMN_NM , 0 AS COLUMN_VAL, 'A' AS VAL_TYPE
        FROM DUAL

        UNION ALL

        SELECT RO_TP , 25 AS COLUMN_SEQ , '    维修产值（非保修）' AS COLUMN_NM , SUM(NVL(PAYM_AMT,0)) AS COLUMN_VAL, 'A' AS VAL_TYPE
        FROM T1
        WHERE RO_TP != '02'
        GROUP BY RO_TP    --수리생산액(비보증)
        UNION ALL
        SELECT '00' AS RO_TP , 25 AS COLUMN_SEQ , '    维修产值（非保修）' AS COLUMN_NM , 0 AS COLUMN_VAL, 'A' AS VAL_TYPE
        FROM DUAL

        UNION ALL

        SELECT RO_TP , 26 AS COLUMN_SEQ , '    维修产值（保修）' AS COLUMN_NM , SUM(NVL(PAYM_AMT,0)) AS COLUMN_VAL, 'A' AS VAL_TYPE
        FROM T1
        WHERE RO_TP = '02'
        GROUP BY RO_TP    --수리생산액(보증)
        UNION ALL
        SELECT '00' AS RO_TP , 26 AS COLUMN_SEQ , '    维修产值（保修）' AS COLUMN_NM , 0 AS COLUMN_VAL, 'A' AS VAL_TYPE
        FROM DUAL

        UNION ALL

        SELECT RO_TP , 27 AS COLUMN_SEQ , '配件成本（合计）' AS COLUMN_NM , SUM(NVL(MOVING_AVG_AMT,0)) AS COLUMN_VAL, 'A' AS VAL_TYPE
        FROM (
            SELECT 
             CASE WHEN A.CALC_STAT_CD = '07'
            		THEN -1 * NVL(MOVING_AVG_AMT        ,0)
            		ELSE NVL(MOVING_AVG_AMT        ,0) END AS MOVING_AVG_AMT
             ,RO_TP
             ,A.DLR_CD
             ,A.RO_DOC_NO
            FROM T1 A LEFT OUTER JOIN
            (SELECT (POS_AMT - NEG_AMT) AS MOVING_AVG_AMT, DLR_CD, RO_DOC_NO
               FROM (
                   SELECT NVL(SUM(DECODE(PAR_REQ_STAT_CD, 02, T2.MOVING_AVG_AMT)), 0) AS POS_AMT
                          , NVL(SUM(DECODE(PAR_REQ_STAT_CD, 03, ABS(T2.MOVING_AVG_AMT))), 0) AS NEG_AMT
                          , T2.DLR_CD, T2.RO_DOC_NO
                     FROM SE_0160T T1
                    INNER JOIN PT_0502T T2
                       ON T1.DLR_CD = T2.DLR_CD
                      AND T1.DOC_NO = T2.RO_DOC_NO
                      AND T1.LINE_NO = T2.RO_LINE_NO
                      AND T1.ITEM_CD = T2.ITEM_CD
                    WHERE T1.DLR_CD = '${sDlrCd}'
                      AND PREFIX_ID = 'RO'
                      AND PAR_GI_TP = 'RO'
                      GROUP BY T2.DLR_CD, T2.RO_DOC_NO
                   )
            ) F2
            ON A.DLR_CD = F2.DLR_CD
            AND A.RO_DOC_NO = F2.RO_DOC_NO
        )
        GROUP BY RO_TP    --부품원가(합계)
        UNION ALL
        SELECT '00' AS RO_TP , 27 AS COLUMN_SEQ , '配件成本（合计）' AS COLUMN_NM , 0 AS COLUMN_VAL, 'A' AS VAL_TYPE
        FROM DUAL

        UNION ALL

        SELECT RO_TP , 28 AS COLUMN_SEQ , '    配件成本（非保修）' AS COLUMN_NM , SUM(NVL(MOVING_AVG_AMT,0)) AS COLUMN_VAL, 'A' AS VAL_TYPE
        FROM (
            SELECT 
             CASE WHEN A.CALC_STAT_CD = '07'
            		THEN -1 * NVL(MOVING_AVG_AMT        ,0)
            		ELSE NVL(MOVING_AVG_AMT        ,0) END AS MOVING_AVG_AMT
            , RO_TP
            , A.DLR_CD
            , A.RO_DOC_NO
            FROM T1 A LEFT OUTER JOIN
            (SELECT (POS_AMT - NEG_AMT) AS MOVING_AVG_AMT, DLR_CD, RO_DOC_NO
               FROM (
                   SELECT NVL(SUM(DECODE(PAR_REQ_STAT_CD, 02, T2.MOVING_AVG_AMT)), 0) AS POS_AMT
                          , NVL(SUM(DECODE(PAR_REQ_STAT_CD, 03, ABS(T2.MOVING_AVG_AMT))), 0) AS NEG_AMT
                          , T2.DLR_CD, T2.RO_DOC_NO
                     FROM SE_0160T T1
                    INNER JOIN PT_0502T T2
                       ON T1.DLR_CD = T2.DLR_CD
                      AND T1.DOC_NO = T2.RO_DOC_NO
                      AND T1.LINE_NO = T2.RO_LINE_NO
                      AND T1.ITEM_CD = T2.ITEM_CD
                    WHERE T1.DLR_CD = '${sDlrCd}'
                      AND PREFIX_ID = 'RO'
                      AND PAR_GI_TP = 'RO'
                      GROUP BY T2.DLR_CD, T2.RO_DOC_NO
                   )
            ) F2
            ON A.DLR_CD = F2.DLR_CD
            AND A.RO_DOC_NO = F2.RO_DOC_NO
            WHERE A.RO_TP != '02'
        )
        GROUP BY RO_TP    --부품원가(비보증)
        UNION ALL
        SELECT '00' AS RO_TP , 28 AS COLUMN_SEQ , '    配件成本（非保修）' AS COLUMN_NM , 0 AS COLUMN_VAL, 'A' AS VAL_TYPE
        FROM DUAL

        UNION ALL

        SELECT RO_TP , 29 AS COLUMN_SEQ , '    配件成本（保修）' AS COLUMN_NM , SUM(NVL(MOVING_AVG_AMT,0)) AS COLUMN_VAL, 'A' AS VAL_TYPE
        FROM (
            SELECT 
             CASE WHEN A.CALC_STAT_CD = '07'
            		THEN -1 * NVL(MOVING_AVG_AMT        ,0)
            		ELSE NVL(MOVING_AVG_AMT        ,0) END AS MOVING_AVG_AMT
            , RO_TP
            , A.DLR_CD
            , A.RO_DOC_NO
            FROM T1 A LEFT OUTER JOIN
            (SELECT (POS_AMT - NEG_AMT) AS MOVING_AVG_AMT, DLR_CD, RO_DOC_NO
               FROM (
                   SELECT NVL(SUM(DECODE(PAR_REQ_STAT_CD, 02, T2.MOVING_AVG_AMT)), 0) AS POS_AMT
                          , NVL(SUM(DECODE(PAR_REQ_STAT_CD, 03, ABS(T2.MOVING_AVG_AMT))), 0) AS NEG_AMT
                          , T2.DLR_CD, T2.RO_DOC_NO
                     FROM SE_0160T T1
                    INNER JOIN PT_0502T T2
                       ON T1.DLR_CD = T2.DLR_CD
                      AND T1.DOC_NO = T2.RO_DOC_NO
                      AND T1.LINE_NO = T2.RO_LINE_NO
                      AND T1.ITEM_CD = T2.ITEM_CD
                    WHERE T1.DLR_CD = '${sDlrCd}'
                      AND PREFIX_ID = 'RO'
                      AND PAR_GI_TP = 'RO'
                      GROUP BY T2.DLR_CD, T2.RO_DOC_NO
                   )
            ) F2
            ON A.DLR_CD = F2.DLR_CD
            AND A.RO_DOC_NO = F2.RO_DOC_NO
            WHERE A.RO_TP = '02'
        )
        GROUP BY RO_TP    --부품원가(보증)
        UNION ALL
        SELECT '00' AS RO_TP , 29 AS COLUMN_SEQ , '    配件成本（保修）' AS COLUMN_NM , 0 AS COLUMN_VAL, 'A' AS VAL_TYPE
        FROM DUAL

        UNION ALL

        SELECT RO_TP , 30 AS COLUMN_SEQ , '维修毛利（合计）' AS COLUMN_NM , SUM(PAYM_AMT) - SUM(NVL(MOVING_AVG_AMT, 0)) COLUMN_VAL, 'A' AS VAL_TYPE
        FROM (
            SELECT PAYM_AMT, 0 AS MOVING_AVG_AMT, RO_TP
            FROM T1

            UNION ALL

            SELECT 0 AS PAYM_AMT
            ,CASE WHEN F3.CALC_STAT_CD = '07'
            		THEN -1 * NVL(MOVING_AVG_AMT        ,0)
            		ELSE NVL(MOVING_AVG_AMT        ,0) END AS MOVING_AVG_AMT
            , RO_TP
            FROM (
                SELECT MOVING_AVG_AMT, A.RO_TP, A.DLR_CD, A.RO_DOC_NO,A.CALC_STAT_CD
                FROM T1 A LEFT OUTER JOIN
                (SELECT (POS_AMT - NEG_AMT) AS MOVING_AVG_AMT, DLR_CD, RO_DOC_NO
                   FROM (
                       SELECT NVL(SUM(DECODE(PAR_REQ_STAT_CD, 02, T2.MOVING_AVG_AMT)), 0) AS POS_AMT
                              , NVL(SUM(DECODE(PAR_REQ_STAT_CD, 03, ABS(T2.MOVING_AVG_AMT))), 0) AS NEG_AMT
                              , T2.DLR_CD, T2.RO_DOC_NO
                         FROM SE_0160T T1
                        INNER JOIN PT_0502T T2
                           ON T1.DLR_CD = T2.DLR_CD
                          AND T1.DOC_NO = T2.RO_DOC_NO
                          AND T1.LINE_NO = T2.RO_LINE_NO
                          AND T1.ITEM_CD = T2.ITEM_CD
                        WHERE T1.DLR_CD = '${sDlrCd}'
                          AND PREFIX_ID = 'RO'
                          AND PAR_GI_TP = 'RO'
                          GROUP BY T2.DLR_CD, T2.RO_DOC_NO
                       )
                ) F2
                ON A.DLR_CD = F2.DLR_CD
                AND A.RO_DOC_NO = F2.RO_DOC_NO
            )F3
        )
        GROUP BY RO_TP    --수리총이윤(합계)
        UNION ALL
        SELECT '00' AS RO_TP , 30 AS COLUMN_SEQ , '维修毛利（合计）' AS COLUMN_NM , 0 AS COLUMN_VAL, 'A' AS VAL_TYPE
        FROM DUAL

        UNION ALL

        SELECT RO_TP , 31 AS COLUMN_SEQ , '    维修毛利（非保修）' AS COLUMN_NM , SUM(PAYM_AMT) - SUM(NVL(MOVING_AVG_AMT, 0)) COLUMN_VAL, 'A' AS VAL_TYPE
        FROM (
            SELECT PAYM_AMT, 0 AS MOVING_AVG_AMT, RO_TP
            FROM T1
            WHERE RO_TP != '02'

            UNION ALL

            SELECT 0 AS PAYM_AMT
            ,CASE WHEN F3.CALC_STAT_CD = '07'
            		THEN -1 * NVL(MOVING_AVG_AMT        ,0)
            		ELSE NVL(MOVING_AVG_AMT        ,0) END AS MOVING_AVG_AMT
            , RO_TP
            FROM (
                SELECT MOVING_AVG_AMT, A.RO_TP, A.DLR_CD, A.RO_DOC_NO,A.CALC_STAT_CD
                FROM T1 A LEFT OUTER JOIN
                (SELECT (POS_AMT - NEG_AMT) AS MOVING_AVG_AMT, DLR_CD, RO_DOC_NO
                   FROM (
                       SELECT NVL(SUM(DECODE(PAR_REQ_STAT_CD, 02, T2.MOVING_AVG_AMT)), 0) AS POS_AMT
                              , NVL(SUM(DECODE(PAR_REQ_STAT_CD, 03, ABS(T2.MOVING_AVG_AMT))), 0) AS NEG_AMT
                              , T2.DLR_CD, T2.RO_DOC_NO
                         FROM SE_0160T T1
                        INNER JOIN PT_0502T T2
                           ON T1.DLR_CD = T2.DLR_CD
                          AND T1.DOC_NO = T2.RO_DOC_NO
                          AND T1.LINE_NO = T2.RO_LINE_NO
                          AND T1.ITEM_CD = T2.ITEM_CD
                        WHERE T1.DLR_CD = '${sDlrCd}'
                          AND PREFIX_ID = 'RO'
                          AND PAR_GI_TP = 'RO'
                          GROUP BY T2.DLR_CD, T2.RO_DOC_NO
                       )
                ) F2
                ON A.DLR_CD = F2.DLR_CD
                AND A.RO_DOC_NO = F2.RO_DOC_NO
                WHERE A.RO_TP != '02'
            )F3
        )
        GROUP BY RO_TP    --수리총이윤(비보증)
        UNION ALL
        SELECT '00' AS RO_TP , 31 AS COLUMN_SEQ , '    维修毛利（非保修）' AS COLUMN_NM , 0 AS COLUMN_VAL, 'A' AS VAL_TYPE
        FROM DUAL

        UNION ALL

        SELECT RO_TP , 32 AS COLUMN_SEQ , '    维修毛利（保修）' AS COLUMN_NM , SUM(PAYM_AMT) - SUM(NVL(MOVING_AVG_AMT, 0)) COLUMN_VAL, 'A' AS VAL_TYPE
        FROM (
            SELECT PAYM_AMT, 0 AS MOVING_AVG_AMT, RO_TP
            FROM T1
            WHERE RO_TP = '02'

            UNION ALL

            SELECT 0 AS PAYM_AMT
            , CASE WHEN F3.CALC_STAT_CD = '07'
            	THEN -1 * NVL(MOVING_AVG_AMT        ,0)
            	ELSE NVL(MOVING_AVG_AMT        ,0) END AS MOVING_AVG_AMT 
            , RO_TP
            FROM (
                SELECT MOVING_AVG_AMT, A.RO_TP, A.DLR_CD, A.RO_DOC_NO,A.CALC_STAT_CD
                FROM T1 A LEFT OUTER JOIN
                (SELECT (POS_AMT - NEG_AMT) AS MOVING_AVG_AMT, DLR_CD, RO_DOC_NO
                   FROM (
                       SELECT NVL(SUM(DECODE(PAR_REQ_STAT_CD, 02, T2.MOVING_AVG_AMT)), 0) AS POS_AMT
                              , NVL(SUM(DECODE(PAR_REQ_STAT_CD, 03, ABS(T2.MOVING_AVG_AMT))), 0) AS NEG_AMT
                              , T2.DLR_CD, T2.RO_DOC_NO
                         FROM SE_0160T T1
                        INNER JOIN PT_0502T T2
                           ON T1.DLR_CD = T2.DLR_CD
                          AND T1.DOC_NO = T2.RO_DOC_NO
                          AND T1.LINE_NO = T2.RO_LINE_NO
                          AND T1.ITEM_CD = T2.ITEM_CD
                        WHERE T1.DLR_CD = '${sDlrCd}'
                          AND PREFIX_ID = 'RO'
                          AND PAR_GI_TP = 'RO'
                          GROUP BY T2.DLR_CD, T2.RO_DOC_NO
                       )
                ) F2
                ON A.DLR_CD = F2.DLR_CD
                AND A.RO_DOC_NO = F2.RO_DOC_NO
                WHERE A.RO_TP = '02'
            )F3
        )
        GROUP BY RO_TP    --수리총이윤(보증)
        UNION ALL
        SELECT '00' AS RO_TP , 32 AS COLUMN_SEQ , '    维修毛利（保修）' AS COLUMN_NM , 0 AS COLUMN_VAL, 'A' AS VAL_TYPE
        FROM DUAL

        UNION ALL

        SELECT RO_TP, 33 AS COLUMN_SEQ, '维修毛利率（合计）' AS COLUMN_NM
               --,ROUND(((SUM(PAYM_AMT) - SUM(NVL(MOVING_AVG_AMT, 0)))/SUM(NULLIF(PAYM_AMT, 0))), 2) COLUMN_VAL
               --贾明 分母不能为0 2018-9-14 
                ,ROUND(CASE WHEN SUM(NULLIF(PAYM_AMT, 0)) > 0
                        THEN ((SUM(PAYM_AMT) - SUM(NVL(MOVING_AVG_AMT, 0)))/SUM(NULLIF(PAYM_AMT, 0)))
                        ELSE 0 END, 2) COLUMN_VAL
               ,'P' AS VAL_TYPE
        FROM (
            SELECT PAYM_AMT, 0 AS MOVING_AVG_AMT, RO_TP
            FROM T1

            UNION ALL

            SELECT 0 AS PAYM_AMT
            , CASE WHEN F3.CALC_STAT_CD = '07'
            	THEN -1 * NVL(MOVING_AVG_AMT        ,0)
            	ELSE NVL(MOVING_AVG_AMT        ,0) END AS MOVING_AVG_AMT 
            , RO_TP
            FROM (
                SELECT MOVING_AVG_AMT, A.RO_TP, A.DLR_CD, A.RO_DOC_NO,A.CALC_STAT_CD
                FROM T1 A LEFT OUTER JOIN
                (SELECT (POS_AMT - NEG_AMT) AS MOVING_AVG_AMT, DLR_CD, RO_DOC_NO
                   FROM (
                       SELECT NVL(SUM(DECODE(PAR_REQ_STAT_CD, 02, T2.MOVING_AVG_AMT)), 0) AS POS_AMT
                              , NVL(SUM(DECODE(PAR_REQ_STAT_CD, 03, ABS(T2.MOVING_AVG_AMT))), 0) AS NEG_AMT
                              , T2.DLR_CD, T2.RO_DOC_NO
                         FROM SE_0160T T1
                        INNER JOIN PT_0502T T2
                           ON T1.DLR_CD = T2.DLR_CD
                          AND T1.DOC_NO = T2.RO_DOC_NO
                          AND T1.LINE_NO = T2.RO_LINE_NO
                          AND T1.ITEM_CD = T2.ITEM_CD
                        WHERE T1.DLR_CD = '${sDlrCd}'
                          AND PREFIX_ID = 'RO'
                          AND PAR_GI_TP = 'RO'
                          GROUP BY T2.DLR_CD, T2.RO_DOC_NO
                       )
                ) F2
                ON A.DLR_CD = F2.DLR_CD
                AND A.RO_DOC_NO = F2.RO_DOC_NO
            )F3
        )
        GROUP BY RO_TP    --수리총이윤율(합계)
        UNION ALL
        SELECT '00' AS RO_TP , 33 AS COLUMN_SEQ , '维修毛利率（合计）' AS COLUMN_NM , 0 AS COLUMN_VAL, 'P' AS VAL_TYPE
        FROM DUAL

        UNION ALL

        SELECT RO_TP, 34 AS COLUMN_SEQ, '    维修毛利率（非保修）' AS COLUMN_NM
               --,ROUND(((SUM(PAYM_AMT) - SUM(NVL(MOVING_AVG_AMT, 0)))/SUM(NULLIF(PAYM_AMT, 0))), 2) COLUMN_VAL
               --贾明 分母不能为0 2018-9-14 
               ,ROUND(CASE WHEN SUM(NULLIF(PAYM_AMT, 0)) > 0
                        THEN ((SUM(PAYM_AMT) - SUM(NVL(MOVING_AVG_AMT, 0)))/SUM(NULLIF(PAYM_AMT, 0)))
                        ELSE 0 END, 2) COLUMN_VAL
               ,'P' AS VAL_TYPE
        FROM (
            SELECT PAYM_AMT, 0 AS MOVING_AVG_AMT, RO_TP
            FROM T1
            WHERE RO_TP != '02'

            UNION ALL

            SELECT 0 AS PAYM_AMT
            , CASE WHEN F3.CALC_STAT_CD = '07'
            	THEN -1 * NVL(MOVING_AVG_AMT        ,0)
            	ELSE NVL(MOVING_AVG_AMT        ,0) END AS MOVING_AVG_AMT 
            , RO_TP
            FROM (
                SELECT MOVING_AVG_AMT, A.RO_TP, A.DLR_CD, A.RO_DOC_NO,A.CALC_STAT_CD
                FROM T1 A LEFT OUTER JOIN
                (SELECT (POS_AMT - NEG_AMT) AS MOVING_AVG_AMT, DLR_CD, RO_DOC_NO
                   FROM (
                       SELECT NVL(SUM(DECODE(PAR_REQ_STAT_CD, 02, T2.MOVING_AVG_AMT)), 0) AS POS_AMT
                              , NVL(SUM(DECODE(PAR_REQ_STAT_CD, 03, ABS(T2.MOVING_AVG_AMT))), 0) AS NEG_AMT
                              , T2.DLR_CD, T2.RO_DOC_NO
                         FROM SE_0160T T1
                        INNER JOIN PT_0502T T2
                           ON T1.DLR_CD = T2.DLR_CD
                          AND T1.DOC_NO = T2.RO_DOC_NO
                          AND T1.LINE_NO = T2.RO_LINE_NO
                          AND T1.ITEM_CD = T2.ITEM_CD
                        WHERE T1.DLR_CD = '${sDlrCd}'
                          AND PREFIX_ID = 'RO'
                          AND PAR_GI_TP = 'RO'
                          GROUP BY T2.DLR_CD, T2.RO_DOC_NO
                       )
                ) F2
                ON A.DLR_CD = F2.DLR_CD
                AND A.RO_DOC_NO = F2.RO_DOC_NO
                WHERE A.RO_TP != '02'
            )F3
        )
        GROUP BY RO_TP    --수리총이윤율(비보증)
        UNION ALL
        SELECT '00' AS RO_TP , 34 AS COLUMN_SEQ , '    维修毛利率（非保修）' AS COLUMN_NM , 0 AS COLUMN_VAL, 'P' AS VAL_TYPE
        FROM DUAL

        UNION ALL

        SELECT RO_TP, 35 AS COLUMN_SEQ, '    维修毛利率（保修）' AS COLUMN_NM
               --,ROUND(((SUM(PAYM_AMT) - SUM(NVL(MOVING_AVG_AMT, 0)))/SUM(NULLIF(PAYM_AMT, 0))), 2) COLUMN_VAL
               --贾明 分母不能为0 2018-9-14 
               ,ROUND(CASE WHEN SUM(NULLIF(PAYM_AMT, 0)) > 0
                        THEN ((SUM(PAYM_AMT) - SUM(NVL(MOVING_AVG_AMT, 0)))/SUM(NULLIF(PAYM_AMT, 0)))
                        ELSE 0 END, 2) COLUMN_VAL
               ,'P' AS VAL_TYPE
        FROM (
            SELECT PAYM_AMT, 0 AS MOVING_AVG_AMT, RO_TP
            FROM T1
            WHERE RO_TP = '02'

            UNION ALL

            SELECT 0 AS PAYM_AMT
            , CASE WHEN F3.CALC_STAT_CD = '07'
            	THEN -1 * NVL(MOVING_AVG_AMT        ,0)
            	ELSE NVL(MOVING_AVG_AMT        ,0) END AS MOVING_AVG_AMT 
            , RO_TP
            FROM (
                SELECT MOVING_AVG_AMT, A.RO_TP, A.DLR_CD, A.RO_DOC_NO,A.CALC_STAT_CD
                FROM T1 A LEFT OUTER JOIN
                (SELECT (POS_AMT - NEG_AMT) AS MOVING_AVG_AMT, DLR_CD, RO_DOC_NO
                   FROM (
                       SELECT NVL(SUM(DECODE(PAR_REQ_STAT_CD, 02, T2.MOVING_AVG_AMT)), 0) AS POS_AMT
                              , NVL(SUM(DECODE(PAR_REQ_STAT_CD, 03, ABS(T2.MOVING_AVG_AMT))), 0) AS NEG_AMT
                              , T2.DLR_CD, T2.RO_DOC_NO
                         FROM SE_0160T T1
                        INNER JOIN PT_0502T T2
                           ON T1.DLR_CD = T2.DLR_CD
                          AND T1.DOC_NO = T2.RO_DOC_NO
                          AND T1.LINE_NO = T2.RO_LINE_NO
                          AND T1.ITEM_CD = T2.ITEM_CD
                        WHERE T1.DLR_CD = '${sDlrCd}'
                          AND PREFIX_ID = 'RO'
                          AND PAR_GI_TP = 'RO'
                          GROUP BY T2.DLR_CD, T2.RO_DOC_NO
                       )
                ) F2
                ON A.DLR_CD = F2.DLR_CD
                AND A.RO_DOC_NO = F2.RO_DOC_NO
                WHERE A.RO_TP = '02'
            )F3
        )
        GROUP BY RO_TP    --수리총이윤율(보증)
        UNION ALL
        SELECT '00' AS RO_TP , 35 AS COLUMN_SEQ , '    维修毛利率（保修）' AS COLUMN_NM , 0 AS COLUMN_VAL, 'P' AS VAL_TYPE
        FROM DUAL

        UNION ALL

        SELECT RO_TP, 36 AS COLUMN_SEQ, '单台数维修产值（合计）' AS COLUMN_NM
               ,ROUND(CASE WHEN COUNT(DISTINCT(VIN_NO))  > 0
                           THEN SUM(PAYM_AMT)/COUNT(DISTINCT(VIN_NO))
                           ELSE 0 END,2)  COLUMN_VAL
               ,'A' AS VAL_TYPE
        FROM T1
        GROUP BY RO_TP    --한대수수리생산액(합계)
        UNION ALL
        SELECT '00' AS RO_TP, 36 AS COLUMN_SEQ , '单台数维修产值（合计）' AS COLUMN_NM , 0 AS COLUMN_VAL, 'A' AS VAL_TYPE
        FROM DUAL


        UNION ALL

        SELECT RO_TP, 37 AS COLUMN_SEQ, '单台次维修产值（合计）' AS COLUMN_NM
               ,ROUND(CASE WHEN COUNT(CALC_DOC_NO )  > 0
                           THEN SUM(PAYM_AMT)/COUNT(CALC_DOC_NO)
                           ELSE 0 END,2)  COLUMN_VAL
               ,'A' AS VAL_TYPE
        FROM T1
        GROUP BY RO_TP    --한대차수리생산액(합계)
        UNION ALL
        SELECT '00' AS RO_TP , 37 AS COLUMN_SEQ , '单台次维修产值（合计）' AS COLUMN_NM , 0 AS COLUMN_VAL, 'A' AS VAL_TYPE
        FROM DUAL


        UNION ALL

        SELECT RO_TP, 38 AS COLUMN_SEQ, '    单台数维修产值（非保修）' AS COLUMN_NM
               ,ROUND(CASE WHEN COUNT(DISTINCT(VIN_NO))  > 0
                           THEN SUM(PAYM_AMT)/COUNT(DISTINCT(VIN_NO))
                           ELSE 0 END,2)  COLUMN_VAL
               ,'A' AS VAL_TYPE
        FROM T1
        WHERE RO_TP != '02'
        GROUP BY RO_TP    --한대수수리생산액(비보증)
        UNION ALL
        SELECT '00' AS RO_TP , 38 AS COLUMN_SEQ , '    单台数维修产值（非保修）' AS COLUMN_NM , 0 AS COLUMN_VAL, 'A' AS VAL_TYPE
        FROM DUAL

        UNION ALL

        SELECT RO_TP, 39 AS COLUMN_SEQ, '    单台次维修产值（非保修）' AS COLUMN_NM
               ,ROUND(CASE WHEN COUNT(DISTINCT(VIN_NO))  > 0
                           THEN SUM(PAYM_AMT)/COUNT(CALC_DOC_NO)
                           ELSE 0 END,2)  COLUMN_VAL
               ,'A' AS VAL_TYPE
        FROM T1
        WHERE RO_TP != '02'
        GROUP BY RO_TP    --한대차수리생산액(비보증)
        UNION ALL
        SELECT '00' AS RO_TP , 39 AS COLUMN_SEQ , '    单台次维修产值（非保修）' AS COLUMN_NM , 0 AS COLUMN_VAL, 'A' AS VAL_TYPE
        FROM DUAL

        UNION ALL

        SELECT RO_TP, 40 AS COLUMN_SEQ, '    单台数维修产值（保修）' AS COLUMN_NM
               ,ROUND(CASE WHEN COUNT(DISTINCT(VIN_NO))  > 0
                           THEN SUM(PAYM_AMT)/COUNT(DISTINCT(VIN_NO))
                           ELSE 0 END,2)  COLUMN_VAL
               ,'A' AS VAL_TYPE
        FROM T1
        WHERE RO_TP = '02'
        GROUP BY RO_TP    --한대수수리생산액(보증)
        UNION ALL
        SELECT '00' AS RO_TP , 40 AS COLUMN_SEQ , '    单台数维修产值（保修）' AS COLUMN_NM , 0 AS COLUMN_VAL, 'A' AS VAL_TYPE
        FROM DUAL

        UNION ALL

        SELECT RO_TP, 41 AS COLUMN_SEQ, '    单台次维修产值（保修）' AS COLUMN_NM
               ,ROUND(CASE WHEN COUNT(CALC_DOC_NO )  > 0
                           THEN SUM(PAYM_AMT)/COUNT(CALC_DOC_NO)
                           ELSE 0 END,2)  COLUMN_VAL
               ,'A' AS VAL_TYPE
        FROM T1
        WHERE RO_TP = '02'
        GROUP BY RO_TP    --한대차수리생산액(보증)
        UNION ALL
        SELECT '00' AS RO_TP , 41 AS COLUMN_SEQ , '    单台次维修产值（保修）' AS COLUMN_NM , 0 AS COLUMN_VAL, 'A' AS VAL_TYPE
        FROM DUAL
    ) SER
)PIVOT(
    SUM(COLUMN_VAL)
    FOR RO_TP IN(
        '01' AS "RO01"
        ,'02' AS "RO02"
        ,'03' AS "RO03"
        ,'04' AS "RO04"
        ,'05' AS "RO05"
    )
)
ORDER BY COLUMN_SEQ;
]]></Query>
</TableData>
</TableDataMap>
<Report class="com.fr.report.worksheet.WorkSheet" name="sheet1">
<ReportPageAttr>
<HR F="0" T="0"/>
<FR/>
<HC/>
<FC/>
<UPFCR COLUMN="false" ROW="true"/>
</ReportPageAttr>
<ColumnPrivilegeControl/>
<RowPrivilegeControl/>
<RowHeight defaultValue="723900">
<![CDATA[1152000,1080000,723900,723900,723900,723900,723900,723900,723900,723900,723900]]></RowHeight>
<ColumnWidth defaultValue="2743200">
<![CDATA[0,7200000,4320000,4320000,4320000,4320000,4320000,4320000,4320000,2743200,2743200]]></ColumnWidth>
<CellElementList>
<C c="0" r="0">
<PrivilegeControl/>
<Expand/>
</C>
<C c="1" r="0" s="0">
<O>
<![CDATA[数据名称]]></O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="2" r="0" s="1">
<O>
<![CDATA[合计]]></O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="3" r="0" s="1">
<O>
<![CDATA[平均]]></O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="4" r="0" s="0">
<O>
<![CDATA[普通维修]]></O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="5" r="0" s="0">
<O>
<![CDATA[保修索赔]]></O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="6" r="0" s="0">
<O>
<![CDATA[保险理赔]]></O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="7" r="0" s="0">
<O>
<![CDATA[返工维修]]></O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="8" r="0" s="0">
<O>
<![CDATA[内部维修]]></O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="0" r="1">
<O t="DSColumn">
<Attributes dsName="selectSerPrdAmtFosterTpDs" columnName="COLUMN_SEQ"/>
<Complex/>
<RG class="com.fr.report.cell.cellattr.core.group.FunctionGrouper"/>
<Parameters/>
</O>
<PrivilegeControl/>
<Expand dir="0"/>
</C>
<C c="1" r="1" s="2">
<O t="DSColumn">
<Attributes dsName="selectSerPrdAmtFosterTpDs" columnName="COLUMN_NM"/>
<Complex/>
<RG class="com.fr.report.cell.cellattr.core.group.FunctionGrouper"/>
<Parameters/>
</O>
<PrivilegeControl/>
<HighlightList>
<Highlight class="com.fr.report.cell.cellattr.highlight.DefaultHighlight">
<Name>
<![CDATA[조건속성1]]></Name>
<Condition class="com.fr.data.condition.FormulaCondition">
<Formula>
<![CDATA[row() % 2 = 0]]></Formula>
</Condition>
<HighlightAction class="com.fr.report.cell.cellattr.highlight.BackgroundHighlightAction">
<Scope val="1"/>
<Background name="ColorBackground" color="-1"/>
</HighlightAction>
</Highlight>
</HighlightList>
<Expand dir="0"/>
</C>
<C c="2" r="1" s="3">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=IF(OR(A2=33,A2=34,A2=35), "", SUM(E2:I2))]]></Attributes>
</O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="3" r="1" s="3">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=ROUND(AVERAGE(E2:I2), 2)]]></Attributes>
</O>
<PrivilegeControl/>
<Expand/>
</C>
<C c="4" r="1" s="3">
<O t="DSColumn">
<Attributes dsName="selectSerPrdAmtFosterTpDs" columnName="RO01"/>
<Complex/>
<RG class="com.fr.report.cell.cellattr.core.group.FunctionGrouper"/>
<Parameters/>
</O>
<PrivilegeControl/>
<Expand dir="0"/>
</C>
<C c="5" r="1" s="3">
<O t="DSColumn">
<Attributes dsName="selectSerPrdAmtFosterTpDs" columnName="RO02"/>
<Complex/>
<RG class="com.fr.report.cell.cellattr.core.group.FunctionGrouper"/>
<Parameters/>
</O>
<PrivilegeControl/>
<Expand dir="0"/>
</C>
<C c="6" r="1" s="3">
<O t="DSColumn">
<Attributes dsName="selectSerPrdAmtFosterTpDs" columnName="RO03"/>
<Complex/>
<RG class="com.fr.report.cell.cellattr.core.group.FunctionGrouper"/>
<Parameters/>
</O>
<PrivilegeControl/>
<Expand dir="0"/>
</C>
<C c="7" r="1" s="3">
<O t="DSColumn">
<Attributes dsName="selectSerPrdAmtFosterTpDs" columnName="RO04"/>
<Complex/>
<RG class="com.fr.report.cell.cellattr.core.group.FunctionGrouper"/>
<Parameters/>
</O>
<PrivilegeControl/>
<Expand dir="0"/>
</C>
<C c="8" r="1" s="3">
<O t="DSColumn">
<Attributes dsName="selectSerPrdAmtFosterTpDs" columnName="RO05"/>
<Complex/>
<RG class="com.fr.report.cell.cellattr.core.group.FunctionGrouper"/>
<Parameters/>
</O>
<PrivilegeControl/>
<Expand dir="0"/>
</C>
</CellElementList>
<ReportAttrSet>
<ReportSettings headerHeight="0" footerHeight="0">
<PaperSetting>
<PaperSize width="38880000" height="48960000"/>
<Margin top="432000" left="432000" bottom="432000" right="432000"/>
</PaperSetting>
</ReportSettings>
<Header reportPageType="0">
<Background name="NullBackground"/>
<LeftList/>
<CenterList/>
<RightList/>
</Header>
<Footer reportPageType="0">
<Background name="NullBackground"/>
<LeftList/>
<CenterList/>
<RightList/>
</Footer>
</ReportAttrSet>
<PrivilegeControl/>
</Report>
<ReportParameterAttr>
<Attributes showWindow="true" delayPlaying="true" windowPosition="1" align="0" useParamsTemplate="false"/>
<PWTitle>
<![CDATA[매개변수]]></PWTitle>
</ReportParameterAttr>
<StyleList>
<Style horizontal_alignment="0" imageLayout="1">
<FRFont name="Microsoft YaHei UI" style="0" size="72" foreground="-1"/>
<Background name="ColorBackground" color="-11561760"/>
<Border>
<Top style="1" color="-3352093"/>
<Bottom style="1" color="-3352093"/>
<Left style="1" color="-3352093"/>
<Right style="1" color="-3352093"/>
</Border>
</Style>
<Style horizontal_alignment="0" imageLayout="1">
<FRFont name="Microsoft YaHei UI" style="1" size="72" foreground="-1"/>
<Background name="ColorBackground" color="-11561760"/>
<Border>
<Top style="1" color="-3352093"/>
<Bottom style="1" color="-3352093"/>
<Left style="1" color="-3352093"/>
<Right style="1" color="-3352093"/>
</Border>
</Style>
<Style horizontal_alignment="2" imageLayout="1">
<FRFont name="Verdana" style="0" size="72" foreground="-10855846"/>
<Background name="ColorBackground" color="-986896"/>
<Border>
<Top style="5" color="-1"/>
<Bottom style="5" color="-1"/>
<Left style="5" color="-1"/>
<Right style="5" color="-1"/>
</Border>
</Style>
<Style horizontal_alignment="4" imageLayout="1">
<Format class="com.fr.base.CoreDecimalFormat">
<![CDATA[#,##0.00]]></Format>
<FRFont name="Verdana" style="0" size="72" foreground="-10855846"/>
<Background name="ColorBackground" color="-986896"/>
<Border>
<Top style="5" color="-1"/>
<Bottom style="5" color="-1"/>
<Left style="5" color="-1"/>
<Right style="5" color="-1"/>
</Border>
</Style>
</StyleList>
<DesignerVersion DesignerVersion="JAA"/>
<PreviewType PreviewType="0"/>
<TemplateID/>
<TemplateIdAttMark class="com.fr.base.iofileattr.TemplateIdAttrMark">
<TemplateIdAttMark TemplateId="b2073c56-5692-4518-8f88-53aceb33eda5"/>
</TemplateIdAttMark>
</WorkBook>
